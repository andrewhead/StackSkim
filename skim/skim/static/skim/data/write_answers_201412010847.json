{
  "has_more": false, 
  "items": [
    {
      "body": "<p>Here's a way using only standard Java library (note that the stream is not closed, YMMV).</p>\n\n<pre><code>static String convertStreamToString(java.io.InputStream is) {\n    java.util.Scanner s = new java.util.Scanner(is).useDelimiter(\"\\\\A\");\n    return s.hasNext() ? s.next() : \"\";\n}\n</code></pre>\n\n<p>I learned this trick from <a href=\"http://weblogs.java.net/blog/pat/archive/2004/10/stupid_scanner_1.html\">\"Stupid Scanner tricks\"</a> article. The reason it works is because <a href=\"http://download.oracle.com/javase/6/docs/api/java/util/Scanner.html\">Scanner</a> iterates over tokens in the stream, and in this case we separate tokens using \"beginning of the input boundary\" (\\A) thus giving us only one token for the entire contents of the stream.</p>\n\n<p><strong>Note, if you need to be specific about the input stream's encoding, you can provide the second argument to <code>Scanner</code> constructor that indicates what charset to use (e.g. \"UTF-8\").</strong></p>\n\n<p>Hat tip goes also to <a href=\"http://stackoverflow.com/users/68127/jacob-gabrielson\">Jacob,</a> who once pointed me to the said article.</p>\n\n<p><strong>EDITED:</strong> Thanks to a suggestion from <a href=\"http://stackoverflow.com/users/101272/patrick\">Patrick</a>, made the function more robust when handling an empty input stream. <strong>One more edit:</strong> nixed try/catch, Patrick's way is more laconic.</p>\n", 
      "question_id": 309424, 
      "last_activity_date": 1375827105, 
      "comments": [
        {
          "body": "Thanks, for my version of this I added a finally block that closes the input stream, so the user doesn&#39;t have to since you&#39;ve finished reading the input. Simplifies the caller code considerably.", 
          "edited": false, 
          "comment_id": 13192815, 
          "creation_date": 1335028041, 
          "post_id": 5445161, 
          "score": 2, 
          "body_markdown": "Thanks, for my version of this I added a finally block that closes the input stream, so the user doesn&#39;t have to since you&#39;ve finished reading the input. Simplifies the caller code considerably.", 
          "owner": {
            "user_id": 486646, 
            "profile_image": "https://www.gravatar.com/avatar/39f01bc00d352ef8f288c4ae47c81c07?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 689, 
            "link": "http://stackoverflow.com/users/486646/dalewking", 
            "accept_rate": 57, 
            "display_name": "dalewking"
          }
        }, 
        {
          "body": "I think this should be <code>public *static* String convertStreamToString </code>", 
          "edited": false, 
          "comment_id": 14142749, 
          "creation_date": 1338585243, 
          "post_id": 5445161, 
          "score": 1, 
          "body_markdown": "I think this should be `public *static* String convertStreamToString `", 
          "owner": {
            "user_id": 198348, 
            "profile_image": "https://www.gravatar.com/avatar/48ed10afeccd11be0338778089be2d5b?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1571, 
            "link": "http://stackoverflow.com/users/198348/ehtesh-choudhury", 
            "display_name": "Ehtesh Choudhury"
          }
        }, 
        {
          "body": "@PavelRepin @Patrick in my case, an empty inputStream caused a NPE during Scanner construction.  I had to add <code>if (is == null) return &quot;&quot;;</code> right at the beginning of the method;  I believe this answer needs to be updated to better handle null inputStreams.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 101272, 
            "profile_image": "https://www.gravatar.com/avatar/adb017e441b45d342dcedcd2def24c58?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 428, 
            "link": "http://stackoverflow.com/users/101272/patrick", 
            "accept_rate": 100, 
            "display_name": "Patrick"
          }, 
          "comment_id": 15814810, 
          "creation_date": 1344519409, 
          "post_id": 5445161, 
          "score": 1, 
          "body_markdown": "@PavelRepin @Patrick in my case, an empty inputStream caused a NPE during Scanner construction.  I had to add `if (is == null) return &quot;&quot;;` right at the beginning of the method;  I believe this answer needs to be updated to better handle null inputStreams.", 
          "owner": {
            "user_id": 1245897, 
            "profile_image": "https://www.gravatar.com/avatar/db83cf641ff371bbd5016456dd164288?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1058, 
            "link": "http://stackoverflow.com/users/1245897/cfl-jeff", 
            "accept_rate": 85, 
            "display_name": "CFL_Jeff"
          }
        }, 
        {
          "body": "The problem with this approach I find is it does not handle CR/LF translations too well.  So you have to make sure your line endings are consistent.", 
          "edited": false, 
          "comment_id": 21303764, 
          "creation_date": 1362053613, 
          "post_id": 5445161, 
          "score": 0, 
          "body_markdown": "The problem with this approach I find is it does not handle CR/LF translations too well.  So you have to make sure your line endings are consistent.", 
          "owner": {
            "user_id": 242042, 
            "profile_image": "https://www.gravatar.com/avatar/a798a3d661375ece15776f83fbb80c2c?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3273, 
            "link": "http://stackoverflow.com/users/242042/archimedes-trajano", 
            "accept_rate": 66, 
            "display_name": "Archimedes Trajano"
          }
        }, 
        {
          "body": "@ArchimedesTrajano does <code>IOUtils.copy(inputStream, writer, encoding)</code> deal with CR/LF translations better? I think CR/LF consistency is entirely unrelated issue. Not saying it isn&#39;t an issue.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 242042, 
            "profile_image": "https://www.gravatar.com/avatar/a798a3d661375ece15776f83fbb80c2c?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3273, 
            "link": "http://stackoverflow.com/users/242042/archimedes-trajano", 
            "accept_rate": 66, 
            "display_name": "Archimedes Trajano"
          }, 
          "comment_id": 21337733, 
          "creation_date": 1362129522, 
          "post_id": 5445161, 
          "score": 0, 
          "body_markdown": "@ArchimedesTrajano does `IOUtils.copy(inputStream, writer, encoding)` deal with CR/LF translations better? I think CR/LF consistency is entirely unrelated issue. Not saying it isn&#39;t an issue.", 
          "owner": {
            "user_id": 43151, 
            "profile_image": "https://www.gravatar.com/avatar/a0886310289840857f4763f2559b740c?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 14589, 
            "link": "http://stackoverflow.com/users/43151/pavel-repin", 
            "accept_rate": 100, 
            "display_name": "Pavel Repin"
          }
        }, 
        {
          "body": "For Java 7 you can close in a try-with:  <code>try(java.util.Scanner s = new java.util.Scanner(is)) { \t    \treturn s.useDelimiter(&quot;\\\\A&quot;).hasNext() ? s.next() : &quot;&quot;; \t    }</code>", 
          "edited": false, 
          "comment_id": 24702804, 
          "creation_date": 1371101076, 
          "post_id": 5445161, 
          "score": 30, 
          "body_markdown": "For Java 7 you can close in a try-with:  `try(java.util.Scanner s = new java.util.Scanner(is)) {\n\t    \treturn s.useDelimiter(&quot;\\\\A&quot;).hasNext() ? s.next() : &quot;&quot;;\n\t    }`", 
          "owner": {
            "user_id": 573057, 
            "profile_image": "https://www.gravatar.com/avatar/f857595894d2c4009a790ebf473a4334?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 4717, 
            "link": "http://stackoverflow.com/users/573057/earcam", 
            "accept_rate": 100, 
            "display_name": "earcam"
          }
        }, 
        {
          "body": "Unfortunately this solution seems to go and lose the exceptions thrown in my underlying stream implementation.", 
          "edited": false, 
          "comment_id": 25740360, 
          "creation_date": 1373961577, 
          "post_id": 5445161, 
          "score": 1, 
          "body_markdown": "Unfortunately this solution seems to go and lose the exceptions thrown in my underlying stream implementation.", 
          "owner": {
            "user_id": 1493269, 
            "profile_image": "https://www.gravatar.com/avatar/76b07d8fbe042b34e1eaa2fc0684a9d1?s=128&d=identicon&r=PG&f=1", 
            "user_type": "registered", 
            "reputation": 1578, 
            "link": "http://stackoverflow.com/users/1493269/taig", 
            "accept_rate": 94, 
            "display_name": "Taig"
          }
        }, 
        {
          "body": "excellent trick!  any ideas about performance of Scanner vs reading the stream in a more verbose way?", 
          "edited": false, 
          "comment_id": 27194401, 
          "creation_date": 1377719692, 
          "post_id": 5445161, 
          "score": 0, 
          "body_markdown": "excellent trick!  any ideas about performance of Scanner vs reading the stream in a more verbose way?", 
          "owner": {
            "user_id": 968244, 
            "profile_image": "https://www.gravatar.com/avatar/62f76d55998f0059bcd8b7f6860e908f?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1022, 
            "link": "http://stackoverflow.com/users/968244/igal", 
            "accept_rate": 68, 
            "display_name": "Igal"
          }
        }, 
        {
          "body": "@Igal I didn&#39;t measure it. If you do, gist it and I&#39;ll append your results to the answer.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 968244, 
            "profile_image": "https://www.gravatar.com/avatar/62f76d55998f0059bcd8b7f6860e908f?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1022, 
            "link": "http://stackoverflow.com/users/968244/igal", 
            "accept_rate": 68, 
            "display_name": "Igal"
          }, 
          "comment_id": 27199453, 
          "creation_date": 1377731599, 
          "post_id": 5445161, 
          "score": 0, 
          "body_markdown": "@Igal I didn&#39;t measure it. If you do, gist it and I&#39;ll append your results to the answer.", 
          "owner": {
            "user_id": 43151, 
            "profile_image": "https://www.gravatar.com/avatar/a0886310289840857f4763f2559b740c?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 14589, 
            "link": "http://stackoverflow.com/users/43151/pavel-repin", 
            "accept_rate": 100, 
            "display_name": "Pavel Repin"
          }
        }, 
        {
          "body": "FYI, <a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html#hasNext()\" rel=\"nofollow\">hasNext</a> blocks on console input streams (see <a href=\"http://stackoverflow.com/questions/16873134/hasnext-when-does-it-block-and-why\">here</a>). (Just ran into this issue right now.)  This solution works fine otherwise... just a heads up.", 
          "edited": false, 
          "comment_id": 33307299, 
          "creation_date": 1393220186, 
          "post_id": 5445161, 
          "score": 2, 
          "body_markdown": "FYI, [hasNext](http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html#hasNext()) blocks on console input streams (see [here](http://stackoverflow.com/questions/16873134/hasnext-when-does-it-block-and-why)). (Just ran into this issue right now.)  This solution works fine otherwise... just a heads up.", 
          "owner": {
            "user_id": 850830, 
            "profile_image": "https://www.gravatar.com/avatar/054146e3993f84878c452aa1e9549217?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 383, 
            "link": "http://stackoverflow.com/users/850830/ryan", 
            "accept_rate": 78, 
            "display_name": "Ryan"
          }
        }
      ], 
      "creation_date": 1301172025, 
      "comment_count": 10, 
      "score": 1175, 
      "body_markdown": "Here&#39;s a way using only standard Java library (note that the stream is not closed, YMMV).\r\n\r\n    static String convertStreamToString(java.io.InputStream is) {\r\n        java.util.Scanner s = new java.util.Scanner(is).useDelimiter(&quot;\\\\A&quot;);\r\n        return s.hasNext() ? s.next() : &quot;&quot;;\r\n    }\r\n\r\nI learned this trick from [&quot;Stupid Scanner tricks&quot;][1] article. The reason it works is because [Scanner][2] iterates over tokens in the stream, and in this case we separate tokens using &quot;beginning of the input boundary&quot; (\\A) thus giving us only one token for the entire contents of the stream.\r\n\r\n**Note, if you need to be specific about the input stream&#39;s encoding, you can provide the second argument to `Scanner` constructor that indicates what charset to use (e.g. &quot;UTF-8&quot;).**\r\n\r\nHat tip goes also to [Jacob,][3] who once pointed me to the said article.\r\n\r\n**EDITED:** Thanks to a suggestion from [Patrick][4], made the function more robust when handling an empty input stream. **One more edit:** nixed try/catch, Patrick&#39;s way is more laconic.\r\n\r\n  [1]: http://weblogs.java.net/blog/pat/archive/2004/10/stupid_scanner_1.html\r\n  [2]: http://download.oracle.com/javase/6/docs/api/java/util/Scanner.html\r\n  [3]: http://stackoverflow.com/users/68127/jacob-gabrielson\r\n  [4]: http://stackoverflow.com/users/101272/patrick\r\n\r\n", 
      "owner": {
        "user_id": 43151, 
        "profile_image": "https://www.gravatar.com/avatar/a0886310289840857f4763f2559b740c?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 14589, 
        "link": "http://stackoverflow.com/users/43151/pavel-repin", 
        "accept_rate": 100, 
        "display_name": "Pavel Repin"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1375827105, 
      "answer_id": 5445161
    }, 
    {
      "body": "<p>A nice way to do this is using <a href=\"http://commons.apache.org/\">Apache commons</a> <code><a href=\"http://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/IOUtils.html\">IOUtils</a></code> to copy the <code>InputStream</code> into a <code>StringWriter</code>... something like</p>\n\n<pre><code>StringWriter writer = new StringWriter();\nIOUtils.copy(inputStream, writer, encoding);\nString theString = writer.toString();\n</code></pre>\n\n<p>or even</p>\n\n<pre><code>String theString = IOUtils.toString(inputStream, encoding)\n</code></pre>\n\n<p>Alternatively, you could use <code>ByteArrayOutputStream</code> if you don't want to mix your Streams and Writers</p>\n", 
      "question_id": 309424, 
      "last_activity_date": 1410897227, 
      "comments": [
        {
          "body": "I hope IOUtils takes an optional Charset (or at least the name of the encodding to use). Best not to leave this kind of thing to chance :)", 
          "edited": false, 
          "comment_id": 152587, 
          "creation_date": 1227287408, 
          "post_id": 309448, 
          "score": 40, 
          "body_markdown": "I hope IOUtils takes an optional Charset (or at least the name of the encodding to use). Best not to leave this kind of thing to chance :)", 
          "owner": {
            "user_id": 22656, 
            "profile_image": "https://www.gravatar.com/avatar/6d8ebb117e8d83d74ea95fbdd0f87e13?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 731399, 
            "link": "http://stackoverflow.com/users/22656/jon-skeet", 
            "accept_rate": 85, 
            "display_name": "Jon Skeet"
          }
        }, 
        {
          "body": "Haha - of course it does! <a href=\"http://commons.apache.org/io/apidocs/org/apache/commons/io/IOUtils.html#copy(java.io.InputStream,%20java.io.Writer,%20java.lang.String)\" rel=\"nofollow\">commons.apache.org/io/apidocs/org/apache/commons/io/&hellip;</a>", 
          "edited": false, 
          "comment_id": 152591, 
          "creation_date": 1227287515, 
          "post_id": 309448, 
          "score": 8, 
          "body_markdown": "Haha - of course it does! http://commons.apache.org/io/apidocs/org/apache/commons/io/IOUtils.html#copy(java.io.InputStream,%20java.io.Writer,%20java.lang.String)", 
          "owner": {
            "user_id": 21590, 
            "profile_image": "https://www.gravatar.com/avatar/d21e4f986f5b05d89b0070b37e296a87?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 8340, 
            "link": "http://stackoverflow.com/users/21590/harry-lime", 
            "accept_rate": 57, 
            "display_name": "Harry Lime"
          }
        }, 
        {
          "body": "You really, <i>really</i>, <b>really</b> should be using <code>IOUtils.copy(inputStream, writer, encoding);</code> unless you really, <i>really</i>, <b>really</b> know what you&#39;re doing, which people never do with character encoding related programming. Or in this case, <code>IOUtils.toString(inputStream, encoding)</code>. Methods that use the platform default encoding are almost never correct to use, like every other method that gives different results depending on which machine/operating system/platform or version thereof it is run on.", 
          "edited": false, 
          "comment_id": 4886900, 
          "creation_date": 1292593551, 
          "post_id": 309448, 
          "score": 98, 
          "body_markdown": "You really, *really*, **really** should be using `IOUtils.copy(inputStream, writer, encoding);` unless you really, *really*, **really** know what you&#39;re doing, which people never do with character encoding related programming. Or in this case, `IOUtils.toString(inputStream, encoding)`. Methods that use the platform default encoding are almost never correct to use, like every other method that gives different results depending on which machine/operating system/platform or version thereof it is run on.", 
          "owner": {
            "user_id": 233014, 
            "profile_image": "https://www.gravatar.com/avatar/78f1b09485af8a07927344b3257b05a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 7842, 
            "link": "http://stackoverflow.com/users/233014/christoffer-hammarstr%c3%b6m", 
            "display_name": "Christoffer Hammarstr&#246;m"
          }
        }, 
        {
          "body": "I think the below answer (IOUtils.toString()) is simpler since there is no need for a StringWriter", 
          "edited": false, 
          "comment_id": 5413122, 
          "creation_date": 1296604556, 
          "post_id": 309448, 
          "score": 29, 
          "body_markdown": "I think the below answer (IOUtils.toString()) is simpler since there is no need for a StringWriter", 
          "owner": {
            "user_id": 54396, 
            "profile_image": "https://www.gravatar.com/avatar/14d47c546ec62dda48a3f292276ec94d?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1809, 
            "link": "http://stackoverflow.com/users/54396/patrick", 
            "accept_rate": 75, 
            "display_name": "Patrick"
          }
        }, 
        {
          "body": "A quick but not clean solution. I would rather prefer a solution without adding additional libraries as mentioned in the post below: <a href=\"http://stackoverflow.com/a/6938341/411951\">stackoverflow.com/a/6938341/411951</a>", 
          "edited": false, 
          "comment_id": 12048915, 
          "creation_date": 1330594096, 
          "post_id": 309448, 
          "score": 2, 
          "body_markdown": "A quick but not clean solution. I would rather prefer a solution without adding additional libraries as mentioned in the post below: http://stackoverflow.com/a/6938341/411951", 
          "owner": {
            "user_id": 411951, 
            "profile_image": "https://www.gravatar.com/avatar/9c5f0c6a5a7daaba26d0d9b08df3529f?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 4785, 
            "link": "http://stackoverflow.com/users/411951/martinvonmartinsgr%c3%bcn", 
            "accept_rate": 86, 
            "display_name": "MartinVonMartinsgr&#252;n"
          }
        }, 
        {
          "body": "i found filenotfound exception while i try to read  file name with &quot;\u0414\u043e_\u0441\u0432\u0438\u0434\u0430\u043d\u0438\u044f&quot; file name(Russian language) i try with FileInputstream but it not cable to read this filename from sdcard.", 
          "edited": false, 
          "comment_id": 32798304, 
          "creation_date": 1392097178, 
          "post_id": 309448, 
          "score": 0, 
          "body_markdown": "i found filenotfound exception while i try to read  file name with &quot;\u0414\u043e_\u0441\u0432\u0438\u0434\u0430\u043d\u0438\u044f&quot; file name(Russian language) i try with FileInputstream but it not cable to read this filename from sdcard.", 
          "owner": {
            "user_id": 1574153, 
            "profile_image": "http://i.stack.imgur.com/s5Y6t.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 2241, 
            "link": "http://stackoverflow.com/users/1574153/bhanu-sharma", 
            "accept_rate": 40, 
            "display_name": "Bhanu Sharma"
          }
        }, 
        {
          "body": "For android developers, seems like android does not come with IOUtils from Apache. So you might consider referring to other answers.", 
          "edited": false, 
          "comment_id": 39007189, 
          "creation_date": 1406865445, 
          "post_id": 309448, 
          "score": 0, 
          "body_markdown": "For android developers, seems like android does not come with IOUtils from Apache. So you might consider referring to other answers.", 
          "owner": {
            "user_id": 767033, 
            "profile_image": "https://www.gravatar.com/avatar/07fa4dc36952b149cdfe7c140ff08fc5?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 375, 
            "link": "http://stackoverflow.com/users/767033/chris-zou", 
            "accept_rate": 46, 
            "display_name": "Chris.Zou"
          }
        }, 
        {
          "body": "I work in a limited footprint environment, so the solution by @PavelRepin below using the java io/util libs makes more sense.", 
          "edited": false, 
          "comment_id": 40808917, 
          "creation_date": 1411688061, 
          "post_id": 309448, 
          "score": 0, 
          "body_markdown": "I work in a limited footprint environment, so the solution by @PavelRepin below using the java io/util libs makes more sense.", 
          "owner": {
            "user_id": 498522, 
            "profile_image": "https://www.gravatar.com/avatar/b448532d349dc20165d85382b5ceee6a?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 893, 
            "link": "http://stackoverflow.com/users/498522/james", 
            "accept_rate": 73, 
            "display_name": "James"
          }
        }, 
        {
          "body": "@ChristofferHammarstr&#246;m totally agree. Even on the same machine if you run java from cmd or from your IDE.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 233014, 
            "profile_image": "https://www.gravatar.com/avatar/78f1b09485af8a07927344b3257b05a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 7842, 
            "link": "http://stackoverflow.com/users/233014/christoffer-hammarstr%c3%b6m", 
            "display_name": "Christoffer Hammarstr&#246;m"
          }, 
          "comment_id": 41674719, 
          "creation_date": 1414049354, 
          "post_id": 309448, 
          "score": 0, 
          "body_markdown": "@ChristofferHammarstr&#246;m totally agree. Even on the same machine if you run java from cmd or from your IDE.", 
          "owner": {
            "user_id": 170196, 
            "profile_image": "https://www.gravatar.com/avatar/819c08b7776a89bb8ee06eda7e90b2fa?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2015, 
            "link": "http://stackoverflow.com/users/170196/esben-skov-pedersen", 
            "accept_rate": 83, 
            "display_name": "Esben Skov Pedersen"
          }
        }
      ], 
      "creation_date": 1227286460, 
      "comment_count": 9, 
      "score": 731, 
      "body_markdown": "A nice way to do this is using [Apache commons][1] &lt;code&gt;[IOUtils][2]&lt;/code&gt; to copy the &lt;code&gt;InputStream&lt;/code&gt; into a &lt;code&gt;StringWriter&lt;/code&gt;... something like\r\n\r\n    StringWriter writer = new StringWriter();\r\n    IOUtils.copy(inputStream, writer, encoding);\r\n    String theString = writer.toString();\r\n\r\nor even\r\n\r\n    String theString = IOUtils.toString(inputStream, encoding)\r\n\r\nAlternatively, you could use &lt;code&gt;ByteArrayOutputStream&lt;/code&gt; if you don&#39;t want to mix your Streams and Writers\r\n\r\n\r\n  [1]: http://commons.apache.org/\r\n  [2]: http://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/IOUtils.html", 
      "owner": {
        "user_id": 21590, 
        "profile_image": "https://www.gravatar.com/avatar/d21e4f986f5b05d89b0070b37e296a87?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 8340, 
        "link": "http://stackoverflow.com/users/21590/harry-lime", 
        "accept_rate": 57, 
        "display_name": "Harry Lime"
      }, 
      "is_accepted": true, 
      "last_edit_date": 1410897227, 
      "answer_id": 309448
    }, 
    {
      "body": "<p>Apache Commons allows: </p>\n\n<pre><code>String myString = IOUtils.toString(myInputStream, \"UTF-8\");\n</code></pre>\n\n<p>Of course, you could choose other character encodings besides UTF-8. </p>\n\n<p>Also see: (<a href=\"http://commons.apache.org/proper/commons-io/javadocs/api-2.4/org/apache/commons/io/IOUtils.html#toString%28java.io.InputStream,%20java.lang.String\">Docs</a>)</p>\n", 
      "question_id": 309424, 
      "last_activity_date": 1387475489, 
      "comments": [
        {
          "body": "IOUtils.toString is deprecated", 
          "edited": false, 
          "comment_id": 1938925, 
          "creation_date": 1262823308, 
          "post_id": 350723, 
          "score": 8, 
          "body_markdown": "IOUtils.toString is deprecated", 
          "owner": {
            "user_id": 1785, 
            "profile_image": "https://www.gravatar.com/avatar/b87bbdb1b142a6da99983ccae9fc33bc?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 12408, 
            "link": "http://stackoverflow.com/users/1785/landon9720", 
            "accept_rate": 53, 
            "display_name": "landon9720"
          }
        }, 
        {
          "body": "No it isn&#39;t. Only the version that takes a <code>byte[]</code> parameter is.", 
          "edited": false, 
          "comment_id": 4531506, 
          "creation_date": 1289898296, 
          "post_id": 350723, 
          "score": 72, 
          "body_markdown": "No it isn&#39;t. Only the version that takes a `byte[]` parameter is.", 
          "owner": {
            "user_id": 342852, 
            "profile_image": "http://i.stack.imgur.com/cifUt.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 116598, 
            "link": "http://stackoverflow.com/users/342852/sean-patrick-floyd", 
            "accept_rate": 92, 
            "display_name": "Sean Patrick Floyd"
          }
        }, 
        {
          "body": "Also, there is a method that only take a inputStream argument, if you are find with the default encoding.", 
          "edited": false, 
          "comment_id": 5438272, 
          "creation_date": 1296749257, 
          "post_id": 350723, 
          "score": 0, 
          "body_markdown": "Also, there is a method that only take a inputStream argument, if you are find with the default encoding.", 
          "owner": {
            "user_id": 438144, 
            "profile_image": "https://www.gravatar.com/avatar/8a0c4c41ab1957adb307d162ab34963a?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 671, 
            "link": "http://stackoverflow.com/users/438144/guillaume-cot%c3%a9", 
            "accept_rate": 75, 
            "display_name": "Guillaume Cot&#233;"
          }
        }, 
        {
          "body": "@Guillaume Cot&#233; I guess the message here is that you never should be &quot;fine with the default encoding&quot;, since you cannot be sure of what it is, depending on the platform the java code is run on.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 438144, 
            "profile_image": "https://www.gravatar.com/avatar/8a0c4c41ab1957adb307d162ab34963a?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 671, 
            "link": "http://stackoverflow.com/users/438144/guillaume-cot%c3%a9", 
            "accept_rate": 75, 
            "display_name": "Guillaume Cot&#233;"
          }, 
          "comment_id": 5443254, 
          "creation_date": 1296770066, 
          "post_id": 350723, 
          "score": 6, 
          "body_markdown": "@Guillaume Cot&#233; I guess the message here is that you never should be &quot;fine with the default encoding&quot;, since you cannot be sure of what it is, depending on the platform the java code is run on.", 
          "owner": {
            "user_id": 52993, 
            "profile_image": "https://www.gravatar.com/avatar/0c088574a5e14c9e4b3fc91870a0477d?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 578, 
            "link": "http://stackoverflow.com/users/52993/per-wiklander", 
            "display_name": "Per Wiklander"
          }
        }, 
        {
          "body": "@Per Wiklander I disagree with you.  Code that is going to work on a single could be quite sure that default encoding will be fine.  For code that only open local file, it is a reasonable option to ask them to be encoded in the platform default encoding.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 52993, 
            "profile_image": "https://www.gravatar.com/avatar/0c088574a5e14c9e4b3fc91870a0477d?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 578, 
            "link": "http://stackoverflow.com/users/52993/per-wiklander", 
            "display_name": "Per Wiklander"
          }, 
          "comment_id": 5453629, 
          "creation_date": 1296834961, 
          "post_id": 350723, 
          "score": 3, 
          "body_markdown": "@Per Wiklander I disagree with you.  Code that is going to work on a single could be quite sure that default encoding will be fine.  For code that only open local file, it is a reasonable option to ask them to be encoded in the platform default encoding.", 
          "owner": {
            "user_id": 438144, 
            "profile_image": "https://www.gravatar.com/avatar/8a0c4c41ab1957adb307d162ab34963a?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 671, 
            "link": "http://stackoverflow.com/users/438144/guillaume-cot%c3%a9", 
            "accept_rate": 75, 
            "display_name": "Guillaume Cot&#233;"
          }
        }, 
        {
          "body": "This function is corrupting my input stream.", 
          "edited": false, 
          "comment_id": 11330867, 
          "creation_date": 1327671708, 
          "post_id": 350723, 
          "score": 0, 
          "body_markdown": "This function is corrupting my input stream.", 
          "owner": {
            "user_id": 597983, 
            "profile_image": "https://www.gravatar.com/avatar/59de353377c14b05a528e15616844cdf?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 860, 
            "link": "http://stackoverflow.com/users/597983/mady", 
            "accept_rate": 77, 
            "display_name": "Mady"
          }
        }, 
        {
          "body": "To save anyone the hassle of Googling - \t\t&lt;dependency&gt; \t\t\t&lt;groupId&gt;org.apache.commons&lt;/groupId&gt; \t\t\t&lt;artifactId&gt;commons-io&lt;/artifactId&gt; \t\t\t&lt;version&gt;1.3.2&lt;/version&gt; \t\t&lt;/dependency&gt;", 
          "edited": false, 
          "comment_id": 12227893, 
          "creation_date": 1331294643, 
          "post_id": 350723, 
          "score": 10, 
          "body_markdown": "To save anyone the hassle of Googling -\n\t\t&lt;dependency&gt;\n\t\t\t&lt;groupId&gt;org.apache.commons&lt;/groupId&gt;\n\t\t\t&lt;artifactId&gt;commons-io&lt;/artifactId&gt;\n\t\t\t&lt;version&gt;1.3.2&lt;/version&gt;\n\t\t&lt;/dependency&gt;", 
          "owner": {
            "user_id": 333930, 
            "profile_image": "https://www.gravatar.com/avatar/b6fe36176ec7c9475374a5cd3b7bef1a?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 282, 
            "link": "http://stackoverflow.com/users/333930/chris", 
            "display_name": "Chris"
          }
        }, 
        {
          "body": "I don&#39;t know that I&#39;d say the default encoding is NEVER fine. On the other hand, I disagree with Guillaume also. In fact, it&#39;s not a matter of fine or not; it&#39;s a matter of which is CORRECT. In the situation where you want to take something that you know is encoded in the default encoding for the platform, then the default version is correct. However, I believe this is a very rare use case. The more normal case is that you need to specify what the encoding is, so specifying the encoding is correct. There is no optional case: either one or (more likely) the other is correct.", 
          "edited": false, 
          "comment_id": 22072190, 
          "creation_date": 1363959008, 
          "post_id": 350723, 
          "score": 0, 
          "body_markdown": "I don&#39;t know that I&#39;d say the default encoding is NEVER fine. On the other hand, I disagree with Guillaume also. In fact, it&#39;s not a matter of fine or not; it&#39;s a matter of which is CORRECT. In the situation where you want to take something that you know is encoded in the default encoding for the platform, then the default version is correct. However, I believe this is a very rare use case. The more normal case is that you need to specify what the encoding is, so specifying the encoding is correct. There is no optional case: either one or (more likely) the other is correct.", 
          "owner": {
            "user_id": 269361, 
            "profile_image": "https://www.gravatar.com/avatar/124cda7f0e8d259e69d49ed43868639e?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 456, 
            "link": "http://stackoverflow.com/users/269361/fool4jesus", 
            "accept_rate": 89, 
            "display_name": "fool4jesus"
          }
        }, 
        {
          "body": "Also little improvement would be to use apache io (or other) constant for character encoding instead of using plain string literal - eg: IOUtils.toString(myInputStream, Charsets.UTF_8);", 
          "edited": false, 
          "comment_id": 31725375, 
          "creation_date": 1389616527, 
          "post_id": 350723, 
          "score": 1, 
          "body_markdown": "Also little improvement would be to use apache io (or other) constant for character encoding instead of using plain string literal - eg: IOUtils.toString(myInputStream, Charsets.UTF_8);", 
          "owner": {
            "user_id": 1018711, 
            "profile_image": "https://www.gravatar.com/avatar/6302b1661b8292f98b14e7771e314ce7?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 521, 
            "link": "http://stackoverflow.com/users/1018711/vojtech-ruzicka", 
            "accept_rate": 93, 
            "display_name": "Vojtech Ruzicka"
          }
        }, 
        {
          "body": "This is my favorite answer because it is a simple one-line solution, very readable and clear in its intent. Even better, it makes use of an external library, thus keeping the coder from having to debug, optimize, and otherwise maintain it on their own.", 
          "edited": false, 
          "comment_id": 42651639, 
          "creation_date": 1416600145, 
          "post_id": 350723, 
          "score": 0, 
          "body_markdown": "This is my favorite answer because it is a simple one-line solution, very readable and clear in its intent. Even better, it makes use of an external library, thus keeping the coder from having to debug, optimize, and otherwise maintain it on their own.", 
          "owner": {
            "user_id": 538222, 
            "profile_image": "http://i.stack.imgur.com/RQZDL.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 784, 
            "link": "http://stackoverflow.com/users/538222/einnocent", 
            "accept_rate": 57, 
            "display_name": "einnocent"
          }
        }
      ], 
      "creation_date": 1228767222, 
      "comment_count": 10, 
      "score": 556, 
      "body_markdown": "Apache Commons allows: \r\n\r\n    String myString = IOUtils.toString(myInputStream, &quot;UTF-8&quot;);\r\n\r\nOf course, you could choose other character encodings besides UTF-8. \r\n\r\nAlso see: ([Docs][1])\r\n\r\n\r\n\r\n  [1]: http://commons.apache.org/proper/commons-io/javadocs/api-2.4/org/apache/commons/io/IOUtils.html#toString%28java.io.InputStream,%20java.lang.String\r\n  ", 
      "owner": {
        "user_id": 31892, 
        "profile_image": "https://www.gravatar.com/avatar/22aa27d8821b495e095f79dd331ef3d4?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 6143, 
        "link": "http://stackoverflow.com/users/31892/chinnery", 
        "accept_rate": 78, 
        "display_name": "Chinnery"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1387475489, 
      "answer_id": 350723
    }, 
    {
      "body": "<p>Creating a text file (note that this will overwrite the file if it already exists):</p>\n\n<pre><code>PrintWriter writer = new PrintWriter(\"the-file-name.txt\", \"UTF-8\");\nwriter.println(\"The first line\");\nwriter.println(\"The second line\");\nwriter.close();\n</code></pre>\n\n<p>Creating a binary file (will also overwrite the file):</p>\n\n<pre><code>byte dataToWrite[] = //...\nFileOutputStream out = new FileOutputStream(\"the-file-name\");\nout.write(dataToWrite);\nout.close();\n</code></pre>\n", 
      "question_id": 2885173, 
      "last_activity_date": 1274473359, 
      "comments": [
        {
          "body": "Worth noting PrintWriter will truncate the filesize to zero if the file already exists", 
          "edited": false, 
          "comment_id": 2933020, 
          "creation_date": 1274473018, 
          "post_id": 2885224, 
          "score": 9, 
          "body_markdown": "Worth noting PrintWriter will truncate the filesize to zero if the file already exists", 
          "owner": {
            "user_id": 338618, 
            "profile_image": "https://www.gravatar.com/avatar/07714ae1cc28c7e19463d08dc4c0bb3f?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 513, 
            "link": "http://stackoverflow.com/users/338618/covar", 
            "accept_rate": 75, 
            "display_name": "Covar"
          }
        }, 
        {
          "body": "PrintWriter can be (and often is) used, but is not (conceptually) the right class for the job. From the docs: <code>&quot;PrintWriter  prints formatted representations of objects to a text-output stream. &quot;</code> Bozho&#39;s answer is more correct, though it looks cumbersome (you can always wrap it in some utility method).", 
          "edited": false, 
          "comment_id": 2933207, 
          "creation_date": 1274474430, 
          "post_id": 2885224, 
          "score": 9, 
          "body_markdown": "PrintWriter can be (and often is) used, but is not (conceptually) the right class for the job. From the docs: `&quot;PrintWriter  prints formatted representations of objects to a text-output stream. &quot;`\nBozho&#39;s answer is more correct, though it looks cumbersome (you can always wrap it in some utility method).", 
          "owner": {
            "user_id": 277304, 
            "profile_image": "https://www.gravatar.com/avatar/4c90624b2aa9623d5ba30db0e34b2000?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 28677, 
            "link": "http://stackoverflow.com/users/277304/leonbloy", 
            "accept_rate": 71, 
            "display_name": "leonbloy"
          }
        }, 
        {
          "body": "@mangest, yes better now ;)", 
          "edited": false, 
          "comment_id": 2933935, 
          "creation_date": 1274480554, 
          "post_id": 2885224, 
          "score": 2, 
          "body_markdown": "@mangest, yes better now ;)", 
          "owner": {
            "user_id": 16883, 
            "profile_image": "https://www.gravatar.com/avatar/0382297f273df0a544b0c6c2734de096?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 190806, 
            "link": "http://stackoverflow.com/users/16883/michael-borgwardt", 
            "accept_rate": 81, 
            "display_name": "Michael Borgwardt"
          }
        }, 
        {
          "body": "will it print the html file as well?", 
          "edited": false, 
          "comment_id": 26373088, 
          "creation_date": 1375511051, 
          "post_id": 2885224, 
          "score": 0, 
          "body_markdown": "will it print the html file as well?", 
          "owner": {
            "user_id": 1960524, 
            "profile_image": "http://i.stack.imgur.com/89e4m.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 519, 
            "link": "http://stackoverflow.com/users/1960524/adesh-singh", 
            "accept_rate": 95, 
            "display_name": "adesh singh"
          }
        }, 
        {
          "body": "@adeshsingh no one ever tried out so faar, be the first one!", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 1960524, 
            "profile_image": "http://i.stack.imgur.com/89e4m.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 519, 
            "link": "http://stackoverflow.com/users/1960524/adesh-singh", 
            "accept_rate": 95, 
            "display_name": "adesh singh"
          }, 
          "comment_id": 33620824, 
          "creation_date": 1393873243, 
          "post_id": 2885224, 
          "score": 0, 
          "body_markdown": "@adeshsingh no one ever tried out so faar, be the first one!", 
          "owner": {
            "user_id": 1902288, 
            "profile_image": "https://www.gravatar.com/avatar/f02ee64dddec0a1f4e2e05a6e6393bd0?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 645, 
            "link": "http://stackoverflow.com/users/1902288/user1902288", 
            "accept_rate": 88, 
            "display_name": "user1902288"
          }
        }, 
        {
          "body": "So where will the textfile will be created after the app is build and used in another PC since we have not given the path?", 
          "edited": false, 
          "comment_id": 35640921, 
          "creation_date": 1398403720, 
          "post_id": 2885224, 
          "score": 6, 
          "body_markdown": "So where will the textfile will be created after the app is build and used in another PC since we have not given the path?", 
          "owner": {
            "user_id": 2779389, 
            "profile_image": "http://i.stack.imgur.com/3VJIt.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 105, 
            "link": "http://stackoverflow.com/users/2779389/marlon-abeykoon", 
            "display_name": "Marlon Abeykoon"
          }
        }, 
        {
          "body": "@MarlonAbeykoon Good question.  The answer is that it will create the text file in the <i>working directory</i>.  The working directory is whatever directory you execute your program from.  For example, if you execute your program from the command line, then the working directory will be whatever directory you are &quot;in&quot; at that moment (on Linux, type &quot;pwd&quot; to see the current working directory).  Or, if I double-click a JAR file on my desktop to run it, then the working directory will be the desktop.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 2779389, 
            "profile_image": "http://i.stack.imgur.com/3VJIt.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 105, 
            "link": "http://stackoverflow.com/users/2779389/marlon-abeykoon", 
            "display_name": "Marlon Abeykoon"
          }, 
          "comment_id": 40030481, 
          "creation_date": 1409659617, 
          "post_id": 2885224, 
          "score": 3, 
          "body_markdown": "@MarlonAbeykoon Good question.  The answer is that it will create the text file in the *working directory*.  The working directory is whatever directory you execute your program from.  For example, if you execute your program from the command line, then the working directory will be whatever directory you are &quot;in&quot; at that moment (on Linux, type &quot;pwd&quot; to see the current working directory).  Or, if I double-click a JAR file on my desktop to run it, then the working directory will be the desktop.", 
          "owner": {
            "user_id": 13379, 
            "profile_image": "http://i.stack.imgur.com/xEtbP.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 10537, 
            "link": "http://stackoverflow.com/users/13379/michael", 
            "accept_rate": 87, 
            "display_name": "Michael"
          }
        }, 
        {
          "body": "If you want to append and not truncate u can replace PrintWriter with FileWriter: FileWriter(new File (&quot;the-file-name.txt&quot;), true).. one trade-off is FileWriter assumes default character encoding and buffer sizes", 
          "edited": false, 
          "comment_id": 42543033, 
          "creation_date": 1416358892, 
          "post_id": 2885224, 
          "score": 0, 
          "body_markdown": "If you want to append and not truncate u can replace PrintWriter with FileWriter: FileWriter(new File (&quot;the-file-name.txt&quot;), true).. one trade-off is FileWriter assumes default character encoding and buffer sizes", 
          "owner": {
            "user_id": 442968, 
            "profile_image": "https://www.gravatar.com/avatar/667bcf3750d141cef350bee0a911c29f?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 467, 
            "link": "http://stackoverflow.com/users/442968/rondo", 
            "accept_rate": 100, 
            "display_name": "Rondo"
          }
        }
      ], 
      "creation_date": 1274472412, 
      "comment_count": 8, 
      "score": 340, 
      "body_markdown": "Creating a text file (note that this will overwrite the file if it already exists):\r\n\r\n    PrintWriter writer = new PrintWriter(&quot;the-file-name.txt&quot;, &quot;UTF-8&quot;);\r\n    writer.println(&quot;The first line&quot;);\r\n    writer.println(&quot;The second line&quot;);\r\n    writer.close();\r\n\r\nCreating a binary file (will also overwrite the file):\r\n\r\n    byte dataToWrite[] = //...\r\n    FileOutputStream out = new FileOutputStream(&quot;the-file-name&quot;);\r\n    out.write(dataToWrite);\r\n    out.close();", 
      "owner": {
        "user_id": 13379, 
        "profile_image": "http://i.stack.imgur.com/xEtbP.jpg?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 10537, 
        "link": "http://stackoverflow.com/users/13379/michael", 
        "accept_rate": 87, 
        "display_name": "Michael"
      }, 
      "is_accepted": true, 
      "last_edit_date": 1274473359, 
      "answer_id": 2885224
    }, 
    {
      "community_owned_date": 1405771626, 
      "body": "<p>I would avoid the use of a mega api like apache commons. This is a simplistic operation and its built into the JDK in the new NIO package. It was kind of already linked to in a previous answer, but the key method in the NIO api are the new functions \"transferTo\" and \"transferFrom\".</p>\n\n<p><a href=\"http://java.sun.com/javase/6/docs/api/java/nio/channels/FileChannel.html#transferTo(long,%20long,%20java.nio.channels.WritableByteChannel)\">http://java.sun.com/javase/6/docs/api/java/nio/channels/FileChannel.html#transferTo(long,%20long,%20java.nio.channels.WritableByteChannel)</a></p>\n\n<p>One of the linked articles shows a great way on how to integrate this function into your code, using the transferFrom:</p>\n\n<pre><code>public static void copyFile(File sourceFile, File destFile) throws IOException {\n    if(!destFile.exists()) {\n        destFile.createNewFile();\n    }\n\n    FileChannel source = null;\n    FileChannel destination = null;\n\n    try {\n        source = new FileInputStream(sourceFile).getChannel();\n        destination = new FileOutputStream(destFile).getChannel();\n        destination.transferFrom(source, 0, source.size());\n    }\n    finally {\n        if(source != null) {\n            source.close();\n        }\n        if(destination != null) {\n            destination.close();\n        }\n    }\n}\n</code></pre>\n\n<p>Learning NIO can be a little tricky, so you might want to just trust in this mechanic before going off and trying to learn NIO overnight. From personal experience it can be a very hard thing to learn if you don't have the experience and were introduced to IO via the java.io streams.</p>\n", 
      "question_id": 106770, 
      "last_activity_date": 1313414106, 
      "comments": [
        {
          "body": "Thanks, useful info.  I would still argue for something like Apache Commons, especially if it uses nio (properly) underneath; but I agree it is important to understand the underlying fundamentals.", 
          "edited": false, 
          "comment_id": 24220, 
          "creation_date": 1222103995, 
          "post_id": 115086, 
          "score": 2, 
          "body_markdown": "Thanks, useful info.  I would still argue for something like Apache Commons, especially if it uses nio (properly) underneath; but I agree it is important to understand the underlying fundamentals.", 
          "owner": {
            "user_id": 17123, 
            "profile_image": "https://www.gravatar.com/avatar/68fc1c61f2ee51d3f889337be0c860a1?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 14295, 
            "link": "http://stackoverflow.com/users/17123/pete", 
            "accept_rate": 69, 
            "display_name": "Pete"
          }
        }, 
        {
          "body": "I agree it&#39;s important to understand the backgrounds of the nio but I still would go with the Jakarta Commons.", 
          "edited": false, 
          "comment_id": 425254, 
          "creation_date": 1236202511, 
          "post_id": 115086, 
          "score": 0, 
          "body_markdown": "I agree it&#39;s important to understand the backgrounds of the nio but I still would go with the Jakarta Commons.", 
          "owner": {
            "user_id": 63436, 
            "profile_image": "https://www.gravatar.com/avatar/01373e989e0d1b2c0fca75e691deec49?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 5370, 
            "link": "http://stackoverflow.com/users/63436/ravi-wallau", 
            "display_name": "Ravi Wallau"
          }
        }, 
        {
          "body": "Unfortunately, there are caveats. When I copied 1.5 Gb file on Windows 7, 32 bit, it failed to map the file. I had to look for another solution.", 
          "edited": false, 
          "comment_id": 5142096, 
          "creation_date": 1294822095, 
          "post_id": 115086, 
          "score": 1, 
          "body_markdown": "Unfortunately, there are caveats. When I copied 1.5 Gb file on Windows 7, 32 bit, it failed to map the file. I had to look for another solution.", 
          "owner": {
            "user_id": 543168, 
            "profile_image": "https://www.gravatar.com/avatar/72256a2e28305bda6b626ebc0b3cb863?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 355, 
            "link": "http://stackoverflow.com/users/543168/crash", 
            "accept_rate": 90, 
            "display_name": "Crash"
          }
        }, 
        {
          "body": "Three possible problems with the above code: (a) if getChannel throws an exception, you might leak an open stream; (b) for large files, you might be trying to transfer more at once than the OS can handle; (c) you are ignoring the return value of transferFrom, so it might be copying just part of the file. This is why org.apache.tools.ant.util.ResourceUtils.copyResource is so complicated. Also note that while transferFrom is OK, transferTo breaks on JDK 1.4 on Linux: <a href=\"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5056395\" rel=\"nofollow\">bugs.sun.com/bugdatabase/view_bug.do?bug_id=5056395</a>", 
          "edited": false, 
          "comment_id": 5350398, 
          "creation_date": 1296175299, 
          "post_id": 115086, 
          "score": 8, 
          "body_markdown": "Three possible problems with the above code: (a) if getChannel throws an exception, you might leak an open stream; (b) for large files, you might be trying to transfer more at once than the OS can handle; (c) you are ignoring the return value of transferFrom, so it might be copying just part of the file. This is why org.apache.tools.ant.util.ResourceUtils.copyResource is so complicated. Also note that while transferFrom is OK, transferTo breaks on JDK 1.4 on Linux: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5056395", 
          "owner": {
            "user_id": 12916, 
            "profile_image": "https://www.gravatar.com/avatar/53ab525063e3831bc781fa56af4181a5?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 4328, 
            "link": "http://stackoverflow.com/users/12916/jesse-glick", 
            "accept_rate": 27, 
            "display_name": "Jesse Glick"
          }
        }, 
        {
          "body": "I believe this updated version addresses those concerns: <a href=\"https://gist.github.com/889747\" rel=\"nofollow\">gist.github.com/889747</a>", 
          "edited": false, 
          "comment_id": 6179043, 
          "creation_date": 1301267740, 
          "post_id": 115086, 
          "score": 6, 
          "body_markdown": "I believe this updated version addresses those concerns: https://gist.github.com/889747", 
          "owner": {
            "user_id": 758, 
            "profile_image": "https://www.gravatar.com/avatar/0b4adc19284ed0751844d610555dc6b2?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 14197, 
            "link": "http://stackoverflow.com/users/758/mark-renouf", 
            "accept_rate": 76, 
            "display_name": "Mark Renouf"
          }
        }, 
        {
          "body": "@Pete it doesn&#39;t look like Apache Commons uses nio yet for file copying.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 17123, 
            "profile_image": "https://www.gravatar.com/avatar/68fc1c61f2ee51d3f889337be0c860a1?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 14295, 
            "link": "http://stackoverflow.com/users/17123/pete", 
            "accept_rate": 69, 
            "display_name": "Pete"
          }, 
          "comment_id": 7676635, 
          "creation_date": 1309355311, 
          "post_id": 115086, 
          "score": 0, 
          "body_markdown": "@Pete it doesn&#39;t look like Apache Commons uses nio yet for file copying.", 
          "owner": {
            "user_id": 17035, 
            "profile_image": "https://www.gravatar.com/avatar/cc01aef23f823bcb6d064c7fbc2b6bee?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2754, 
            "link": "http://stackoverflow.com/users/17035/andrew", 
            "accept_rate": 93, 
            "display_name": "Andrew"
          }
        }, 
        {
          "body": "@Mark Renouf: I&#39;m getting mixed results with this code. Not sure what&#39;s happening but copied files sometimes have zero bytes.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 758, 
            "profile_image": "https://www.gravatar.com/avatar/0b4adc19284ed0751844d610555dc6b2?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 14197, 
            "link": "http://stackoverflow.com/users/758/mark-renouf", 
            "accept_rate": 76, 
            "display_name": "Mark Renouf"
          }, 
          "comment_id": 8452009, 
          "creation_date": 1313414610, 
          "post_id": 115086, 
          "score": 0, 
          "body_markdown": "@Mark Renouf: I&#39;m getting mixed results with this code. Not sure what&#39;s happening but copied files sometimes have zero bytes.", 
          "owner": {
            "user_id": 225899, 
            "profile_image": "https://www.gravatar.com/avatar/2d205a5ec26e812c3694335b819d68c9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 5745, 
            "link": "http://stackoverflow.com/users/225899/james-poulson", 
            "accept_rate": 85, 
            "display_name": "James Poulson"
          }
        }, 
        {
          "body": "This code has a <i>major</i> problem. transferTo() must be called in a loop. It doesn&#39;t guarantee to transfer the entire amount requested.", 
          "edited": false, 
          "comment_id": 24331966, 
          "creation_date": 1370050212, 
          "post_id": 115086, 
          "score": 5, 
          "body_markdown": "This code has a *major* problem. transferTo() must be called in a loop. It doesn&#39;t guarantee to transfer the entire amount requested.", 
          "owner": {
            "user_id": 207421, 
            "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 124600, 
            "link": "http://stackoverflow.com/users/207421/ejp", 
            "accept_rate": 80, 
            "display_name": "EJP"
          }
        }, 
        {
          "body": "@EJP I do not really develop in Java anymore. You might be right, so you are welcome to suggest the proper way.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 207421, 
            "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 124600, 
            "link": "http://stackoverflow.com/users/207421/ejp", 
            "accept_rate": 80, 
            "display_name": "EJP"
          }, 
          "comment_id": 24917781, 
          "creation_date": 1371683637, 
          "post_id": 115086, 
          "score": 0, 
          "body_markdown": "@EJP I do not really develop in Java anymore. You might be right, so you are welcome to suggest the proper way.", 
          "owner": {
            "user_id": 2204759, 
            "profile_image": "http://i.stack.imgur.com/DqQca.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 5998, 
            "link": "http://stackoverflow.com/users/2204759/josh", 
            "accept_rate": 100, 
            "display_name": "Josh"
          }
        }, 
        {
          "body": "@EJP changed to community wiki.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 207421, 
            "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 124600, 
            "link": "http://stackoverflow.com/users/207421/ejp", 
            "accept_rate": 80, 
            "display_name": "EJP"
          }, 
          "comment_id": 38568033, 
          "creation_date": 1405771670, 
          "post_id": 115086, 
          "score": 0, 
          "body_markdown": "@EJP changed to community wiki.", 
          "owner": {
            "user_id": 2204759, 
            "profile_image": "http://i.stack.imgur.com/DqQca.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 5998, 
            "link": "http://stackoverflow.com/users/2204759/josh", 
            "accept_rate": 100, 
            "display_name": "Josh"
          }
        }, 
        {
          "body": "On Windows Server I&#39;m finding that files copied like this with NIO intermittently cannot be renamed or deleted, even after calling close() on everything. I believe this is due to the memory mappings that NIO creates requiring garbage collection, as covered in <a href=\"http://stackoverflow.com/q/21337078/1671320\">this post</a>.", 
          "edited": false, 
          "comment_id": 39811997, 
          "creation_date": 1409053165, 
          "post_id": 115086, 
          "score": 0, 
          "body_markdown": "On Windows Server I&#39;m finding that files copied like this with NIO intermittently cannot be renamed or deleted, even after calling close() on everything. I believe this is due to the memory mappings that NIO creates requiring garbage collection, as covered in [this post](http://stackoverflow.com/q/21337078/1671320).", 
          "owner": {
            "user_id": 1671320, 
            "profile_image": "https://www.gravatar.com/avatar/56bff166e28744f9a04051462f6b32ab?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 410, 
            "link": "http://stackoverflow.com/users/1671320/foz", 
            "display_name": "foz"
          }
        }
      ], 
      "creation_date": 1222093046, 
      "comment_count": 11, 
      "score": 206, 
      "body_markdown": "I would avoid the use of a mega api like apache commons. This is a simplistic operation and its built into the JDK in the new NIO package. It was kind of already linked to in a previous answer, but the key method in the NIO api are the new functions &quot;transferTo&quot; and &quot;transferFrom&quot;.\r\n\r\n&lt;http://java.sun.com/javase/6/docs/api/java/nio/channels/FileChannel.html#transferTo(long,%20long,%20java.nio.channels.WritableByteChannel)&gt;\r\n\r\nOne of the linked articles shows a great way on how to integrate this function into your code, using the transferFrom:\r\n\r\n    public static void copyFile(File sourceFile, File destFile) throws IOException {\r\n        if(!destFile.exists()) {\r\n            destFile.createNewFile();\r\n        }\r\n     \r\n        FileChannel source = null;\r\n        FileChannel destination = null;\r\n\r\n        try {\r\n            source = new FileInputStream(sourceFile).getChannel();\r\n            destination = new FileOutputStream(destFile).getChannel();\r\n            destination.transferFrom(source, 0, source.size());\r\n        }\r\n        finally {\r\n            if(source != null) {\r\n                source.close();\r\n            }\r\n            if(destination != null) {\r\n                destination.close();\r\n            }\r\n        }\r\n    }\r\n\r\nLearning NIO can be a little tricky, so you might want to just trust in this mechanic before going off and trying to learn NIO overnight. From personal experience it can be a very hard thing to learn if you don&#39;t have the experience and were introduced to IO via the java.io streams.", 
      "owner": {
        "user_id": 2204759, 
        "profile_image": "http://i.stack.imgur.com/DqQca.jpg?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 5998, 
        "link": "http://stackoverflow.com/users/2204759/josh", 
        "accept_rate": 100, 
        "display_name": "Josh"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1313414106, 
      "answer_id": 115086
    }, 
    {
      "body": "<p>As toolkit mentions above, Apache Commons IO is the way to go, specifically <a href=\"http://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/FileUtils.html\">FileUtils</a>.<a href=\"http://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/FileUtils.html#copyFile%28java.io.File,%20java.io.File%29\">copyFile()</a>; it handles all the heavy lifting for you.</p>\n\n<p>And as a postscript, note that recent versions of FileUtils (such as the 2.0.1 release) have added the use of NIO for copying files; <a href=\"http://www.javalobby.org/java/forums/t17036.html\">NIO can significantly increase file-copying performance</a>, in a large part because the NIO routines defer copying directly to the OS/filesystem rather than handle it by reading and writing bytes through the Java layer.  So if you're looking for performance, it might be worth checking that you are using a recent version of FileUtils.</p>\n", 
      "question_id": 106770, 
      "last_activity_date": 1367012270, 
      "comments": [
        {
          "body": "Very helpful - do you have any insight as to when an official release will incorporate these nio changes?", 
          "edited": false, 
          "comment_id": 19774, 
          "creation_date": 1221879669, 
          "post_id": 106807, 
          "score": 1, 
          "body_markdown": "Very helpful - do you have any insight as to when an official release will incorporate these nio changes?", 
          "owner": {
            "user_id": 17123, 
            "profile_image": "https://www.gravatar.com/avatar/68fc1c61f2ee51d3f889337be0c860a1?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 14295, 
            "link": "http://stackoverflow.com/users/17123/pete", 
            "accept_rate": 69, 
            "display_name": "Pete"
          }
        }, 
        {
          "body": "I have no clue... I&#39;ve scoured every source of public info I can find, and there&#39;s no mention of a possible release date.  The JIRA site shows only five open issues, though, so maybe soonish?", 
          "edited": false, 
          "comment_id": 21163, 
          "creation_date": 1221962670, 
          "post_id": 106807, 
          "score": 0, 
          "body_markdown": "I have no clue... I&#39;ve scoured every source of public info I can find, and there&#39;s no mention of a possible release date.  The JIRA site shows only five open issues, though, so maybe soonish?", 
          "owner": {
            "user_id": 16414, 
            "profile_image": "https://www.gravatar.com/avatar/0674d0f24d6b2e3355c68d733c62bb50?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 9688, 
            "link": "http://stackoverflow.com/users/16414/delfuego", 
            "accept_rate": 75, 
            "display_name": "delfuego"
          }
        }, 
        {
          "body": "This is very fast also, I replaced a section of code that we were executing xCopy to copy some directories and it has increased the speed very nicely.  (I did use the repository version)", 
          "edited": false, 
          "comment_id": 48066, 
          "creation_date": 1222865252, 
          "post_id": 106807, 
          "score": 0, 
          "body_markdown": "This is very fast also, I replaced a section of code that we were executing xCopy to copy some directories and it has increased the speed very nicely.  (I did use the repository version)", 
          "owner": {
            "user_id": 5054, 
            "profile_image": "https://www.gravatar.com/avatar/dfa46ada19c0bef24095fbe8e27a1780?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 547, 
            "link": "http://stackoverflow.com/users/5054/drye", 
            "accept_rate": 75, 
            "display_name": "drye"
          }
        }, 
        {
          "body": "Public release of Apache Commons IO still at 1.4, grrrrrrr", 
          "edited": false, 
          "comment_id": 1208983, 
          "creation_date": 1251932755, 
          "post_id": 106807, 
          "score": 2, 
          "body_markdown": "Public release of Apache Commons IO still at 1.4, grrrrrrr", 
          "owner": {
            "user_id": 17123, 
            "profile_image": "https://www.gravatar.com/avatar/68fc1c61f2ee51d3f889337be0c860a1?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 14295, 
            "link": "http://stackoverflow.com/users/17123/pete", 
            "accept_rate": 69, 
            "display_name": "Pete"
          }
        }, 
        {
          "body": "As of Dec 2010, Apache Commons IO is at 2.0.1, which has the NIO functionality. Answer updated.", 
          "edited": false, 
          "comment_id": 6366822, 
          "creation_date": 1302257314, 
          "post_id": 106807, 
          "score": 13, 
          "body_markdown": "As of Dec 2010, Apache Commons IO is at 2.0.1, which has the NIO functionality. Answer updated.", 
          "owner": {
            "user_id": 4728, 
            "profile_image": "https://www.gravatar.com/avatar/7ab07ade5469231be1aa935f71a41dd7?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18078, 
            "link": "http://stackoverflow.com/users/4728/simon-nickerson", 
            "accept_rate": 86, 
            "display_name": "Simon Nickerson"
          }
        }, 
        {
          "body": "A warning to Android people: this is NOT included in the standard Android APIs", 
          "edited": false, 
          "comment_id": 11518263, 
          "creation_date": 1328525179, 
          "post_id": 106807, 
          "score": 2, 
          "body_markdown": "A warning to Android people: this is NOT included in the standard Android APIs", 
          "owner": {
            "user_id": 103529, 
            "profile_image": "https://www.gravatar.com/avatar/0f24a1381892d13891a066c21b6bff15?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 4324, 
            "link": "http://stackoverflow.com/users/103529/ildan", 
            "display_name": "IlDan"
          }
        }, 
        {
          "body": "If using Java 7 or newer, you can use Files.copy as suggested by @GlenBest: <a href=\"http://www.stackoverflow.com/a/16600787/44737\">stackoverflow.com/a/16600787/44737</a>", 
          "edited": false, 
          "comment_id": 24837867, 
          "creation_date": 1371506253, 
          "post_id": 106807, 
          "score": 8, 
          "body_markdown": "If using Java 7 or newer, you can use Files.copy as suggested by @GlenBest: http://www.stackoverflow.com/a/16600787/44737", 
          "owner": {
            "user_id": 44737, 
            "profile_image": "https://www.gravatar.com/avatar/b158eb389b4f380aac44b7bd16a08129?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3282, 
            "link": "http://stackoverflow.com/users/44737/rob", 
            "accept_rate": 93, 
            "display_name": "rob"
          }
        }, 
        {
          "body": "+1 for the NIO performance tip", 
          "edited": false, 
          "comment_id": 39737626, 
          "creation_date": 1408816036, 
          "post_id": 106807, 
          "score": 0, 
          "body_markdown": "+1 for the NIO performance tip", 
          "owner": {
            "user_id": 1474211, 
            "profile_image": "http://i.stack.imgur.com/9OzV9.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 1338, 
            "link": "http://stackoverflow.com/users/1474211/mushtaq", 
            "accept_rate": 100, 
            "display_name": "mushtaq"
          }
        }
      ], 
      "creation_date": 1221877426, 
      "comment_count": 8, 
      "score": 204, 
      "body_markdown": "As toolkit mentions above, Apache Commons IO is the way to go, specifically [FileUtils](http://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/FileUtils.html).[copyFile()][1]; it handles all the heavy lifting for you.\r\n\r\nAnd as a postscript, note that recent versions of FileUtils (such as the 2.0.1 release) have added the use of NIO for copying files; [NIO can significantly increase file-copying performance](http://www.javalobby.org/java/forums/t17036.html), in a large part because the NIO routines defer copying directly to the OS/filesystem rather than handle it by reading and writing bytes through the Java layer.  So if you&#39;re looking for performance, it might be worth checking that you are using a recent version of FileUtils.\r\n\r\n\r\n  [1]: http://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/FileUtils.html#copyFile(java.io.File,%20java.io.File)", 
      "owner": {
        "user_id": 16414, 
        "profile_image": "https://www.gravatar.com/avatar/0674d0f24d6b2e3355c68d733c62bb50?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 9688, 
        "link": "http://stackoverflow.com/users/16414/delfuego", 
        "accept_rate": 75, 
        "display_name": "delfuego"
      }, 
      "is_accepted": true, 
      "last_edit_date": 1367012270, 
      "answer_id": 106807
    }, 
    {
      "community_owned_date": 1353168508, 
      "body": "<p>Taking into account file one should first get a <code>java.io.Reader</code> instance. This can then be read and added to a <code>StringBuilder</code> (we don't need <code>StringBuffer</code> if we are not accessing it in multiple threads, and <code>StringBuilder</code> is faster). The trick here is that we work in blocks, and as such don't need other buffering streams. The block size is parameterized for run-time performance optimization.</p>\n\n<pre><code>public static String slurp(final InputStream is, final int bufferSize)\n{\n  final char[] buffer = new char[bufferSize];\n  final StringBuilder out = new StringBuilder();\n  try {\n    final Reader in = new InputStreamReader(is, \"UTF-8\");\n    try {\n      for (;;) {\n        int rsz = in.read(buffer, 0, buffer.length);\n        if (rsz &lt; 0)\n          break;\n        out.append(buffer, 0, rsz);\n      }\n    }\n    finally {\n      in.close();\n    }\n  }\n  catch (UnsupportedEncodingException ex) {\n    /* ... */\n  }\n  catch (IOException ex) {\n      /* ... */\n  }\n  return out.toString();\n}\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1353168508, 
      "comments": [
        {
          "body": "I like how this works without adding more libraries to your project.", 
          "edited": false, 
          "comment_id": 5153461, 
          "creation_date": 1294875396, 
          "post_id": 309718, 
          "score": 53, 
          "body_markdown": "I like how this works without adding more libraries to your project.", 
          "owner": {
            "user_id": 125380, 
            "profile_image": "https://www.gravatar.com/avatar/4c2e7e7267110bb949cbe4aac47190f2?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 9072, 
            "link": "http://stackoverflow.com/users/125380/user1", 
            "accept_rate": 72, 
            "display_name": "User1"
          }
        }, 
        {
          "body": "is there a chance to broke multi-bytes character in this solution?", 
          "edited": false, 
          "comment_id": 10212509, 
          "creation_date": 1322450405, 
          "post_id": 309718, 
          "score": 0, 
          "body_markdown": "is there a chance to broke multi-bytes character in this solution?", 
          "owner": {
            "user_id": 404192, 
            "profile_image": "https://www.gravatar.com/avatar/b9e03f821b5f318af3b570420308932f?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 909, 
            "link": "http://stackoverflow.com/users/404192/liuyan-%e5%88%98%e7%a0%94", 
            "accept_rate": 100, 
            "display_name": "LiuYan \u5218\u7814"
          }
        }, 
        {
          "body": "This solution uses multibyte characters. The example uses the UTF-8 encoding that allows expression of the full unicode range (Including Chinese). Replacing &quot;UTF-8&quot; with another encoding would allow that encoding to be used.", 
          "edited": false, 
          "comment_id": 10449727, 
          "creation_date": 1323472261, 
          "post_id": 309718, 
          "score": 5, 
          "body_markdown": "This solution uses multibyte characters. The example uses the UTF-8 encoding that allows expression of the full unicode range (Including Chinese). Replacing &quot;UTF-8&quot; with another encoding would allow that encoding to be used.", 
          "owner": {
            "user_id": 4100, 
            "profile_image": "https://www.gravatar.com/avatar/f2ffcd63c3f62b86a905ebe89da2c69d?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3793, 
            "link": "http://stackoverflow.com/users/4100/paul-de-vrieze", 
            "display_name": "Paul de Vrieze"
          }
        }, 
        {
          "body": "@User1 - I like using libraries in my code so I can get my job done faster. It&#39;s awesome when your managers say &quot;Wow James! How did you get that done so fast?!&quot;.  But when we have to spend time reinventing the wheel just because we have misplaced ideas about including a common, reusable, tried and tested utility, we&#39;re giving up time we could be spending furthering our project&#39;s goals. When we reinvent the wheel, we work twice as hard yet get to the finish line much later. Once we&#39;re at the finish line, there is no one there to congratulate us. When building a house, don&#39;t build the hammer too", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 125380, 
            "profile_image": "https://www.gravatar.com/avatar/4c2e7e7267110bb949cbe4aac47190f2?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 9072, 
            "link": "http://stackoverflow.com/users/125380/user1", 
            "accept_rate": 72, 
            "display_name": "User1"
          }, 
          "comment_id": 11183057, 
          "creation_date": 1327021548, 
          "post_id": 309718, 
          "score": 11, 
          "body_markdown": "@User1 - I like using libraries in my code so I can get my job done faster. It&#39;s awesome when your managers say &quot;Wow James! How did you get that done so fast?!&quot;.  But when we have to spend time reinventing the wheel just because we have misplaced ideas about including a common, reusable, tried and tested utility, we&#39;re giving up time we could be spending furthering our project&#39;s goals. When we reinvent the wheel, we work twice as hard yet get to the finish line much later. Once we&#39;re at the finish line, there is no one there to congratulate us. When building a house, don&#39;t build the hammer too", 
          "owner": {
            "user_id": 552792, 
            "profile_image": "https://www.gravatar.com/avatar/af668818d6cfecc1a1b008cf599562cd?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18057, 
            "link": "http://stackoverflow.com/users/552792/jmort253", 
            "accept_rate": 50, 
            "display_name": "jmort253"
          }
        }, 
        {
          "body": "Sorry, after re-reading my comment, it comes off a little arrogant.   I just think it&#39;s important to have a good reason to avoid libraries and that the reason is a valid one, which there very well could be :)", 
          "edited": false, 
          "comment_id": 11183344, 
          "creation_date": 1327023357, 
          "post_id": 309718, 
          "score": 3, 
          "body_markdown": "Sorry, after re-reading my comment, it comes off a little arrogant.   I just think it&#39;s important to have a good reason to avoid libraries and that the reason is a valid one, which there very well could be :)", 
          "owner": {
            "user_id": 552792, 
            "profile_image": "https://www.gravatar.com/avatar/af668818d6cfecc1a1b008cf599562cd?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18057, 
            "link": "http://stackoverflow.com/users/552792/jmort253", 
            "accept_rate": 50, 
            "display_name": "jmort253"
          }
        }, 
        {
          "body": "isn&#39;t it better to close stream/streamreader ?", 
          "edited": false, 
          "comment_id": 12652708, 
          "creation_date": 1332965497, 
          "post_id": 309718, 
          "score": 1, 
          "body_markdown": "isn&#39;t it better to close stream/streamreader ?", 
          "owner": {
            "user_id": 73630, 
            "profile_image": "https://www.gravatar.com/avatar/756619af68f0e1a87d8d70036646f7cd?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3128, 
            "link": "http://stackoverflow.com/users/73630/palani", 
            "accept_rate": 70, 
            "display_name": "Palani"
          }
        }, 
        {
          "body": "Yes, I guess the reader should be closed at the end.", 
          "edited": false, 
          "comment_id": 13177767, 
          "creation_date": 1334947047, 
          "post_id": 309718, 
          "score": 0, 
          "body_markdown": "Yes, I guess the reader should be closed at the end.", 
          "owner": {
            "user_id": 4100, 
            "profile_image": "https://www.gravatar.com/avatar/f2ffcd63c3f62b86a905ebe89da2c69d?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3793, 
            "link": "http://stackoverflow.com/users/4100/paul-de-vrieze", 
            "display_name": "Paul de Vrieze"
          }
        }, 
        {
          "body": "@jmort253 Many libraries are large, slow but powerful. However there are many chances that we need a small, fast one. In our product, I even replaced many JDK classes with our own implement.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 552792, 
            "profile_image": "https://www.gravatar.com/avatar/af668818d6cfecc1a1b008cf599562cd?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18057, 
            "link": "http://stackoverflow.com/users/552792/jmort253", 
            "accept_rate": 50, 
            "display_name": "jmort253"
          }, 
          "comment_id": 13590404, 
          "creation_date": 1336545417, 
          "post_id": 309718, 
          "score": 0, 
          "body_markdown": "@jmort253 Many libraries are large, slow but powerful. However there are many chances that we need a small, fast one. In our product, I even replaced many JDK classes with our own implement.", 
          "owner": {
            "user_id": 853599, 
            "profile_image": "https://www.gravatar.com/avatar/a05d4f0059368a056ddf29ef647d591b?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1929, 
            "link": "http://stackoverflow.com/users/853599/coolcfan", 
            "accept_rate": 100, 
            "display_name": "coolcfan"
          }
        }, 
        {
          "body": "@coolcfan - I do agree with you on that point. Sometimes speed is of the utmost importance and is a hard requirement. Many times, good enough is good enough. I question how often we put effort into optimizing something that no one notices. The answer of whether the reward is greater than the cost is a decision not to be taken lightly. Thank you for indicating that there are times when this is necessary.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 853599, 
            "profile_image": "https://www.gravatar.com/avatar/a05d4f0059368a056ddf29ef647d591b?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1929, 
            "link": "http://stackoverflow.com/users/853599/coolcfan", 
            "accept_rate": 100, 
            "display_name": "coolcfan"
          }, 
          "comment_id": 13592533, 
          "creation_date": 1336551812, 
          "post_id": 309718, 
          "score": 0, 
          "body_markdown": "@coolcfan - I do agree with you on that point. Sometimes speed is of the utmost importance and is a hard requirement. Many times, good enough is good enough. I question how often we put effort into optimizing something that no one notices. The answer of whether the reward is greater than the cost is a decision not to be taken lightly. Thank you for indicating that there are times when this is necessary.", 
          "owner": {
            "user_id": 552792, 
            "profile_image": "https://www.gravatar.com/avatar/af668818d6cfecc1a1b008cf599562cd?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18057, 
            "link": "http://stackoverflow.com/users/552792/jmort253", 
            "accept_rate": 50, 
            "display_name": "jmort253"
          }
        }, 
        {
          "body": "@jmort253 We noticed performance regression after updating some library in our product for several times. Luckily we are building and selling our own product so we don&#39;t really have the so called deadlines. Unfortunately we are building a product that is available on many JVMs, databases and app servers on many operation systems so we have to think for the users using poor machines... And a string operation optimizing can improve the perf by 30~40%. And a fix: <code>In our product, I even replaced</code> should be &#39;we even replaced&#39;.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 552792, 
            "profile_image": "https://www.gravatar.com/avatar/af668818d6cfecc1a1b008cf599562cd?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18057, 
            "link": "http://stackoverflow.com/users/552792/jmort253", 
            "accept_rate": 50, 
            "display_name": "jmort253"
          }, 
          "comment_id": 13592873, 
          "creation_date": 1336552791, 
          "post_id": 309718, 
          "score": 1, 
          "body_markdown": "@jmort253 We noticed performance regression after updating some library in our product for several times. Luckily we are building and selling our own product so we don&#39;t really have the so called deadlines. Unfortunately we are building a product that is available on many JVMs, databases and app servers on many operation systems so we have to think for the users using poor machines... And a string operation optimizing can improve the perf by 30~40%. And a fix: `In our product, I even replaced` should be &#39;we even replaced&#39;.", 
          "owner": {
            "user_id": 853599, 
            "profile_image": "https://www.gravatar.com/avatar/a05d4f0059368a056ddf29ef647d591b?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1929, 
            "link": "http://stackoverflow.com/users/853599/coolcfan", 
            "accept_rate": 100, 
            "display_name": "coolcfan"
          }
        }, 
        {
          "body": "@jmort253 If you would already use apache commons I would say, go for it. At the same time, there is a real cost to using libraries (as the dependency proliferation in many apache java libraries shows). If this would be the only use of the library, it would be overkill to use the library. On the other hand, determining your own buffer size(s) you can tune your memory/processor usage balance.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 552792, 
            "profile_image": "https://www.gravatar.com/avatar/af668818d6cfecc1a1b008cf599562cd?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18057, 
            "link": "http://stackoverflow.com/users/552792/jmort253", 
            "accept_rate": 50, 
            "display_name": "jmort253"
          }, 
          "comment_id": 13889527, 
          "creation_date": 1337678197, 
          "post_id": 309718, 
          "score": 4, 
          "body_markdown": "@jmort253 If you would already use apache commons I would say, go for it. At the same time, there is a real cost to using libraries (as the dependency proliferation in many apache java libraries shows). If this would be the only use of the library, it would be overkill to use the library. On the other hand, determining your own buffer size(s) you can tune your memory/processor usage balance.", 
          "owner": {
            "user_id": 4100, 
            "profile_image": "https://www.gravatar.com/avatar/f2ffcd63c3f62b86a905ebe89da2c69d?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3793, 
            "link": "http://stackoverflow.com/users/4100/paul-de-vrieze", 
            "display_name": "Paul de Vrieze"
          }
        }, 
        {
          "body": "I&#39;d like to know, what are reasonable values for the buffer under which circumstances?", 
          "edited": false, 
          "comment_id": 35615087, 
          "creation_date": 1398348550, 
          "post_id": 309718, 
          "score": 0, 
          "body_markdown": "I&#39;d like to know, what are reasonable values for the buffer under which circumstances?", 
          "owner": {
            "user_id": 2306536, 
            "profile_image": "http://i.stack.imgur.com/cnfrU.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 376, 
            "link": "http://stackoverflow.com/users/2306536/traubenfuchs", 
            "accept_rate": 56, 
            "display_name": "Traubenfuchs"
          }
        }, 
        {
          "body": "The best way to determine the buffer is to experiment. Reasonable sizes should be multiples of the block size, which for flash memory can be 128KB.", 
          "edited": false, 
          "comment_id": 35617129, 
          "creation_date": 1398351099, 
          "post_id": 309718, 
          "score": 0, 
          "body_markdown": "The best way to determine the buffer is to experiment. Reasonable sizes should be multiples of the block size, which for flash memory can be 128KB.", 
          "owner": {
            "user_id": 4100, 
            "profile_image": "https://www.gravatar.com/avatar/f2ffcd63c3f62b86a905ebe89da2c69d?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3793, 
            "link": "http://stackoverflow.com/users/4100/paul-de-vrieze", 
            "display_name": "Paul de Vrieze"
          }
        }, 
        {
          "body": "@jmort253 Sometimes there is reasons to avoid libraries. It depends on company and project. Sometimes own implementations are reinventing wheel - then company should use well known solution. But there are cases when you shouldn&#39;t use someones solutions: optimization, <b>copyrights</b>, architecture, etc.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 552792, 
            "profile_image": "https://www.gravatar.com/avatar/af668818d6cfecc1a1b008cf599562cd?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18057, 
            "link": "http://stackoverflow.com/users/552792/jmort253", 
            "accept_rate": 50, 
            "display_name": "jmort253"
          }, 
          "comment_id": 41562519, 
          "creation_date": 1413795395, 
          "post_id": 309718, 
          "score": 0, 
          "body_markdown": "@jmort253 Sometimes there is reasons to avoid libraries. It depends on company and project. Sometimes own implementations are reinventing wheel - then company should use well known solution. But there are cases when you shouldn&#39;t use someones solutions: optimization, **copyrights**, architecture, etc.", 
          "owner": {
            "user_id": 1848553, 
            "profile_image": "http://i.stack.imgur.com/UaJ5j.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 83, 
            "link": "http://stackoverflow.com/users/1848553/pingwin-tux", 
            "display_name": "Pingwin Tux"
          }
        }
      ], 
      "creation_date": 1227292451, 
      "comment_count": 14, 
      "score": 183, 
      "body_markdown": "Taking into account file one should first get a `java.io.Reader` instance. This can then be read and added to a `StringBuilder` (we don&#39;t need `StringBuffer` if we are not accessing it in multiple threads, and `StringBuilder` is faster). The trick here is that we work in blocks, and as such don&#39;t need other buffering streams. The block size is parameterized for run-time performance optimization.\r\n\r\n    public static String slurp(final InputStream is, final int bufferSize)\r\n    {\r\n      final char[] buffer = new char[bufferSize];\r\n      final StringBuilder out = new StringBuilder();\r\n      try {\r\n        final Reader in = new InputStreamReader(is, &quot;UTF-8&quot;);\r\n        try {\r\n          for (;;) {\r\n            int rsz = in.read(buffer, 0, buffer.length);\r\n            if (rsz &lt; 0)\r\n              break;\r\n            out.append(buffer, 0, rsz);\r\n          }\r\n        } // &lt;- inserted missing brace here, but SO doesn&#39;t like 1-char edits\r\n        finally {\r\n          in.close();\r\n        }\r\n      }\r\n      catch (UnsupportedEncodingException ex) {\r\n        /* ... */\r\n      }\r\n      catch (IOException ex) {\r\n          /* ... */\r\n      }\r\n      return out.toString();\r\n    }", 
      "owner": {
        "user_id": 4100, 
        "profile_image": "https://www.gravatar.com/avatar/f2ffcd63c3f62b86a905ebe89da2c69d?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 3793, 
        "link": "http://stackoverflow.com/users/4100/paul-de-vrieze", 
        "display_name": "Paul de Vrieze"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1353168508, 
      "answer_id": 309718
    }, 
    {
      "body": "<p>How about this?</p>\n\n<pre><code>InputStream in = <i>/* your InputStream */</i>;\nInputStreamReader is = new InputStreamReader(in);\nStringBuilder sb=new StringBuilder();\nBufferedReader br = new BufferedReader(is);\nString read = br.readLine();\n\nwhile(read != null) {\n    //System.out.println(read);\n    sb.append(read);\n    read =br.readLine();\n\n}\n\nreturn sb.toString();\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1343706223, 
      "comments": [
        {
          "body": "Doesn&#39;t answer the question. This shows how to iterate over the lines in a stream, not how to read the entire stream into a string.", 
          "edited": false, 
          "comment_id": 12541848, 
          "creation_date": 1332515467, 
          "post_id": 6938341, 
          "score": 2, 
          "body_markdown": "Doesn&#39;t answer the question. This shows how to iterate over the lines in a stream, not how to read the entire stream into a string.", 
          "owner": {
            "user_id": 8871, 
            "profile_image": "https://www.gravatar.com/avatar/99576b8b980bf17e16ce93db9553da0c?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 684, 
            "link": "http://stackoverflow.com/users/8871/andrew", 
            "display_name": "Andrew"
          }
        }, 
        {
          "body": "you can concat all string in to one String.that is simple.....", 
          "edited": false, 
          "comment_id": 12571295, 
          "creation_date": 1332686042, 
          "post_id": 6938341, 
          "score": 8, 
          "body_markdown": "you can concat all string in to one String.that is simple.....", 
          "owner": {
            "user_id": 559185, 
            "profile_image": "https://www.gravatar.com/avatar/2c9beb6f32879d1b6ab533b1c797caaf?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2159, 
            "link": "http://stackoverflow.com/users/559185/sampathpremarathna", 
            "accept_rate": 73, 
            "display_name": "sampathpremarathna"
          }
        }, 
        {
          "body": "The thing is, you&#39;re first splitting into lines, and then undoing that. It&#39;s easier and faster to just read arbitrary buffers.", 
          "edited": false, 
          "comment_id": 13177755, 
          "creation_date": 1334947014, 
          "post_id": 6938341, 
          "score": 6, 
          "body_markdown": "The thing is, you&#39;re first splitting into lines, and then undoing that. It&#39;s easier and faster to just read arbitrary buffers.", 
          "owner": {
            "user_id": 4100, 
            "profile_image": "https://www.gravatar.com/avatar/f2ffcd63c3f62b86a905ebe89da2c69d?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3793, 
            "link": "http://stackoverflow.com/users/4100/paul-de-vrieze", 
            "display_name": "Paul de Vrieze"
          }
        }, 
        {
          "body": "Also, readLine does not distinguish between \\n and \\r, so you cannot reproduce the exact stream again.", 
          "edited": false, 
          "comment_id": 16578682, 
          "creation_date": 1347264482, 
          "post_id": 6938341, 
          "score": 3, 
          "body_markdown": "Also, readLine does not distinguish between \\n and \\r, so you cannot reproduce the exact stream again.", 
          "owner": {
            "user_id": 469932, 
            "profile_image": "https://www.gravatar.com/avatar/cd8f595eae283a4e5ce624d7fea60fae?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 276, 
            "link": "http://stackoverflow.com/users/469932/d%c3%a9lawen", 
            "display_name": "D&#233;lawen"
          }
        }, 
        {
          "body": "@PauldeVrieze how many lines, and how quickly do you need to process them!?  I would hazard a guess that any performance loss would be small, or could be handled by every once in a while logging them to a file and destroying the old String obj&#39;s.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 4100, 
            "profile_image": "https://www.gravatar.com/avatar/f2ffcd63c3f62b86a905ebe89da2c69d?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3793, 
            "link": "http://stackoverflow.com/users/4100/paul-de-vrieze", 
            "display_name": "Paul de Vrieze"
          }, 
          "comment_id": 27166308, 
          "creation_date": 1377672761, 
          "post_id": 6938341, 
          "score": 0, 
          "body_markdown": "@PauldeVrieze how many lines, and how quickly do you need to process them!?  I would hazard a guess that any performance loss would be small, or could be handled by every once in a while logging them to a file and destroying the old String obj&#39;s.", 
          "owner": {
            "user_id": 262852, 
            "profile_image": "https://www.gravatar.com/avatar/e4e17e45f2e8cc967a8695131910f365?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1394, 
            "link": "http://stackoverflow.com/users/262852/thufir", 
            "accept_rate": 71, 
            "display_name": "Thufir"
          }
        }, 
        {
          "body": "very inefficient, as <code>readLine</code> read character by character to look for EOL. Also, if there is no line break in the stream, this does not really make sense.", 
          "edited": false, 
          "comment_id": 35415330, 
          "creation_date": 1397844310, 
          "post_id": 6938341, 
          "score": 0, 
          "body_markdown": "very inefficient, as `readLine` read character by character to look for EOL. Also, if there is no line break in the stream, this does not really make sense.", 
          "owner": {
            "user_id": 671543, 
            "profile_image": "https://www.gravatar.com/avatar/2145962377da9419f2446cd565f614ee?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18404, 
            "link": "http://stackoverflow.com/users/671543/njzk2", 
            "accept_rate": 50, 
            "display_name": "njzk2"
          }
        }
      ], 
      "creation_date": 1312446584, 
      "comment_count": 6, 
      "score": 150, 
      "body_markdown": "How about this?\r\n\r\n&lt;pre&gt;&lt;code&gt;InputStream in = &lt;i&gt;/* your InputStream */&lt;/i&gt;;\r\nInputStreamReader is = new InputStreamReader(in);\r\nStringBuilder sb=new StringBuilder();\r\nBufferedReader br = new BufferedReader(is);\r\nString read = br.readLine();\r\n\r\nwhile(read != null) {\r\n    //System.out.println(read);\r\n    sb.append(read);\r\n    read =br.readLine();\r\n    \r\n}\r\n\r\nreturn sb.toString();\r\n&lt;/code&gt;&lt;/pre&gt;", 
      "owner": {
        "user_id": 559185, 
        "profile_image": "https://www.gravatar.com/avatar/2c9beb6f32879d1b6ab533b1c797caaf?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 2159, 
        "link": "http://stackoverflow.com/users/559185/sampathpremarathna", 
        "accept_rate": 73, 
        "display_name": "sampathpremarathna"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1343706223, 
      "answer_id": 6938341
    }, 
    {
      "body": "<pre><code>Writer writer = null;\n\ntry {\n    writer = new BufferedWriter(new OutputStreamWriter(\n          new FileOutputStream(\"filename.txt\"), \"utf-8\"));\n    writer.write(\"Something\");\n} catch (IOException ex) {\n  // report\n} finally {\n   try {writer.close();} catch (Exception ex) {}\n}\n</code></pre>\n\n<p>See also: <a href=\"http://docs.oracle.com/javase/tutorial/essential/io/file.html\">Reading, Writing, and Creating Files</a> (includes NIO2).</p>\n", 
      "question_id": 2885173, 
      "last_activity_date": 1384125748, 
      "comments": [
        {
          "body": "This is the correct way to right to a text file, though the BufferedWriter filter is not always beneficial, and the encoding should be passed as argument. +1 for specifyng the encoding, though.", 
          "edited": false, 
          "comment_id": 2933227, 
          "creation_date": 1274474626, 
          "post_id": 2885241, 
          "score": 0, 
          "body_markdown": "This is the correct way to right to a text file, though the BufferedWriter filter is not always beneficial, and the encoding should be passed as argument. +1 for specifyng the encoding, though.", 
          "owner": {
            "user_id": 277304, 
            "profile_image": "https://www.gravatar.com/avatar/4c90624b2aa9623d5ba30db0e34b2000?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 28677, 
            "link": "http://stackoverflow.com/users/277304/leonbloy", 
            "accept_rate": 71, 
            "display_name": "leonbloy"
          }
        }, 
        {
          "body": "@leonbloy I know this is an old comment, but if anyone sees this would you mind explaining why is not &quot;always beneficial&quot;? At least here it says &quot;top efficient&quot; <a href=\"http://docs.oracle.com/javase/1.5.0/docs/api/java/io/OutputStreamWriter.html\" rel=\"nofollow\">docs.oracle.com/javase/1.5.0/docs/api/java/io/&hellip;</a>", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 277304, 
            "profile_image": "https://www.gravatar.com/avatar/4c90624b2aa9623d5ba30db0e34b2000?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 28677, 
            "link": "http://stackoverflow.com/users/277304/leonbloy", 
            "accept_rate": 71, 
            "display_name": "leonbloy"
          }, 
          "comment_id": 20792147, 
          "creation_date": 1360690046, 
          "post_id": 2885241, 
          "score": 3, 
          "body_markdown": "@leonbloy I know this is an old comment, but if anyone sees this would you mind explaining why is not &quot;always beneficial&quot;? At least here it says &quot;top efficient&quot; http://docs.oracle.com/javase/1.5.0/docs/api/java/io/OutputStreamWriter.html", 
          "owner": {
            "user_id": 960086, 
            "profile_image": "https://www.gravatar.com/avatar/474f6b5d43bdef8e8d4d1c13df78828c?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 192, 
            "link": "http://stackoverflow.com/users/960086/juan", 
            "accept_rate": 71, 
            "display_name": "Juan"
          }
        }, 
        {
          "body": "Looks like writer doesn&#39;t have a writeln() method. It only has write()", 
          "edited": false, 
          "comment_id": 25605747, 
          "creation_date": 1373549745, 
          "post_id": 2885241, 
          "score": 12, 
          "body_markdown": "Looks like writer doesn&#39;t have a writeln() method. It only has write()", 
          "owner": {
            "user_id": 1028504, 
            "profile_image": "https://www.gravatar.com/avatar/692d3fd8e03c77743fbe65192f5da7fa?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 572, 
            "link": "http://stackoverflow.com/users/1028504/yankeewhiskey", 
            "accept_rate": 100, 
            "display_name": "YankeeWhiskey"
          }
        }, 
        {
          "body": "If you change the type of writer to BufferedWriter (which it actually is), you can use writer.newLine()", 
          "edited": false, 
          "comment_id": 30459277, 
          "creation_date": 1386240480, 
          "post_id": 2885241, 
          "score": 3, 
          "body_markdown": "If you change the type of writer to BufferedWriter (which it actually is), you can use writer.newLine()", 
          "owner": {
            "user_id": 1514174, 
            "profile_image": "https://www.gravatar.com/avatar/aeb1abbeed2652c1aed09d157a21632b?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 188, 
            "link": "http://stackoverflow.com/users/1514174/niek", 
            "accept_rate": 60, 
            "display_name": "Niek"
          }
        }, 
        {
          "body": "It doesn&#39;t seem right to have a try/catch inside a finally. I know the reason why, but it seems like a code smell.", 
          "edited": false, 
          "comment_id": 30529903, 
          "creation_date": 1386384523, 
          "post_id": 2885241, 
          "score": 2, 
          "body_markdown": "It doesn&#39;t seem right to have a try/catch inside a finally. I know the reason why, but it seems like a code smell.", 
          "owner": {
            "user_id": 210780, 
            "profile_image": "https://www.gravatar.com/avatar/87f8ee1956942944fe845a25cb7b1678?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3366, 
            "link": "http://stackoverflow.com/users/210780/ashes999", 
            "accept_rate": 83, 
            "display_name": "ashes999"
          }
        }, 
        {
          "body": "you don&#39;t need to do the close inside finally with addiotnal try/catch. use a &quot;try-with-resources&quot; statement i.e. try(writer = new BufferedWriter...) { ...} catch{} assuming the writer you initialize there implements Closeable interface java will handle the close n its exception behind the scenes", 
          "edited": false, 
          "comment_id": 39911140, 
          "creation_date": 1409260765, 
          "post_id": 2885241, 
          "score": 0, 
          "body_markdown": "you don&#39;t need to do the close inside finally with addiotnal try/catch. use a &quot;try-with-resources&quot; statement i.e. try(writer = new BufferedWriter...) { ...} catch{} assuming the writer you initialize there implements Closeable interface java will handle the close n its exception behind the scenes", 
          "owner": {
            "user_id": 1015292, 
            "profile_image": "https://www.gravatar.com/avatar/51b4d97f56761e094302e27694ff2b7c?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 826, 
            "link": "http://stackoverflow.com/users/1015292/speakingcode", 
            "display_name": "speakingcode"
          }
        }, 
        {
          "body": "Does calling <code>writer.close()</code> also close the <code>OutputStreamWriter</code> and <code>FileOutputStream</code>?", 
          "edited": false, 
          "comment_id": 42376717, 
          "creation_date": 1415896459, 
          "post_id": 2885241, 
          "score": 0, 
          "body_markdown": "Does calling `writer.close()` also close the `OutputStreamWriter` and `FileOutputStream`?", 
          "owner": {
            "user_id": 1916917, 
            "profile_image": "https://www.gravatar.com/avatar/4f93c1f2d2f2bb64e7e6c2d092f5a08a?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 814, 
            "link": "http://stackoverflow.com/users/1916917/trengot", 
            "accept_rate": 50, 
            "display_name": "Trengot"
          }
        }, 
        {
          "body": "@Trengot It does. Calling <code>close()</code> on any stream wrapped around any other will close all inner streams as well.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 1916917, 
            "profile_image": "https://www.gravatar.com/avatar/4f93c1f2d2f2bb64e7e6c2d092f5a08a?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 814, 
            "link": "http://stackoverflow.com/users/1916917/trengot", 
            "accept_rate": 50, 
            "display_name": "Trengot"
          }, 
          "comment_id": 42530620, 
          "creation_date": 1416331405, 
          "post_id": 2885241, 
          "score": 1, 
          "body_markdown": "@Trengot It does. Calling `close()` on any stream wrapped around any other will close all inner streams as well.", 
          "owner": {
            "user_id": 1863564, 
            "profile_image": "http://i.stack.imgur.com/zErob.gif?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 179, 
            "link": "http://stackoverflow.com/users/1863564/newbiedoodle", 
            "accept_rate": 94, 
            "display_name": "newbiedoodle"
          }
        }
      ], 
      "creation_date": 1274472556, 
      "comment_count": 8, 
      "score": 118, 
      "body_markdown": "    Writer writer = null;\r\n\r\n    try {\r\n        writer = new BufferedWriter(new OutputStreamWriter(\r\n              new FileOutputStream(&quot;filename.txt&quot;), &quot;utf-8&quot;));\r\n        writer.write(&quot;Something&quot;);\r\n    } catch (IOException ex) {\r\n      // report\r\n    } finally {\r\n       try {writer.close();} catch (Exception ex) {}\r\n    }\r\n\r\nSee also: &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/essential/io/file.html&quot;&gt;Reading, Writing, and Creating Files&lt;/a&gt; (includes NIO2).", 
      "owner": {
        "user_id": 203907, 
        "profile_image": "https://www.gravatar.com/avatar/8de038497b6b8b67bc82eeaaef1a0b6b?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 289076, 
        "link": "http://stackoverflow.com/users/203907/bozho", 
        "accept_rate": 81, 
        "display_name": "Bozho"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1384125748, 
      "answer_id": 2885241
    }, 
    {
      "body": "<p>Now with Java 7, you can use the following try-with-resource syntax:</p>\n\n<pre><code>public static void copyFile( File from, File to ) throws IOException {\n\n    if ( !to.exists() ) { to.createNewFile(); }\n\n    try (\n        FileChannel in = new FileInputStream( from ).getChannel();\n        FileChannel out = new FileOutputStream( to ).getChannel() ) {\n\n        out.transferFrom( in, 0, in.size() );\n    }\n}\n</code></pre>\n\n<p>Or, better yet, this can also be accomplished using the new Files class introduced in Java 7:</p>\n\n<pre><code>public static void copyFile( File from, File to ) throws IOException {\n    Files.copy( from.toPath(), to.toPath() );\n}\n</code></pre>\n\n<p>Pretty snazzy, eh?</p>\n", 
      "question_id": 106770, 
      "last_activity_date": 1311980512, 
      "comments": [
        {
          "body": "It&#39;s amazing Java hasn&#39;t added things like this before today. Certain operations are just the absolute essentials of writing computer software. The Oracle developers of Java could learn a thing or two from operating systems, looking at what services they provide, to make it EASIER for newbies to migrate over.", 
          "edited": false, 
          "comment_id": 9523204, 
          "creation_date": 1318977035, 
          "post_id": 6863770, 
          "score": 9, 
          "body_markdown": "It&#39;s amazing Java hasn&#39;t added things like this before today. Certain operations are just the absolute essentials of writing computer software. The Oracle developers of Java could learn a thing or two from operating systems, looking at what services they provide, to make it EASIER for newbies to migrate over.", 
          "owner": {
            "user_id": 854840, 
            "profile_image": "https://www.gravatar.com/avatar/c8e761863a2155d6fce1ff3470b6f9d3?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 214, 
            "link": "http://stackoverflow.com/users/854840/rick-hodgin", 
            "accept_rate": 25, 
            "display_name": "Rick Hodgin"
          }
        }, 
        {
          "body": "Ah thanks! I was not aware of the new &quot;Files&quot; class with all of its helper functions. It has exactly what I need. Thanks for the example.", 
          "edited": false, 
          "comment_id": 18603260, 
          "creation_date": 1353976017, 
          "post_id": 6863770, 
          "score": 2, 
          "body_markdown": "Ah thanks! I was not aware of the new &quot;Files&quot; class with all of its helper functions. It has exactly what I need. Thanks for the example.", 
          "owner": {
            "user_id": 875449, 
            "profile_image": "https://www.gravatar.com/avatar/96bfc2ff70e16edd7a05b184ec995054?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1078, 
            "link": "http://stackoverflow.com/users/875449/chriscantrell", 
            "display_name": "ChrisCantrell"
          }
        }, 
        {
          "body": "performance wise, java NIO FileChannel is better, read this article <a href=\"http://www.journaldev.com/861/4-ways-to-copy-file-in-java\" rel=\"nofollow\">journaldev.com/861/4-ways-to-copy-file-in-java</a>", 
          "edited": false, 
          "comment_id": 18803241, 
          "creation_date": 1354581396, 
          "post_id": 6863770, 
          "score": 1, 
          "body_markdown": "performance wise, java NIO FileChannel is better, read this article http://www.journaldev.com/861/4-ways-to-copy-file-in-java", 
          "owner": {
            "user_id": 926520, 
            "profile_image": "https://www.gravatar.com/avatar/0b1387770458c52e6e8eb49a0da58ceb?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1086, 
            "link": "http://stackoverflow.com/users/926520/pankaj", 
            "accept_rate": 71, 
            "display_name": "Pankaj"
          }
        }, 
        {
          "body": "This code has a <i>major</i> problem. transferTo() must be called in a loop. It doesn&#39;t guarantee to transfer the entire amount requested.", 
          "edited": false, 
          "comment_id": 24331968, 
          "creation_date": 1370050237, 
          "post_id": 6863770, 
          "score": 1, 
          "body_markdown": "This code has a *major* problem. transferTo() must be called in a loop. It doesn&#39;t guarantee to transfer the entire amount requested.", 
          "owner": {
            "user_id": 207421, 
            "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 124600, 
            "link": "http://stackoverflow.com/users/207421/ejp", 
            "accept_rate": 80, 
            "display_name": "EJP"
          }
        }, 
        {
          "body": "@Scott: Pete asked for a one-line solution and you&#39;re so close...it&#39;s unnecessary to wrap Files.copy in a copyFile method.  I&#39;d just put the Files.copy(Path from, Path to) at the beginning of your answer and mention that you can use File.toPath() if you have existing File objects: Files.copy(fromFile.toPath(), toFile.toPath())", 
          "edited": false, 
          "comment_id": 24868178, 
          "creation_date": 1371575598, 
          "post_id": 6863770, 
          "score": 0, 
          "body_markdown": "@Scott: Pete asked for a one-line solution and you&#39;re so close...it&#39;s unnecessary to wrap Files.copy in a copyFile method.  I&#39;d just put the Files.copy(Path from, Path to) at the beginning of your answer and mention that you can use File.toPath() if you have existing File objects: Files.copy(fromFile.toPath(), toFile.toPath())", 
          "owner": {
            "user_id": 44737, 
            "profile_image": "https://www.gravatar.com/avatar/b158eb389b4f380aac44b7bd16a08129?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3282, 
            "link": "http://stackoverflow.com/users/44737/rob", 
            "accept_rate": 93, 
            "display_name": "rob"
          }
        }
      ], 
      "creation_date": 1311877355, 
      "comment_count": 5, 
      "score": 105, 
      "body_markdown": "Now with Java 7, you can use the following try-with-resource syntax:\r\n\r\n    public static void copyFile( File from, File to ) throws IOException {\r\n\r\n        if ( !to.exists() ) { to.createNewFile(); }\r\n\r\n        try (\r\n            FileChannel in = new FileInputStream( from ).getChannel();\r\n            FileChannel out = new FileOutputStream( to ).getChannel() ) {\r\n\r\n            out.transferFrom( in, 0, in.size() );\r\n        }\r\n    }\r\n\r\nOr, better yet, this can also be accomplished using the new Files class introduced in Java 7:\r\n\r\n    public static void copyFile( File from, File to ) throws IOException {\r\n        Files.copy( from.toPath(), to.toPath() );\r\n    }\r\n\r\nPretty snazzy, eh?", 
      "owner": {
        "user_id": 868089, 
        "profile_image": "https://www.gravatar.com/avatar/f9916e09320ab73a5db03dcf74cdc4cc?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 1237, 
        "link": "http://stackoverflow.com/users/868089/scott", 
        "display_name": "Scott"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1311980512, 
      "answer_id": 6863770
    }, 
    {
      "body": "<p>If you are using Google-Collections/Guava you could do the following:</p>\n\n<pre><code>InputStream stream = ...\nString content = CharStreams.toString(new InputStreamReader(stream, Charsets.UTF_8));\nCloseables.closeQuietly(stream);\n</code></pre>\n\n<p>Note that the second parameter (i.e. Charsets.UTF_8) for the <code>InputStreamReader</code> isn't necessary, but it is generally a good idea to specify the encoding if you know it (which you should!)</p>\n", 
      "question_id": 309424, 
      "last_activity_date": 1359563754, 
      "comments": [
        {
          "body": "@harschware: Given the question was: &quot;If you have java.io.InputStream object how should you process that object and produce a String?&quot; I assumed that a stream is already present in the situation.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 154461, 
            "profile_image": "https://www.gravatar.com/avatar/6583c6b201d2e2456e2060c91a82250f?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3713, 
            "link": "http://stackoverflow.com/users/154461/harschware", 
            "accept_rate": 91, 
            "display_name": "harschware"
          }, 
          "comment_id": 6439091, 
          "creation_date": 1302687671, 
          "post_id": 3238954, 
          "score": 2, 
          "body_markdown": "@harschware: Given the question was: &quot;If you have java.io.InputStream object how should you process that object and produce a String?&quot; I assumed that a stream is already present in the situation.", 
          "owner": {
            "user_id": 151614, 
            "profile_image": "https://www.gravatar.com/avatar/8befd100204a47f55d422e6d46ee039d?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1368, 
            "link": "http://stackoverflow.com/users/151614/sakuraba", 
            "display_name": "Sakuraba"
          }
        }, 
        {
          "body": "You didn&#39;t explain your answer very well, and had extraneous variables; user359996 said the same thing as you, but much more clearly.", 
          "edited": false, 
          "comment_id": 8761363, 
          "creation_date": 1314915038, 
          "post_id": 3238954, 
          "score": 0, 
          "body_markdown": "You didn&#39;t explain your answer very well, and had extraneous variables; user359996 said the same thing as you, but much more clearly.", 
          "owner": {
            "user_id": 790020, 
            "profile_image": "https://www.gravatar.com/avatar/90f83243ac7fb5de808d4d9826765246?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 71, 
            "link": "http://stackoverflow.com/users/790020/uronym", 
            "accept_rate": 100, 
            "display_name": "Uronym"
          }
        }, 
        {
          "body": "it returns to me boxes instead of actual text characters. plz advise", 
          "edited": false, 
          "comment_id": 9937434, 
          "creation_date": 1321104053, 
          "post_id": 3238954, 
          "score": 0, 
          "body_markdown": "it returns to me boxes instead of actual text characters. plz advise", 
          "owner": {
            "user_id": 135982, 
            "profile_image": "https://www.gravatar.com/avatar/8042c87bcc36d121c2491662220a984d?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 559, 
            "link": "http://stackoverflow.com/users/135982/vik", 
            "accept_rate": 86, 
            "display_name": "Vik"
          }
        }, 
        {
          "body": "+1 for guava, -1 for not specifying the encoding of the input stream. eg. new InputStreamReader(stream, &quot;UTF-8&quot;)", 
          "edited": false, 
          "comment_id": 14965452, 
          "creation_date": 1341572464, 
          "post_id": 3238954, 
          "score": 1, 
          "body_markdown": "+1 for guava, -1 for not specifying the encoding of the input stream. eg. new InputStreamReader(stream, &quot;UTF-8&quot;)", 
          "owner": {
            "user_id": 212013, 
            "profile_image": "https://www.gravatar.com/avatar/89a5f8b8a6a7914896e0af21e05afb79?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1697, 
            "link": "http://stackoverflow.com/users/212013/andras", 
            "display_name": "andras"
          }
        }, 
        {
          "body": "Downvoting as doesn&#39;t close inputstream.", 
          "edited": false, 
          "comment_id": 19582046, 
          "creation_date": 1357224414, 
          "post_id": 3238954, 
          "score": 0, 
          "body_markdown": "Downvoting as doesn&#39;t close inputstream.", 
          "owner": {
            "user_id": 1089998, 
            "profile_image": "https://www.gravatar.com/avatar/250b8239dd3679b13f548ee5cb8aa4b1?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1290, 
            "link": "http://stackoverflow.com/users/1089998/plasma147", 
            "accept_rate": 100, 
            "display_name": "plasma147"
          }
        }, 
        {
          "body": "@plasma147 Instead of downvoting, consider editing the example (I just submitted that, adding <code>Closeables.closeQuietly(stream);</code>)", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 1089998, 
            "profile_image": "https://www.gravatar.com/avatar/250b8239dd3679b13f548ee5cb8aa4b1?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1290, 
            "link": "http://stackoverflow.com/users/1089998/plasma147", 
            "accept_rate": 100, 
            "display_name": "plasma147"
          }, 
          "comment_id": 20398321, 
          "creation_date": 1359563437, 
          "post_id": 3238954, 
          "score": 2, 
          "body_markdown": "@plasma147 Instead of downvoting, consider editing the example (I just submitted that, adding `Closeables.closeQuietly(stream);`)", 
          "owner": {
            "user_id": 218258, 
            "profile_image": "https://www.gravatar.com/avatar/0a263ad123bb5a6fc82989b979c35911?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 434, 
            "link": "http://stackoverflow.com/users/218258/ralfoide", 
            "accept_rate": 86, 
            "display_name": "ralfoide"
          }
        }, 
        {
          "body": "@Chris Noldus On the other hand, some people already have guava in their project, like me, and think this solution is more elegant than the sdk-only version.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 923279, 
            "profile_image": "https://www.gravatar.com/avatar/d2c890458200148cb5c03247e8f9d4c9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 903, 
            "link": "http://stackoverflow.com/users/923279/chris-noldus", 
            "display_name": "Chris Noldus"
          }, 
          "comment_id": 28164562, 
          "creation_date": 1380302416, 
          "post_id": 3238954, 
          "score": 0, 
          "body_markdown": "@Chris Noldus On the other hand, some people already have guava in their project, like me, and think this solution is more elegant than the sdk-only version.", 
          "owner": {
            "user_id": 1313268, 
            "profile_image": "http://i.stack.imgur.com/65NwV.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 2555, 
            "link": "http://stackoverflow.com/users/1313268/coraythan", 
            "accept_rate": 89, 
            "display_name": "CorayThan"
          }
        }, 
        {
          "body": "@Vadzim that answer is the same as this one - both use CharStreams.toString", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 603516, 
            "profile_image": "https://www.gravatar.com/avatar/40895ef337d0a2eb7d538f5f8b3e6d58?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 4953, 
            "link": "http://stackoverflow.com/users/603516/vadzim", 
            "accept_rate": 100, 
            "display_name": "Vadzim"
          }, 
          "comment_id": 39830032, 
          "creation_date": 1409083378, 
          "post_id": 3238954, 
          "score": 0, 
          "body_markdown": "@Vadzim that answer is the same as this one - both use CharStreams.toString", 
          "owner": {
            "user_id": 150016, 
            "profile_image": "http://i.stack.imgur.com/kruqI.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 5214, 
            "link": "http://stackoverflow.com/users/150016/tom", 
            "accept_rate": 70, 
            "display_name": "Tom"
          }
        }, 
        {
          "body": "Note that closeQuietly has been removed from Guava.  See <a href=\"https://code.google.com/p/guava-libraries/issues/detail?id=1118\" rel=\"nofollow\">code.google.com/p/guava-libraries/issues/detail?id=1118</a>", 
          "edited": false, 
          "comment_id": 39830045, 
          "creation_date": 1409083406, 
          "post_id": 3238954, 
          "score": 1, 
          "body_markdown": "Note that closeQuietly has been removed from Guava.  See https://code.google.com/p/guava-libraries/issues/detail?id=1118", 
          "owner": {
            "user_id": 150016, 
            "profile_image": "http://i.stack.imgur.com/kruqI.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 5214, 
            "link": "http://stackoverflow.com/users/150016/tom", 
            "accept_rate": 70, 
            "display_name": "Tom"
          }
        }, 
        {
          "body": "If the inputStream is inside of the doPost of a servlet, you don&#39;t have to close the inputStream do you?", 
          "edited": false, 
          "comment_id": 41028824, 
          "creation_date": 1412284464, 
          "post_id": 3238954, 
          "score": 0, 
          "body_markdown": "If the inputStream is inside of the doPost of a servlet, you don&#39;t have to close the inputStream do you?", 
          "owner": {
            "user_id": 1368, 
            "profile_image": "http://i.stack.imgur.com/nxfH8.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 3943, 
            "link": "http://stackoverflow.com/users/1368/public-static", 
            "accept_rate": 41, 
            "display_name": "public static"
          }
        }
      ], 
      "creation_date": 1279036584, 
      "comment_count": 10, 
      "score": 83, 
      "body_markdown": "If you are using Google-Collections/Guava you could do the following:\r\n\r\n    InputStream stream = ...\r\n    String content = CharStreams.toString(new InputStreamReader(stream, Charsets.UTF_8));\r\n    Closeables.closeQuietly(stream);\r\n\r\nNote that the second parameter (i.e. Charsets.UTF_8) for the `InputStreamReader` isn&#39;t necessary, but it is generally a good idea to specify the encoding if you know it (which you should!)", 
      "owner": {
        "user_id": 151614, 
        "profile_image": "https://www.gravatar.com/avatar/8befd100204a47f55d422e6d46ee039d?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 1368, 
        "link": "http://stackoverflow.com/users/151614/sakuraba", 
        "display_name": "Sakuraba"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1359563754, 
      "answer_id": 3238954
    }, 
    {
      "body": "<p>This is my pure Java &amp; Android solution, works well...</p>\n\n<pre><code>public String readFully(InputStream inputStream, String encoding)\n        throws IOException {\n    return new String(readFully(inputStream), encoding);\n}    \n\nprivate byte[] readFully(InputStream inputStream)\n        throws IOException {\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    byte[] buffer = new byte[1024];\n    int length = 0;\n    while ((length = inputStream.read(buffer)) != -1) {\n        baos.write(buffer, 0, length);\n    }\n    return baos.toByteArray();\n}\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1406934196, 
      "comments": [
        {
          "body": "Works well on Android in comparison with other answers which work only in enterprise java.", 
          "edited": false, 
          "comment_id": 19906876, 
          "creation_date": 1358191826, 
          "post_id": 10505933, 
          "score": 1, 
          "body_markdown": "Works well on Android in comparison with other answers which work only in enterprise java.", 
          "owner": {
            "user_id": 427225, 
            "profile_image": "https://www.gravatar.com/avatar/289a587fcdbac4b49c7aa6e6c7112dbb?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 9666, 
            "link": "http://stackoverflow.com/users/427225/vorrtex", 
            "display_name": "vorrtex"
          }
        }, 
        {
          "body": "That&#39;s where it came from... My Android tools library :)", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 427225, 
            "profile_image": "https://www.gravatar.com/avatar/289a587fcdbac4b49c7aa6e6c7112dbb?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 9666, 
            "link": "http://stackoverflow.com/users/427225/vorrtex", 
            "display_name": "vorrtex"
          }, 
          "comment_id": 20089088, 
          "creation_date": 1358723665, 
          "post_id": 10505933, 
          "score": 1, 
          "body_markdown": "That&#39;s where it came from... My Android tools library :)", 
          "owner": {
            "user_id": 348189, 
            "profile_image": "https://www.gravatar.com/avatar/29b1970e8e3ec8cbd13bbc02a8d7a22c?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2689, 
            "link": "http://stackoverflow.com/users/348189/tacb0ss", 
            "accept_rate": 87, 
            "display_name": "TacB0sS"
          }
        }, 
        {
          "body": "Crashed in Android with OutOfMemory error on the &quot;.write&quot; line, every time, for short strings.", 
          "edited": false, 
          "comment_id": 22851706, 
          "creation_date": 1366046334, 
          "post_id": 10505933, 
          "score": 0, 
          "body_markdown": "Crashed in Android with OutOfMemory error on the &quot;.write&quot; line, every time, for short strings.", 
          "owner": {
            "user_id": 153422, 
            "profile_image": "https://www.gravatar.com/avatar/8033fa6d00ea3c5a231a31ca1989fd78?s=128&d=identicon&r=PG&f=1", 
            "user_type": "registered", 
            "reputation": 19147, 
            "link": "http://stackoverflow.com/users/153422/adam", 
            "accept_rate": 51, 
            "display_name": "Adam"
          }
        }, 
        {
          "body": "What on earth do you copy...??? I copy 5 - 10 mb files easy...", 
          "edited": false, 
          "comment_id": 24004305, 
          "creation_date": 1369177304, 
          "post_id": 10505933, 
          "score": 0, 
          "body_markdown": "What on earth do you copy...??? I copy 5 - 10 mb files easy...", 
          "owner": {
            "user_id": 348189, 
            "profile_image": "https://www.gravatar.com/avatar/29b1970e8e3ec8cbd13bbc02a8d7a22c?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2689, 
            "link": "http://stackoverflow.com/users/348189/tacb0ss", 
            "accept_rate": 87, 
            "display_name": "TacB0sS"
          }
        }, 
        {
          "body": "Please specify the encoding - it&#39;s a very common bug", 
          "edited": false, 
          "comment_id": 26144883, 
          "creation_date": 1374941262, 
          "post_id": 10505933, 
          "score": 5, 
          "body_markdown": "Please specify the encoding - it&#39;s a very common bug", 
          "owner": {
            "user_id": 281545, 
            "profile_image": "https://www.gravatar.com/avatar/e9afcf11d81904cdb5677c13d249b6c5?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 5138, 
            "link": "http://stackoverflow.com/users/281545/mr-and-mrs-d", 
            "accept_rate": 81, 
            "display_name": "Mr_and_Mrs_D"
          }
        }, 
        {
          "body": "I&#39;ve added the encoding. just as a side note, the original readFully method I have in my code does not return String, it returns byte[] for a more general purpose functionality. Implementing the new String(...) with encoding is the responsibility of the on that uses the API!", 
          "edited": false, 
          "comment_id": 26847605, 
          "creation_date": 1376823007, 
          "post_id": 10505933, 
          "score": 0, 
          "body_markdown": "I&#39;ve added the encoding. just as a side note, the original readFully method I have in my code does not return String, it returns byte[] for a more general purpose functionality. Implementing the new String(...) with encoding is the responsibility of the on that uses the API!", 
          "owner": {
            "user_id": 348189, 
            "profile_image": "https://www.gravatar.com/avatar/29b1970e8e3ec8cbd13bbc02a8d7a22c?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2689, 
            "link": "http://stackoverflow.com/users/348189/tacb0ss", 
            "accept_rate": 87, 
            "display_name": "TacB0sS"
          }
        }, 
        {
          "body": "Quick note: The memory footprint of this is maxed by <code>2*n</code>, where n is the size of the stream, as per the <code>ByteArrayInputStream</code> auto-growing system.", 
          "edited": false, 
          "comment_id": 35415405, 
          "creation_date": 1397844432, 
          "post_id": 10505933, 
          "score": 0, 
          "body_markdown": "Quick note: The memory footprint of this is maxed by `2*n`, where n is the size of the stream, as per the `ByteArrayInputStream` auto-growing system.", 
          "owner": {
            "user_id": 671543, 
            "profile_image": "https://www.gravatar.com/avatar/2145962377da9419f2446cd565f614ee?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18404, 
            "link": "http://stackoverflow.com/users/671543/njzk2", 
            "accept_rate": 50, 
            "display_name": "njzk2"
          }
        }, 
        {
          "body": "@njzk2 Could you please elaborate... I&#39;m not sure how an InputStream has any effect...?", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 671543, 
            "profile_image": "https://www.gravatar.com/avatar/2145962377da9419f2446cd565f614ee?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18404, 
            "link": "http://stackoverflow.com/users/671543/njzk2", 
            "accept_rate": 50, 
            "display_name": "njzk2"
          }, 
          "comment_id": 36200620, 
          "creation_date": 1399757400, 
          "post_id": 10505933, 
          "score": 0, 
          "body_markdown": "@njzk2 Could you please elaborate... I&#39;m not sure how an InputStream has any effect...?", 
          "owner": {
            "user_id": 348189, 
            "profile_image": "https://www.gravatar.com/avatar/29b1970e8e3ec8cbd13bbc02a8d7a22c?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2689, 
            "link": "http://stackoverflow.com/users/348189/tacb0ss", 
            "accept_rate": 87, 
            "display_name": "TacB0sS"
          }
        }
      ], 
      "creation_date": 1336508651, 
      "comment_count": 8, 
      "score": 48, 
      "body_markdown": "This is my pure Java &amp; Android solution, works well...\r\n\r\n    public String readFully(InputStream inputStream, String encoding)\r\n    \t\tthrows IOException {\r\n        return new String(readFully(inputStream), encoding);\r\n    }    \r\n\r\n    private byte[] readFully(InputStream inputStream)\r\n    \t\tthrows IOException {\r\n    \tByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n    \tbyte[] buffer = new byte[1024];\r\n    \tint length = 0;\r\n    \twhile ((length = inputStream.read(buffer)) != -1) {\r\n            baos.write(buffer, 0, length);\r\n    \t}\r\n    \treturn baos.toByteArray();\r\n    }", 
      "owner": {
        "user_id": 348189, 
        "profile_image": "https://www.gravatar.com/avatar/29b1970e8e3ec8cbd13bbc02a8d7a22c?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 2689, 
        "link": "http://stackoverflow.com/users/348189/tacb0ss", 
        "accept_rate": 87, 
        "display_name": "TacB0sS"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1406934196, 
      "answer_id": 10505933
    }, 
    {
      "body": "<p><strong>Java 7:</strong></p>\n\n<pre><code>      long bytes = java.nio.Files.copy( \n                       new java.io.File(\"&lt;filepath1&gt;\").toPath(), \n                       new java.io.File(\"&lt;filepath2&gt;\").toPath(),\n                       java.nio.file.StandardCopyOption.REPLACE_EXISTING,\n                       java.nio.file.StandardCopyOption.COPY_ATTRIBUTES\n                       java.nio.file.LinkOption.NOFOLLOW_LINKS );\n</code></pre>\n\n<ul>\n<li><p><strong>performance-engineered (integrates with operating system native I/O)</strong></p></li>\n<li><p><strong>works with files, directories and links</strong></p></li>\n<li><p><strong>each of the options is... err, <em>optional</em> :)</strong> </p></li>\n<li><p><strong>to move a file/dir (options again optional):</strong> </p>\n\n<pre><code>  long bytes = java.nio.Files.move( \n                   new java.io.File(\"&lt;filepath1&gt;\").toPath(), \n                   new java.io.File(\"&lt;filepath2&gt;\").toPath(),\n                   java.nio.file.StandardCopyOption.ATOMIC_MOVE,\n                   java.nio.file.StandardCopyOption.REPLACE_EXISTING );\n</code></pre></li>\n<li><p><strong>for recursive directory copy:</strong></p>\n\n<pre><code>  long bytes = com.yourcompany.nio.Files.copyRecursive( \n                   new java.io.File(\"&lt;filepath1&gt;\").toPath(), \n                   new java.io.File(\"&lt;filepath2&gt;\").toPath(),\n                   java.nio.file.StandardCopyOption.REPLACE_EXISTING,\n                   java.nio.file.StandardCopyOption.COPY_ATTRIBUTES\n                   java.nio.file.LinkOption.NOFOLLOW_LINKS );\n</code></pre>\n\n<p><strong>where you have the utility class:</strong></p>\n\n<pre><code>package com.yourcompany.nio;\n\nclass Files {\n\n    static int copyRecursive(Path source, Path target, boolean prompt, CopyOptions options...) {\n        CopyVisitor copyVisitor = new CopyVisitor(source, target, options).copy();\n        EnumSet&lt;FileVisitOption&gt; fileVisitOpts;\n        if (Arrays.toList(options).contains(java.nio.file.LinkOption.NOFOLLOW_LINKS) {\n            fileVisitOpts = EnumSet.noneOf(FileVisitOption.class) \n        } else {\n            fileVisitOpts = EnumSet.of(FileVisitOption.FOLLOW_LINKS);\n        }\n        Files.walkFileTree(source[i], fileVisitOpts, Integer.MAX_VALUE, copyVisitor);\n    }\n\n    private class CopyVisitor implements FileVisitor&lt;Path&gt;  {\n        final Path source;\n        final Path target;\n        final CopyOptions[] options;\n\n        CopyVisitor(Path source, Path target, CopyOptions options...) {\n             this.source = source;  this.target = target;  this.options = options;\n        };\n\n        @Override\n        FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) {\n        // before visiting entries in a directory we copy the directory\n        // (okay if directory already exists).\n        Path newdir = target.resolve(source.relativize(dir));\n        try {\n            Files.copy(dir, newdir, options);\n        } catch (FileAlreadyExistsException x) {\n            // ignore\n        } catch (IOException x) {\n            System.err.format(\"Unable to create: %s: %s%n\", newdir, x);\n            return SKIP_SUBTREE;\n        }\n        return CONTINUE;\n    }\n\n    @Override\n    public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) {\n        Path newfile= target.resolve(source.relativize(file));\n        try {\n            Files.copy(file, newfile, options);\n        } catch (IOException x) {\n            System.err.format(\"Unable to copy: %s: %s%n\", source, x);\n        }\n        return CONTINUE;\n    }\n\n    @Override\n    public FileVisitResult postVisitDirectory(Path dir, IOException exc) {\n        // fix up modification time of directory when done\n        if (exc == null &amp;&amp; Arrays.toList(options).contains(COPY_ATTRIBUTES)) {\n            Path newdir = target.resolve(source.relativize(dir));\n            try {\n                FileTime time = Files.getLastModifiedTime(dir);\n                Files.setLastModifiedTime(newdir, time);\n            } catch (IOException x) {\n                System.err.format(\"Unable to copy all attributes to: %s: %s%n\", newdir, x);\n            }\n        }\n        return CONTINUE;\n    }\n\n    @Override\n    public FileVisitResult visitFileFailed(Path file, IOException exc) {\n        if (exc instanceof FileSystemLoopException) {\n            System.err.println(\"cycle detected: \" + file);\n        } else {\n            System.err.format(\"Unable to copy: %s: %s%n\", file, exc);\n        }\n        return CONTINUE;\n    }\n}\n</code></pre></li>\n</ul>\n", 
      "question_id": 106770, 
      "last_activity_date": 1368760161, 
      "creation_date": 1368760161, 
      "comment_count": 0, 
      "score": 47, 
      "body_markdown": "**Java 7:**\r\n\r\n          long bytes = java.nio.Files.copy( \r\n                           new java.io.File(&quot;&lt;filepath1&gt;&quot;).toPath(), \r\n                           new java.io.File(&quot;&lt;filepath2&gt;&quot;).toPath(),\r\n                           java.nio.file.StandardCopyOption.REPLACE_EXISTING,\r\n                           java.nio.file.StandardCopyOption.COPY_ATTRIBUTES\r\n                           java.nio.file.LinkOption.NOFOLLOW_LINKS );\r\n\r\n- **performance-engineered (integrates with operating system native I/O)**\r\n\r\n- **works with files, directories and links**\r\n\r\n- **each of the options is... err, *optional* :)** \r\n\r\n- **to move a file/dir (options again optional):** \r\n\r\n          long bytes = java.nio.Files.move( \r\n                           new java.io.File(&quot;&lt;filepath1&gt;&quot;).toPath(), \r\n                           new java.io.File(&quot;&lt;filepath2&gt;&quot;).toPath(),\r\n                           java.nio.file.StandardCopyOption.ATOMIC_MOVE,\r\n                           java.nio.file.StandardCopyOption.REPLACE_EXISTING );\r\n\r\n- **for recursive directory copy:**\r\n\r\n          long bytes = com.yourcompany.nio.Files.copyRecursive( \r\n                           new java.io.File(&quot;&lt;filepath1&gt;&quot;).toPath(), \r\n                           new java.io.File(&quot;&lt;filepath2&gt;&quot;).toPath(),\r\n                           java.nio.file.StandardCopyOption.REPLACE_EXISTING,\r\n                           java.nio.file.StandardCopyOption.COPY_ATTRIBUTES\r\n                           java.nio.file.LinkOption.NOFOLLOW_LINKS );\r\n\r\n   **where you have the utility class:**\r\n\r\n        package com.yourcompany.nio;\r\n\r\n        class Files {\r\n\r\n            static int copyRecursive(Path source, Path target, boolean prompt, CopyOptions options...) {\r\n                CopyVisitor copyVisitor = new CopyVisitor(source, target, options).copy();\r\n                EnumSet&lt;FileVisitOption&gt; fileVisitOpts;\r\n                if (Arrays.toList(options).contains(java.nio.file.LinkOption.NOFOLLOW_LINKS) {\r\n                    fileVisitOpts = EnumSet.noneOf(FileVisitOption.class) \r\n                } else {\r\n                    fileVisitOpts = EnumSet.of(FileVisitOption.FOLLOW_LINKS);\r\n                }\r\n                Files.walkFileTree(source[i], fileVisitOpts, Integer.MAX_VALUE, copyVisitor);\r\n            }\r\n\r\n            private class CopyVisitor implements FileVisitor&lt;Path&gt;  {\r\n                final Path source;\r\n                final Path target;\r\n                final CopyOptions[] options;\r\n\r\n                CopyVisitor(Path source, Path target, CopyOptions options...) {\r\n                     this.source = source;  this.target = target;  this.options = options;\r\n                };\r\n\r\n                @Override\r\n                FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) {\r\n                // before visiting entries in a directory we copy the directory\r\n                // (okay if directory already exists).\r\n                Path newdir = target.resolve(source.relativize(dir));\r\n                try {\r\n                    Files.copy(dir, newdir, options);\r\n                } catch (FileAlreadyExistsException x) {\r\n                    // ignore\r\n                } catch (IOException x) {\r\n                    System.err.format(&quot;Unable to create: %s: %s%n&quot;, newdir, x);\r\n                    return SKIP_SUBTREE;\r\n                }\r\n                return CONTINUE;\r\n            }\r\n\r\n            @Override\r\n            public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) {\r\n                Path newfile= target.resolve(source.relativize(file));\r\n                try {\r\n                    Files.copy(file, newfile, options);\r\n                } catch (IOException x) {\r\n                    System.err.format(&quot;Unable to copy: %s: %s%n&quot;, source, x);\r\n                }\r\n                return CONTINUE;\r\n            }\r\n\r\n            @Override\r\n            public FileVisitResult postVisitDirectory(Path dir, IOException exc) {\r\n                // fix up modification time of directory when done\r\n                if (exc == null &amp;&amp; Arrays.toList(options).contains(COPY_ATTRIBUTES)) {\r\n                    Path newdir = target.resolve(source.relativize(dir));\r\n                    try {\r\n                        FileTime time = Files.getLastModifiedTime(dir);\r\n                        Files.setLastModifiedTime(newdir, time);\r\n                    } catch (IOException x) {\r\n                        System.err.format(&quot;Unable to copy all attributes to: %s: %s%n&quot;, newdir, x);\r\n                    }\r\n                }\r\n                return CONTINUE;\r\n            }\r\n\r\n            @Override\r\n            public FileVisitResult visitFileFailed(Path file, IOException exc) {\r\n                if (exc instanceof FileSystemLoopException) {\r\n                    System.err.println(&quot;cycle detected: &quot; + file);\r\n                } else {\r\n                    System.err.format(&quot;Unable to copy: %s: %s%n&quot;, file, exc);\r\n                }\r\n                return CONTINUE;\r\n            }\r\n        }\r\n\r\n \r\n", 
      "owner": {
        "user_id": 1528401, 
        "profile_image": "http://i.stack.imgur.com/VsfsM.jpg?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 12176, 
        "link": "http://stackoverflow.com/users/1528401/glen-best", 
        "display_name": "Glen Best"
      }, 
      "is_accepted": false, 
      "answer_id": 16600787
    }, 
    {
      "body": "<pre><code>public class Program {\n    public static void main(String[] args) {\n        String text = \"Hello world\";\n        try {\n          File file = new File(\"example.txt\");\n          BufferedWriter output = new BufferedWriter(new FileWriter(file));\n          output.write(text);\n          output.close();\n        } catch ( IOException e ) {\n           e.printStackTrace();\n        }\n    }\n}\n</code></pre>\n", 
      "question_id": 2885173, 
      "last_activity_date": 1274472567, 
      "comments": [
        {
          "body": "Wouldn&#39;t it be better to put output.close() in a finally block?", 
          "edited": false, 
          "comment_id": 42119345, 
          "creation_date": 1415232019, 
          "post_id": 2885243, 
          "score": 1, 
          "body_markdown": "Wouldn&#39;t it be better to put output.close() in a finally block?", 
          "owner": {
            "user_id": 562222, 
            "profile_image": "https://www.gravatar.com/avatar/d9c93381a9aa785b6fce90659875d704?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2376, 
            "link": "http://stackoverflow.com/users/562222/qed", 
            "accept_rate": 59, 
            "display_name": "qed"
          }
        }
      ], 
      "creation_date": 1274472567, 
      "comment_count": 1, 
      "score": 31, 
      "body_markdown": "    public class Program {\r\n        public static void main(String[] args) {\r\n            String text = &quot;Hello world&quot;;\r\n            try {\r\n              File file = new File(&quot;example.txt&quot;);\r\n              BufferedWriter output = new BufferedWriter(new FileWriter(file));\r\n              output.write(text);\r\n              output.close();\r\n            } catch ( IOException e ) {\r\n               e.printStackTrace();\r\n            }\r\n        }\r\n    }", 
      "owner": {
        "user_id": 65070, 
        "profile_image": "http://i.stack.imgur.com/oK3oC.jpg?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 41688, 
        "link": "http://stackoverflow.com/users/65070/eric-petroelje", 
        "accept_rate": 82, 
        "display_name": "Eric Petroelje"
      }, 
      "is_accepted": false, 
      "answer_id": 2885243
    }, 
    {
      "body": "<p>Here's the most elegant, pure-Java (no library) solution I came up with after some experimentation:</p>\n\n<pre><code>public static String fromStream(InputStream in) throws IOException\n{\n    BufferedReader reader = new BufferedReader(new InputStreamReader(in));\n    StringBuilder out = new StringBuilder();\n    String newLine = System.getProperty(\"line.separator\");\n    String line;\n    while ((line = reader.readLine()) != null) {\n        out.append(line);\n        out.append(newLine);\n    }\n    return out.toString();\n}\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1386434370, 
      "comments": [
        {
          "body": "Isn&#39;t there a reader.close() missing? Ideally with try/finally...", 
          "edited": false, 
          "comment_id": 24358453, 
          "creation_date": 1370181051, 
          "post_id": 14107694, 
          "score": 1, 
          "body_markdown": "Isn&#39;t there a reader.close() missing? Ideally with try/finally...", 
          "owner": {
            "user_id": 1836528, 
            "profile_image": "https://www.gravatar.com/avatar/32337a87c4578945f5ab7f116930c27e?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1278, 
            "link": "http://stackoverflow.com/users/1836528/torben-kohlmeier", 
            "display_name": "Torben Kohlmeier"
          }
        }, 
        {
          "body": "@TorbenKohlmeier, readers and buffers don&#39;t need to be closed. The provided <code>InputStream</code> should be closed by the caller.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 1836528, 
            "profile_image": "https://www.gravatar.com/avatar/32337a87c4578945f5ab7f116930c27e?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1278, 
            "link": "http://stackoverflow.com/users/1836528/torben-kohlmeier", 
            "display_name": "Torben Kohlmeier"
          }, 
          "comment_id": 24380426, 
          "creation_date": 1370259454, 
          "post_id": 14107694, 
          "score": 3, 
          "body_markdown": "@TorbenKohlmeier, readers and buffers don&#39;t need to be closed. The provided `InputStream` should be closed by the caller.", 
          "owner": {
            "user_id": 24874, 
            "profile_image": "https://www.gravatar.com/avatar/b85169daf0d165b94ea4fa70f409686c?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 77634, 
            "link": "http://stackoverflow.com/users/24874/drew-noakes", 
            "accept_rate": 80, 
            "display_name": "Drew Noakes"
          }
        }, 
        {
          "body": "Don&#39;t forget to mention that there&#39;s a more preferable constructor in InputStreamReader that takes a CharSet.", 
          "edited": false, 
          "comment_id": 25162283, 
          "creation_date": 1372336617, 
          "post_id": 14107694, 
          "score": 3, 
          "body_markdown": "Don&#39;t forget to mention that there&#39;s a more preferable constructor in InputStreamReader that takes a CharSet.", 
          "owner": {
            "user_id": 541755, 
            "profile_image": "https://www.gravatar.com/avatar/8ba5f8d1fd128c235860a1847f8356c3?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 830, 
            "link": "http://stackoverflow.com/users/541755/jontejj", 
            "accept_rate": 67, 
            "display_name": "jontejj"
          }
        }, 
        {
          "body": "why do people keep using <code>readLine</code>? if you don&#39;t use the lines per se, what good is it (except being very slow?)", 
          "edited": false, 
          "comment_id": 35415434, 
          "creation_date": 1397844474, 
          "post_id": 14107694, 
          "score": 2, 
          "body_markdown": "why do people keep using `readLine`? if you don&#39;t use the lines per se, what good is it (except being very slow?)", 
          "owner": {
            "user_id": 671543, 
            "profile_image": "https://www.gravatar.com/avatar/2145962377da9419f2446cd565f614ee?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18404, 
            "link": "http://stackoverflow.com/users/671543/njzk2", 
            "accept_rate": 50, 
            "display_name": "njzk2"
          }
        }, 
        {
          "body": "Do not read by lines. What if one line is so long so it does not fit into heap?", 
          "edited": false, 
          "comment_id": 39204486, 
          "creation_date": 1407403740, 
          "post_id": 14107694, 
          "score": 0, 
          "body_markdown": "Do not read by lines. What if one line is so long so it does not fit into heap?", 
          "owner": {
            "user_id": 2019710, 
            "profile_image": "https://www.gravatar.com/avatar/4e11575d5b2617abf49952ed766ee2fc?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 224, 
            "link": "http://stackoverflow.com/users/2019710/voho", 
            "display_name": "voho"
          }
        }, 
        {
          "body": "@voho, if one line is that long, then there&#39;s no way to allocate the return value anyway which must be equal or greater in size to that line. If you&#39;re dealing with files that large, you should stream them. There are plenty of use cases for loading small text files into memory though.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 2019710, 
            "profile_image": "https://www.gravatar.com/avatar/4e11575d5b2617abf49952ed766ee2fc?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 224, 
            "link": "http://stackoverflow.com/users/2019710/voho", 
            "display_name": "voho"
          }, 
          "comment_id": 39210493, 
          "creation_date": 1407413787, 
          "post_id": 14107694, 
          "score": 0, 
          "body_markdown": "@voho, if one line is that long, then there&#39;s no way to allocate the return value anyway which must be equal or greater in size to that line. If you&#39;re dealing with files that large, you should stream them. There are plenty of use cases for loading small text files into memory though.", 
          "owner": {
            "user_id": 24874, 
            "profile_image": "https://www.gravatar.com/avatar/b85169daf0d165b94ea4fa70f409686c?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 77634, 
            "link": "http://stackoverflow.com/users/24874/drew-noakes", 
            "accept_rate": 80, 
            "display_name": "Drew Noakes"
          }
        }, 
        {
          "body": "@DrewNoakes You are right, I just wanted to point out. At school we had one assignment where we communicated through TCP using a simple text protocol (lines with commands) and sometimes a random very long string was sent to the clients just to test if students are coping with unexpected long values correctly.", 
          "edited": false, 
          "comment_id": 39213675, 
          "creation_date": 1407418452, 
          "post_id": 14107694, 
          "score": 0, 
          "body_markdown": "@DrewNoakes You are right, I just wanted to point out. At school we had one assignment where we communicated through TCP using a simple text protocol (lines with commands) and sometimes a random very long string was sent to the clients just to test if students are coping with unexpected long values correctly.", 
          "owner": {
            "user_id": 2019710, 
            "profile_image": "https://www.gravatar.com/avatar/4e11575d5b2617abf49952ed766ee2fc?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 224, 
            "link": "http://stackoverflow.com/users/2019710/voho", 
            "display_name": "voho"
          }
        }
      ], 
      "creation_date": 1357011827, 
      "comment_count": 7, 
      "score": 31, 
      "body_markdown": "Here&#39;s the most elegant, pure-Java (no library) solution I came up with after some experimentation:\r\n\r\n    public static String fromStream(InputStream in) throws IOException\r\n    {\r\n        BufferedReader reader = new BufferedReader(new InputStreamReader(in));\r\n        StringBuilder out = new StringBuilder();\r\n        String newLine = System.getProperty(&quot;line.separator&quot;);\r\n        String line;\r\n        while ((line = reader.readLine()) != null) {\r\n            out.append(line);\r\n            out.append(newLine);\r\n        }\r\n        return out.toString();\r\n    }", 
      "owner": {
        "user_id": 24874, 
        "profile_image": "https://www.gravatar.com/avatar/b85169daf0d165b94ea4fa70f409686c?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 77634, 
        "link": "http://stackoverflow.com/users/24874/drew-noakes", 
        "accept_rate": 80, 
        "display_name": "Drew Noakes"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1386434370, 
      "answer_id": 14107694
    }, 
    {
      "body": "<p>How about:</p>\n\n<pre><code>import java.io.BufferedInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.InputStream;\nimport java.io.IOException;    \n\npublic static String readInputStreamAsString(InputStream in) \n    throws IOException {\n\n    BufferedInputStream bis = new BufferedInputStream(in);\n    ByteArrayOutputStream buf = new ByteArrayOutputStream();\n    int result = bis.read();\n    while(result != -1) {\n      byte b = (byte)result;\n      buf.write(b);\n      result = bis.read();\n    }        \n    return buf.toString();\n}\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1244668031, 
      "creation_date": 1244668031, 
      "comment_count": 0, 
      "score": 24, 
      "body_markdown": "How about:\r\n\r\n    import java.io.BufferedInputStream;\r\n    import java.io.ByteArrayOutputStream;\r\n    import java.io.InputStream;\r\n    import java.io.IOException;    \r\n    \r\n    public static String readInputStreamAsString(InputStream in) \r\n        throws IOException {\r\n\r\n        BufferedInputStream bis = new BufferedInputStream(in);\r\n        ByteArrayOutputStream buf = new ByteArrayOutputStream();\r\n        int result = bis.read();\r\n        while(result != -1) {\r\n          byte b = (byte)result;\r\n          buf.write(b);\r\n          result = bis.read();\r\n        }        \r\n        return buf.toString();\r\n    }", 
      "owner": {
        "user_id": 57541, 
        "profile_image": "https://www.gravatar.com/avatar/bd3af9eb947124b522c7ff962ea80eab?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 726, 
        "link": "http://stackoverflow.com/users/57541/jon-moore", 
        "display_name": "Jon Moore"
      }, 
      "is_accepted": false, 
      "answer_id": 978162
    }, 
    {
      "body": "<p>As an alternative to the Commons libraries, Google's excellent <a href=\"http://code.google.com/p/guava-libraries/\">guava-libraries</a> let you do this fairly concisely; given an <em>InputStream</em> named <em>inputStream</em>:</p>\n\n<pre><code>import com.google.common.io.CharStreams;\n\nCharStreams.toString( new InputStreamReader( inputStream ));\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1300987830, 
      "comments": [
        {
          "body": "Note this method is particularly convenient if, instead of an <b>InputStream</b>, you have a <b>Reader</b>. For example, if you&#39;re getting the body of an HTTP request via <b>HttpServletRequest.getReader()</b>, it&#39;s just <b>CharStreams.toString( request.getReader() )</b>.", 
          "edited": false, 
          "comment_id": 6138165, 
          "creation_date": 1300988207, 
          "post_id": 5373359, 
          "score": 3, 
          "body_markdown": "Note this method is particularly convenient if, instead of an **InputStream**, you have a **Reader**. For example, if you&#39;re getting the body of an HTTP request via **HttpServletRequest.getReader()**, it&#39;s just **CharStreams.toString( request.getReader() )**.", 
          "owner": {
            "user_id": 359996, 
            "profile_image": "https://www.gravatar.com/avatar/f91adaf94d50d1cdecbf2f97147d6218?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3102, 
            "link": "http://stackoverflow.com/users/359996/user359996", 
            "display_name": "user359996"
          }
        }, 
        {
          "body": "CharStreams.toString won&#39;t close reader and stream.", 
          "edited": false, 
          "comment_id": 40097429, 
          "creation_date": 1409815887, 
          "post_id": 5373359, 
          "score": 0, 
          "body_markdown": "CharStreams.toString won&#39;t close reader and stream.", 
          "owner": {
            "user_id": 125562, 
            "profile_image": "https://www.gravatar.com/avatar/4a30d80da0251566510318d1cae8fd8f?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 4736, 
            "link": "http://stackoverflow.com/users/125562/basilevs", 
            "accept_rate": 68, 
            "display_name": "Basilevs"
          }
        }, 
        {
          "body": "Indeed! That seems pretty silly of them. Know a similarly tidy way to put it in a one-liner, but actually close it?", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 125562, 
            "profile_image": "https://www.gravatar.com/avatar/4a30d80da0251566510318d1cae8fd8f?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 4736, 
            "link": "http://stackoverflow.com/users/125562/basilevs", 
            "accept_rate": 68, 
            "display_name": "Basilevs"
          }, 
          "comment_id": 40948724, 
          "creation_date": 1412097808, 
          "post_id": 5373359, 
          "score": 0, 
          "body_markdown": "Indeed! That seems pretty silly of them. Know a similarly tidy way to put it in a one-liner, but actually close it?", 
          "owner": {
            "user_id": 359996, 
            "profile_image": "https://www.gravatar.com/avatar/f91adaf94d50d1cdecbf2f97147d6218?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3102, 
            "link": "http://stackoverflow.com/users/359996/user359996", 
            "display_name": "user359996"
          }
        }
      ], 
      "creation_date": 1300675902, 
      "comment_count": 3, 
      "score": 22, 
      "body_markdown": "As an alternative to the Commons libraries, Google&#39;s excellent [guava-libraries][1] let you do this fairly concisely; given an *InputStream* named *inputStream*:\r\n\r\n    import com.google.common.io.CharStreams;\r\n   \r\n    CharStreams.toString( new InputStreamReader( inputStream ));\r\n\r\n  [1]: http://code.google.com/p/guava-libraries/ &quot;guava-libraries&quot;", 
      "owner": {
        "user_id": 359996, 
        "profile_image": "https://www.gravatar.com/avatar/f91adaf94d50d1cdecbf2f97147d6218?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 3102, 
        "link": "http://stackoverflow.com/users/359996/user359996", 
        "display_name": "user359996"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1300987830, 
      "answer_id": 5373359
    }, 
    {
      "body": "<p>Here's a little example program to create or overwrite a file. It's the long version so it can be understood more easily.</p>\n\n<pre><code>import java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.io.Writer;\n\npublic class writer {\n    public void writing() {\n        try {\n            //Whatever the file path is.\n            File statText = new File(\"E:/Java/Reference/bin/images/statsTest.txt\");\n            FileOutputStream is = new FileOutputStream(statText);\n            OutputStreamWriter osw = new OutputStreamWriter(is);    \n            Writer w = new BufferedWriter(osw);\n            w.write(\"POTATO!!!\");\n            w.close();\n        } catch (IOException e) {\n            System.err.println(\"Problem writing to the file statsTest.txt\");\n        }\n    }\n\n    public static void main(String[]args) {\n        writer write = new writer();\n        write.writing();\n    }\n}\n</code></pre>\n", 
      "question_id": 2885173, 
      "last_activity_date": 1416255764, 
      "creation_date": 1365530717, 
      "comment_count": 0, 
      "score": 21, 
      "body_markdown": "Here&#39;s a little example program to create or overwrite a file. It&#39;s the long version so it can be understood more easily.\r\n\r\n    import java.io.BufferedWriter;\r\n    import java.io.File;\r\n    import java.io.FileOutputStream;\r\n    import java.io.IOException;\r\n    import java.io.OutputStreamWriter;\r\n    import java.io.Writer;\r\n\r\n    public class writer {\r\n\t\tpublic void writing() {\r\n\t\t\ttry {\r\n\t\t\t\t//Whatever the file path is.\r\n\t\t\t\tFile statText = new File(&quot;E:/Java/Reference/bin/images/statsTest.txt&quot;);\r\n\t\t\t\tFileOutputStream is = new FileOutputStream(statText);\r\n\t\t\t\tOutputStreamWriter osw = new OutputStreamWriter(is);\t\r\n\t\t\t\tWriter w = new BufferedWriter(osw);\r\n\t\t\t\tw.write(&quot;POTATO!!!&quot;);\r\n\t\t\t\tw.close();\r\n\t\t\t} catch (IOException e) {\r\n\t\t  \t\tSystem.err.println(&quot;Problem writing to the file statsTest.txt&quot;);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tpublic static void main(String[]args) {\r\n\t\t\twriter write = new writer();\r\n\t\t\twrite.writing();\r\n\t\t}\r\n\t}", 
      "owner": {
        "user_id": 2249930, 
        "profile_image": "https://www.gravatar.com/avatar/206a04b3c6a1174c6733665db4e32c6d?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 221, 
        "link": "http://stackoverflow.com/users/2249930/draeven", 
        "display_name": "Draeven"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1416255764, 
      "answer_id": 15909287
    }, 
    {
      "body": "<p>Note that all of these mechanisms only copy the contents of the file, not the metadata such as permissions. So if you were to copy or move an executable .sh file on linux the new file would not be executable. </p>\n\n<p>In order to truly a copy or move a file, ie to get the same result as copying from a command line, you actually need to use a native tool. Either a shell script or JNI. </p>\n\n<p>Apparently, this might be fixed in java 7 - <a href=\"http://today.java.net/pub/a/today/2008/07/03/jsr-203-new-file-apis.html\">http://today.java.net/pub/a/today/2008/07/03/jsr-203-new-file-apis.html</a>. Fingers crossed!</p>\n", 
      "question_id": 106770, 
      "last_activity_date": 1222141109, 
      "creation_date": 1222141109, 
      "comment_count": 0, 
      "score": 17, 
      "body_markdown": "Note that all of these mechanisms only copy the contents of the file, not the metadata such as permissions. So if you were to copy or move an executable .sh file on linux the new file would not be executable. \r\n\r\nIn order to truly a copy or move a file, ie to get the same result as copying from a command line, you actually need to use a native tool. Either a shell script or JNI. \r\n\r\nApparently, this might be fixed in java 7 - http://today.java.net/pub/a/today/2008/07/03/jsr-203-new-file-apis.html. Fingers crossed!", 
      "owner": {
        "user_id": 17025, 
        "profile_image": "https://www.gravatar.com/avatar/11a70039458a265fba3ccc0fcce20331?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 830, 
        "link": "http://stackoverflow.com/users/17025/brad", 
        "display_name": "brad"
      }, 
      "is_accepted": false, 
      "answer_id": 118978
    }, 
    {
      "body": "<p>Google's Guava library also has a <a href=\"http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/io/Files.html#copy%28java.io.File,%20java.io.File%29\">copy method</a>:</p>\n\n<p><PRE>\npublic static void <B>copy</B>(<A HREF=\"http://download.oracle.com/javase/6/docs/api/java/io/File.html?is-external=true\">File</A>&nbsp;from,\n                        <A HREF=\"http://download.oracle.com/javase/6/docs/api/java/io/File.html?is-external=true\">File</A>&nbsp;to)\n                 throws <A HREF=\"http://download.oracle.com/javase/6/docs/api/java/io/IOException.html?is-external=true\">IOException</A></PRE>\n<DL>\n<DD>Copies all the bytes from one file to another.</p>\n\n<p><p><b>Warning:</b> If <code>to</code> represents an existing file, that file\n will be overwritten with the contents of <code>from</code>. If <code>to</code> and\n <code>from</code> refer to the <i>same</i> file, the contents of that file\n will be deleted.\n<P>\n<DL>\n<P><B>Parameters:</B><CODE>from</CODE> - the source file<CODE>to</CODE> - the destination file</P>\n<P><B>Throws:</B>\n<CODE><A HREF=\"http://download.oracle.com/javase/6/docs/api/java/io/IOException.html?is-external=true\">IOException</A></CODE> - if an I/O error occurs\n<CODE><A HREF=\"http://download.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true\">IllegalArgumentException</A></CODE> - if <code>from.equals(to)</code></DL>\n</DD>\n</DL></p>\n", 
      "question_id": 106770, 
      "last_activity_date": 1346940342, 
      "creation_date": 1278346639, 
      "comment_count": 0, 
      "score": 16, 
      "body_markdown": "Google&#39;s Guava library also has a [copy method][1]:\r\n\r\n\r\n&lt;PRE&gt;\r\npublic static void &lt;A HREF=&quot;../../../../src-html/com/google/common/io/Files.html#line.317&quot;&gt;&lt;B&gt;copy&lt;/B&gt;&lt;/A&gt;(&lt;A HREF=&quot;http://download.oracle.com/javase/6/docs/api/java/io/File.html?is-external=true&quot; title=&quot;class or interface in java.io&quot;&gt;File&lt;/A&gt;&amp;nbsp;from,\r\n                        &lt;A HREF=&quot;http://download.oracle.com/javase/6/docs/api/java/io/File.html?is-external=true&quot; title=&quot;class or interface in java.io&quot;&gt;File&lt;/A&gt;&amp;nbsp;to)\r\n                 throws &lt;A HREF=&quot;http://download.oracle.com/javase/6/docs/api/java/io/IOException.html?is-external=true&quot; title=&quot;class or interface in java.io&quot;&gt;IOException&lt;/A&gt;&lt;/PRE&gt;\r\n&lt;DL&gt;\r\n&lt;DD&gt;Copies all the bytes from one file to another.\r\n\r\n &lt;p&gt;&lt;b&gt;Warning:&lt;/b&gt; If &lt;code&gt;to&lt;/code&gt; represents an existing file, that file\r\n will be overwritten with the contents of &lt;code&gt;from&lt;/code&gt;. If &lt;code&gt;to&lt;/code&gt; and\r\n &lt;code&gt;from&lt;/code&gt; refer to the &lt;i&gt;same&lt;/i&gt; file, the contents of that file\r\n will be deleted.\r\n&lt;P&gt;\r\n&lt;DD&gt;&lt;DL&gt;\r\n&lt;P&gt;&lt;DT&gt;&lt;B&gt;Parameters:&lt;/B&gt;&lt;DD&gt;&lt;CODE&gt;from&lt;/CODE&gt; - the source file&lt;DD&gt;&lt;CODE&gt;to&lt;/CODE&gt; - the destination file&lt;/P&gt;\r\n&lt;DT&gt;&lt;P&gt;&lt;B&gt;Throws:&lt;/B&gt;\r\n&lt;DD&gt;&lt;CODE&gt;&lt;A HREF=&quot;http://download.oracle.com/javase/6/docs/api/java/io/IOException.html?is-external=true&quot; title=&quot;class or interface in java.io&quot;&gt;IOException&lt;/A&gt;&lt;/CODE&gt; - if an I/O error occurs\r\n&lt;DD&gt;&lt;CODE&gt;&lt;A HREF=&quot;http://download.oracle.com/javase/6/docs/api/java/lang/IllegalArgumentException.html?is-external=true&quot; title=&quot;class or interface in java.lang&quot;&gt;IllegalArgumentException&lt;/A&gt;&lt;/CODE&gt; - if &lt;code&gt;from.equals(to)&lt;/code&gt;&lt;/DL&gt;\r\n&lt;/DD&gt;\r\n&lt;/DL&gt;\r\n\r\n\r\n  [1]: http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/io/Files.html#copy%28java.io.File,%20java.io.File%29", 
      "owner": {
        "user_id": 52687, 
        "profile_image": "https://www.gravatar.com/avatar/f8003cec2ffaffe82adfe0a4440d02e9?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 1016, 
        "link": "http://stackoverflow.com/users/52687/andrew-mckinlay", 
        "accept_rate": 80, 
        "display_name": "Andrew McKinlay"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1346940342, 
      "answer_id": 3180908
    }, 
    {
      "body": "<p>Here's more-or-less sampath's answer, cleaned up a bit and represented as a function:</p>\n\n<pre><code>String streamToString(InputStream in) throws IOException {\n  StringBuilder out = new StringBuilder();\n  BufferedReader br = new BufferedReader(new InputStreamReader(in));\n  for(String line = br.readLine(); line != null; line = br.readLine()) \n    out.append(line);\n  br.close();\n  return out.toString();\n}\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1347474672, 
      "comments": [
        {
          "body": "again no encoding", 
          "edited": false, 
          "comment_id": 26144915, 
          "creation_date": 1374941362, 
          "post_id": 9949592, 
          "score": 3, 
          "body_markdown": "again no encoding", 
          "owner": {
            "user_id": 281545, 
            "profile_image": "https://www.gravatar.com/avatar/e9afcf11d81904cdb5677c13d249b6c5?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 5138, 
            "link": "http://stackoverflow.com/users/281545/mr-and-mrs-d", 
            "accept_rate": 81, 
            "display_name": "Mr_and_Mrs_D"
          }
        }
      ], 
      "creation_date": 1333137151, 
      "comment_count": 1, 
      "score": 16, 
      "body_markdown": "Here&#39;s more-or-less sampath&#39;s answer, cleaned up a bit and represented as a function:\r\n\r\n    String streamToString(InputStream in) throws IOException {\r\n      StringBuilder out = new StringBuilder();\r\n      BufferedReader br = new BufferedReader(new InputStreamReader(in));\r\n      for(String line = br.readLine(); line != null; line = br.readLine()) \r\n        out.append(line);\r\n      br.close();\r\n      return out.toString();\r\n    }", 
      "owner": {
        "user_id": 458244, 
        "profile_image": "https://www.gravatar.com/avatar/37b1a2f47e378dd6f511c21ea5ed506e?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 378, 
        "link": "http://stackoverflow.com/users/458244/tkh", 
        "display_name": "TKH"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1347474672, 
      "answer_id": 9949592
    }, 
    {
      "body": "<pre><code>try (Writer writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(\"myFile.txt\"), \"utf-8\"))) {\n    writer.write(\"text to write\");\n} catch (IOException ex){\n    // handle me\n}  \n</code></pre>\n\n<p>Using <code>try()</code> will close stream automatically. This version is short, fast (buffered) and enables choosing encoding.</p>\n", 
      "question_id": 2885173, 
      "last_activity_date": 1366382130, 
      "comments": [
        {
          "body": "It should be noted this is a Java 7 feature, so will not work in previous versions of Java.", 
          "edited": false, 
          "comment_id": 37004633, 
          "creation_date": 1401780840, 
          "post_id": 16107128, 
          "score": 2, 
          "body_markdown": "It should be noted this is a Java 7 feature, so will not work in previous versions of Java.", 
          "owner": {
            "user_id": 2508646, 
            "profile_image": "https://www.gravatar.com/avatar/c61253d190c2fea8498fffdb9abdf5d6?s=128&d=identicon&r=PG&f=1", 
            "user_type": "registered", 
            "reputation": 1412, 
            "link": "http://stackoverflow.com/users/2508646/dan-temple", 
            "accept_rate": 100, 
            "display_name": "Dan Temple"
          }
        }
      ], 
      "creation_date": 1366382130, 
      "comment_count": 1, 
      "score": 16, 
      "body_markdown": "    try (Writer writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(&quot;myFile.txt&quot;), &quot;utf-8&quot;))) {\r\n    \twriter.write(&quot;text to write&quot;);\r\n    } catch (IOException ex){\r\n    \t// handle me\r\n    }  \r\n  \r\nUsing `try()` will close stream automatically. This version is short, fast (buffered) and enables choosing encoding.", 
      "owner": {
        "user_id": 1376947, 
        "profile_image": "https://www.gravatar.com/avatar/c215741166bea0c837f32a8c9cdb5ff2?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 405, 
        "link": "http://stackoverflow.com/users/1376947/klerik", 
        "display_name": "klerik"
      }, 
      "is_accepted": false, 
      "answer_id": 16107128
    }, 
    {
      "body": "<p>Please Search <a href=\"http://www.google.com\">Google</a> given to the world by Larry Page and Sergey Brin.</p>\n\n<pre><code>BufferedWriter out = null;\ntry  \n{\n    FileWriter fstream = new FileWriter(\"out.txt\", true); //true tells to append data.\n    out = new BufferedWriter(fstream);\n    out.write(\"\\nsue\");\n}\ncatch (IOException e)\n{\n    System.err.println(\"Error: \" + e.getMessage());\n}\nfinally\n{\n    if(out != null) {\n        out.close();\n    }\n}\n</code></pre>\n", 
      "question_id": 10667734, 
      "last_activity_date": 1384488442, 
      "comments": [
        {
          "body": "sorry @Hovercraft Full Of Eels I did not see your post ....  I went somewhere, came back and posted without watching...", 
          "edited": false, 
          "comment_id": 13838850, 
          "creation_date": 1337452478, 
          "post_id": 10667865, 
          "score": 0, 
          "body_markdown": "sorry @Hovercraft Full Of Eels I did not see your post ....  I went somewhere, came back and posted without watching...", 
          "owner": {
            "user_id": 1357811, 
            "profile_image": "https://www.gravatar.com/avatar/1c42af49b7f7979d2cf125ee204da901?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 928, 
            "link": "http://stackoverflow.com/users/1357811/addicted", 
            "accept_rate": 100, 
            "display_name": "Addicted"
          }
        }, 
        {
          "body": "No hay ning&#250;n problema.", 
          "edited": false, 
          "comment_id": 13839217, 
          "creation_date": 1337454823, 
          "post_id": 10667865, 
          "score": 0, 
          "body_markdown": "No hay ning&#250;n problema.", 
          "owner": {
            "user_id": 522444, 
            "profile_image": "https://www.gravatar.com/avatar/16b6783e9b99b1199c75761eaf5c0685?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 166559, 
            "link": "http://stackoverflow.com/users/522444/hovercraft-full-of-eels", 
            "accept_rate": 100, 
            "display_name": "Hovercraft Full Of Eels"
          }
        }, 
        {
          "body": "Funny how this is now the first search result when searching for &quot;java open file&quot;.", 
          "edited": false, 
          "comment_id": 30079745, 
          "creation_date": 1385309853, 
          "post_id": 10667865, 
          "score": 5, 
          "body_markdown": "Funny how this is now the first search result when searching for &quot;java open file&quot;.", 
          "owner": {
            "user_id": 192741, 
            "profile_image": "https://www.gravatar.com/avatar/8104cab15bae7570a20cf96fd4a70916?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 6194, 
            "link": "http://stackoverflow.com/users/192741/franz", 
            "accept_rate": 79, 
            "display_name": "Franz"
          }
        }, 
        {
          "body": "and it is still half a year later...", 
          "edited": false, 
          "comment_id": 35315611, 
          "creation_date": 1397637124, 
          "post_id": 10667865, 
          "score": 0, 
          "body_markdown": "and it is still half a year later...", 
          "owner": {
            "user_id": 1785437, 
            "profile_image": "http://i.stack.imgur.com/xYazF.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 317, 
            "link": "http://stackoverflow.com/users/1785437/jakob", 
            "accept_rate": 100, 
            "display_name": "Jakob"
          }
        }
      ], 
      "creation_date": 1337452354, 
      "comment_count": 4, 
      "score": 15, 
      "body_markdown": "Please Search [Google](http://www.google.com) given to the world by Larry Page and Sergey Brin.\r\n\r\n    BufferedWriter out = null;\r\n    try  \r\n    {\r\n        FileWriter fstream = new FileWriter(&quot;out.txt&quot;, true); //true tells to append data.\r\n        out = new BufferedWriter(fstream);\r\n        out.write(&quot;\\nsue&quot;);\r\n    }\r\n    catch (IOException e)\r\n    {\r\n        System.err.println(&quot;Error: &quot; + e.getMessage());\r\n    }\r\n    finally\r\n    {\r\n        if(out != null) {\r\n            out.close();\r\n        }\r\n    }", 
      "owner": {
        "user_id": 1357811, 
        "profile_image": "https://www.gravatar.com/avatar/1c42af49b7f7979d2cf125ee204da901?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 928, 
        "link": "http://stackoverflow.com/users/1357811/addicted", 
        "accept_rate": 100, 
        "display_name": "Addicted"
      }, 
      "is_accepted": true, 
      "last_edit_date": 1384488442, 
      "answer_id": 10667865
    }, 
    {
      "body": "<p>Available as standard in Java 7, path.copyTo:\n<a href=\"http://openjdk.java.net/projects/nio/javadoc/java/nio/file/Path.html\">http://openjdk.java.net/projects/nio/javadoc/java/nio/file/Path.html</a>\nhttp://java.sun.com/docs/books/tutorial/essential/io/copy.html</p>\n\n<p>I can't believe it took them so long to standardise something so common and simple as file  copying :(</p>\n", 
      "question_id": 106770, 
      "last_activity_date": 1275381224, 
      "comments": [
        {
          "body": "There is no Path.copyTo; it is Files.copy.", 
          "edited": false, 
          "comment_id": 12091861, 
          "creation_date": 1330736393, 
          "post_id": 2948268, 
          "score": 7, 
          "body_markdown": "There is no Path.copyTo; it is Files.copy.", 
          "owner": {
            "user_id": 12916, 
            "profile_image": "https://www.gravatar.com/avatar/53ab525063e3831bc781fa56af4181a5?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 4328, 
            "link": "http://stackoverflow.com/users/12916/jesse-glick", 
            "accept_rate": 27, 
            "display_name": "Jesse Glick"
          }
        }
      ], 
      "creation_date": 1275381224, 
      "comment_count": 1, 
      "score": 14, 
      "body_markdown": "Available as standard in Java 7, path.copyTo:\r\nhttp://openjdk.java.net/projects/nio/javadoc/java/nio/file/Path.html\r\nhttp://java.sun.com/docs/books/tutorial/essential/io/copy.html\r\n\r\nI can&#39;t believe it took them so long to standardise something so common and simple as file  copying :(", 
      "owner": {
        "user_id": 355204, 
        "profile_image": "https://www.gravatar.com/avatar/042c9bec46d36d16e6f84d48f90c2e42?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 157, 
        "link": "http://stackoverflow.com/users/355204/ryan", 
        "display_name": "Ryan"
      }, 
      "is_accepted": false, 
      "answer_id": 2948268
    }, 
    {
      "body": "<p>If you already have the content you want to write to the file (and not generated on the fly), the <code>java.nio.file.Files</code> addition in Java 7 as part of native I/O provides the simplest and most efficient way to achieve your goals.</p>\n\n<p>Basically creating and writing to a file is one line only, moreover <strong>one simple method call</strong>!</p>\n\n<p>The following example creates and writes to 6 different files to showcase how it can be used:</p>\n\n<pre><code>Charset utf8 = StandardCharsets.UTF_8;\nList&lt;String&gt; lines = Arrays.asList(\"1st line\", \"2nd line\");\nbyte[] data = { 1, 2, 3, 4, 5 };\n\ntry {\n    Files.write(Paths.get(\"file1.bin\"), data);\n    Files.write(Paths.get(\"file2.bin\"), data,\n            StandardOpenOption.CREATE, StandardOpenOption.APPEND);\n    Files.write(Paths.get(\"file3.txt\"), \"content\".getBytes());\n    Files.write(Paths.get(\"file4.txt\"), \"content\".getBytes(utf8));\n    Files.write(Paths.get(\"file5.txt\"), lines, utf8);\n    Files.write(Paths.get(\"file6.txt\"), lines, utf8,\n            StandardOpenOption.CREATE, StandardOpenOption.APPEND);\n} catch (IOException e) {\n    e.printStackTrace();\n}\n</code></pre>\n", 
      "question_id": 2885173, 
      "last_activity_date": 1398176209, 
      "comments": [
        {
          "body": "Yeah I agree this is a better solution for Java 8 than the ones that received millions of votes above.", 
          "edited": false, 
          "comment_id": 37394344, 
          "creation_date": 1402722307, 
          "post_id": 23221771, 
          "score": 0, 
          "body_markdown": "Yeah I agree this is a better solution for Java 8 than the ones that received millions of votes above.", 
          "owner": {
            "user_id": 1392690, 
            "profile_image": "http://i.stack.imgur.com/9c5Wg.png?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 1345, 
            "link": "http://stackoverflow.com/users/1392690/johnmerlino", 
            "accept_rate": 79, 
            "display_name": "JohnMerlino"
          }
        }
      ], 
      "creation_date": 1398175288, 
      "comment_count": 1, 
      "score": 14, 
      "body_markdown": "If you already have the content you want to write to the file (and not generated on the fly), the `java.nio.file.Files` addition in Java 7 as part of native I/O provides the simplest and most efficient way to achieve your goals.\r\n\r\nBasically creating and writing to a file is one line only, moreover **one simple method call**!\r\n\r\nThe following example creates and writes to 6 different files to showcase how it can be used:\r\n\r\n\r\n    Charset utf8 = StandardCharsets.UTF_8;\r\n    List&lt;String&gt; lines = Arrays.asList(&quot;1st line&quot;, &quot;2nd line&quot;);\r\n    byte[] data = { 1, 2, 3, 4, 5 };\r\n\r\n    try {\r\n        Files.write(Paths.get(&quot;file1.bin&quot;), data);\r\n        Files.write(Paths.get(&quot;file2.bin&quot;), data,\r\n                StandardOpenOption.CREATE, StandardOpenOption.APPEND);\r\n        Files.write(Paths.get(&quot;file3.txt&quot;), &quot;content&quot;.getBytes());\r\n        Files.write(Paths.get(&quot;file4.txt&quot;), &quot;content&quot;.getBytes(utf8));\r\n        Files.write(Paths.get(&quot;file5.txt&quot;), lines, utf8);\r\n        Files.write(Paths.get(&quot;file6.txt&quot;), lines, utf8,\r\n                StandardOpenOption.CREATE, StandardOpenOption.APPEND);\r\n    } catch (IOException e) {\r\n        e.printStackTrace();\r\n    }", 
      "owner": {
        "user_id": 1705598, 
        "profile_image": "http://i.stack.imgur.com/aTFoe.jpg?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 12754, 
        "link": "http://stackoverflow.com/users/1705598/icza", 
        "accept_rate": 83, 
        "display_name": "icza"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1398176209, 
      "answer_id": 23221771
    }, 
    {
      "body": "<p>If you wish to have a relatively pain-free experience you can also have a look at the <a href=\"http://commons.apache.org/io/\">Apache Commons IO package</a>, more specifically the <a href=\"http://commons.apache.org/proper/commons-io/javadocs/api-release/index.html?org/apache/commons/io/FileUtils.html\"><code>FileUtils</code> class</a>.</p>\n\n<p>Never forget to check third-party libraries. <a href=\"http://www.joda.org/joda-time/\">Joda-Time</a> for date manipulation, <a href=\"http://commons.apache.org/proper/commons-lang/javadocs/api-3.2.1/index.html?org/apache/commons/lang3/StringUtils.html\">Apache Commons Lang <code>StringUtils</code></a> for common string operations and such can make your code more readable. </p>\n\n<p>Java is a great language, but the standard library is sometimes a bit low-level. Powerful, but low-level nonetheless.</p>\n", 
      "question_id": 2885173, 
      "last_activity_date": 1391125260, 
      "comments": [
        {
          "body": "The simplest file-writing method in <code>FileUtils</code> is <a href=\"http://commons.apache.org/proper/commons-io/javadocs/api-release/org/apache/commons/io/FileUtils.html#write(java.io.File,%20java.lang.CharSequence)\" rel=\"nofollow\"><code>static void write(File file, CharSequence data)</code></a>. Example usage: <code>import org.apache.commons.io.FileUtils;</code> <code>FileUtils.write(new File(&quot;example.txt&quot;), &quot;string with data&quot;);</code>. <code>FileUtils</code> also has <a href=\"http://commons.apache.org/proper/commons-io/javadocs/api-release/org/apache/commons/io/FileUtils.html#writeLines(java.io.File,%20java.util.Collection)\" rel=\"nofollow\"><code>writeLines</code></a>, which takes a <code>Collection</code> of lines.", 
          "edited": false, 
          "comment_id": 32403382, 
          "creation_date": 1391125868, 
          "post_id": 2885254, 
          "score": 0, 
          "body_markdown": "The simplest file-writing method in `FileUtils` is [`static void write(File file, CharSequence data)`](http://commons.apache.org/proper/commons-io/javadocs/api-release/org/apache/commons/io/FileUtils.html#write(java.io.File,%20java.lang.CharSequence)). Example usage: `import org.apache.commons.io.FileUtils;` `FileUtils.write(new File(&quot;example.txt&quot;), &quot;string with data&quot;);`. `FileUtils` also has [`writeLines`](http://commons.apache.org/proper/commons-io/javadocs/api-release/org/apache/commons/io/FileUtils.html#writeLines(java.io.File,%20java.util.Collection)), which takes a `Collection` of lines.", 
          "owner": {
            "user_id": 578288, 
            "profile_image": "https://www.gravatar.com/avatar/5b2b185c814bb25f2f95a1152e58f033?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 5591, 
            "link": "http://stackoverflow.com/users/578288/rory-okane", 
            "accept_rate": 83, 
            "display_name": "Rory O&#39;Kane"
          }
        }
      ], 
      "creation_date": 1274472649, 
      "comment_count": 1, 
      "score": 12, 
      "body_markdown": "If you wish to have a relatively pain-free experience you can also have a look at the [Apache Commons IO package][1], more specifically the [`FileUtils` class][2].\r\n\r\nNever forget to check third-party libraries. [Joda-Time](http://www.joda.org/joda-time/) for date manipulation, [Apache Commons Lang `StringUtils`][3] for common string operations and such can make your code more readable. \r\n\r\nJava is a great language, but the standard library is sometimes a bit low-level. Powerful, but low-level nonetheless.\r\n\r\n\r\n  [1]: http://commons.apache.org/io/\r\n  [2]: http://commons.apache.org/proper/commons-io/javadocs/api-release/index.html?org/apache/commons/io/FileUtils.html\r\n  [3]: http://commons.apache.org/proper/commons-lang/javadocs/api-3.2.1/index.html?org/apache/commons/lang3/StringUtils.html", 
      "owner": {
        "user_id": 24582, 
        "profile_image": "https://www.gravatar.com/avatar/729b33d5aa9b07da2c359a325bebb6ad?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 13649, 
        "link": "http://stackoverflow.com/users/24582/extraneon", 
        "display_name": "extraneon"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1391125260, 
      "answer_id": 2885254
    }, 
    {
      "body": "<p>I ran some timing tests because time matters, always.<br/></p>\n\n<p>I attempted to get the response into a String 3 different ways. (shown below)<br/>\nI left out try/catch blocks for the sake readability.<br/></p>\n\n<p>To give context, this is the preceding code for all 3 approaches:<br/></p>\n\n<pre><code>   String response;\n   String url = \"www.blah.com/path?key=value\";\n   GetMethod method = new GetMethod(url);\n   int status = client.executeMethod(method);\n</code></pre>\n\n<p>1)<br/></p>\n\n<pre><code> response = method.getResponseBodyAsString();\n</code></pre>\n\n<p>2)<br/></p>\n\n<pre><code>InputStream resp = method.getResponseBodyAsStream();\nInputStreamReader is=new InputStreamReader(resp);\nBufferedReader br=new BufferedReader(is);\nString read = null;\nStringBuffer sb = new StringBuffer(read);\nwhile((read = br.readLine()) != null) {\n    sb.append(read);\n}\nresponse = sb.toString();\n</code></pre>\n\n<p>3)<br/></p>\n\n<pre><code>InputStream iStream  = method.getResponseBodyAsStream();\nStringWriter writer = new StringWriter();\nIOUtils.copy(iStream, writer, \"UTF-8\");\nresponse = writer.toString();\n</code></pre>\n\n<p>So, after running 500 tests on each approach with the same request/response data, here are the numbers. Once again, these are my findings and your findings may not be exactly the same, but I wrote this to give some indication to others of the efficiency differences of these approaches.</p>\n\n<p>Ranks:<br/>\nApproach #1<br/>\nApproach #3 - 2.6% slower than #1<br/>\nApproach #2 - 4.3% slower than #1<br/></p>\n\n<p>Any of these approaches is an appropriate solution for grabbing a response and creating a String from it.</p>\n", 
      "question_id": 309424, 
      "last_activity_date": 1392019614, 
      "comments": [
        {
          "body": "2) contains an error, it adds always &quot;null&quot; at the end of the string as you are always makeing one more step then necessary. Performance will be the same anyway I think. This should work: String read = null;  StringBuffer sb = new StringBuffer(); while((read = br.readLine()) != null) {    sb.append(read); }", 
          "edited": false, 
          "comment_id": 9573048, 
          "creation_date": 1319203959, 
          "post_id": 7743991, 
          "score": 1, 
          "body_markdown": "2) contains an error, it adds always &quot;null&quot; at the end of the string as you are always makeing one more step then necessary. Performance will be the same anyway I think. This should work:\nString read = null; \nStringBuffer sb = new StringBuffer();\nwhile((read = br.readLine()) != null) {\n   sb.append(read);\n}", 
          "owner": {
            "user_id": 621438, 
            "profile_image": "https://www.gravatar.com/avatar/015ebaf1b74cf58b97365f95be2add66?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1097, 
            "link": "http://stackoverflow.com/users/621438/lukesolar", 
            "accept_rate": 79, 
            "display_name": "LukeSolar"
          }
        }
      ], 
      "creation_date": 1318440181, 
      "comment_count": 1, 
      "score": 12, 
      "body_markdown": "I ran some timing tests because time matters, always.&lt;br/&gt;\r\n\r\nI attempted to get the response into a String 3 different ways. (shown below)&lt;br/&gt;\r\nI left out try/catch blocks for the sake readability.&lt;br/&gt;\r\n\r\nTo give context, this is the preceding code for all 3 approaches:&lt;br/&gt;\r\n\r\n       String response;\r\n       String url = &quot;www.blah.com/path?key=value&quot;;\r\n       GetMethod method = new GetMethod(url);\r\n       int status = client.executeMethod(method);\r\n\r\n1)&lt;br/&gt;\r\n   \r\n\r\n     response = method.getResponseBodyAsString();\r\n\r\n2)&lt;br/&gt;\r\n\r\n    InputStream resp = method.getResponseBodyAsStream();\r\n    InputStreamReader is=new InputStreamReader(resp);\r\n    BufferedReader br=new BufferedReader(is);\r\n    String read = null;\r\n    StringBuffer sb = new StringBuffer(read);\r\n    while((read = br.readLine()) != null) {\r\n        sb.append(read);\r\n    }\r\n    response = sb.toString();\r\n\r\n3)&lt;br/&gt;\r\n\r\n    InputStream iStream  = method.getResponseBodyAsStream();\r\n    StringWriter writer = new StringWriter();\r\n    IOUtils.copy(iStream, writer, &quot;UTF-8&quot;);\r\n    response = writer.toString();\r\n\r\nSo, after running 500 tests on each approach with the same request/response data, here are the numbers. Once again, these are my findings and your findings may not be exactly the same, but I wrote this to give some indication to others of the efficiency differences of these approaches.\r\n\r\nRanks:&lt;br/&gt;\r\nApproach #1&lt;br/&gt;\r\nApproach #3 - 2.6% slower than #1&lt;br/&gt;\r\nApproach #2 - 4.3% slower than #1&lt;br/&gt;\r\n\r\nAny of these approaches is an appropriate solution for grabbing a response and creating a String from it.", 
      "owner": {
        "user_id": 370547, 
        "profile_image": "https://www.gravatar.com/avatar/336820671a80a3971cf3dbcbc7e54af9?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 774, 
        "link": "http://stackoverflow.com/users/370547/brett-holt", 
        "display_name": "Brett Holt"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1392019614, 
      "answer_id": 7743991
    }, 
    {
      "body": "<p>If you were feeling adventurous, you could mix Scala and Java and end up with this:</p>\n\n<pre><code>scala.io.Source.fromInputStream(is).mkString(\"\")\n</code></pre>\n\n<p>Mixing Java and Scala code and libraries has it's benefits.</p>\n\n<p>See full description here: <a href=\"http://stackoverflow.com/q/5221524/828757\">Idiomatic way to convert an InputStream to a String in Scala</a></p>\n", 
      "question_id": 309424, 
      "last_activity_date": 1331105530, 
      "creation_date": 1331105530, 
      "comment_count": 0, 
      "score": 11, 
      "body_markdown": "If you were feeling adventurous, you could mix Scala and Java and end up with this:\r\n\r\n    scala.io.Source.fromInputStream(is).mkString(&quot;&quot;)\r\n\r\nMixing Java and Scala code and libraries has it&#39;s benefits.\r\n\r\nSee full description here: http://stackoverflow.com/q/5221524/828757", 
      "owner": {
        "user_id": 828757, 
        "profile_image": "https://www.gravatar.com/avatar/37ce082c85173317772af80b64345526?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 6355, 
        "link": "http://stackoverflow.com/users/828757/jacobusr", 
        "accept_rate": 95, 
        "display_name": "JacobusR"
      }, 
      "is_accepted": false, 
      "answer_id": 9597413
    }, 
    {
      "body": "<p>If you can't use Commons IO (FileUtils/IOUtils/CopyUtils) here's an example using a BufferedReader to read the file line by line:</p>\n\n<pre><code>public class StringFromFile {\n    public static void main(String[] args) /*throws UnsupportedEncodingException*/ {\n        InputStream is = StringFromFile.class.getResourceAsStream(\"file.txt\");\n        BufferedReader br = new BufferedReader(new InputStreamReader(is/*, \"UTF-8\"*/));\n        final int CHARS_PER_PAGE = 5000; //counting spaces\n        StringBuilder builder = new StringBuilder(CHARS_PER_PAGE);\n        try {\n            for(String line=br.readLine(); line!=null; line=br.readLine()) {\n                builder.append(line);\n                builder.append('\\n');\n            }\n        } catch (IOException ignore) { }\n        String text = builder.toString();\n        System.out.println(text);\n    }\n}\n</code></pre>\n\n<p>or if you want raw speed I'd propose a variation on what Paul de Vrieze suggested (which avoids using a StringWriter (which uses a StringBuffer internally) :</p>\n\n<pre><code>public class StringFromFileFast {\n    public static void main(String[] args) /*throws UnsupportedEncodingException*/ {\n        InputStream is = StringFromFileFast.class.getResourceAsStream(\"file.txt\");\n        InputStreamReader input = new InputStreamReader(is/*, \"UTF-8\"*/);\n        final int CHARS_PER_PAGE = 5000; //counting spaces\n        final char[] buffer = new char[CHARS_PER_PAGE];\n        StringBuilder output = new StringBuilder(CHARS_PER_PAGE);\n        try {\n            for(int read = input.read(buffer, 0, buffer.length);\n                    read != -1;\n                    read = input.read(buffer, 0, buffer.length)) {\n                output.append(buffer, 0, read);\n            }\n        } catch (IOException ignore) { }\n\n        String text = output.toString();\n        System.out.println(text);\n    }\n}\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1274187932, 
      "comments": [
        {
          "body": "In order to make your code work, I had to use this.getClass().getClassLoader().getResourceAsStream() (using Eclipse with a maven project)", 
          "edited": false, 
          "comment_id": 11260665, 
          "creation_date": 1327408029, 
          "post_id": 2857414, 
          "score": 0, 
          "body_markdown": "In order to make your code work, I had to use this.getClass().getClassLoader().getResourceAsStream() (using Eclipse with a maven project)", 
          "owner": {
            "user_id": 460306, 
            "profile_image": "https://www.gravatar.com/avatar/97985d0f90749c8f64a719a4d9f7c15f?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1356, 
            "link": "http://stackoverflow.com/users/460306/greuze", 
            "accept_rate": 75, 
            "display_name": "greuze"
          }
        }
      ], 
      "creation_date": 1274187473, 
      "comment_count": 1, 
      "score": 10, 
      "body_markdown": "If you can&#39;t use Commons IO (FileUtils/IOUtils/CopyUtils) here&#39;s an example using a BufferedReader to read the file line by line:\r\n\r\n    public class StringFromFile {\r\n        public static void main(String[] args) /*throws UnsupportedEncodingException*/ {\r\n            InputStream is = StringFromFile.class.getResourceAsStream(&quot;file.txt&quot;);\r\n            BufferedReader br = new BufferedReader(new InputStreamReader(is/*, &quot;UTF-8&quot;*/));\r\n            final int CHARS_PER_PAGE = 5000; //counting spaces\r\n            StringBuilder builder = new StringBuilder(CHARS_PER_PAGE);\r\n            try {\r\n                for(String line=br.readLine(); line!=null; line=br.readLine()) {\r\n                    builder.append(line);\r\n                    builder.append(&#39;\\n&#39;);\r\n                }\r\n            } catch (IOException ignore) { }\r\n            String text = builder.toString();\r\n            System.out.println(text);\r\n        }\r\n    }\r\n\r\nor if you want raw speed I&#39;d propose a variation on what Paul de Vrieze suggested (which avoids using a StringWriter (which uses a StringBuffer internally) :\r\n\r\n    public class StringFromFileFast {\r\n        public static void main(String[] args) /*throws UnsupportedEncodingException*/ {\r\n            InputStream is = StringFromFileFast.class.getResourceAsStream(&quot;file.txt&quot;);\r\n            InputStreamReader input = new InputStreamReader(is/*, &quot;UTF-8&quot;*/);\r\n            final int CHARS_PER_PAGE = 5000; //counting spaces\r\n            final char[] buffer = new char[CHARS_PER_PAGE];\r\n            StringBuilder output = new StringBuilder(CHARS_PER_PAGE);\r\n            try {\r\n                for(int read = input.read(buffer, 0, buffer.length);\r\n                        read != -1;\r\n                        read = input.read(buffer, 0, buffer.length)) {\r\n                    output.append(buffer, 0, read);\r\n                }\r\n            } catch (IOException ignore) { }\r\n    \r\n            String text = output.toString();\r\n            System.out.println(text);\r\n        }\r\n    }", 
      "owner": {
        "user_id": 344029, 
        "profile_image": "https://www.gravatar.com/avatar/206d58c514286245315b7e1c9e9fa5ee?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 309, 
        "link": "http://stackoverflow.com/users/344029/djdavemark", 
        "display_name": "DJDaveMark"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1274187932, 
      "answer_id": 2857414
    }, 
    {
      "body": "<p>To copy a file and save it to your destination path you can use the method below.</p>\n\n<pre><code>public void copy(File src, File dst) throws IOException {\n    InputStream in = new FileInputStream(src);\n    OutputStream out = new FileOutputStream(dst);\n\n    // Transfer bytes from in to out\n    byte[] buf = new byte[1024];\n    int len;\n    while ((len = in.read(buf)) &gt; 0) {\n        out.write(buf, 0, len);\n    }\n    in.close();\n    out.close();\n}\n</code></pre>\n", 
      "question_id": 106770, 
      "last_activity_date": 1382537889, 
      "comments": [
        {
          "body": "This will work, but I don&#39;t think it&#39;s better than the other answers here?", 
          "edited": false, 
          "comment_id": 28998528, 
          "creation_date": 1382537924, 
          "post_id": 19542599, 
          "score": 1, 
          "body_markdown": "This will work, but I don&#39;t think it&#39;s better than the other answers here?", 
          "owner": {
            "user_id": 243245, 
            "profile_image": "https://www.gravatar.com/avatar/aed5c13647d581ae231f019a886e05a8?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18459, 
            "link": "http://stackoverflow.com/users/243245/rup", 
            "accept_rate": 70, 
            "display_name": "Rup"
          }
        }, 
        {
          "body": "It works with Java 6, without extra jars.", 
          "edited": false, 
          "comment_id": 29210292, 
          "creation_date": 1383079974, 
          "post_id": 19542599, 
          "score": 7, 
          "body_markdown": "It works with Java 6, without extra jars.", 
          "owner": {
            "user_id": 1812732, 
            "profile_image": "https://www.gravatar.com/avatar/9fd6395d5a592ba630347bfd519f23ae?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 589, 
            "link": "http://stackoverflow.com/users/1812732/john-henckel", 
            "accept_rate": 76, 
            "display_name": "John Henckel"
          }
        }, 
        {
          "body": "@Rup It is considerably better than the other answers here, (a) <i>because</i> it works, and (b) because it doesn&#39;t rely on third party software.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 243245, 
            "profile_image": "https://www.gravatar.com/avatar/aed5c13647d581ae231f019a886e05a8?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18459, 
            "link": "http://stackoverflow.com/users/243245/rup", 
            "accept_rate": 70, 
            "display_name": "Rup"
          }, 
          "comment_id": 38565760, 
          "creation_date": 1405762916, 
          "post_id": 19542599, 
          "score": 1, 
          "body_markdown": "@Rup It is considerably better than the other answers here, (a) *because* it works, and (b) because it doesn&#39;t rely on third party software.", 
          "owner": {
            "user_id": 207421, 
            "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 124600, 
            "link": "http://stackoverflow.com/users/207421/ejp", 
            "accept_rate": 80, 
            "display_name": "EJP"
          }
        }, 
        {
          "body": "@EJP OK, but it&#39;s not very smart. File copying should be an OS or filesystem operation, not an application operation: Java hopefully can spot a copy and turn it into an OS operation except by explicitly reading the file in you&#39;re stopping it doing that. If you don&#39;t think Java can do that, would you trust it to optimise 1K reads and writes into larger blocks? And if source and destination were on a remote share over a slow network then this is clearly doing unneccesary work. Yes some third party JARs are stupidly large (Guava!) but they do add lots of stuff like this done properly.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 207421, 
            "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 124600, 
            "link": "http://stackoverflow.com/users/207421/ejp", 
            "accept_rate": 80, 
            "display_name": "EJP"
          }, 
          "comment_id": 38566071, 
          "creation_date": 1405764168, 
          "post_id": 19542599, 
          "score": 1, 
          "body_markdown": "@EJP OK, but it&#39;s not very smart. File copying should be an OS or filesystem operation, not an application operation: Java hopefully can spot a copy and turn it into an OS operation except by explicitly reading the file in you&#39;re stopping it doing that. If you don&#39;t think Java can do that, would you trust it to optimise 1K reads and writes into larger blocks? And if source and destination were on a remote share over a slow network then this is clearly doing unneccesary work. Yes some third party JARs are stupidly large (Guava!) but they do add lots of stuff like this done properly.", 
          "owner": {
            "user_id": 243245, 
            "profile_image": "https://www.gravatar.com/avatar/aed5c13647d581ae231f019a886e05a8?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18459, 
            "link": "http://stackoverflow.com/users/243245/rup", 
            "accept_rate": 70, 
            "display_name": "Rup"
          }
        }
      ], 
      "creation_date": 1382533733, 
      "comment_count": 4, 
      "score": 10, 
      "body_markdown": "To copy a file and save it to your destination path you can use the method below.\r\n\r\n    public void copy(File src, File dst) throws IOException {\r\n        InputStream in = new FileInputStream(src);\r\n        OutputStream out = new FileOutputStream(dst);\r\n\r\n        // Transfer bytes from in to out\r\n        byte[] buf = new byte[1024];\r\n        int len;\r\n        while ((len = in.read(buf)) &gt; 0) {\r\n            out.write(buf, 0, len);\r\n        }\r\n        in.close();\r\n        out.close();\r\n    }", 
      "owner": {
        "user_id": 979752, 
        "profile_image": "https://www.gravatar.com/avatar/32cacab3fbb7588eb35653f4005d4c2f?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 2538, 
        "link": "http://stackoverflow.com/users/979752/rakshi", 
        "accept_rate": 71, 
        "display_name": "Rakshi"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1382537889, 
      "answer_id": 19542599
    }, 
    {
      "body": "<p>Here's how to do it using just the JDK using byte array buffers. This is actually how the commons-io <code>IOUtils.copy()</code> methods all work. You can replace <code>byte[]</code> with <code>char[]</code> if you're copying from a <code>Reader</code> instead of an <code>InputStream</code>.</p>\n\n<pre><code>import java.io.ByteArrayOutputStream;\nimport java.io.InputStream;\n\n...\n\nInputStream is = ....\nByteArrayOutputStream baos = new ByteArrayOutputStream(8192);\nbyte[] buffer = new byte[8192];\nint count = 0;\ntry {\n  while ((count = is.read(buffer)) != -1) {\n    baos.write(buffer, 0, count);\n  }\n}\nfinally {\n  try {\n    is.close();\n  }\n  catch (Exception ignore) {\n  }\n}\n\nString charset = \"UTF-8\";\nString inputStreamAsString = baos.toString(charset);\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1407904209, 
      "comments": [
        {
          "body": "Please give a description on what you are trying to accomplish.", 
          "edited": false, 
          "comment_id": 17963120, 
          "creation_date": 1351861133, 
          "post_id": 13195413, 
          "score": 1, 
          "body_markdown": "Please give a description on what you are trying to accomplish.", 
          "owner": {
            "user_id": 421372, 
            "profile_image": "https://www.gravatar.com/avatar/c81e22a8a22d02e036ff00a9bbd2802b?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 6389, 
            "link": "http://stackoverflow.com/users/421372/ragunath-jawahar", 
            "accept_rate": 89, 
            "display_name": "Ragunath Jawahar"
          }
        }
      ], 
      "creation_date": 1351859873, 
      "comment_count": 1, 
      "score": 9, 
      "body_markdown": "Here&#39;s how to do it using just the JDK using byte array buffers. This is actually how the commons-io `IOUtils.copy()` methods all work. You can replace `byte[]` with `char[]` if you&#39;re copying from a `Reader` instead of an `InputStream`.\r\n\r\n    import java.io.ByteArrayOutputStream;\r\n    import java.io.InputStream;\r\n\r\n    ...\r\n\r\n    InputStream is = ....\r\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(8192);\r\n    byte[] buffer = new byte[8192];\r\n    int count = 0;\r\n    try {\r\n      while ((count = is.read(buffer)) != -1) {\r\n        baos.write(buffer, 0, count);\r\n      }\r\n    }\r\n    finally {\r\n      try {\r\n        is.close();\r\n      }\r\n      catch (Exception ignore) {\r\n      }\r\n    }\r\n\r\n    String charset = &quot;UTF-8&quot;;\r\n    String inputStreamAsString = baos.toString(charset);\r\n", 
      "owner": {
        "user_id": 1794244, 
        "profile_image": "https://www.gravatar.com/avatar/66304aaee3b9e8d537524ad0c626a47d?s=128&d=identicon&r=PG", 
        "user_type": "unregistered", 
        "reputation": 91, 
        "link": "http://stackoverflow.com/users/1794244/matt-shannon", 
        "display_name": "Matt Shannon"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1407904209, 
      "answer_id": 13195413
    }, 
    {
      "body": "<p>Here we are enter a string into a text file.</p>\n\n<pre><code>String content = \"This is the content to write into file\";\n    File file = new File(\"filename.txt\");\n            FileWriter fw = new FileWriter(file.getAbsoluteFile());\n            BufferedWriter bw = new BufferedWriter(fw);\n            bw.write(content);\n            bw.close();\n</code></pre>\n\n<p>we can easily create a new file and add content into it.</p>\n", 
      "question_id": 2885173, 
      "last_activity_date": 1402401323, 
      "creation_date": 1402401323, 
      "comment_count": 0, 
      "score": 8, 
      "body_markdown": "                        \r\nHere we are enter a string into a text file.\r\n\r\n    \r\n    String content = &quot;This is the content to write into file&quot;;\r\n    \tFile file = new File(&quot;filename.txt&quot;);\r\n     \t\t\tFileWriter fw = new FileWriter(file.getAbsoluteFile());\r\n    \t\t\tBufferedWriter bw = new BufferedWriter(fw);\r\n    \t\t\tbw.write(content);\r\n    \t\t\tbw.close();\r\n\r\nwe can easily create a new file and add content into it.", 
      "owner": {
        "user_id": 3641329, 
        "profile_image": "https://www.gravatar.com/avatar/ca48c94892e78dcfa80f9cfee4ce4f45?s=128&d=identicon&r=PG&f=1", 
        "user_type": "registered", 
        "reputation": 103, 
        "link": "http://stackoverflow.com/users/3641329/imroze527", 
        "display_name": "imroze527"
      }, 
      "is_accepted": false, 
      "answer_id": 24140343
    }, 
    {
      "body": "<p>If you for some reason want to separate the act of creating and writing, the Java equivalent of <code>touch</code> is</p>\n\n<pre><code>try {\n   //create a file named \"testfile.txt\" in the current working directory\n   File myFile = new File(\"testfile.txt\");\n   if ( myFile.createNewFile() ) {\n      System.out.println(\"Success!\");\n   } else {\n      System.out.println(\"Failure!\");\n   }\n} catch ( IOException ioe ) { ioe.printStackTrace(); }\n</code></pre>\n\n<p><code>createNewFile()</code> does an existence check and file create atomically.  This can be useful if you want to ensure you were the creator of the file before writing to it, for example.</p>\n", 
      "question_id": 2885173, 
      "last_activity_date": 1274472741, 
      "comments": [
        {
          "body": "[touch] also updates the timestamp of the file as a side effect (if it already exists). Does this also have that side effect?", 
          "edited": false, 
          "comment_id": 26964357, 
          "creation_date": 1377110060, 
          "post_id": 2885261, 
          "score": 1, 
          "body_markdown": "[touch] also updates the timestamp of the file as a side effect (if it already exists). Does this also have that side effect?", 
          "owner": {
            "user_id": 42082, 
            "profile_image": "https://www.gravatar.com/avatar/6fe82efded2ee5e218e0452644a07e2e?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1407, 
            "link": "http://stackoverflow.com/users/42082/ape-inago", 
            "accept_rate": 80, 
            "display_name": "Ape-inago"
          }
        }, 
        {
          "body": "@Ape-inago: On my system it certainly didn&#39;t (it just returns false and has no effect on the file).  I didn&#39;t mean <code>touch</code> in the general sense but rather in its common secondary usage to create a file without writing data to it.  The documented purpose of touch is to update the timestamp on the file.  Creating the file if it doesn&#39;t exist is really the side effect, and can be disabled with a switch.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 42082, 
            "profile_image": "https://www.gravatar.com/avatar/6fe82efded2ee5e218e0452644a07e2e?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1407, 
            "link": "http://stackoverflow.com/users/42082/ape-inago", 
            "accept_rate": 80, 
            "display_name": "Ape-inago"
          }, 
          "comment_id": 26966134, 
          "creation_date": 1377113436, 
          "post_id": 2885261, 
          "score": 0, 
          "body_markdown": "@Ape-inago: On my system it certainly didn&#39;t (it just returns false and has no effect on the file).  I didn&#39;t mean `touch` in the general sense but rather in its common secondary usage to create a file without writing data to it.  The documented purpose of touch is to update the timestamp on the file.  Creating the file if it doesn&#39;t exist is really the side effect, and can be disabled with a switch.", 
          "owner": {
            "user_id": 228171, 
            "profile_image": "https://www.gravatar.com/avatar/3bfd94ddd8f9099ea5a0e3020d7c4d31?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 42946, 
            "link": "http://stackoverflow.com/users/228171/mark-peters", 
            "accept_rate": 88, 
            "display_name": "Mark Peters"
          }
        }
      ], 
      "creation_date": 1274472741, 
      "comment_count": 2, 
      "score": 7, 
      "body_markdown": "If you for some reason want to separate the act of creating and writing, the Java equivalent of `touch` is\r\n    \r\n    try {\r\n       //create a file named &quot;testfile.txt&quot; in the current working directory\r\n       File myFile = new File(&quot;testfile.txt&quot;);\r\n       if ( myFile.createNewFile() ) {\r\n          System.out.println(&quot;Success!&quot;);\r\n       } else {\r\n          System.out.println(&quot;Failure!&quot;);\r\n       }\r\n    } catch ( IOException ioe ) { ioe.printStackTrace(); }\r\n\r\n`createNewFile()` does an existence check and file create atomically.  This can be useful if you want to ensure you were the creator of the file before writing to it, for example.", 
      "owner": {
        "user_id": 228171, 
        "profile_image": "https://www.gravatar.com/avatar/3bfd94ddd8f9099ea5a0e3020d7c4d31?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 42946, 
        "link": "http://stackoverflow.com/users/228171/mark-peters", 
        "accept_rate": 88, 
        "display_name": "Mark Peters"
      }, 
      "is_accepted": false, 
      "answer_id": 2885261
    }, 
    {
      "body": "<p>Suggestions:</p>\n\n<ul>\n<li>Create a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/io/File.html\">File</a> object that refers to the already existing file on disk.</li>\n<li>Use a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/io/FileWriter.html\">FileWriter</a> object, and use the constructor that takes the File object and a boolean, the latter if <code>true</code> would allow appending text into the File if it exists. </li>\n<li>Then initialize a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/io/PrintWriter.html\">PrintWriter</a> passing in the FileWriter into its constructor. </li>\n<li>Then call <code>println(...)</code> on your PrintWriter, writing your new text into the file.</li>\n<li>As always, close your resources (the PrintWriter) when you are done with it.</li>\n<li>As always, don't ignore exceptions but rather catch and handle them.</li>\n<li>The <code>close()</code> of the PrintWriter should be in the try's finally block.</li>\n</ul>\n\n<p>e.g.,</p>\n\n<pre><code>  PrintWriter pw = null;\n\n  try {\n     File file = new File(\"fubars.txt\");\n     FileWriter fw = new FileWriter(file, true);\n     pw = new PrintWriter(fw);\n     pw.println(\"Fubars rule!\");\n  } catch (IOException e) {\n     e.printStackTrace();\n  } finally {\n     if (pw != null) {\n        pw.close();\n     }\n  }\n</code></pre>\n\n<p>Easy, no?</p>\n", 
      "question_id": 10667734, 
      "last_activity_date": 1337452110, 
      "creation_date": 1337451759, 
      "comment_count": 0, 
      "score": 7, 
      "body_markdown": "Suggestions:\r\n\r\n* Create a [File](http://docs.oracle.com/javase/7/docs/api/java/io/File.html) object that refers to the already existing file on disk.\r\n* Use a [FileWriter](http://docs.oracle.com/javase/7/docs/api/java/io/FileWriter.html) object, and use the constructor that takes the File object and a boolean, the latter if `true` would allow appending text into the File if it exists. \r\n* Then initialize a [PrintWriter](http://docs.oracle.com/javase/7/docs/api/java/io/PrintWriter.html) passing in the FileWriter into its constructor. \r\n* Then call `println(...)` on your PrintWriter, writing your new text into the file.\r\n* As always, close your resources (the PrintWriter) when you are done with it.\r\n* As always, don&#39;t ignore exceptions but rather catch and handle them.\r\n* The `close()` of the PrintWriter should be in the try&#39;s finally block.\r\n\r\ne.g.,\r\n\r\n      PrintWriter pw = null;\r\n      \r\n      try {\r\n         File file = new File(&quot;fubars.txt&quot;);\r\n         FileWriter fw = new FileWriter(file, true);\r\n         pw = new PrintWriter(fw);\r\n         pw.println(&quot;Fubars rule!&quot;);\r\n      } catch (IOException e) {\r\n         e.printStackTrace();\r\n      } finally {\r\n         if (pw != null) {\r\n            pw.close();\r\n         }\r\n      }\r\n\r\nEasy, no?", 
      "owner": {
        "user_id": 522444, 
        "profile_image": "https://www.gravatar.com/avatar/16b6783e9b99b1199c75761eaf5c0685?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 166559, 
        "link": "http://stackoverflow.com/users/522444/hovercraft-full-of-eels", 
        "accept_rate": 100, 
        "display_name": "Hovercraft Full Of Eels"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1337452110, 
      "answer_id": 10667789
    }, 
    {
      "body": "<p>If you are in a web application which already uses Spring and if you do not want to include Apache Commons IO for simple file copying, you can use <a href=\"http://static.springsource.org/spring/docs/1.2.x/api/org/springframework/util/FileCopyUtils.html\">FileCopyUtils</a> of the Spring framework.</p>\n", 
      "question_id": 106770, 
      "last_activity_date": 1347000230, 
      "creation_date": 1347000230, 
      "comment_count": 0, 
      "score": 7, 
      "body_markdown": "If you are in a web application which already uses Spring and if you do not want to include Apache Commons IO for simple file copying, you can use [FileCopyUtils][1] of the Spring framework.\r\n\r\n\r\n  [1]: http://static.springsource.org/spring/docs/1.2.x/api/org/springframework/util/FileCopyUtils.html", 
      "owner": {
        "user_id": 628099, 
        "profile_image": "https://www.gravatar.com/avatar/ceb114ba4a88e842ca885874f7942176?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 575, 
        "link": "http://stackoverflow.com/users/628099/balaji-paulrajan", 
        "display_name": "Balaji Paulrajan"
      }, 
      "is_accepted": false, 
      "answer_id": 12313058
    }, 
    {
      "body": "<p>This may help.</p>\n\n<p>to create file without overwriting existing file</p>\n\n<pre><code>System.out.println(\"Choose folder to create file\");\nJFileChooser c = new JFileChooser();\nc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\nc.showOpenDialog(c);\nc.getSelectedFile();\nf = c.getSelectedFile(); // File f - global variable\nString newfile = f + \"\\\\hi.doc\";//.txt or .doc or .html\nFile file = new File(newfile);\n    try \n    {\n        //System.out.println(f);\n        boolean flag = file.createNewFile();\n\n        if(flag==true)\n        {\n            JOptionPane.showMessageDialog(rootPane, \"File created successfully\");\n        }\n        else\n        {\n            JOptionPane.showMessageDialog(rootPane, \"File already exists\");\n        }\n        /* or use exists() function as follows:\n            if(file.exists()==true)\n            {\n                JOptionPane.showMessageDialog(rootPane, \"File already exists\");\n            }\n            else\n            {\n                JOptionPane.showMessageDialog(rootPane, \"File created successfully\");\n            }\n\n        */\n    }\n\n    catch(Exception e)\n    {\n        //any exception handling method of your choice\n    }\n</code></pre>\n", 
      "question_id": 2885173, 
      "last_activity_date": 1404046135, 
      "creation_date": 1404046135, 
      "comment_count": 0, 
      "score": 7, 
      "body_markdown": "This may help.\r\n\r\nto create file without overwriting existing file\r\n\r\n    System.out.println(&quot;Choose folder to create file&quot;);\r\n    JFileChooser c = new JFileChooser();\r\n    c.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\r\n    c.showOpenDialog(c);\r\n    c.getSelectedFile();\r\n    f = c.getSelectedFile(); // File f - global variable\r\n    String newfile = f + &quot;\\\\hi.doc&quot;;//.txt or .doc or .html\r\n    File file = new File(newfile);\r\n        try \r\n        {\r\n            //System.out.println(f);\r\n            boolean flag = file.createNewFile();\r\n            \r\n            if(flag==true)\r\n            {\r\n                JOptionPane.showMessageDialog(rootPane, &quot;File created successfully&quot;);\r\n            }\r\n            else\r\n            {\r\n                JOptionPane.showMessageDialog(rootPane, &quot;File already exists&quot;);\r\n            }\r\n            /* or use exists() function as follows:\r\n                if(file.exists()==true)\r\n                {\r\n                    JOptionPane.showMessageDialog(rootPane, &quot;File already exists&quot;);\r\n                }\r\n                else\r\n                {\r\n                    JOptionPane.showMessageDialog(rootPane, &quot;File created successfully&quot;);\r\n                }\r\n             \r\n            */\r\n        }\r\n        \r\n        catch(Exception e)\r\n        {\r\n            //any exception handling method of your choice\r\n        }", 
      "owner": {
        "user_id": 3766946, 
        "profile_image": "https://www.gravatar.com/avatar/ada58e82a73117f752ab4bb3cbf3425b?s=128&d=identicon&r=PG&f=1", 
        "user_type": "registered", 
        "reputation": 151, 
        "link": "http://stackoverflow.com/users/3766946/aashima", 
        "display_name": "aashima"
      }, 
      "is_accepted": false, 
      "answer_id": 24476204
    }, 
    {
      "body": "<p>make sure to close the streams at end if you use Stream Readers</p>\n\n<pre><code>    private String readStream(InputStream iStream) throws IOException {\n        //build a Stream Reader, it can read char by char\n        InputStreamReader iStreamReader = new InputStreamReader(iStream);\n        //build a buffered Reader, so that i can read whole line at once\n        BufferedReader bReader = new BufferedReader(iStreamReader);\n        String line = null;\n        StringBuilder builder = new StringBuilder();\n        while((line = bReader.readLine()) != null) {  //Read till end\n            builder.append(line);\n        }\n        bReader.close();         //close all opened stuff\n        iStreamReader.close();\n        iStream.close();\n        return builder.toString();\n    }\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1353155945, 
      "creation_date": 1353155945, 
      "comment_count": 0, 
      "score": 6, 
      "body_markdown": "make sure to close the streams at end if you use Stream Readers\r\n\r\n        private String readStream(InputStream iStream) throws IOException {\r\n            //build a Stream Reader, it can read char by char\r\n            InputStreamReader iStreamReader = new InputStreamReader(iStream);\r\n            //build a buffered Reader, so that i can read whole line at once\r\n            BufferedReader bReader = new BufferedReader(iStreamReader);\r\n            String line = null;\r\n            StringBuilder builder = new StringBuilder();\r\n            while((line = bReader.readLine()) != null) {  //Read till end\r\n                builder.append(line);\r\n            }\r\n            bReader.close();         //close all opened stuff\r\n            iStreamReader.close();\r\n            iStream.close();\r\n            return builder.toString();\r\n        }", 
      "owner": {
        "user_id": 1506477, 
        "profile_image": "https://www.gravatar.com/avatar/a5d48d8856ee5051fbb431cd0cf12deb?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 627, 
        "link": "http://stackoverflow.com/users/1506477/thamme-gowda", 
        "display_name": "Thamme Gowda"
      }, 
      "is_accepted": false, 
      "answer_id": 13430647
    }, 
    {
      "body": "<p>This question should probably be closed as it has been asked and answered many many times, but the key is to use the correct FileWriter constructor, one that takes true as a second parameter. The second true parameter tells Java to open the file for appending rather than overwriting. </p>\n\n<pre><code>//FileWriter flw = new FileWriter(path); // not this\nFileWriter flw = new FileWriter(path, true);  // but this\n</code></pre>\n\n<p>And in fact, I am voting to close this question as a duplicate.</p>\n\n<p>As an aside: you'll probably not want to write directly with the FileWriter but rather will want to wrap it in a BufferedWriter or (my preference) a PrintWriter instance. This will allow you to simply and more efficiently write to the file using <code>println(...)</code> and other familiar methods.</p>\n\n<p>Edit 2: After looking more at your code, I think that actually you should consider using a PrintWriter class and then writing with the <code>printf(...)</code> method as this allows for formatted String output, something that works much better than a bunch of tabs as you're trying to do.</p>\n", 
      "question_id": 16176099, 
      "last_activity_date": 1366741323, 
      "comments": [
        {
          "body": "Thanks it is very useful.", 
          "edited": false, 
          "comment_id": 23122302, 
          "creation_date": 1366741120, 
          "post_id": 16176124, 
          "score": 0, 
          "body_markdown": "Thanks it is very useful.", 
          "owner": {
            "user_id": 2304066, 
            "profile_image": "https://www.gravatar.com/avatar/57a77a6b31a9807a7838c7c45fc067d7?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2, 
            "link": "http://stackoverflow.com/users/2304066/suheyb", 
            "display_name": "Suheyb"
          }
        }, 
        {
          "body": "@Suheyb: You&#39;re welcome. After looking more at your code, I think that actually you should consider using a PrintWriter class and then writing with the <code>printf(...)</code> method as this allows for formatted String output, something that works much better than a bunch of tabs as you&#39;re trying to do.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 2304066, 
            "profile_image": "https://www.gravatar.com/avatar/57a77a6b31a9807a7838c7c45fc067d7?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2, 
            "link": "http://stackoverflow.com/users/2304066/suheyb", 
            "display_name": "Suheyb"
          }, 
          "comment_id": 23122387, 
          "creation_date": 1366741297, 
          "post_id": 16176124, 
          "score": 0, 
          "body_markdown": "@Suheyb: You&#39;re welcome. After looking more at your code, I think that actually you should consider using a PrintWriter class and then writing with the `printf(...)` method as this allows for formatted String output, something that works much better than a bunch of tabs as you&#39;re trying to do.", 
          "owner": {
            "user_id": 522444, 
            "profile_image": "https://www.gravatar.com/avatar/16b6783e9b99b1199c75761eaf5c0685?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 166559, 
            "link": "http://stackoverflow.com/users/522444/hovercraft-full-of-eels", 
            "accept_rate": 100, 
            "display_name": "Hovercraft Full Of Eels"
          }
        }, 
        {
          "body": "I fixed this problem using BufferedWriter class and newLine() method.", 
          "edited": false, 
          "comment_id": 23122576, 
          "creation_date": 1366741654, 
          "post_id": 16176124, 
          "score": 0, 
          "body_markdown": "I fixed this problem using BufferedWriter class and newLine() method.", 
          "owner": {
            "user_id": 2304066, 
            "profile_image": "https://www.gravatar.com/avatar/57a77a6b31a9807a7838c7c45fc067d7?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2, 
            "link": "http://stackoverflow.com/users/2304066/suheyb", 
            "display_name": "Suheyb"
          }
        }, 
        {
          "body": "@Suheyb: seriously, look at PrintWriter and using its <code>printf(...)</code> method. You will be glad you did.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 2304066, 
            "profile_image": "https://www.gravatar.com/avatar/57a77a6b31a9807a7838c7c45fc067d7?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2, 
            "link": "http://stackoverflow.com/users/2304066/suheyb", 
            "display_name": "Suheyb"
          }, 
          "comment_id": 23122615, 
          "creation_date": 1366741726, 
          "post_id": 16176124, 
          "score": 0, 
          "body_markdown": "@Suheyb: seriously, look at PrintWriter and using its `printf(...)` method. You will be glad you did.", 
          "owner": {
            "user_id": 522444, 
            "profile_image": "https://www.gravatar.com/avatar/16b6783e9b99b1199c75761eaf5c0685?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 166559, 
            "link": "http://stackoverflow.com/users/522444/hovercraft-full-of-eels", 
            "accept_rate": 100, 
            "display_name": "Hovercraft Full Of Eels"
          }
        }
      ], 
      "creation_date": 1366740204, 
      "comment_count": 4, 
      "score": 6, 
      "body_markdown": "This question should probably be closed as it has been asked and answered many many times, but the key is to use the correct FileWriter constructor, one that takes true as a second parameter. The second true parameter tells Java to open the file for appending rather than overwriting. \r\n\r\n    //FileWriter flw = new FileWriter(path); // not this\r\n    FileWriter flw = new FileWriter(path, true);  // but this\r\n\r\nAnd in fact, I am voting to close this question as a duplicate.\r\n\r\nAs an aside: you&#39;ll probably not want to write directly with the FileWriter but rather will want to wrap it in a BufferedWriter or (my preference) a PrintWriter instance. This will allow you to simply and more efficiently write to the file using `println(...)` and other familiar methods.\r\n\r\nEdit 2: After looking more at your code, I think that actually you should consider using a PrintWriter class and then writing with the `printf(...)` method as this allows for formatted String output, something that works much better than a bunch of tabs as you&#39;re trying to do.", 
      "owner": {
        "user_id": 522444, 
        "profile_image": "https://www.gravatar.com/avatar/16b6783e9b99b1199c75761eaf5c0685?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 166559, 
        "link": "http://stackoverflow.com/users/522444/hovercraft-full-of-eels", 
        "accept_rate": 100, 
        "display_name": "Hovercraft Full Of Eels"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1366741323, 
      "answer_id": 16176124
    }, 
    {
      "body": "<p>Here is the complete method for converting <code>InputStream</code> into <code>String</code> without using any third party library. Use <code>StringBuilder</code> for single threaded environment otherwise use <code>StringBuffer</code>.  </p>\n\n<pre><code>    public static String getString( InputStream is) throws IOException {\n        int ch;\n        StringBuilder sb = new StringBuilder();\n        while((ch = is.read())!= -1)\n            sb.append((char)ch);\n        return sb.toString();\n    }\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1411011686, 
      "comments": [
        {
          "body": "In this method there is no encoding applied. So let&#39;s say the data received from the InputStream is encoded using UTF-8 the output will be wrong. To fix this you could use <code>in = new InputStreamReader(inputStream)</code> and <code>(char)in.read()</code>.", 
          "edited": false, 
          "comment_id": 42056488, 
          "creation_date": 1415103706, 
          "post_id": 22960005, 
          "score": 0, 
          "body_markdown": "In this method there is no encoding applied. So let&#39;s say the data received from the InputStream is encoded using UTF-8 the output will be wrong. To fix this you could use `in = new InputStreamReader(inputStream)` and `(char)in.read()`.", 
          "owner": {
            "user_id": 1520422, 
            "profile_image": "https://www.gravatar.com/avatar/9f09b1b39f193a707bd8bb6147d30ef6?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 82, 
            "link": "http://stackoverflow.com/users/1520422/frederic-leitenberger", 
            "display_name": "Frederic Leitenberger"
          }
        }, 
        {
          "body": "Isn&#39;t reading it character by character a bit slow?", 
          "edited": false, 
          "comment_id": 42081499, 
          "creation_date": 1415152842, 
          "post_id": 22960005, 
          "score": 0, 
          "body_markdown": "Isn&#39;t reading it character by character a bit slow?", 
          "owner": {
            "user_id": 1035897, 
            "profile_image": "https://www.gravatar.com/avatar/3eccb41827ff628fa4143045e40c1b8c?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 952, 
            "link": "http://stackoverflow.com/users/1035897/lennart-rolland", 
            "accept_rate": 63, 
            "display_name": "Lennart Rolland"
          }
        }, 
        {
          "body": "and memory-inefficient as well; I believe I tried using this before on a large input and StringBuilder ran out of memory", 
          "edited": false, 
          "comment_id": 42505508, 
          "creation_date": 1416281849, 
          "post_id": 22960005, 
          "score": 0, 
          "body_markdown": "and memory-inefficient as well; I believe I tried using this before on a large input and StringBuilder ran out of memory", 
          "owner": {
            "user_id": 689161, 
            "profile_image": "https://www.gravatar.com/avatar/e576e2746622a6e67a49e735abd83d21?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 774, 
            "link": "http://stackoverflow.com/users/689161/gengkev", 
            "display_name": "gengkev"
          }
        }
      ], 
      "creation_date": 1397039872, 
      "comment_count": 3, 
      "score": 6, 
      "body_markdown": "Here is the complete method for converting `InputStream` into `String` without using any third party library. Use `StringBuilder` for single threaded environment otherwise use `StringBuffer`.  \r\n\r\n  \r\n\r\n        public static String getString( InputStream is) throws IOException {\r\n        \tint ch;\r\n        \tStringBuilder sb = new StringBuilder();\r\n        \twhile((ch = is.read())!= -1)\r\n        \t\tsb.append((char)ch);\r\n        \treturn sb.toString();\r\n        }", 
      "owner": {
        "user_id": 978136, 
        "profile_image": "http://i.stack.imgur.com/PK38A.png?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 1090, 
        "link": "http://stackoverflow.com/users/978136/laksys", 
        "accept_rate": 50, 
        "display_name": "laksys"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1411011686, 
      "answer_id": 22960005
    }, 
    {
      "body": "<pre><code>JFileChooser c= new JFileChooser();\nc.showOpenDialog(c);\nFile write_file = c.getSelectedFile();\nString Content = \"input here the data to be written to your file\";\ntry\n    {\n    FileWriter fw = new FileWriter(write_file);\n    BufferedWriter bw = new BufferedWriter(fw);\n    bw.append(Content);\n    bw.append(\"hiiiii\");\n    bw.close();\n    fw.close();\n    }\ncatch(Exception e)\n   {\n   System.out.println(e);\n   }\n</code></pre>\n", 
      "question_id": 2885173, 
      "last_activity_date": 1405437218, 
      "comments": [
        {
          "body": "this is the most easiest way i found...all issues are solved here and only the text is needed to be inserted", 
          "edited": false, 
          "comment_id": 38419743, 
          "creation_date": 1405435838, 
          "post_id": 24761200, 
          "score": 0, 
          "body_markdown": "this is the most easiest way i found...all issues are solved here and only the text is needed to be inserted", 
          "owner": {
            "user_id": 3841258, 
            "profile_image": "https://www.gravatar.com/avatar/23cac898ca328aab32680cfd4bcae1d8?s=128&d=identicon&r=PG&f=1", 
            "user_type": "registered", 
            "reputation": 81, 
            "link": "http://stackoverflow.com/users/3841258/rohit-zp", 
            "display_name": "Rohit ZP"
          }
        }
      ], 
      "creation_date": 1405435400, 
      "comment_count": 1, 
      "score": 6, 
      "body_markdown": "    JFileChooser c= new JFileChooser();\r\n    c.showOpenDialog(c);\r\n    File write_file = c.getSelectedFile();\r\n    String Content = &quot;input here the data to be written to your file&quot;;\r\n    try\r\n        {\r\n        FileWriter fw = new FileWriter(write_file);\r\n        BufferedWriter bw = new BufferedWriter(fw);\r\n        bw.append(Content);\r\n        bw.append(&quot;hiiiii&quot;);\r\n        bw.close();\r\n        fw.close();\r\n        }\r\n    catch(Exception e)\r\n       {\r\n       System.out.println(e);\r\n       }\r\n        ", 
      "owner": {
        "user_id": 3841258, 
        "profile_image": "https://www.gravatar.com/avatar/23cac898ca328aab32680cfd4bcae1d8?s=128&d=identicon&r=PG&f=1", 
        "user_type": "registered", 
        "reputation": 81, 
        "link": "http://stackoverflow.com/users/3841258/rohit-zp", 
        "display_name": "Rohit ZP"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1405437218, 
      "answer_id": 24761200
    }, 
    {
      "body": "<p>Three possible problems with the above code: </p>\n\n<ol>\n<li>If getChannel throws an exception, you might leak an open stream. </li>\n<li>For large files, you might be trying to transfer more at once than the OS can handle.  </li>\n<li>You are ignoring the return value of transferFrom, so it might be copying just part of the file. </li>\n</ol>\n\n<p>This is why <code>org.apache.tools.ant.util.ResourceUtils.copyResource</code> is so complicated. Also note that while transferFrom is OK, transferTo breaks on JDK 1.4 on Linux (see <a href=\"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5056395\">Bug ID:5056395</a>) \u2013 Jesse Glick Jan </p>\n", 
      "question_id": 106770, 
      "last_activity_date": 1334697526, 
      "comments": [
        {
          "body": "This does not provide an answer to the question. To critique or request clarification from an author, leave a comment below their post.", 
          "edited": false, 
          "comment_id": 39095247, 
          "creation_date": 1407158902, 
          "post_id": 10138489, 
          "score": 0, 
          "body_markdown": "This does not provide an answer to the question. To critique or request clarification from an author, leave a comment below their post.", 
          "owner": {
            "user_id": 803925, 
            "profile_image": "https://www.gravatar.com/avatar/310d258cfa73835789e2d3015263f6d4?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 10337, 
            "link": "http://stackoverflow.com/users/803925/nbrooks", 
            "display_name": "nbrooks"
          }
        }
      ], 
      "creation_date": 1334309791, 
      "comment_count": 1, 
      "score": 5, 
      "body_markdown": "\t\r\nThree possible problems with the above code: \r\n\r\n 1. If getChannel throws an exception, you might leak an open stream. \r\n 2. For large files, you might be trying to transfer more at once than the OS can handle.  \r\n 3. You are ignoring the return value of transferFrom, so it might be copying just part of the file. \r\n\r\nThis is why `org.apache.tools.ant.util.ResourceUtils.copyResource` is so complicated. Also note that while transferFrom is OK, transferTo breaks on JDK 1.4 on Linux (see [Bug ID:5056395](http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5056395)) \u2013 Jesse Glick Jan ", 
      "owner": {
        "user_id": 1331227, 
        "profile_image": "https://www.gravatar.com/avatar/0291326556ff19700dfec0073459402e?s=128&d=identicon&r=PG", 
        "user_type": "unregistered", 
        "reputation": 59, 
        "link": "http://stackoverflow.com/users/1331227/saji", 
        "display_name": "saji"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1334697526, 
      "answer_id": 10138489
    }, 
    {
      "body": "<p>You could be writing the extra line after checking just one line of the file.</p>\n\n<p>I suggest you read the file to the end, without attempting to write to it, until you know the line does appear anywhere in the file.</p>\n\n<p>i.e. I would use a PrintWriter.println() and I would move all the code for writing to after the search loop.</p>\n", 
      "question_id": 19854395, 
      "last_activity_date": 1383898953, 
      "creation_date": 1383898953, 
      "comment_count": 0, 
      "score": 4, 
      "body_markdown": "You could be writing the extra line after checking just one line of the file.\r\n\r\nI suggest you read the file to the end, without attempting to write to it, until you know the line does appear anywhere in the file.\r\n\r\ni.e. I would use a PrintWriter.println() and I would move all the code for writing to after the search loop.", 
      "owner": {
        "user_id": 57695, 
        "profile_image": "https://www.gravatar.com/avatar/53ee9941b3fefef67175daf212e62d41?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 244066, 
        "link": "http://stackoverflow.com/users/57695/peter-lawrey", 
        "accept_rate": 82, 
        "display_name": "Peter Lawrey"
      }, 
      "is_accepted": false, 
      "answer_id": 19854480
    }, 
    {
      "body": "<p>In Java 7 it is easy...</p>\n\n<pre><code>File src = new File(\"original.txt\");\nFile target = new File(\"copy.txt\");\n\nFiles.copy(src.toPath(), target.toPath(), StandardCopyOption.REPLACE_EXISTING);\n</code></pre>\n", 
      "question_id": 106770, 
      "last_activity_date": 1403338848, 
      "comments": [
        {
          "body": "What does your answer add to Scott&#39;s or Glen&#39;s?", 
          "edited": false, 
          "comment_id": 37618557, 
          "creation_date": 1403294353, 
          "post_id": 24333657, 
          "score": 1, 
          "body_markdown": "What does your answer add to Scott&#39;s or Glen&#39;s?", 
          "owner": {
            "user_id": 1120015, 
            "profile_image": "http://i.stack.imgur.com/ID1fe.png?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 20830, 
            "link": "http://stackoverflow.com/users/1120015/uri-agassi", 
            "accept_rate": 62, 
            "display_name": "Uri Agassi"
          }
        }, 
        {
          "body": "It&#39;s concise, less is more. Their answers are good and detailed, but I missed them when looking through. Unfortunately there are a lot of answers to this and a lot of them are long, obsolete and complicated and Scott and Glen&#39;s good answers got lost in that (I will give upvotes to help with that). I wonder if my answer might be improved by reducing it to three lines by knocking out the exists() and error message.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 1120015, 
            "profile_image": "http://i.stack.imgur.com/ID1fe.png?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 20830, 
            "link": "http://stackoverflow.com/users/1120015/uri-agassi", 
            "accept_rate": 62, 
            "display_name": "Uri Agassi"
          }, 
          "comment_id": 37627698, 
          "creation_date": 1403338713, 
          "post_id": 24333657, 
          "score": 3, 
          "body_markdown": "It&#39;s concise, less is more. Their answers are good and detailed, but I missed them when looking through. Unfortunately there are a lot of answers to this and a lot of them are long, obsolete and complicated and Scott and Glen&#39;s good answers got lost in that (I will give upvotes to help with that). I wonder if my answer might be improved by reducing it to three lines by knocking out the exists() and error message.", 
          "owner": {
            "user_id": 969833, 
            "profile_image": "https://www.gravatar.com/avatar/318354cb1336e54028106b961471058b?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 162, 
            "link": "http://stackoverflow.com/users/969833/kevin-sadler", 
            "display_name": "Kevin Sadler"
          }
        }
      ], 
      "creation_date": 1403289506, 
      "comment_count": 2, 
      "score": 4, 
      "body_markdown": "In Java 7 it is easy...\r\n\r\n    File src = new File(&quot;original.txt&quot;);\r\n    File target = new File(&quot;copy.txt&quot;);\r\n\r\n    Files.copy(src.toPath(), target.toPath(), StandardCopyOption.REPLACE_EXISTING);", 
      "owner": {
        "user_id": 969833, 
        "profile_image": "https://www.gravatar.com/avatar/318354cb1336e54028106b961471058b?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 162, 
        "link": "http://stackoverflow.com/users/969833/kevin-sadler", 
        "display_name": "Kevin Sadler"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1403338848, 
      "answer_id": 24333657
    }, 
    {
      "body": "<p>What you should use is:</p>\n\n<pre><code>String[] parts = sScrores.trim().split(\"\\\\s+\", 2);\n</code></pre>\n\n<p>Then you will have an array with the number at index 0, and the name in index 1.</p>\n\n<pre><code>int theNumber = Integer.parseInt(parts[0].trim();\nString theName = parts[1].trim();\n</code></pre>\n\n<p>You could re-write the while-loop like so:</p>\n\n<pre><code>String sScores=brScores.readLine().trim();\nwhile (sScores!=null){\n        String[] parts = sScrores.trim().split(\" +\");\n        int theNumber = Integer.parseInt(parts[0].trim();\n        if (theNumber &lt; score &amp;&amp;     inserted==false){\n                vScores.add(score+\"\\t\"+player+\"\\t\"+rank);\n                inserted=true;\n        }\n        vScores.add(sScores);\n        sScores=brScores.readLine();\n}\n</code></pre>\n\n<p>Personally, I would add a new <code>HighScore</code> class to aid in parsing the file.</p>\n\n<pre><code>class HighScore {\n\n    public final int score;\n    public final String name;\n    private HighScore(int scoreP, int nameP) {\n        score = scoreP;\n        name = nameP;\n    }\n\n    public String toString() {\n        return score + \"  \" + name;\n    }\n\n    public static HighScore fromLine(String line) {\n        String[] parts = line.split(\" +\");\n        return new HighScore(Integer.parseInt(parts[0].trim()), parts[1].trim());\n    }\n}\n</code></pre>\n", 
      "question_id": 4889241, 
      "last_activity_date": 1296754330, 
      "comments": [
        {
          "body": "Was writing the same thing :P", 
          "edited": false, 
          "comment_id": 5439315, 
          "creation_date": 1296753140, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "Was writing the same thing :P", 
          "owner": {
            "user_id": 327079, 
            "profile_image": "https://www.gravatar.com/avatar/ea2a196112e8f4f1020417de83d56e60?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1380, 
            "link": "http://stackoverflow.com/users/327079/jjczopek", 
            "accept_rate": 63, 
            "display_name": "jjczopek"
          }
        }, 
        {
          "body": "@jjc, you were right.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 327079, 
            "profile_image": "https://www.gravatar.com/avatar/ea2a196112e8f4f1020417de83d56e60?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1380, 
            "link": "http://stackoverflow.com/users/327079/jjczopek", 
            "accept_rate": 63, 
            "display_name": "jjczopek"
          }, 
          "comment_id": 5439322, 
          "creation_date": 1296753164, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "@jjc, you were right.", 
          "owner": {
            "user_id": 2598, 
            "profile_image": "https://www.gravatar.com/avatar/d787caaf04b85641692a24099fcee990?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 65710, 
            "link": "http://stackoverflow.com/users/2598/jjnguy", 
            "accept_rate": 88, 
            "display_name": "jjnguy"
          }
        }, 
        {
          "body": "make that <code>.split(&quot; +&quot;)</code>", 
          "edited": false, 
          "comment_id": 5439323, 
          "creation_date": 1296753167, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "make that `.split(&quot; +&quot;)`", 
          "owner": {
            "user_id": 342852, 
            "profile_image": "http://i.stack.imgur.com/cifUt.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 116598, 
            "link": "http://stackoverflow.com/users/342852/sean-patrick-floyd", 
            "accept_rate": 92, 
            "display_name": "Sean Patrick Floyd"
          }
        }, 
        {
          "body": "where would i put that code?", 
          "edited": false, 
          "comment_id": 5439326, 
          "creation_date": 1296753187, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "where would i put that code?", 
          "owner": {
            "user_id": 525965, 
            "profile_image": "https://www.gravatar.com/avatar/5d32959fd5e2c6c3842c373f0a38c6a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2987, 
            "link": "http://stackoverflow.com/users/525965/newbie", 
            "accept_rate": 96, 
            "display_name": "newbie"
          }
        }, 
        {
          "body": "@newbie, see my edits.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 525965, 
            "profile_image": "https://www.gravatar.com/avatar/5d32959fd5e2c6c3842c373f0a38c6a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2987, 
            "link": "http://stackoverflow.com/users/525965/newbie", 
            "accept_rate": 96, 
            "display_name": "newbie"
          }, 
          "comment_id": 5439369, 
          "creation_date": 1296753331, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "@newbie, see my edits.", 
          "owner": {
            "user_id": 2598, 
            "profile_image": "https://www.gravatar.com/avatar/d787caaf04b85641692a24099fcee990?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 65710, 
            "link": "http://stackoverflow.com/users/2598/jjnguy", 
            "accept_rate": 88, 
            "display_name": "jjnguy"
          }
        }, 
        {
          "body": "@Sean, good point.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 342852, 
            "profile_image": "http://i.stack.imgur.com/cifUt.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 116598, 
            "link": "http://stackoverflow.com/users/342852/sean-patrick-floyd", 
            "accept_rate": 92, 
            "display_name": "Sean Patrick Floyd"
          }, 
          "comment_id": 5439426, 
          "creation_date": 1296753542, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "@Sean, good point.", 
          "owner": {
            "user_id": 2598, 
            "profile_image": "https://www.gravatar.com/avatar/d787caaf04b85641692a24099fcee990?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 65710, 
            "link": "http://stackoverflow.com/users/2598/jjnguy", 
            "accept_rate": 88, 
            "display_name": "jjnguy"
          }
        }, 
        {
          "body": "where would i put this code? String theName = parts[1].trim();", 
          "edited": false, 
          "comment_id": 5439438, 
          "creation_date": 1296753568, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "where would i put this code? String theName = parts[1].trim();", 
          "owner": {
            "user_id": 525965, 
            "profile_image": "https://www.gravatar.com/avatar/5d32959fd5e2c6c3842c373f0a38c6a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2987, 
            "link": "http://stackoverflow.com/users/525965/newbie", 
            "accept_rate": 96, 
            "display_name": "newbie"
          }
        }, 
        {
          "body": "@newbie, you don&#39;t need that in your code I don&#39;t believe.  (from what I can see)", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 525965, 
            "profile_image": "https://www.gravatar.com/avatar/5d32959fd5e2c6c3842c373f0a38c6a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2987, 
            "link": "http://stackoverflow.com/users/525965/newbie", 
            "accept_rate": 96, 
            "display_name": "newbie"
          }, 
          "comment_id": 5439453, 
          "creation_date": 1296753612, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "@newbie, you don&#39;t need that in your code I don&#39;t believe.  (from what I can see)", 
          "owner": {
            "user_id": 2598, 
            "profile_image": "https://www.gravatar.com/avatar/d787caaf04b85641692a24099fcee990?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 65710, 
            "link": "http://stackoverflow.com/users/2598/jjnguy", 
            "accept_rate": 88, 
            "display_name": "jjnguy"
          }
        }, 
        {
          "body": "@jjnguy where would i String theName = parts[1].trim(); code so that it would not affect the format of my file?", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 2598, 
            "profile_image": "https://www.gravatar.com/avatar/d787caaf04b85641692a24099fcee990?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 65710, 
            "link": "http://stackoverflow.com/users/2598/jjnguy", 
            "accept_rate": 88, 
            "display_name": "jjnguy"
          }, 
          "comment_id": 5439463, 
          "creation_date": 1296753666, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "@jjnguy where would i String theName = parts[1].trim(); code so that it would not affect the format of my file?", 
          "owner": {
            "user_id": 525965, 
            "profile_image": "https://www.gravatar.com/avatar/5d32959fd5e2c6c3842c373f0a38c6a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2987, 
            "link": "http://stackoverflow.com/users/525965/newbie", 
            "accept_rate": 96, 
            "display_name": "newbie"
          }
        }, 
        {
          "body": "@newbie, I would kinda change the way you are keeping track of your high scores.  I will add some more info.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 525965, 
            "profile_image": "https://www.gravatar.com/avatar/5d32959fd5e2c6c3842c373f0a38c6a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2987, 
            "link": "http://stackoverflow.com/users/525965/newbie", 
            "accept_rate": 96, 
            "display_name": "newbie"
          }, 
          "comment_id": 5439502, 
          "creation_date": 1296753789, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "@newbie, I would kinda change the way you are keeping track of your high scores.  I will add some more info.", 
          "owner": {
            "user_id": 2598, 
            "profile_image": "https://www.gravatar.com/avatar/d787caaf04b85641692a24099fcee990?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 65710, 
            "link": "http://stackoverflow.com/users/2598/jjnguy", 
            "accept_rate": 88, 
            "display_name": "jjnguy"
          }
        }, 
        {
          "body": "@jinguy there&#39;s an error Exception occurred during event dispatching: java.lang.NumberFormatException: For input string: &quot;850        joy        Galaxion&quot;", 
          "edited": false, 
          "comment_id": 5439534, 
          "creation_date": 1296753890, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "@jinguy there&#39;s an error Exception occurred during event dispatching:\njava.lang.NumberFormatException: For input string: &quot;850        joy        Galaxion&quot;", 
          "owner": {
            "user_id": 525965, 
            "profile_image": "https://www.gravatar.com/avatar/5d32959fd5e2c6c3842c373f0a38c6a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2987, 
            "link": "http://stackoverflow.com/users/525965/newbie", 
            "accept_rate": 96, 
            "display_name": "newbie"
          }
        }, 
        {
          "body": "@jjnguy here&#39;s an error Exception occurred during event dispatching: java.lang.NumberFormatException: For input string: &quot;850 joy Galaxion&quot;", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 2598, 
            "profile_image": "https://www.gravatar.com/avatar/d787caaf04b85641692a24099fcee990?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 65710, 
            "link": "http://stackoverflow.com/users/2598/jjnguy", 
            "accept_rate": 88, 
            "display_name": "jjnguy"
          }, 
          "comment_id": 5439581, 
          "creation_date": 1296754076, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "@jjnguy here&#39;s an error Exception occurred during event dispatching: java.lang.NumberFormatException: For input string: &quot;850 joy Galaxion&quot;", 
          "owner": {
            "user_id": 525965, 
            "profile_image": "https://www.gravatar.com/avatar/5d32959fd5e2c6c3842c373f0a38c6a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2987, 
            "link": "http://stackoverflow.com/users/525965/newbie", 
            "accept_rate": 96, 
            "display_name": "newbie"
          }
        }, 
        {
          "body": "@jjnguy should i put try and catch even though i already throw IOException?", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 2598, 
            "profile_image": "https://www.gravatar.com/avatar/d787caaf04b85641692a24099fcee990?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 65710, 
            "link": "http://stackoverflow.com/users/2598/jjnguy", 
            "accept_rate": 88, 
            "display_name": "jjnguy"
          }, 
          "comment_id": 5439634, 
          "creation_date": 1296754339, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "@jjnguy should i put try and catch even though i already throw IOException?", 
          "owner": {
            "user_id": 525965, 
            "profile_image": "https://www.gravatar.com/avatar/5d32959fd5e2c6c3842c373f0a38c6a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2987, 
            "link": "http://stackoverflow.com/users/525965/newbie", 
            "accept_rate": 96, 
            "display_name": "newbie"
          }
        }, 
        {
          "body": "@newbie, no.  You should read the javadocs for <code>split()</code> <a href=\"http://download.oracle.com/javase/6/docs/api/java/lang/String.html\" rel=\"nofollow\">download.oracle.com/javase/6/docs/api/java/lang/String.html</a>", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 525965, 
            "profile_image": "https://www.gravatar.com/avatar/5d32959fd5e2c6c3842c373f0a38c6a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2987, 
            "link": "http://stackoverflow.com/users/525965/newbie", 
            "accept_rate": 96, 
            "display_name": "newbie"
          }, 
          "comment_id": 5439649, 
          "creation_date": 1296754384, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "@newbie, no.  You should read the javadocs for `split()` http://download.oracle.com/javase/6/docs/api/java/lang/String.html", 
          "owner": {
            "user_id": 2598, 
            "profile_image": "https://www.gravatar.com/avatar/d787caaf04b85641692a24099fcee990?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 65710, 
            "link": "http://stackoverflow.com/users/2598/jjnguy", 
            "accept_rate": 88, 
            "display_name": "jjnguy"
          }
        }, 
        {
          "body": "@newbie, also, you should probably change the split line to - <code>sScrores.trim().split(&quot;\\\\s+&quot;, 2);</code>", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 525965, 
            "profile_image": "https://www.gravatar.com/avatar/5d32959fd5e2c6c3842c373f0a38c6a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2987, 
            "link": "http://stackoverflow.com/users/525965/newbie", 
            "accept_rate": 96, 
            "display_name": "newbie"
          }, 
          "comment_id": 5439668, 
          "creation_date": 1296754452, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "@newbie, also, you should probably change the split line to - `sScrores.trim().split(&quot;\\\\s+&quot;, 2);`", 
          "owner": {
            "user_id": 2598, 
            "profile_image": "https://www.gravatar.com/avatar/d787caaf04b85641692a24099fcee990?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 65710, 
            "link": "http://stackoverflow.com/users/2598/jjnguy", 
            "accept_rate": 88, 
            "display_name": "jjnguy"
          }
        }, 
        {
          "body": "@jjinguy THANK YOU VERY MUCH... you are a life saver.. I&#39;ll read the link you gave me. Thank you again!", 
          "edited": false, 
          "comment_id": 5439734, 
          "creation_date": 1296754750, 
          "post_id": 4889280, 
          "score": 1, 
          "body_markdown": "@jjinguy THANK YOU VERY MUCH... you are a life saver.. I&#39;ll read the link you gave me. Thank you again!", 
          "owner": {
            "user_id": 525965, 
            "profile_image": "https://www.gravatar.com/avatar/5d32959fd5e2c6c3842c373f0a38c6a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2987, 
            "link": "http://stackoverflow.com/users/525965/newbie", 
            "accept_rate": 96, 
            "display_name": "newbie"
          }
        }, 
        {
          "body": "@newbie, You are welcome, glad I could help!", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 525965, 
            "profile_image": "https://www.gravatar.com/avatar/5d32959fd5e2c6c3842c373f0a38c6a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2987, 
            "link": "http://stackoverflow.com/users/525965/newbie", 
            "accept_rate": 96, 
            "display_name": "newbie"
          }, 
          "comment_id": 5440101, 
          "creation_date": 1296756200, 
          "post_id": 4889280, 
          "score": 0, 
          "body_markdown": "@newbie, You are welcome, glad I could help!", 
          "owner": {
            "user_id": 2598, 
            "profile_image": "https://www.gravatar.com/avatar/d787caaf04b85641692a24099fcee990?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 65710, 
            "link": "http://stackoverflow.com/users/2598/jjnguy", 
            "accept_rate": 88, 
            "display_name": "jjnguy"
          }
        }
      ], 
      "creation_date": 1296753079, 
      "comment_count": 17, 
      "score": 3, 
      "body_markdown": "What you should use is:\r\n\r\n    String[] parts = sScrores.trim().split(&quot;\\\\s+&quot;, 2);\r\n\r\nThen you will have an array with the number at index 0, and the name in index 1.\r\n\r\n    int theNumber = Integer.parseInt(parts[0].trim();\r\n    String theName = parts[1].trim();\r\n\r\nYou could re-write the while-loop like so:\r\n\r\n    String sScores=brScores.readLine().trim();\r\n    while (sScores!=null){\r\n            String[] parts = sScrores.trim().split(&quot; +&quot;);\r\n            int theNumber = Integer.parseInt(parts[0].trim();\r\n            if (theNumber &lt; score &amp;&amp;     inserted==false){\r\n                    vScores.add(score+&quot;\\t&quot;+player+&quot;\\t&quot;+rank);\r\n                    inserted=true;\r\n            }\r\n            vScores.add(sScores);\r\n            sScores=brScores.readLine();\r\n    }\r\n\r\nPersonally, I would add a new `HighScore` class to aid in parsing the file.\r\n\r\n    class HighScore {\r\n    \r\n        public final int score;\r\n        public final String name;\r\n        private HighScore(int scoreP, int nameP) {\r\n            score = scoreP;\r\n            name = nameP;\r\n        }\r\n    \r\n        public String toString() {\r\n            return score + &quot;  &quot; + name;\r\n        }\r\n        \r\n        public static HighScore fromLine(String line) {\r\n            String[] parts = line.split(&quot; +&quot;);\r\n            return new HighScore(Integer.parseInt(parts[0].trim()), parts[1].trim());\r\n        }\r\n    }\r\n\r\n", 
      "owner": {
        "user_id": 2598, 
        "profile_image": "https://www.gravatar.com/avatar/d787caaf04b85641692a24099fcee990?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 65710, 
        "link": "http://stackoverflow.com/users/2598/jjnguy", 
        "accept_rate": 88, 
        "display_name": "jjnguy"
      }, 
      "is_accepted": true, 
      "last_edit_date": 1296754330, 
      "answer_id": 4889280
    }, 
    {
      "body": "<ol>\n<li><p>Make sure that you explicitly close the ObjectOutputStream so that all the data is written.</p></li>\n<li><p>Your problem is an IOException. However, the backtrace will tell you what's going on: trouble opening, reading, what? you can call printStackTrace(), but better you can use a debugging and just look at the stack trace.</p></li>\n</ol>\n", 
      "question_id": 8662844, 
      "last_activity_date": 1325122445, 
      "comments": [
        {
          "body": "I&#39;ve closed the ObjectOutputStream and problem persists. printStackTrace() gives me <code>Caused by: java.io.InvalidClassException: clinica.Medico; no valid constructor</code> but looking at my constructor I can&#39;t see what the problem is", 
          "edited": false, 
          "comment_id": 10771835, 
          "creation_date": 1325157893, 
          "post_id": 8663135, 
          "score": 0, 
          "body_markdown": "I&#39;ve closed the ObjectOutputStream and problem persists. printStackTrace() gives me `Caused by: java.io.InvalidClassException: clinica.Medico; no valid constructor` but looking at my constructor I can&#39;t see what the problem is", 
          "owner": {
            "user_id": 1317865, 
            "profile_image": "https://www.gravatar.com/avatar/43646d0a94129f8bbff9f00b7c717e04?s=128&d=identicon&r=PG&f=1", 
            "user_type": "registered", 
            "reputation": 1089, 
            "link": "http://stackoverflow.com/users/1317865/favolas", 
            "accept_rate": 91, 
            "display_name": "Favolas"
          }
        }, 
        {
          "body": "Well, does Medico have a no-args constructor? I think that&#39;s required.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 1317865, 
            "profile_image": "https://www.gravatar.com/avatar/43646d0a94129f8bbff9f00b7c717e04?s=128&d=identicon&r=PG&f=1", 
            "user_type": "registered", 
            "reputation": 1089, 
            "link": "http://stackoverflow.com/users/1317865/favolas", 
            "accept_rate": 91, 
            "display_name": "Favolas"
          }, 
          "comment_id": 10782057, 
          "creation_date": 1325195673, 
          "post_id": 8663135, 
          "score": 0, 
          "body_markdown": "Well, does Medico have a no-args constructor? I think that&#39;s required.", 
          "owner": {
            "user_id": 131433, 
            "profile_image": "https://www.gravatar.com/avatar/e6eeaf8698180e971e169a925d8e0f4f?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 52083, 
            "link": "http://stackoverflow.com/users/131433/bmargulies", 
            "accept_rate": 77, 
            "display_name": "bmargulies"
          }
        }
      ], 
      "creation_date": 1325122445, 
      "comment_count": 2, 
      "score": 3, 
      "body_markdown": "1. Make sure that you explicitly close the ObjectOutputStream so that all the data is written.\r\n\r\n2. Your problem is an IOException. However, the backtrace will tell you what&#39;s going on: trouble opening, reading, what? you can call printStackTrace(), but better you can use a debugging and just look at the stack trace.\r\n\r\n", 
      "owner": {
        "user_id": 131433, 
        "profile_image": "https://www.gravatar.com/avatar/e6eeaf8698180e971e169a925d8e0f4f?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 52083, 
        "link": "http://stackoverflow.com/users/131433/bmargulies", 
        "accept_rate": 77, 
        "display_name": "bmargulies"
      }, 
      "is_accepted": true, 
      "answer_id": 8663135
    }, 
    {
      "body": "<p>To expand upon Mr. Eels comment, you can do it like this:</p>\n\n<pre><code>    File file = new File(\"C:\\\\A.txt\");\n    FileWriter writer;\n    try {\n        writer = new FileWriter(file, true);\n        PrintWriter printer = new PrintWriter(writer);\n        printer.append(\"Sue\");\n        printer.close();\n    } catch (IOException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n</code></pre>\n\n<p>Don't say we ain't good to ya!</p>\n", 
      "question_id": 10667734, 
      "last_activity_date": 1337452064, 
      "comments": [
        {
          "body": "1+ to ya, but don&#39;t forget to close the print writer in the finally block, not in the try block. You don&#39;t want any dangling resources. See my example to see what I mean.", 
          "edited": false, 
          "comment_id": 13838797, 
          "creation_date": 1337452197, 
          "post_id": 10667833, 
          "score": 1, 
          "body_markdown": "1+ to ya, but don&#39;t forget to close the print writer in the finally block, not in the try block. You don&#39;t want any dangling resources. See my example to see what I mean.", 
          "owner": {
            "user_id": 522444, 
            "profile_image": "https://www.gravatar.com/avatar/16b6783e9b99b1199c75761eaf5c0685?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 166559, 
            "link": "http://stackoverflow.com/users/522444/hovercraft-full-of-eels", 
            "accept_rate": 100, 
            "display_name": "Hovercraft Full Of Eels"
          }
        }, 
        {
          "body": "you are absolutely right - I posted before your full answer was up.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 522444, 
            "profile_image": "https://www.gravatar.com/avatar/16b6783e9b99b1199c75761eaf5c0685?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 166559, 
            "link": "http://stackoverflow.com/users/522444/hovercraft-full-of-eels", 
            "accept_rate": 100, 
            "display_name": "Hovercraft Full Of Eels"
          }, 
          "comment_id": 13839100, 
          "creation_date": 1337453967, 
          "post_id": 10667833, 
          "score": 0, 
          "body_markdown": "you are absolutely right - I posted before your full answer was up.", 
          "owner": {
            "user_id": 381161, 
            "profile_image": "https://www.gravatar.com/avatar/16abbd45683e972e2709da47c462f8b6?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1950, 
            "link": "http://stackoverflow.com/users/381161/malcolm-smith", 
            "display_name": "Malcolm Smith"
          }
        }
      ], 
      "creation_date": 1337452064, 
      "comment_count": 2, 
      "score": 3, 
      "body_markdown": "To expand upon Mr. Eels comment, you can do it like this:\r\n\r\n\t\tFile file = new File(&quot;C:\\\\A.txt&quot;);\r\n\t\tFileWriter writer;\r\n\t\ttry {\r\n\t\t\twriter = new FileWriter(file, true);\r\n\t\t\tPrintWriter printer = new PrintWriter(writer);\r\n\t\t\tprinter.append(&quot;Sue&quot;);\r\n\t\t\tprinter.close();\r\n\t\t} catch (IOException e) {\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\r\nDon&#39;t say we ain&#39;t good to ya!\r\n\r\n", 
      "owner": {
        "user_id": 381161, 
        "profile_image": "https://www.gravatar.com/avatar/16abbd45683e972e2709da47c462f8b6?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 1950, 
        "link": "http://stackoverflow.com/users/381161/malcolm-smith", 
        "display_name": "Malcolm Smith"
      }, 
      "is_accepted": false, 
      "answer_id": 10667833
    }, 
    {
      "body": "<p>Well you can program it for yourself.. it's not complicated..</p>\n\n<pre><code>String Inputstream2String (InputStream is) throws IOException \n    {\n        final int PKG_SIZE = 1024;\n        byte[] data = new byte [PKG_SIZE];\n        StringBuilder buffer = new StringBuilder(PKG_SIZE * 10);\n        int size;\n\n        size = is.read(data, 0, data.length);\n        while (size &gt; 0)\n        {\n            String str = new String(data, 0, size);\n            buffer.append(str);\n            size = is.read(data, 0, data.length);\n        }\n        return buffer.toString();\n    }\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1383927644, 
      "comments": [
        {
          "body": "Since you&#39;re using <code>buffer</code> variable locally with no chance of being shared across multiple threads you should consider changing its type to <code>StringBuilder</code>, to avoid the overhead of (useless) synchronization.", 
          "edited": false, 
          "comment_id": 29532479, 
          "creation_date": 1383906449, 
          "post_id": 15315403, 
          "score": 1, 
          "body_markdown": "Since you&#39;re using `buffer` variable locally with no chance of being shared across multiple threads you should consider changing its type to `StringBuilder`, to avoid the overhead of (useless) synchronization.", 
          "owner": {
            "user_id": 246645, 
            "profile_image": "https://www.gravatar.com/avatar/6e2994678f697a6be0f8ae4634a3f6db?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 678, 
            "link": "http://stackoverflow.com/users/246645/alex", 
            "display_name": "Alex"
          }
        }, 
        {
          "body": "That&#39;s a good point alex!. I thing that we both agree that this method isn&#39;t thread-safe in many ways. Even the input stream operations aren&#39;t thread-safe.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 246645, 
            "profile_image": "https://www.gravatar.com/avatar/6e2994678f697a6be0f8ae4634a3f6db?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 678, 
            "link": "http://stackoverflow.com/users/246645/alex", 
            "display_name": "Alex"
          }, 
          "comment_id": 29544475, 
          "creation_date": 1383927584, 
          "post_id": 15315403, 
          "score": 0, 
          "body_markdown": "That&#39;s a good point alex!. I thing that we both agree that this method isn&#39;t thread-safe in many ways. Even the input stream operations aren&#39;t thread-safe.", 
          "owner": {
            "user_id": 903998, 
            "profile_image": "http://i.stack.imgur.com/pZCd4.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 783, 
            "link": "http://stackoverflow.com/users/903998/victor", 
            "accept_rate": 69, 
            "display_name": "Victor"
          }
        }, 
        {
          "body": "If the stream contains UTF-8 character that spans across several lines, this algorithm can cut the character in two breaking the string.", 
          "edited": false, 
          "comment_id": 39269492, 
          "creation_date": 1407538065, 
          "post_id": 15315403, 
          "score": 0, 
          "body_markdown": "If the stream contains UTF-8 character that spans across several lines, this algorithm can cut the character in two breaking the string.", 
          "owner": {
            "user_id": 281508, 
            "profile_image": "https://www.gravatar.com/avatar/cef20083dd0ec9e28eb6345b534c9119?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 173, 
            "link": "http://stackoverflow.com/users/281508/vlad-lifliand", 
            "display_name": "Vlad Lifliand"
          }
        }
      ], 
      "creation_date": 1362860029, 
      "comment_count": 3, 
      "score": 3, 
      "body_markdown": "Well you can program it for yourself.. it&#39;s not complicated..\r\n\r\n    String Inputstream2String (InputStream is) throws IOException \r\n        {\r\n            final int PKG_SIZE = 1024;\r\n            byte[] data = new byte [PKG_SIZE];\r\n            StringBuilder buffer = new StringBuilder(PKG_SIZE * 10);\r\n            int size;\r\n    \r\n            size = is.read(data, 0, data.length);\r\n            while (size &gt; 0)\r\n            {\r\n                String str = new String(data, 0, size);\r\n                buffer.append(str);\r\n                size = is.read(data, 0, data.length);\r\n            }\r\n            return buffer.toString();\r\n        }", 
      "owner": {
        "user_id": 903998, 
        "profile_image": "http://i.stack.imgur.com/pZCd4.jpg?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 783, 
        "link": "http://stackoverflow.com/users/903998/victor", 
        "accept_rate": 69, 
        "display_name": "Victor"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1383927644, 
      "answer_id": 15315403
    }, 
    {
      "body": "<pre><code>InputStreamReader i=new InputStreamReader(s);\nBufferedReader str=new BufferedReader(i);\nString msg=str.readLine();\nSystem.out.println(msg);\n</code></pre>\n\n<p>here s is your InputStream object which will get convert into String :)</p>\n", 
      "question_id": 309424, 
      "last_activity_date": 1369925544, 
      "comments": [
        {
          "body": "will it work if last 2 lines are inserted in <code>do-while</code> loop?", 
          "edited": false, 
          "comment_id": 34967643, 
          "creation_date": 1396870466, 
          "post_id": 16839350, 
          "score": 0, 
          "body_markdown": "will it work if last 2 lines are inserted in `do-while` loop?", 
          "owner": {
            "user_id": 1851302, 
            "profile_image": "http://i.stack.imgur.com/IwbKa.jpg?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 472, 
            "link": "http://stackoverflow.com/users/1851302/knu", 
            "accept_rate": 60, 
            "display_name": "KNU"
          }
        }, 
        {
          "body": "will work only if the InputStream is one-liner", 
          "edited": false, 
          "comment_id": 35820615, 
          "creation_date": 1398846133, 
          "post_id": 16839350, 
          "score": 2, 
          "body_markdown": "will work only if the InputStream is one-liner", 
          "owner": {
            "user_id": 85072, 
            "profile_image": "https://www.gravatar.com/avatar/78c65ca843cf149e277aa2a6b265247a?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 674, 
            "link": "http://stackoverflow.com/users/85072/stavros", 
            "accept_rate": 96, 
            "display_name": "Stavros"
          }
        }
      ], 
      "creation_date": 1369925544, 
      "comment_count": 2, 
      "score": 3, 
      "body_markdown": "\r\n    InputStreamReader i=new InputStreamReader(s);\r\n    BufferedReader str=new BufferedReader(i);\r\n    String msg=str.readLine();\r\n    System.out.println(msg);\r\n\r\n\r\nhere s is your InputStream object which will get convert into String :)", 
      "owner": {
        "user_id": 2435085, 
        "profile_image": "https://www.gravatar.com/avatar/1c82e330993bd5e8529ac6f13eaed032?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 55, 
        "link": "http://stackoverflow.com/users/2435085/omkar-khot", 
        "display_name": "Omkar Khot"
      }, 
      "is_accepted": false, 
      "answer_id": 16839350
    }, 
    {
      "body": "<p>This one is nice because:</p>\n\n<ul>\n<li>Hand safety the Charset.</li>\n<li>You control the read buffer size.</li>\n<li>You can provision the length of the builder and can be not exactly.</li>\n<li>Is free from library dependencies.</li>\n<li>Is for Java 7 or higher.</li>\n</ul>\n\n<p><em>What the for?</em></p>\n\n<pre><code>public static String convertStreamToString(InputStream is) { \n   StringBuilder sb = new StringBuilder(2048); // Define a size if you have an idea of it.\n   char[] read = new char[128]; // Your buffer size.\n   try (InputStreamReader ir = new InputStreamReader(is, StandardCharsets.UTF_8)) {\n     for (int i; -1 != (i = ir.read(read)); sb.append(read, 0, i));\n   }\n   return sb.toString();\n}\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1405455889, 
      "creation_date": 1402213590, 
      "comment_count": 0, 
      "score": 3, 
      "body_markdown": "This one is nice because:\r\n\r\n - Hand safety the Charset.\r\n - You control the read buffer size.\r\n - You can provision the length of the builder and can be not exactly.\r\n - Is free from library dependencies.\r\n - Is for Java 7 or higher.\r\n\r\n*What the for?*\r\n\r\n    public static String convertStreamToString(InputStream is) { \r\n       StringBuilder sb = new StringBuilder(2048); // Define a size if you have an idea of it.\r\n       char[] read = new char[128]; // Your buffer size.\r\n       try (InputStreamReader ir = new InputStreamReader(is, StandardCharsets.UTF_8)) {\r\n         for (int i; -1 != (i = ir.read(read)); sb.append(read, 0, i));\r\n       }\r\n       return sb.toString();\r\n    }", 
      "owner": {
        "user_id": 980442, 
        "profile_image": "https://www.gravatar.com/avatar/c3dfc2add126de8ee67917a8090f0202?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 3369, 
        "link": "http://stackoverflow.com/users/980442/daniel-de-le%c3%b3n", 
        "accept_rate": 25, 
        "display_name": "Daniel De Le&#243;n"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1405455889, 
      "answer_id": 24104048
    }, 
    {
      "body": "<p>The format of each line is always the same : an integer, followed by a tab, followed by the player name.</p>\n\n<p>Just find the index of the the tab character in each line, and substring from 0 (inclusive) to this index (exclusive), before parsing the score. </p>\n\n<p>The player name can be obtained by taking the substring from the tab index +1 (inclusive) up the the length of the line (exclusive).</p>\n", 
      "question_id": 4889241, 
      "last_activity_date": 1296753521, 
      "comments": [
        {
          "body": "This is also a good solution.", 
          "edited": false, 
          "comment_id": 5439440, 
          "creation_date": 1296753577, 
          "post_id": 4889358, 
          "score": 0, 
          "body_markdown": "This is also a good solution.", 
          "owner": {
            "user_id": 2598, 
            "profile_image": "https://www.gravatar.com/avatar/d787caaf04b85641692a24099fcee990?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 65710, 
            "link": "http://stackoverflow.com/users/2598/jjnguy", 
            "accept_rate": 88, 
            "display_name": "jjnguy"
          }
        }, 
        {
          "body": "God, I have so much to learn! Thanks. :)", 
          "edited": false, 
          "comment_id": 5439781, 
          "creation_date": 1296754904, 
          "post_id": 4889358, 
          "score": 0, 
          "body_markdown": "God, I have so much to learn! Thanks. :)", 
          "owner": {
            "user_id": 525965, 
            "profile_image": "https://www.gravatar.com/avatar/5d32959fd5e2c6c3842c373f0a38c6a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2987, 
            "link": "http://stackoverflow.com/users/525965/newbie", 
            "accept_rate": 96, 
            "display_name": "newbie"
          }
        }
      ], 
      "creation_date": 1296753521, 
      "comment_count": 2, 
      "score": 2, 
      "body_markdown": "The format of each line is always the same : an integer, followed by a tab, followed by the player name.\r\n\r\nJust find the index of the the tab character in each line, and substring from 0 (inclusive) to this index (exclusive), before parsing the score. \r\n\r\nThe player name can be obtained by taking the substring from the tab index +1 (inclusive) up the the length of the line (exclusive).", 
      "owner": {
        "user_id": 571407, 
        "profile_image": "https://www.gravatar.com/avatar/2f0d9dec16bae1e06552af55ddefc11f?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 272951, 
        "link": "http://stackoverflow.com/users/571407/jb-nizet", 
        "accept_rate": 100, 
        "display_name": "JB Nizet"
      }, 
      "is_accepted": false, 
      "answer_id": 4889358
    }, 
    {
      "body": "<p>If you catch an exception dont just write something to system.out but print the stacktrace this will usually give you a clue whats wrong</p>\n\n<pre><code>try {\n            FicheiroObjectos file = new FicheiroObjectos();\n            file.abreEscrita(\"Medicos.dat\");\n            file.escreveFicheiroMedicos();\n            file.fechaEscrita();\n        } catch (IOException e) {\n           e.printStackTrace();\n        }\n</code></pre>\n", 
      "question_id": 8662844, 
      "last_activity_date": 1325140971, 
      "creation_date": 1325140971, 
      "comment_count": 0, 
      "score": 2, 
      "body_markdown": "If you catch an exception dont just write something to system.out but print the stacktrace this will usually give you a clue whats wrong\r\n\r\n    try {\r\n                FicheiroObjectos file = new FicheiroObjectos();\r\n                file.abreEscrita(&quot;Medicos.dat&quot;);\r\n                file.escreveFicheiroMedicos();\r\n                file.fechaEscrita();\r\n            } catch (IOException e) {\r\n               e.printStackTrace();\r\n            }\r\n\r\n\r\n", 
      "owner": {
        "user_id": 26483, 
        "profile_image": "https://www.gravatar.com/avatar/a693b56ccff8e0dec3c104312b262daa?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 4837, 
        "link": "http://stackoverflow.com/users/26483/peter", 
        "display_name": "Peter"
      }, 
      "is_accepted": false, 
      "answer_id": 8664757
    }, 
    {
      "body": "<p>The below code worked for me. </p>\n\n<pre><code>    URL url = MyClass.class.getResource(\"/\" + configFileName);\n    BufferedInputStream bi = (BufferedInputStream) url.getContent();\n    byte[] buffer = new byte[bi.available() ];\n    int bytesRead = bi.read(buffer);\n    String out = new String(buffer);\n</code></pre>\n\n<p>Please note, according to Java docs, the available() method might not work with InputStream but always works with BufferedInputStream.\nIn case you don't want to use available() method we can always use the below code</p>\n\n<pre><code>    URL url = MyClass.class.getResource(\"/\" + configFileName);\n    BufferedInputStream bi = (BufferedInputStream) url.getContent();\n    File f = new File(url.getPath());\n    byte[] buffer = new byte[ (int) f.length()];\n    int bytesRead = bi.read(buffer);\n    String out = new String(buffer);\n</code></pre>\n\n<p>I am not sure if there will be any encoding issues. Please comment, if there will be any issues with the code</p>\n", 
      "question_id": 309424, 
      "last_activity_date": 1343125159, 
      "comments": [
        {
          "body": "The whole point of using <code>InputStream</code> is, that a) you don&#39;t know the length of the <i>complete</i> stream (which bails out anything depending on <code>available</code>) and b) the stream can be anything - a file, a socket, something internal (which bails out anything based on <code>File.size()</code>). Regarding <code>available</code>: This will cut off data if the stream is longer than the buffer size.", 
          "edited": false, 
          "comment_id": 15400641, 
          "creation_date": 1343125567, 
          "post_id": 11628754, 
          "score": 2, 
          "body_markdown": "The whole point of using `InputStream` is, that a) you don&#39;t know the length of the _complete_ stream (which bails out anything depending on `available`) and b) the stream can be anything - a file, a socket, something internal (which bails out anything based on `File.size()`). Regarding `available`: This will cut off data if the stream is longer than the buffer size.", 
          "owner": {
            "user_id": 947357, 
            "profile_image": "https://www.gravatar.com/avatar/0043c169301a856ae07c80debbf90bd8?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 25110, 
            "link": "http://stackoverflow.com/users/947357/a-h", 
            "accept_rate": 75, 
            "display_name": "A.H."
          }
        }
      ], 
      "creation_date": 1343125159, 
      "comment_count": 1, 
      "score": 2, 
      "body_markdown": "The below code worked for me. \r\n\r\n\r\n\t\tURL url = MyClass.class.getResource(&quot;/&quot; + configFileName);\r\n\t\tBufferedInputStream bi = (BufferedInputStream) url.getContent();\r\n\t\tbyte[] buffer = new byte[bi.available() ];\r\n\t\tint bytesRead = bi.read(buffer);\r\n\t\tString out = new String(buffer);\r\n\r\nPlease note, according to Java docs, the available() method might not work with InputStream but always works with BufferedInputStream.\r\nIn case you don&#39;t want to use available() method we can always use the below code\r\n\r\n\t\tURL url = MyClass.class.getResource(&quot;/&quot; + configFileName);\r\n\t\tBufferedInputStream bi = (BufferedInputStream) url.getContent();\r\n\t\tFile f = new File(url.getPath());\r\n\t\tbyte[] buffer = new byte[ (int) f.length()];\r\n\t\tint bytesRead = bi.read(buffer);\r\n\t\tString out = new String(buffer);\r\n\r\nI am not sure if there will be any encoding issues. Please comment, if there will be any issues with the code", 
      "owner": {
        "user_id": 1548325, 
        "profile_image": "https://www.gravatar.com/avatar/75ac98dd52c8b393234b824f55dcdc49?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 51, 
        "link": "http://stackoverflow.com/users/1548325/anand-n", 
        "display_name": "Anand N"
      }, 
      "is_accepted": false, 
      "answer_id": 11628754
    }, 
    {
      "body": "<pre><code>ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(f,true));\n</code></pre>\n\n<p>if you want to append to the file</p>\n", 
      "question_id": 13232582, 
      "last_activity_date": 1352120508, 
      "creation_date": 1352120508, 
      "comment_count": 0, 
      "score": 2, 
      "body_markdown": "    ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(f,true));\r\n\r\nif you want to append to the file", 
      "owner": {
        "user_id": 1767992, 
        "profile_image": "https://www.gravatar.com/avatar/e39347347f9c841904af55f2ca58b840?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 2721, 
        "link": "http://stackoverflow.com/users/1767992/thedayofcondor", 
        "display_name": "thedayofcondor"
      }, 
      "is_accepted": true, 
      "answer_id": 13232671
    }, 
    {
      "body": "<pre><code>public static void copyFile(File src, File dst) throws IOException\n{\n    long p = 0, dp, size;\n    FileChannel in = null, out = null;\n\n    try\n    {\n        if (!dst.exists()) dst.createNewFile();\n\n        in = new FileInputStream(src).getChannel();\n        out = new FileOutputStream(dst).getChannel();\n        size = in.size();\n\n        while ((dp = out.transferFrom(in, p, size)) &gt; 0)\n        {\n            p += dp;\n        }\n    }\n    finally {\n        try\n        {\n            if (out != null) out.close();\n        }\n        finally {\n            if (in != null) in.close();\n        }\n    }\n}\n</code></pre>\n", 
      "question_id": 106770, 
      "last_activity_date": 1389835545, 
      "comments": [
        {
          "body": "So the difference from the top accepted answer is that you&#39;ve got the transferFrom in a while loop?", 
          "edited": false, 
          "comment_id": 31852240, 
          "creation_date": 1389872497, 
          "post_id": 21151754, 
          "score": 0, 
          "body_markdown": "So the difference from the top accepted answer is that you&#39;ve got the transferFrom in a while loop?", 
          "owner": {
            "user_id": 243245, 
            "profile_image": "https://www.gravatar.com/avatar/aed5c13647d581ae231f019a886e05a8?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18459, 
            "link": "http://stackoverflow.com/users/243245/rup", 
            "accept_rate": 70, 
            "display_name": "Rup"
          }
        }, 
        {
          "body": "Doesn&#39;t even compile, and the createNewFile() call is redundant and wasteful.", 
          "edited": false, 
          "comment_id": 38565779, 
          "creation_date": 1405763014, 
          "post_id": 21151754, 
          "score": 0, 
          "body_markdown": "Doesn&#39;t even compile, and the createNewFile() call is redundant and wasteful.", 
          "owner": {
            "user_id": 207421, 
            "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 124600, 
            "link": "http://stackoverflow.com/users/207421/ejp", 
            "accept_rate": 80, 
            "display_name": "EJP"
          }
        }
      ], 
      "creation_date": 1389835545, 
      "comment_count": 2, 
      "score": 2, 
      "body_markdown": "    public static void copyFile(File src, File dst) throws IOException\r\n    {\r\n        long p = 0, dp, size;\r\n        FileChannel in = null, out = null;\r\n    \r\n        try\r\n        {\r\n            if (!dst.exists()) dst.createNewFile();\r\n            \r\n            in = new FileInputStream(src).getChannel();\r\n            out = new FileOutputStream(dst).getChannel();\r\n            size = in.size();\r\n            \r\n            while ((dp = out.transferFrom(in, p, size)) &gt; 0)\r\n            {\r\n                p += dp;\r\n            }\r\n        }\r\n        finally {\r\n            try\r\n            {\r\n                if (out != null) out.close();\r\n            }\r\n            finally {\r\n                if (in != null) in.close();\r\n            }\r\n        }\r\n    }", 
      "owner": {
        "user_id": 3200607, 
        "profile_image": "https://www.gravatar.com/avatar/7cd18c731c8e1b2b5e5d208240520385?s=128&d=identicon&r=PG&f=1", 
        "user_type": "registered", 
        "reputation": 29, 
        "link": "http://stackoverflow.com/users/3200607/user3200607", 
        "display_name": "user3200607"
      }, 
      "is_accepted": false, 
      "answer_id": 21151754
    }, 
    {
      "body": "<p>Try these 4 statements..</p>\n\n<p>As per the point recalled by Fred, it is not recommended to append a <code>String</code> with <code>+=</code> operator since every time a new <code>char</code> is appended to the existing <code>String</code> creating a new <code>String</code> object again and assigning its address to <code>st</code> while the old <code>st</code> object becomes garbage.</p>\n\n<pre><code>public String convertStreamToString(InputStream is)\n{\nint k;\n     StringBuffer sb=new StringBuffer();\n     while((k=fin.read())!=-1)\n     {\n     sb.append((char)k);\n     }\nreturn sb.toString();\n}\n</code></pre>\n\n<hr>\n\n<p><strong>Not recommended, but this is also a way</strong></p>\n\n<pre><code>public String convertStreamToString(InputStream is) { \n    int k;\n    String st=\"\";\n    while((k=is.read())!=-1)\n    {\n    st+=(char)k;\n    }\nreturn st;\n}\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1393004882, 
      "comments": [
        {
          "body": "String concatenation in a loop with the <code>+=</code> operator is not a good idea. It is better to use a <code>StringBuilder</code> or a <code>StringBuffer</code>.", 
          "edited": false, 
          "comment_id": 33186444, 
          "creation_date": 1392909874, 
          "post_id": 21619906, 
          "score": 1, 
          "body_markdown": "String concatenation in a loop with the `+=` operator is not a good idea. It is better to use a `StringBuilder` or a `StringBuffer`.", 
          "owner": {
            "user_id": 2470524, 
            "profile_image": "https://www.gravatar.com/avatar/30572a95a69e05b8c921c1ac6672cb63?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 452, 
            "link": "http://stackoverflow.com/users/2470524/fred", 
            "accept_rate": 0, 
            "display_name": "Fred"
          }
        }
      ], 
      "creation_date": 1391750231, 
      "comment_count": 1, 
      "score": 2, 
      "body_markdown": "Try these 4 statements..\r\n\r\nAs per the point recalled by Fred, it is not recommended to append a `String` with `+=` operator since every time a new `char` is appended to the existing `String` creating a new `String` object again and assigning its address to `st` while the old `st` object becomes garbage.\r\n\r\n    public String convertStreamToString(InputStream is)\r\n    {\r\n    int k;\r\n         StringBuffer sb=new StringBuffer();\r\n         while((k=fin.read())!=-1)\r\n         {\r\n         sb.append((char)k);\r\n         }\r\n    return sb.toString();\r\n    }\r\n\r\n\r\n----------\r\n**Not recommended, but this is also a way**\r\n\r\n    public String convertStreamToString(InputStream is) { \r\n        int k;\r\n        String st=&quot;&quot;;\r\n        while((k=is.read())!=-1)\r\n        {\r\n        st+=(char)k;\r\n        }\r\n    return st;\r\n    }\r\n\r\n", 
      "owner": {
        "user_id": 2534090, 
        "profile_image": "https://www.gravatar.com/avatar/b044d80e3dfc035a673747915d2b0d86?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 1239, 
        "link": "http://stackoverflow.com/users/2534090/javatechnical", 
        "accept_rate": 37, 
        "display_name": "JavaTechnical"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1393004882, 
      "answer_id": 21619906
    }, 
    {
      "body": "<p>I'd use some Java 8 tricks.</p>\n\n<pre><code>public static String streamToString(final InputStream inputStream) throws Exception\n{\n    try\n    {\n        final BufferedReader br // buffering optional\n           = new BufferedReader(new InputStreamReader(inputStream)))\n    {\n        return br.lines().parallel().collect(Collectors.joining(\"\\n\"));\n                       // parallel optional\n    }\n    catch (IOException e)\n    {\n        throw new RuntimeException(e);\n        // whatever.\n    }\n}\n</code></pre>\n\n<p>Essentially the same as some other answers except more succinct.</p>\n", 
      "question_id": 309424, 
      "last_activity_date": 1414576181, 
      "comments": [
        {
          "body": "Would that <code>return null</code> ever get called? Either the <code>br.lines...</code> returns or an exception is thrown.", 
          "edited": false, 
          "comment_id": 38693783, 
          "creation_date": 1406106817, 
          "post_id": 24810414, 
          "score": 1, 
          "body_markdown": "Would that `return null` ever get called? Either the `br.lines...` returns or an exception is thrown.", 
          "owner": {
            "user_id": 1916917, 
            "profile_image": "https://www.gravatar.com/avatar/4f93c1f2d2f2bb64e7e6c2d092f5a08a?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 814, 
            "link": "http://stackoverflow.com/users/1916917/trengot", 
            "accept_rate": 50, 
            "display_name": "Trengot"
          }
        }
      ], 
      "creation_date": 1405619882, 
      "comment_count": 1, 
      "score": 2, 
      "body_markdown": "I&#39;d use some Java 8 tricks.\r\n\r\n    public static String streamToString(final InputStream inputStream){\r\n        try (final BufferedReader br // buffering optional\r\n              = new BufferedReader(new InputStreamReader(inputStream))){\r\n            return br.lines().parallel().collect(Collectors.joining(&quot;\\n&quot;));\r\n                           // parallel optional\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n            // whatever.\r\n        }\r\n    }\r\n\r\nEssentially the same as some other answers except more succinct.", 
      "owner": {
        "user_id": 3040627, 
        "profile_image": "https://www.gravatar.com/avatar/9e7231733dbc07f40f96db5a587ee6ca?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 1219, 
        "link": "http://stackoverflow.com/users/3040627/simon-kuang", 
        "accept_rate": 82, 
        "display_name": "Simon Kuang"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1414576181, 
      "answer_id": 24810414
    }, 
    {
      "body": "<p>This is an answer adapted from <code>org.apache.commons.io.IOUtils</code> <a href=\"http://grepcode.com/file/repo1.maven.org/maven2/commons-io/commons-io/2.4/org/apache/commons/io/IOUtils.java\" rel=\"nofollow\">source code</a>, for those want to have the apache implementation but do not want the whole library.</p>\n\n<pre><code>private static final int BUFFER_SIZE = 4 * 1024;\n\npublic static String inputStreamToString(InputStream inputStream, String charsetName)\n        throws IOException {\n    StringBuilder builder = new StringBuilder();\n    InputStreamReader reader = new InputStreamReader(inputStream, charsetName);\n    char[] buffer = new char[BUFFER_SIZE];\n    int length;\n    while ((length = reader.read(buffer)) != -1) {\n        builder.append(buffer, 0, length);\n    }\n    return builder.toString();\n}\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1407059276, 
      "creation_date": 1407059276, 
      "comment_count": 0, 
      "score": 2, 
      "body_markdown": "This is an answer adapted from `org.apache.commons.io.IOUtils` [source code](http://grepcode.com/file/repo1.maven.org/maven2/commons-io/commons-io/2.4/org/apache/commons/io/IOUtils.java), for those want to have the apache implementation but do not want the whole library.\r\n\r\n    private static final int BUFFER_SIZE = 4 * 1024;\r\n\r\n    public static String inputStreamToString(InputStream inputStream, String charsetName)\r\n            throws IOException {\r\n        StringBuilder builder = new StringBuilder();\r\n        InputStreamReader reader = new InputStreamReader(inputStream, charsetName);\r\n        char[] buffer = new char[BUFFER_SIZE];\r\n        int length;\r\n        while ((length = reader.read(buffer)) != -1) {\r\n            builder.append(buffer, 0, length);\r\n        }\r\n        return builder.toString();\r\n    }\r\n", 
      "owner": {
        "user_id": 2420519, 
        "profile_image": "https://www.gravatar.com/avatar/0d30c42d5ee2da9d89a8c146000a7dc6?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 184, 
        "link": "http://stackoverflow.com/users/2420519/dreaming-in-code", 
        "display_name": "Dreaming in Code"
      }, 
      "is_accepted": false, 
      "answer_id": 25103484
    }, 
    {
      "body": "<p>You should also surround the creation of the file with a try and catch block, and when you're done with the file close it like so:</p>\n\n<pre><code>    Scanner scan = new Scanner(System.in);\n    String id = scan.nextLine();\n    File file = new File(id + \".txt\");\n    FileWriter fileWrite = null;\n    BufferedWriter bufferedWriter = null;\n    try {\n        fileWrite = new FileWriter(file);\n        bufferedWriter = new BufferedWriter(fileWrite);\n    } catch (IOException e) {\n        e.printStackTrace();\n    } finally {\n        try {\n            scan.close();\n            fileWrite.close();\n            bufferedWriter.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n</code></pre>\n", 
      "question_id": 26030579, 
      "last_activity_date": 1411620801, 
      "creation_date": 1411619819, 
      "comment_count": 0, 
      "score": 2, 
      "body_markdown": "You should also surround the creation of the file with a try and catch block, and when you&#39;re done with the file close it like so:\r\n\r\n        Scanner scan = new Scanner(System.in);\r\n        String id = scan.nextLine();\r\n        File file = new File(id + &quot;.txt&quot;);\r\n        FileWriter fileWrite = null;\r\n        BufferedWriter bufferedWriter = null;\r\n        try {\r\n            fileWrite = new FileWriter(file);\r\n            bufferedWriter = new BufferedWriter(fileWrite);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            try {\r\n                scan.close();\r\n                fileWrite.close();\r\n                bufferedWriter.close();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }", 
      "owner": {
        "user_id": 848250, 
        "profile_image": "http://i.stack.imgur.com/w1PmQ.jpg?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 3747, 
        "link": "http://stackoverflow.com/users/848250/lu%c3%ads-ramalho", 
        "accept_rate": 86, 
        "display_name": "Lu&#237;s Ramalho"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1411620801, 
      "answer_id": 26030625
    }, 
    {
      "body": "<pre><code>import java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\n\npublic class FileWriterExample {\n    public static void main(String [] args) {\n        FileWriter fw= null;\n        File file =null;\n        try {\n            file=new File(\"WriteFile.txt\");\n            if(!file.exists()) {\n                file.createNewFile();\n            }\n            fw = new FileWriter(file);\n            fw.write(\"This is an string written to a file\");\n            fw.flush();\n            fw.close();\n            System.out.println(\"File written Succesfully\");\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre>\n", 
      "question_id": 2885173, 
      "last_activity_date": 1416479350, 
      "creation_date": 1415378044, 
      "comment_count": 0, 
      "score": 2, 
      "body_markdown": "    import java.io.File;\r\n    import java.io.FileWriter;\r\n    import java.io.IOException;\r\n\r\n    public class FileWriterExample {\r\n        public static void main(String [] args) {\r\n            FileWriter fw= null;\r\n            File file =null;\r\n            try {\r\n                file=new File(&quot;WriteFile.txt&quot;);\r\n                if(!file.exists()) {\r\n                    file.createNewFile();\r\n                }\r\n                fw = new FileWriter(file);\r\n                fw.write(&quot;This is an string written to a file&quot;);\r\n                fw.flush();\r\n                fw.close();\r\n                System.out.println(&quot;File written Succesfully&quot;);\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }", 
      "owner": {
        "user_id": 4227276, 
        "profile_image": "https://lh6.googleusercontent.com/-9b0H3ZY4qjg/AAAAAAAAAAI/AAAAAAAAABo/truinMjYriU/photo.jpg?sz=128", 
        "user_type": "registered", 
        "reputation": 46, 
        "link": "http://stackoverflow.com/users/4227276/anurag-goel", 
        "display_name": "Anurag Goel"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1416479350, 
      "answer_id": 26805827
    }, 
    {
      "body": "<p>if above mentioned table is a file.</p>\n\n<p>for first two score it will be fine but for 5 it start reading character. Might be that is causing problem.</p>\n", 
      "question_id": 4889241, 
      "last_activity_date": 1296753764, 
      "comments": [
        {
          "body": "thank you also :)", 
          "edited": false, 
          "comment_id": 5439787, 
          "creation_date": 1296754923, 
          "post_id": 4889397, 
          "score": 0, 
          "body_markdown": "thank you also :)", 
          "owner": {
            "user_id": 525965, 
            "profile_image": "https://www.gravatar.com/avatar/5d32959fd5e2c6c3842c373f0a38c6a9?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2987, 
            "link": "http://stackoverflow.com/users/525965/newbie", 
            "accept_rate": 96, 
            "display_name": "newbie"
          }
        }
      ], 
      "creation_date": 1296753764, 
      "comment_count": 1, 
      "score": 1, 
      "body_markdown": "if above mentioned table is a file.\r\n\r\nfor first two score it will be fine but for 5 it start reading character. Might be that is causing problem.", 
      "owner": {
        "user_id": 601383, 
        "profile_image": "https://www.gravatar.com/avatar/a0818a04db7b1ce714029b089d833983?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 145, 
        "link": "http://stackoverflow.com/users/601383/chirag-tayal", 
        "accept_rate": 0, 
        "display_name": "Chirag Tayal"
      }, 
      "is_accepted": false, 
      "answer_id": 4889397
    }, 
    {
      "body": "<p>Q: Are you trying to read and write DATA, or are you trying to serialize and deserialize OBJECTS?</p>\n\n<p>I think all you need to do is open and write to a simple text file:</p>\n\n<p>For example:</p>\n\n<p><a href=\"http://www.exampledepot.com/egs/java.io/AppendToFile.html\" rel=\"nofollow\">http://www.exampledepot.com/egs/java.io/AppendToFile.html</a></p>\n\n<pre><code>import java.io.*;\n\npublic class TestFile\n{\n  public static void main (String[] args)\n  {\n    // Test \"append\"\n    // SOURCE: http://www.exampledepot.com/egs/java.io/AppendToFile.html\n    try {\n        BufferedWriter out = \n          new BufferedWriter(\n            new FileWriter(\"myfile.txt\", true));\n        out.write(\"testing: a b c\\n\");\n        out.write(\"testing: d e f\\n\");\n        out.close();\n    } \n      catch (IOException e) {\n    }\n  }\n}\n</code></pre>\n\n<p>Sample output:</p>\n\n<pre><code>testing: a b c \ntesting: d e f\n</code></pre>\n", 
      "question_id": 8662844, 
      "last_activity_date": 1325118869, 
      "comments": [
        {
          "body": "I have to write to a Objects file", 
          "edited": false, 
          "comment_id": 10765570, 
          "creation_date": 1325118776, 
          "post_id": 8662868, 
          "score": 0, 
          "body_markdown": "I have to write to a Objects file", 
          "owner": {
            "user_id": 1317865, 
            "profile_image": "https://www.gravatar.com/avatar/43646d0a94129f8bbff9f00b7c717e04?s=128&d=identicon&r=PG&f=1", 
            "user_type": "registered", 
            "reputation": 1089, 
            "link": "http://stackoverflow.com/users/1317865/favolas", 
            "accept_rate": 91, 
            "display_name": "Favolas"
          }
        }, 
        {
          "body": "Well then you&#39;re going to get a binary file.  With the header string &quot;CAFEBABE&quot; ;)  <a href=\"http://java.sun.com/developer/technicalArticles/Programming/serialization/\" rel=\"nofollow\">java.sun.com/developer/technicalArticles/Programming/&hellip;</a>", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 1317865, 
            "profile_image": "https://www.gravatar.com/avatar/43646d0a94129f8bbff9f00b7c717e04?s=128&d=identicon&r=PG&f=1", 
            "user_type": "registered", 
            "reputation": 1089, 
            "link": "http://stackoverflow.com/users/1317865/favolas", 
            "accept_rate": 91, 
            "display_name": "Favolas"
          }, 
          "comment_id": 10765612, 
          "creation_date": 1325119056, 
          "post_id": 8662868, 
          "score": 1, 
          "body_markdown": "Well then you&#39;re going to get a binary file.  With the header string &quot;CAFEBABE&quot; ;)  http://java.sun.com/developer/technicalArticles/Programming/serialization/", 
          "owner": {
            "user_id": 421195, 
            "profile_image": "https://www.gravatar.com/avatar/9a9793fdeb3b94e185c8c99c0238372f?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 40729, 
            "link": "http://stackoverflow.com/users/421195/paulsm4", 
            "accept_rate": 75, 
            "display_name": "paulsm4"
          }
        }, 
        {
          "body": "Isn&#39;t that for writing text files?", 
          "edited": false, 
          "comment_id": 10765694, 
          "creation_date": 1325119540, 
          "post_id": 8662868, 
          "score": 0, 
          "body_markdown": "Isn&#39;t that for writing text files?", 
          "owner": {
            "user_id": 1317865, 
            "profile_image": "https://www.gravatar.com/avatar/43646d0a94129f8bbff9f00b7c717e04?s=128&d=identicon&r=PG&f=1", 
            "user_type": "registered", 
            "reputation": 1089, 
            "link": "http://stackoverflow.com/users/1317865/favolas", 
            "accept_rate": 91, 
            "display_name": "Favolas"
          }
        }
      ], 
      "creation_date": 1325118659, 
      "comment_count": 3, 
      "score": 1, 
      "body_markdown": "Q: Are you trying to read and write DATA, or are you trying to serialize and deserialize OBJECTS?\r\n\r\nI think all you need to do is open and write to a simple text file:\r\n\r\nFor example:\r\n\r\nhttp://www.exampledepot.com/egs/java.io/AppendToFile.html\r\n\r\n    import java.io.*;\r\n    \r\n    public class TestFile\r\n    {\r\n      public static void main (String[] args)\r\n      {\r\n        // Test &quot;append&quot;\r\n        // SOURCE: http://www.exampledepot.com/egs/java.io/AppendToFile.html\r\n        try {\r\n            BufferedWriter out = \r\n              new BufferedWriter(\r\n                new FileWriter(&quot;myfile.txt&quot;, true));\r\n            out.write(&quot;testing: a b c\\n&quot;);\r\n            out.write(&quot;testing: d e f\\n&quot;);\r\n            out.close();\r\n        } \r\n          catch (IOException e) {\r\n        }\r\n      }\r\n    }\r\n\r\n\r\nSample output:\r\n\r\n    testing: a b c \r\n    testing: d e f\r\n\r\n", 
      "owner": {
        "user_id": 421195, 
        "profile_image": "https://www.gravatar.com/avatar/9a9793fdeb3b94e185c8c99c0238372f?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 40729, 
        "link": "http://stackoverflow.com/users/421195/paulsm4", 
        "accept_rate": 75, 
        "display_name": "paulsm4"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1325118869, 
      "answer_id": 8662868
    }, 
    {
      "body": "<p>Fast and work with all the versions of Java also Android:</p>\n\n<pre><code>private void copy(final File f1, final File f2) throws IOException {\n    f2.createNewFile();\n\n    final RandomAccessFile file1 = new RandomAccessFile(f1, \"r\");\n    final RandomAccessFile file2 = new RandomAccessFile(f2, \"rw\");\n\n    file2.getChannel().write(file1.getChannel().map(FileChannel.MapMode.READ_ONLY, 0, f1.length()));\n\n    file1.close();\n    file2.close();\n}\n</code></pre>\n", 
      "question_id": 106770, 
      "last_activity_date": 1384422201, 
      "comments": [
        {
          "body": "Not all filesystems support memory mapped files though, and I think it&#39;s relatively expensive for small files.", 
          "edited": false, 
          "comment_id": 29735895, 
          "creation_date": 1384426133, 
          "post_id": 19974236, 
          "score": 1, 
          "body_markdown": "Not all filesystems support memory mapped files though, and I think it&#39;s relatively expensive for small files.", 
          "owner": {
            "user_id": 243245, 
            "profile_image": "https://www.gravatar.com/avatar/aed5c13647d581ae231f019a886e05a8?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18459, 
            "link": "http://stackoverflow.com/users/243245/rup", 
            "accept_rate": 70, 
            "display_name": "Rup"
          }
        }, 
        {
          "body": "Doesn&#39;t work with any version of Java prior to 1.4, and there is nothing that guarantees a single write is sufficient.", 
          "edited": false, 
          "comment_id": 38565789, 
          "creation_date": 1405763048, 
          "post_id": 19974236, 
          "score": 0, 
          "body_markdown": "Doesn&#39;t work with any version of Java prior to 1.4, and there is nothing that guarantees a single write is sufficient.", 
          "owner": {
            "user_id": 207421, 
            "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 124600, 
            "link": "http://stackoverflow.com/users/207421/ejp", 
            "accept_rate": 80, 
            "display_name": "EJP"
          }
        }
      ], 
      "creation_date": 1384422201, 
      "comment_count": 2, 
      "score": 1, 
      "body_markdown": "Fast and work with all the versions of Java also Android:\r\n\r\n    private void copy(final File f1, final File f2) throws IOException {\r\n        f2.createNewFile();\r\n\r\n        final RandomAccessFile file1 = new RandomAccessFile(f1, &quot;r&quot;);\r\n        final RandomAccessFile file2 = new RandomAccessFile(f2, &quot;rw&quot;);\r\n\r\n        file2.getChannel().write(file1.getChannel().map(FileChannel.MapMode.READ_ONLY, 0, f1.length()));\r\n\r\n        file1.close();\r\n        file2.close();\r\n    }", 
      "owner": {
        "user_id": 1079877, 
        "profile_image": "http://i.stack.imgur.com/TqWOF.jpg?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 965, 
        "link": "http://stackoverflow.com/users/1079877/user1079877", 
        "accept_rate": 80, 
        "display_name": "user1079877"
      }, 
      "is_accepted": false, 
      "answer_id": 19974236
    }, 
    {
      "body": "<p>I think <code>easyDecryp(aux)</code> is returning the line, and then you are doing <code>+=</code> on top of that. This is why your line is getting duplicated.</p>\n", 
      "question_id": 20137113, 
      "last_activity_date": 1385096433, 
      "creation_date": 1385096433, 
      "comment_count": 0, 
      "score": 1, 
      "body_markdown": "I think `easyDecryp(aux)` is returning the line, and then you are doing `+=` on top of that. This is why your line is getting duplicated.", 
      "owner": {
        "user_id": 1011791, 
        "profile_image": "https://www.gravatar.com/avatar/0b3255fb82db0521fa96509a64a82240?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 2714, 
        "link": "http://stackoverflow.com/users/1011791/chthonic-project", 
        "accept_rate": 84, 
        "display_name": "Chthonic Project"
      }, 
      "is_accepted": true, 
      "answer_id": 20137343
    }, 
    {
      "body": "<p>JDK 7/8 answer that closes the stream and still throws an IOException:</p>\n\n<pre><code>StringBuilder build = new StringBuilder();\nbyte[] buf = new byte[1024];\nint length;\ntry (InputStream is = getInputStream()) {\n  while ((length = is.read(buf)) != -1) {\n    build.append(new String(buf, 0, length));\n  }\n}\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1386265987, 
      "creation_date": 1386265987, 
      "comment_count": 0, 
      "score": 1, 
      "body_markdown": "JDK 7/8 answer that closes the stream and still throws an IOException:\r\n\r\n    StringBuilder build = new StringBuilder();\r\n    byte[] buf = new byte[1024];\r\n    int length;\r\n    try (InputStream is = getInputStream()) {\r\n      while ((length = is.read(buf)) != -1) {\r\n        build.append(new String(buf, 0, length));\r\n      }\r\n    }\r\n", 
      "owner": {
        "user_id": 428594, 
        "profile_image": "https://www.gravatar.com/avatar/0a6486ff56dcfe546eb23d7bba908aa2?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 411, 
        "link": "http://stackoverflow.com/users/428594/brian-pontarelli", 
        "display_name": "Brian Pontarelli"
      }, 
      "is_accepted": false, 
      "answer_id": 20407168
    }, 
    {
      "body": "<p>You can use apache commons.\nIn the IOUtils you can find the toString metod with 3 helpfull implementations.</p>\n\n<pre><code>public static String toString(InputStream input) throws IOException {\n        return toString(input, Charset.defaultCharset());\n}\n\npublic static String toString(InputStream input) throws IOException {\n        return toString(input, Charset.defaultCharset());\n}\n\npublic static String toString(InputStream input, String encoding)\n            throws IOException {\n        return toString(input, Charsets.toCharset(encoding));\n}\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1389881025, 
      "creation_date": 1389881025, 
      "comment_count": 0, 
      "score": 1, 
      "body_markdown": "You can use apache commons.\r\nIn the IOUtils you can find the toString metod with 3 helpfull implementations.\r\n\r\n    public static String toString(InputStream input) throws IOException {\r\n            return toString(input, Charset.defaultCharset());\r\n    }\r\n    \r\n    public static String toString(InputStream input) throws IOException {\r\n            return toString(input, Charset.defaultCharset());\r\n    }\r\n    \r\n    public static String toString(InputStream input, String encoding)\r\n                throws IOException {\r\n            return toString(input, Charsets.toCharset(encoding));\r\n    }", 
      "owner": {
        "user_id": 2217011, 
        "profile_image": "http://i.stack.imgur.com/tqsPN.jpg?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 82, 
        "link": "http://stackoverflow.com/users/2217011/rys", 
        "accept_rate": 95, 
        "display_name": "Rys"
      }, 
      "is_accepted": false, 
      "answer_id": 21163930
    }, 
    {
      "body": "<p>I have written a class that does just that, so I figured I'd share it with everyone. Sometimes you don't want to add Apache Commons just for one thing, and want something dumber than Scanner that doesn't examine the content.</p>\n\n<p>Usage is as follows</p>\n\n<pre><code>// Read from InputStream\nString data = new ReaderSink(inputStream, Charset.forName(\"UTF-8\")).drain();\n\n// Read from File\ndata = new ReaderSink(file, Charset.forName(\"UTF-8\")).drain();\n\n// Drain input stream to console\nnew ReaderSink(inputStream, Charset.forName(\"UTF-8\")).drainTo(System.out);\n</code></pre>\n\n<p>Here is the code for ReaderSink:</p>\n\n<pre><code>import java.io.*;\nimport java.nio.charset.Charset;\n\n/**\n * A simple sink class that drains a {@link Reader} to a {@link String} or\n * to a {@link Writer}.\n *\n * @author Ben Barkay\n * @version 2/20/2014\n */\npublic class ReaderSink {\n    /**\n     * The default buffer size to use if no buffer size was specified.\n     */\n    public static final int DEFAULT_BUFFER_SIZE = 1024;\n\n    /**\n     * The {@link Reader} that will be drained.\n     */\n    private final Reader in;\n\n    /**\n     * Constructs a new {@code ReaderSink} for the specified file and charset.\n     * @param file      The file to read from.\n     * @param charset   The charset to use.\n     * @throws FileNotFoundException    If the file was not found on the filesystem.\n     */\n    public ReaderSink(File file, Charset charset) throws FileNotFoundException {\n        this(new FileInputStream(file), charset);\n    }\n\n    /**\n     * Constructs a new {@code ReaderSink} for the specified {@link InputStream}.\n     * @param in        The {@link InputStream} to drain.\n     * @param charset   The charset to use.\n     */\n    public ReaderSink(InputStream in, Charset charset) {\n        this(new InputStreamReader(in, charset));\n    }\n\n    /**\n     * Constructs a new {@code ReaderSink} for the specified {@link Reader}.\n     * @param in    The reader to drain.\n     */\n    public ReaderSink(Reader in) {\n        this.in = in;\n    }\n\n    /**\n     * Drains the data from the underlying {@link Reader}, returning a {@link String} containing\n     * all of the read information. This method will use {@link #DEFAULT_BUFFER_SIZE} for\n     * its buffer size.\n     * @return  A {@link String} containing all of the information that was read.\n     */\n    public String drain() throws IOException {\n        return drain(DEFAULT_BUFFER_SIZE);\n    }\n\n    /**\n     * Drains the data from the underlying {@link Reader}, returning a {@link String} containing\n     * all of the read information.\n     * @param bufferSize    The size of the buffer to use when reading.\n     * @return  A {@link String} containing all of the information that was read.\n     */\n    public String drain(int bufferSize) throws IOException {\n        StringWriter stringWriter = new StringWriter();\n        drainTo(stringWriter, bufferSize);\n        return stringWriter.toString();\n    }\n\n    /**\n     * Drains the data from the underlying {@link Reader}, writing it to the\n     * specified {@link Writer}. This method will use {@link #DEFAULT_BUFFER_SIZE} for\n     * its buffer size.\n     * @param out   The {@link Writer} to write to.\n     */\n    public void drainTo(Writer out) throws IOException {\n        drainTo(out, DEFAULT_BUFFER_SIZE);\n    }\n\n    /**\n     * Drains the data from the underlying {@link Reader}, writing it to the\n     * specified {@link Writer}.\n     * @param out           The {@link Writer} to write to.\n     * @param bufferSize    The size of the buffer to use when reader.\n     */\n    public void drainTo(Writer out, int bufferSize) throws IOException {\n        char[] buffer = new char[bufferSize];\n        int read;\n        while ((read = in.read(buffer)) &gt; -1) {\n            out.write(buffer, 0, read);\n        }\n    }\n}\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1392918378, 
      "creation_date": 1392917078, 
      "comment_count": 0, 
      "score": 1, 
      "body_markdown": "I have written a class that does just that, so I figured I&#39;d share it with everyone. Sometimes you don&#39;t want to add Apache Commons just for one thing, and want something dumber than Scanner that doesn&#39;t examine the content.\r\n\r\nUsage is as follows\r\n\r\n    // Read from InputStream\r\n    String data = new ReaderSink(inputStream, Charset.forName(&quot;UTF-8&quot;)).drain();\r\n\r\n    // Read from File\r\n    data = new ReaderSink(file, Charset.forName(&quot;UTF-8&quot;)).drain();\r\n\r\n    // Drain input stream to console\r\n    new ReaderSink(inputStream, Charset.forName(&quot;UTF-8&quot;)).drainTo(System.out);\r\n\r\nHere is the code for ReaderSink:\r\n\r\n    import java.io.*;\r\n    import java.nio.charset.Charset;\r\n\r\n    /**\r\n     * A simple sink class that drains a {@link Reader} to a {@link String} or\r\n     * to a {@link Writer}.\r\n     *\r\n     * @author Ben Barkay\r\n     * @version 2/20/2014\r\n     */\r\n    public class ReaderSink {\r\n        /**\r\n         * The default buffer size to use if no buffer size was specified.\r\n         */\r\n        public static final int DEFAULT_BUFFER_SIZE = 1024;\r\n    \r\n        /**\r\n         * The {@link Reader} that will be drained.\r\n         */\r\n        private final Reader in;\r\n    \r\n        /**\r\n         * Constructs a new {@code ReaderSink} for the specified file and charset.\r\n         * @param file      The file to read from.\r\n         * @param charset   The charset to use.\r\n         * @throws FileNotFoundException    If the file was not found on the filesystem.\r\n         */\r\n        public ReaderSink(File file, Charset charset) throws FileNotFoundException {\r\n            this(new FileInputStream(file), charset);\r\n        }\r\n    \r\n        /**\r\n         * Constructs a new {@code ReaderSink} for the specified {@link InputStream}.\r\n         * @param in        The {@link InputStream} to drain.\r\n         * @param charset   The charset to use.\r\n         */\r\n        public ReaderSink(InputStream in, Charset charset) {\r\n            this(new InputStreamReader(in, charset));\r\n        }\r\n    \r\n        /**\r\n         * Constructs a new {@code ReaderSink} for the specified {@link Reader}.\r\n         * @param in    The reader to drain.\r\n         */\r\n        public ReaderSink(Reader in) {\r\n            this.in = in;\r\n        }\r\n    \r\n        /**\r\n         * Drains the data from the underlying {@link Reader}, returning a {@link String} containing\r\n         * all of the read information. This method will use {@link #DEFAULT_BUFFER_SIZE} for\r\n         * its buffer size.\r\n         * @return  A {@link String} containing all of the information that was read.\r\n         */\r\n        public String drain() throws IOException {\r\n            return drain(DEFAULT_BUFFER_SIZE);\r\n        }\r\n    \r\n        /**\r\n         * Drains the data from the underlying {@link Reader}, returning a {@link String} containing\r\n         * all of the read information.\r\n         * @param bufferSize    The size of the buffer to use when reading.\r\n         * @return  A {@link String} containing all of the information that was read.\r\n         */\r\n        public String drain(int bufferSize) throws IOException {\r\n            StringWriter stringWriter = new StringWriter();\r\n            drainTo(stringWriter, bufferSize);\r\n            return stringWriter.toString();\r\n        }\r\n    \r\n        /**\r\n         * Drains the data from the underlying {@link Reader}, writing it to the\r\n         * specified {@link Writer}. This method will use {@link #DEFAULT_BUFFER_SIZE} for\r\n         * its buffer size.\r\n         * @param out   The {@link Writer} to write to.\r\n         */\r\n        public void drainTo(Writer out) throws IOException {\r\n            drainTo(out, DEFAULT_BUFFER_SIZE);\r\n        }\r\n    \r\n        /**\r\n         * Drains the data from the underlying {@link Reader}, writing it to the\r\n         * specified {@link Writer}.\r\n         * @param out           The {@link Writer} to write to.\r\n         * @param bufferSize    The size of the buffer to use when reader.\r\n         */\r\n        public void drainTo(Writer out, int bufferSize) throws IOException {\r\n            char[] buffer = new char[bufferSize];\r\n            int read;\r\n            while ((read = in.read(buffer)) &gt; -1) {\r\n                out.write(buffer, 0, read);\r\n            }\r\n        }\r\n    }", 
      "owner": {
        "user_id": 1055284, 
        "profile_image": "http://i.stack.imgur.com/TcxWv.jpg?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 2254, 
        "link": "http://stackoverflow.com/users/1055284/ben-barkay", 
        "accept_rate": 100, 
        "display_name": "Ben Barkay"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1392918378, 
      "answer_id": 21915153
    }, 
    {
      "body": "<p>Change:</p>\n\n<pre><code>if (!file.exists())\n  file.mkdirs();\n  file.createNewFile();\n</code></pre>\n\n<p>To:</p>\n\n<pre><code>if (!file.exists()) {\n  file.createNewFile();\n}\n</code></pre>\n\n<p>But first, go read some tutorials or articles. Why the hell are you extending <code>Exception</code>?</p>\n", 
      "question_id": 24482716, 
      "last_activity_date": 1404103193, 
      "comments": [
        {
          "body": "My teacher said something about &quot;Every program I do from now on in class needs exceptions&quot; Am I doing it wrong?", 
          "edited": false, 
          "comment_id": 37896476, 
          "creation_date": 1404101221, 
          "post_id": 24482794, 
          "score": 0, 
          "body_markdown": "My teacher said something about &quot;Every program I do from now on in class needs exceptions&quot; Am I doing it wrong?", 
          "owner": {
            "user_id": 3788930, 
            "profile_image": "https://www.gravatar.com/avatar/dfd3dff8aa42b9b830ded45a48c5c1e9?s=128&d=identicon&r=PG&f=1", 
            "user_type": "registered", 
            "reputation": 10, 
            "link": "http://stackoverflow.com/users/3788930/user3788930", 
            "accept_rate": 100, 
            "display_name": "user3788930"
          }
        }, 
        {
          "body": "You should double check what your teachers about their expectations first", 
          "edited": false, 
          "comment_id": 37896507, 
          "creation_date": 1404101366, 
          "post_id": 24482794, 
          "score": 0, 
          "body_markdown": "You should double check what your teachers about their expectations first", 
          "owner": {
            "user_id": 1030436, 
            "profile_image": "https://www.gravatar.com/avatar/e20af74edff196c4844ab24095d66b80?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 323, 
            "link": "http://stackoverflow.com/users/1030436/ryan-fung", 
            "accept_rate": 94, 
            "display_name": "Ryan Fung"
          }
        }, 
        {
          "body": "@user3788930 Yes, you are doing it wrong.  You teacher was referring to the fact that you need to handle exceptions (catch or re-throw them), not suggesting that all of your classes extend the <code>Exception</code> class.  Look <a href=\"http://docs.oracle.com/javase/tutorial/essential/exceptions/\" rel=\"nofollow\">here</a> to learn more about how to handle exceptions.", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 3788930, 
            "profile_image": "https://www.gravatar.com/avatar/dfd3dff8aa42b9b830ded45a48c5c1e9?s=128&d=identicon&r=PG&f=1", 
            "user_type": "registered", 
            "reputation": 10, 
            "link": "http://stackoverflow.com/users/3788930/user3788930", 
            "accept_rate": 100, 
            "display_name": "user3788930"
          }, 
          "comment_id": 37896543, 
          "creation_date": 1404101600, 
          "post_id": 24482794, 
          "score": 0, 
          "body_markdown": "@user3788930 Yes, you are doing it wrong.  You teacher was referring to the fact that you need to handle exceptions (catch or re-throw them), not suggesting that all of your classes extend the `Exception` class.  Look [here](http://docs.oracle.com/javase/tutorial/essential/exceptions/) to learn more about how to handle exceptions.", 
          "owner": {
            "user_id": 1361506, 
            "profile_image": "https://www.gravatar.com/avatar/5527d6bb829d75befe914163f5e8cf60?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 3786, 
            "link": "http://stackoverflow.com/users/1361506/azurefrog", 
            "display_name": "azurefrog"
          }
        }, 
        {
          "body": "Oh, thanks! I&#39;m suppose to throw it.", 
          "edited": false, 
          "comment_id": 37896713, 
          "creation_date": 1404102400, 
          "post_id": 24482794, 
          "score": 0, 
          "body_markdown": "Oh, thanks! I&#39;m suppose to throw it.", 
          "owner": {
            "user_id": 3788930, 
            "profile_image": "https://www.gravatar.com/avatar/dfd3dff8aa42b9b830ded45a48c5c1e9?s=128&d=identicon&r=PG&f=1", 
            "user_type": "registered", 
            "reputation": 10, 
            "link": "http://stackoverflow.com/users/3788930/user3788930", 
            "accept_rate": 100, 
            "display_name": "user3788930"
          }
        }
      ], 
      "creation_date": 1404101088, 
      "comment_count": 4, 
      "score": 1, 
      "body_markdown": "Change:\r\n\r\n    if (!file.exists())\r\n      file.mkdirs();\r\n      file.createNewFile();\r\n\r\nTo:\r\n\r\n    if (!file.exists()) {\r\n      file.createNewFile();\r\n    }\r\n\r\nBut first, go read some tutorials or articles. Why the hell are you extending `Exception`?", 
      "owner": {
        "user_id": 1993958, 
        "profile_image": "http://i.stack.imgur.com/usvvD.jpg?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 645, 
        "link": "http://stackoverflow.com/users/1993958/bloodshura", 
        "accept_rate": 100, 
        "display_name": "BloodShura"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1404103193, 
      "answer_id": 24482794
    }, 
    {
      "body": "<p>If I understand your question, one approach would be to use a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/io/PrintWriter.html\" rel=\"nofollow\"><code>PrintWriter</code></a></p>\n\n<pre><code>public static void main(String[] args) {\n  File outFile = new File(System.getenv(\"HOME\") // &lt;-- or \"C:/\" for Windows.\n      + \"/hello.txt\");\n  try {\n    PrintWriter pw = new PrintWriter(outFile);\n    pw.println(\"Go Falcons\");\n    pw.close();\n  } catch (FileNotFoundException e) {\n    e.printStackTrace();\n  }\n}\n</code></pre>\n\n<p>Which creates a single line ascii file in my home folder named \"hello.txt\".</p>\n\n<pre><code>$ cat hello.txt\nGo Falcons\n</code></pre>\n", 
      "question_id": 24482716, 
      "last_activity_date": 1404101213, 
      "creation_date": 1404101213, 
      "comment_count": 0, 
      "score": 1, 
      "body_markdown": "If I understand your question, one approach would be to use a [`PrintWriter`](http://docs.oracle.com/javase/7/docs/api/java/io/PrintWriter.html)\r\n\r\n    public static void main(String[] args) {\r\n      File outFile = new File(System.getenv(&quot;HOME&quot;) // &lt;-- or &quot;C:/&quot; for Windows.\r\n          + &quot;/hello.txt&quot;);\r\n      try {\r\n        PrintWriter pw = new PrintWriter(outFile);\r\n        pw.println(&quot;Go Falcons&quot;);\r\n        pw.close();\r\n      } catch (FileNotFoundException e) {\r\n        e.printStackTrace();\r\n      }\r\n    }\r\n\r\nWhich creates a single line ascii file in my home folder named &quot;hello.txt&quot;.\r\n\r\n    $ cat hello.txt\r\n    Go Falcons\r\n", 
      "owner": {
        "user_id": 2970947, 
        "profile_image": "http://i.stack.imgur.com/HAq55.png?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 51126, 
        "link": "http://stackoverflow.com/users/2970947/elliott-frisch", 
        "display_name": "Elliott Frisch"
      }, 
      "is_accepted": true, 
      "answer_id": 24482809
    }, 
    {
      "body": "<p>Your problem is that right before you attempt to create your output file, you first create a directory with the same name:</p>\n\n<pre><code>            if (!file.exists())\n                file.mkdirs();      // creates a new directory\n            file.createNewFile();   // fails to create a new file\n</code></pre>\n\n<p>Once you've already created the directory, you can no longer create the file, and of course, you cannot open a directory and write data to it as if it were a file, so you get an access denied error.</p>\n\n<p>Just delete the <code>file.mkdirs();</code> line and your code will work fine:</p>\n\n<pre><code>        if (!file.exists())\n            file.createNewFile();   // creates a new file\n</code></pre>\n", 
      "question_id": 24482716, 
      "last_activity_date": 1404101252, 
      "creation_date": 1404101252, 
      "comment_count": 0, 
      "score": 1, 
      "body_markdown": "Your problem is that right before you attempt to create your output file, you first create a directory with the same name:\r\n\r\n\t\t\t\tif (!file.exists())\r\n\t\t\t\t    file.mkdirs();      // creates a new directory\r\n\t\t\t\tfile.createNewFile();   // fails to create a new file\r\n\r\nOnce you&#39;ve already created the directory, you can no longer create the file, and of course, you cannot open a directory and write data to it as if it were a file, so you get an access denied error.\r\n\r\nJust delete the `file.mkdirs();` line and your code will work fine:\r\n\r\n\t\t\tif (!file.exists())\r\n\t\t\t\tfile.createNewFile();   // creates a new file\r\n\r\n", 
      "owner": {
        "user_id": 1361506, 
        "profile_image": "https://www.gravatar.com/avatar/5527d6bb829d75befe914163f5e8cf60?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 3786, 
        "link": "http://stackoverflow.com/users/1361506/azurefrog", 
        "display_name": "azurefrog"
      }, 
      "is_accepted": false, 
      "answer_id": 24482812
    }, 
    {
      "body": "<p>you can't use <code>File file = new File(id.txt);</code> as it takes string argument.so you can make a <code>string</code> like <code>id+\".txt\"</code> and then pass it to <code>new file();</code></p>\n\n<pre><code>String id = scan.nextLine();\nFile file = new File(id+\".txt\");\nFileWriter fileWrite = new FileWriter(file);\nBufferedWriter bufferedWriter = new BufferedWriter(fileWrite);\n</code></pre>\n", 
      "question_id": 26030579, 
      "last_activity_date": 1411620314, 
      "comments": [
        {
          "body": "Please explain how your change fixes the problem.", 
          "edited": false, 
          "comment_id": 40773601, 
          "creation_date": 1411619673, 
          "post_id": 26030593, 
          "score": 1, 
          "body_markdown": "Please explain how your change fixes the problem.", 
          "owner": {
            "user_id": 1440565, 
            "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18606, 
            "link": "http://stackoverflow.com/users/1440565/code-apprentice", 
            "accept_rate": 74, 
            "display_name": "Code-Apprentice"
          }
        }, 
        {
          "body": "@Code-Apprentice ok thanks you", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 1440565, 
            "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 18606, 
            "link": "http://stackoverflow.com/users/1440565/code-apprentice", 
            "accept_rate": 74, 
            "display_name": "Code-Apprentice"
          }, 
          "comment_id": 40773677, 
          "creation_date": 1411619935, 
          "post_id": 26030593, 
          "score": 0, 
          "body_markdown": "@Code-Apprentice ok thanks you", 
          "owner": {
            "user_id": 2227526, 
            "profile_image": "http://i.stack.imgur.com/B7I0r.png?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 2850, 
            "link": "http://stackoverflow.com/users/2227526/fast-snail", 
            "accept_rate": 88, 
            "display_name": "fast snail"
          }
        }, 
        {
          "body": "(id+&quot;.txt&quot;) now I get it thank you :))", 
          "edited": false, 
          "comment_id": 40773691, 
          "creation_date": 1411619983, 
          "post_id": 26030593, 
          "score": 1, 
          "body_markdown": "(id+&quot;.txt&quot;) now I get it thank you :))", 
          "owner": {
            "user_id": 3926372, 
            "profile_image": "http://graph.facebook.com/100002432610412/picture?type=large", 
            "user_type": "registered", 
            "reputation": 55, 
            "link": "http://stackoverflow.com/users/3926372/angela-vinagrera", 
            "accept_rate": 57, 
            "display_name": "Angela Vinagrera"
          }
        }, 
        {
          "body": "@AngelaVinagrera you too", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 3926372, 
            "profile_image": "http://graph.facebook.com/100002432610412/picture?type=large", 
            "user_type": "registered", 
            "reputation": 55, 
            "link": "http://stackoverflow.com/users/3926372/angela-vinagrera", 
            "accept_rate": 57, 
            "display_name": "Angela Vinagrera"
          }, 
          "comment_id": 40773715, 
          "creation_date": 1411620057, 
          "post_id": 26030593, 
          "score": 0, 
          "body_markdown": "@AngelaVinagrera you too", 
          "owner": {
            "user_id": 2227526, 
            "profile_image": "http://i.stack.imgur.com/B7I0r.png?s=128&g=1", 
            "user_type": "registered", 
            "reputation": 2850, 
            "link": "http://stackoverflow.com/users/2227526/fast-snail", 
            "accept_rate": 88, 
            "display_name": "fast snail"
          }
        }
      ], 
      "creation_date": 1411619600, 
      "comment_count": 4, 
      "score": 1, 
      "body_markdown": "you can&#39;t use `File file = new File(id.txt);` as it takes string argument.so you can make a `string` like `id+&quot;.txt&quot;` and then pass it to `new file();`\r\n\r\n    String id = scan.nextLine();\r\n    File file = new File(id+&quot;.txt&quot;);\r\n    FileWriter fileWrite = new FileWriter(file);\r\n    BufferedWriter bufferedWriter = new BufferedWriter(fileWrite);", 
      "owner": {
        "user_id": 2227526, 
        "profile_image": "http://i.stack.imgur.com/B7I0r.png?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 2850, 
        "link": "http://stackoverflow.com/users/2227526/fast-snail", 
        "accept_rate": 88, 
        "display_name": "fast snail"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1411620314, 
      "answer_id": 26030593
    }, 
    {
      "body": "<p>You need to create a <code>String</code> for the file name with the expected format. To do this, you can simply use the <code>+</code> operator which concatenates <code>String</code>s (and automatically converts non-Strings to Strings):</p>\n\n<pre><code>String filename = id + \".txt\";\n</code></pre>\n", 
      "question_id": 26030579, 
      "last_activity_date": 1411619637, 
      "creation_date": 1411619637, 
      "comment_count": 0, 
      "score": 1, 
      "body_markdown": "You need to create a `String` for the file name with the expected format. To do this, you can simply use the `+` operator which concatenates `String`s (and automatically converts non-Strings to Strings):\r\n\r\n    String filename = id + &quot;.txt&quot;;", 
      "owner": {
        "user_id": 1440565, 
        "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 18606, 
        "link": "http://stackoverflow.com/users/1440565/code-apprentice", 
        "accept_rate": 74, 
        "display_name": "Code-Apprentice"
      }, 
      "is_accepted": false, 
      "answer_id": 26030600
    }, 
    {
      "body": "<p>Simplest way I can find:</p>\n\n<pre><code>Path sampleOutputPath = Paths.get(\"/tmp/testfile\")\ntry (BufferedWriter writer = Files.newBufferedWriter(sampleOutputPath)) {\n    writer.write(\"Hello, world!\");\n}\n</code></pre>\n\n<p>Probably will only work for 1.7+</p>\n", 
      "question_id": 2885173, 
      "last_activity_date": 1415392110, 
      "creation_date": 1415392110, 
      "comment_count": 0, 
      "score": 1, 
      "body_markdown": "Simplest way I can find:\r\n\r\n\r\n    Path sampleOutputPath = Paths.get(&quot;/tmp/testfile&quot;)\r\n    try (BufferedWriter writer = Files.newBufferedWriter(sampleOutputPath)) {\r\n        writer.write(&quot;Hello, world!&quot;);\r\n    }\r\n\r\nProbably will only work for 1.7+", 
      "owner": {
        "user_id": 562222, 
        "profile_image": "https://www.gravatar.com/avatar/d9c93381a9aa785b6fce90659875d704?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 2376, 
        "link": "http://stackoverflow.com/users/562222/qed", 
        "accept_rate": 59, 
        "display_name": "qed"
      }, 
      "is_accepted": false, 
      "answer_id": 26809552
    }, 
    {
      "body": "<p>Here is three ways that you can easily copy files with single line of code!</p>\n\n<p><strong>Java7</strong>:</p>\n\n<p><a href=\"https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#copy(java.nio.file.Path,%20java.nio.file.Path,%20java.nio.file.CopyOption...)\" rel=\"nofollow\">java.nio.file.Files#copy</a></p>\n\n<pre><code>private static void copyFileUsingJava7Files(File source, File dest) throws IOException {\n    Files.copy(source.toPath(), dest.toPath());\n}\n</code></pre>\n\n<p><strong>Appache Commons IO</strong>:</p>\n\n<p><a href=\"http://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/FileUtils.html#copyFile(java.io.File,%20java.io.File)\" rel=\"nofollow\">FileUtils#copyFile</a></p>\n\n<pre><code>private static void copyFileUsingApacheCommonsIO(File source, File dest) throws IOException {\n    FileUtils.copyFile(source, dest);\n}\n</code></pre>\n\n<p><strong>Guava</strong> :</p>\n\n<p><a href=\"http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/io/Files.html#copy(java.io.File,%20java.io.File)\" rel=\"nofollow\">Files#copy</a></p>\n\n<pre><code>private static void copyFileUsingGuava(File source,File dest) throws IOException{\n    Files.copy(source,dest);          \n}\n</code></pre>\n", 
      "question_id": 106770, 
      "last_activity_date": 1415879838, 
      "creation_date": 1415879838, 
      "comment_count": 0, 
      "score": 1, 
      "body_markdown": "Here is three ways that you can easily copy files with single line of code!\r\n\r\n**Java7**:\r\n\r\n[java.nio.file.Files#copy][1]\r\n\r\n    private static void copyFileUsingJava7Files(File source, File dest) throws IOException {\r\n        Files.copy(source.toPath(), dest.toPath());\r\n    }\r\n\r\n**Appache Commons IO**:\r\n \r\n[FileUtils#copyFile][2]\r\n\r\n    private static void copyFileUsingApacheCommonsIO(File source, File dest) throws IOException {\r\n        FileUtils.copyFile(source, dest);\r\n    }\r\n\r\n**Guava** :\r\n\r\n[Files#copy][3]\r\n\r\n    private static void copyFileUsingGuava(File source,File dest) throws IOException{\r\n        Files.copy(source,dest);          \r\n    }\r\n\r\n  [1]: https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#copy(java.nio.file.Path,%20java.nio.file.Path,%20java.nio.file.CopyOption...)\r\n  [2]: http://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/FileUtils.html#copyFile(java.io.File,%20java.io.File)\r\n  [3]: http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/io/Files.html#copy(java.io.File,%20java.io.File)", 
      "owner": {
        "user_id": 2087628, 
        "profile_image": "https://www.gravatar.com/avatar/698fddc9acccb5115122e3150f6019fd?s=128&d=identicon&r=PG&f=1", 
        "user_type": "registered", 
        "reputation": 1121, 
        "link": "http://stackoverflow.com/users/2087628/jaskey", 
        "accept_rate": 66, 
        "display_name": "Jaskey"
      }, 
      "is_accepted": false, 
      "answer_id": 26908379
    }, 
    {
      "body": "<p>file reading and writing using input and outputstream</p>\n\n<pre><code>//Coded By Anurag Goel\n//Reading And Writing Files\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\n\n\npublic class WriteAFile {\npublic static void main(String args[])\n{\ntry{\nbyte array [] = {'1','a','2','b','5'};\nOutputStream os = new FileOutputStream(\"test.txt\");\nfor(int x=0; x &lt; array.length ; x++){\nos.write( array[x] ); // writes the bytes\n}\nos.close();\n\nInputStream is = new FileInputStream(\"test.txt\");\nint size = is.available();\n\nfor(int i=0; i&lt; size; i++){\nSystem.out.print((char)is.read() + \" \");\n}\nis.close();\n}catch(IOException e){\nSystem.out.print(\"Exception\");\n}\n}\n}\n</code></pre>\n", 
      "question_id": 2885173, 
      "last_activity_date": 1416017838, 
      "creation_date": 1416017838, 
      "comment_count": 0, 
      "score": 1, 
      "body_markdown": "file reading and writing using input and outputstream\r\n    \r\n    //Coded By Anurag Goel\r\n    //Reading And Writing Files\r\n    import java.io.FileInputStream;\r\n    import java.io.FileOutputStream;\r\n    import java.io.IOException;\r\n    import java.io.InputStream;\r\n    import java.io.OutputStream;\r\n\r\n\r\n    public class WriteAFile {\r\n    public static void main(String args[])\r\n    {\r\n    try{\r\n    byte array [] = {&#39;1&#39;,&#39;a&#39;,&#39;2&#39;,&#39;b&#39;,&#39;5&#39;};\r\n    OutputStream os = new FileOutputStream(&quot;test.txt&quot;);\r\n    for(int x=0; x &lt; array.length ; x++){\r\n    os.write( array[x] ); // writes the bytes\r\n    }\r\n    os.close();\r\n\r\n    InputStream is = new FileInputStream(&quot;test.txt&quot;);\r\n    int size = is.available();\r\n\r\n    for(int i=0; i&lt; size; i++){\r\n    System.out.print((char)is.read() + &quot; &quot;);\r\n    }\r\n    is.close();\r\n    }catch(IOException e){\r\n    System.out.print(&quot;Exception&quot;);\r\n    }\r\n    }\r\n    }", 
      "owner": {
        "user_id": 4227276, 
        "profile_image": "https://lh6.googleusercontent.com/-9b0H3ZY4qjg/AAAAAAAAAAI/AAAAAAAAABo/truinMjYriU/photo.jpg?sz=128", 
        "user_type": "registered", 
        "reputation": 46, 
        "link": "http://stackoverflow.com/users/4227276/anurag-goel", 
        "display_name": "Anurag Goel"
      }, 
      "is_accepted": false, 
      "answer_id": 26941784
    }, 
    {
      "body": "<pre><code>File yourFile = new File(\"yourFile.txt\");\n\nyourFile.setWritable(false);\n</code></pre>\n", 
      "question_id": 6008468, 
      "last_activity_date": 1305465045, 
      "creation_date": 1305465045, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "    File yourFile = new File(&quot;yourFile.txt&quot;);\r\n    \r\n    yourFile.setWritable(false);\r\n\r\n", 
      "owner": {
        "user_id": 506517, 
        "profile_image": "http://i.stack.imgur.com/7TdjV.jpg?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 1245, 
        "link": "http://stackoverflow.com/users/506517/trevor-arjeski", 
        "accept_rate": 94, 
        "display_name": "Trevor Arjeski"
      }, 
      "is_accepted": false, 
      "answer_id": 6008584
    }, 
    {
      "body": "<p>Look at <a href=\"http://download.oracle.com/javase/6/docs/api/java/nio/channels/FileChannel.html\" rel=\"nofollow\">FileChannel</a>'s <a href=\"http://download.oracle.com/javase/6/docs/api/java/nio/channels/FileChannel.html#lock%28%29\" rel=\"nofollow\">lock() API</a>.</p>\n", 
      "question_id": 6008468, 
      "last_activity_date": 1305468150, 
      "creation_date": 1305468150, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "Look at [FileChannel][1]&#39;s [lock() API][2].\r\n\r\n  [1]: http://download.oracle.com/javase/6/docs/api/java/nio/channels/FileChannel.html\r\n  [2]: http://download.oracle.com/javase/6/docs/api/java/nio/channels/FileChannel.html#lock%28%29", 
      "owner": {
        "user_id": 64967, 
        "profile_image": "https://www.gravatar.com/avatar/7025f4badf651767a88080e351e3089c?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 7960, 
        "link": "http://stackoverflow.com/users/64967/dilum-ranatunga", 
        "accept_rate": 75, 
        "display_name": "Dilum Ranatunga"
      }, 
      "is_accepted": false, 
      "answer_id": 6008843
    }, 
    {
      "body": "<p>I don't know Java's serialization stuff at all, but this seems \"too easy\":</p>\n\n<pre><code>public void escreveObjecto(Object o) throws IOException {\n    oS.writeObject(o);\n}\n</code></pre>\n\n<p>How is the object output stream supposed to know what portions of your object needs to be written to disk? Could be that your object contains nothing but computed values that shouldn't be stored. Could be that your object's data needs to be stored completely. Perhaps references to <code>String</code> objects should just be dropped... or perhaps those <code>Strings</code> should be written to disk.</p>\n\n<p>There must be more to using the ObjectStream stuff than you're showing here -- and <a href=\"http://stackoverflow.com/a/8662868/377270_\">paulsm4's answer</a> shows how writing your own content by hand isn't too bad. Should you be taking that approach instead? Does your class have a defined storage format that you must adhere to?</p>\n", 
      "question_id": 8662844, 
      "last_activity_date": 1325119028, 
      "creation_date": 1325119028, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "I don&#39;t know Java&#39;s serialization stuff at all, but this seems &quot;too easy&quot;:\r\n\r\n    public void escreveObjecto(Object o) throws IOException {\r\n        oS.writeObject(o);\r\n    }\r\n\r\nHow is the object output stream supposed to know what portions of your object needs to be written to disk? Could be that your object contains nothing but computed values that shouldn&#39;t be stored. Could be that your object&#39;s data needs to be stored completely. Perhaps references to `String` objects should just be dropped... or perhaps those `Strings` should be written to disk.\r\n\r\nThere must be more to using the ObjectStream stuff than you&#39;re showing here -- and [paulsm4&#39;s answer](http://stackoverflow.com/a/8662868/377270_) shows how writing your own content by hand isn&#39;t too bad. Should you be taking that approach instead? Does your class have a defined storage format that you must adhere to?", 
      "owner": {
        "user_id": 377270, 
        "profile_image": "https://www.gravatar.com/avatar/ce60a64d7650842955b526c3c4e85d0d?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 64553, 
        "link": "http://stackoverflow.com/users/377270/sarnold", 
        "display_name": "sarnold"
      }, 
      "is_accepted": false, 
      "answer_id": 8662894
    }, 
    {
      "body": "<p>The problems start here:</p>\n\n<pre><code>    for (int i = 0; i &lt; third.length; i++) {\n\n        if (ch == third[i]) {\n            count++;\n        }\n    }\n</code></pre>\n\n<p>I can think of two solutions. The Correct Way is to use a <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Map.html\" rel=\"nofollow\">Map</a> from characters to counts. If you do that, you can replace your entire for loop (not just the excerpted part above) with something along the lines of:</p>\n\n<pre><code>Map letters = new HashMap&lt;Character, Integer&gt;();\nfor(char c : third) {\n  Integer raw_count = letters.get(c);\n  int count = raw_count == null ? 0 : raw_count.intValue();\n  letters.put(c, count + 1);\n}\n</code></pre>\n\n<p>And then iterate through the map and print out its values. Comment if that part's confusing.</p>\n\n<p>If you've never heard of a map before, now would be a good time to learn about them. If you <em>can't</em> use a map (homework...) then I'm certainly not providing a full code sample. But you can work around it with an array. Create a 26-element int array. Then you can do something like <code>letters[c - 'a']++</code>. Take a moment to digest that--we're saying the first element in the array is the count of <code>a</code>s, the second is the number of <code>b</code>s, etc. Initially these are all 0. Then we take the character we're looking at (<code>c</code>), subtract from it so that it's between <code>0</code> and <code>25</code> (not 97 and 122), and increment the total there.</p>\n\n<p>Si necesitas ayuda en espa\u00f1ol, pues dime. Nac\u00ed en Honduras.</p>\n", 
      "question_id": 11303174, 
      "last_activity_date": 1341281228, 
      "creation_date": 1341281228, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "The problems start here:\r\n\r\n\r\n        for (int i = 0; i &lt; third.length; i++) {\r\n\r\n            if (ch == third[i]) {\r\n                count++;\r\n            }\r\n        }\r\n\r\nI can think of two solutions. The Correct Way is to use a [Map](http://docs.oracle.com/javase/6/docs/api/java/util/Map.html) from characters to counts. If you do that, you can replace your entire for loop (not just the excerpted part above) with something along the lines of:\r\n\r\n    Map letters = new HashMap&lt;Character, Integer&gt;();\r\n    for(char c : third) {\r\n      Integer raw_count = letters.get(c);\r\n      int count = raw_count == null ? 0 : raw_count.intValue();\r\n      letters.put(c, count + 1);\r\n    }\r\n\r\nAnd then iterate through the map and print out its values. Comment if that part&#39;s confusing.\r\n\r\n\r\nIf you&#39;ve never heard of a map before, now would be a good time to learn about them. If you *can&#39;t* use a map (homework...) then I&#39;m certainly not providing a full code sample. But you can work around it with an array. Create a 26-element int array. Then you can do something like `letters[c - &#39;a&#39;]++`. Take a moment to digest that--we&#39;re saying the first element in the array is the count of `a`s, the second is the number of `b`s, etc. Initially these are all 0. Then we take the character we&#39;re looking at (`c`), subtract from it so that it&#39;s between `0` and `25` (not 97 and 122), and increment the total there.\r\n\r\nSi necesitas ayuda en espa&#241;ol, pues dime. Nac&#237; en Honduras.\r\n", 
      "owner": {
        "user_id": 220529, 
        "profile_image": "https://www.gravatar.com/avatar/9e51b8453c9de386bd29d87890affcb1?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 1587, 
        "link": "http://stackoverflow.com/users/220529/tsm", 
        "accept_rate": 100, 
        "display_name": "tsm"
      }, 
      "is_accepted": false, 
      "answer_id": 11303584
    }, 
    {
      "body": "<p>The <a href=\"http://code.google.com/p/guava-libraries/\" rel=\"nofollow\">Guava</a> way:</p>\n\n<pre><code>Multiset&lt;String&gt; count = HashMultiset.create(Lists.charactersOf(message.replaceAll(\" \", \"\"));\nFiles.write(Joiner.on(\"\\n\").join(Iterables.transform(count.entrySet(),\n    new Function&lt;Entry&lt;String&gt;, String&gt;() {\n        @Override public String apply(Entry&lt;String&gt; entry) {\n            return String.format(\"%s, %d times\", entry.getElement(), entry.getCount());\n        }\n    }, new File(\"whatever.txt\"), Charsets.UTF_8);\n</code></pre>\n\n<p>Or something.</p>\n", 
      "question_id": 11303174, 
      "last_activity_date": 1341281863, 
      "creation_date": 1341281863, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "The [Guava][1] way:\r\n\r\n    Multiset&lt;String&gt; count = HashMultiset.create(Lists.charactersOf(message.replaceAll(&quot; &quot;, &quot;&quot;));\r\n    Files.write(Joiner.on(&quot;\\n&quot;).join(Iterables.transform(count.entrySet(),\r\n        new Function&lt;Entry&lt;String&gt;, String&gt;() {\r\n            @Override public String apply(Entry&lt;String&gt; entry) {\r\n                return String.format(&quot;%s, %d times&quot;, entry.getElement(), entry.getCount());\r\n            }\r\n        }, new File(&quot;whatever.txt&quot;), Charsets.UTF_8);\r\n\r\nOr something.\r\n\r\n  [1]: http://code.google.com/p/guava-libraries/", 
      "owner": {
        "user_id": 373653, 
        "profile_image": "https://www.gravatar.com/avatar/bfd13ef154c3b67882d34c9b84e737f9?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 5736, 
        "link": "http://stackoverflow.com/users/373653/sjr", 
        "display_name": "sjr"
      }, 
      "is_accepted": false, 
      "answer_id": 11303650
    }, 
    {
      "body": "<pre><code>public function countOccurrences() {\n\nString Message = \"Hello, how are you?\"\nString trim = Mensaje.replaceAll(\" \", \"\");\n\n\nchar[] third = trim.toCharArray();\n\nfor (int counter = 0; counter &lt; third.length; counter++) {\n\n    if (ch == ',') {\n        continue;\n    }\n\n    char ch = third[counter];\n    int count = 0;\n\n    for (int i = 0; i &lt; third.length; i++) {\n\n        if (ch == third[i]) {\n            count++;\n        }\n    }\n\n\n    boolean flag = false;\n    for (int j = counter - 1; j &gt;= 0; j--) {\n        if (ch == third[j]) {\n            flag = true;\n        }\n    }\n\n    if (!flag) {\n\n        trim = \"Letra:\" + ch + \" se repite \" + count + \" veces \";\n         // trim is a String where I need to store this information\n    }\n</code></pre>\n\n<p>}</p>\n", 
      "question_id": 11303174, 
      "last_activity_date": 1341282083, 
      "comments": [
        {
          "body": "I&#39;ve a question, if I need to create a counter for each word.. how can I do? ex:     if ( third[i] == &quot;A&quot; ) {   counterA++ }", 
          "edited": false, 
          "comment_id": 14927104, 
          "creation_date": 1341450235, 
          "post_id": 11303674, 
          "score": 0, 
          "body_markdown": "I&#39;ve a question, if I need to create a counter for each word.. how can I do? ex:     if ( third[i] == &quot;A&quot; ) {   counterA++ }", 
          "owner": {
            "user_id": 1227283, 
            "profile_image": "https://www.gravatar.com/avatar/1d5eccd5f703674ee99a3967a99d1fc6?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 85, 
            "link": "http://stackoverflow.com/users/1227283/m4g4bu", 
            "accept_rate": 36, 
            "display_name": "m4g4bu"
          }
        }, 
        {
          "body": "Did not the code in my answer work ? I think there is no problem with the counter .", 
          "edited": false, 
          "reply_to_user": {
            "user_id": 1227283, 
            "profile_image": "https://www.gravatar.com/avatar/1d5eccd5f703674ee99a3967a99d1fc6?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 85, 
            "link": "http://stackoverflow.com/users/1227283/m4g4bu", 
            "accept_rate": 36, 
            "display_name": "m4g4bu"
          }, 
          "comment_id": 14927160, 
          "creation_date": 1341450645, 
          "post_id": 11303674, 
          "score": 0, 
          "body_markdown": "Did not the code in my answer work ? I think there is no problem with the counter .", 
          "owner": {
            "user_id": 1360646, 
            "profile_image": "https://www.gravatar.com/avatar/a46d5479c38223a4c9b167659eec2595?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 317, 
            "link": "http://stackoverflow.com/users/1360646/sabbath", 
            "accept_rate": 92, 
            "display_name": "Sabbath"
          }
        }
      ], 
      "creation_date": 1341282083, 
      "comment_count": 2, 
      "score": 0, 
      "body_markdown": "    public function countOccurrences() {\r\n\r\n    String Message = &quot;Hello, how are you?&quot;\r\n    String trim = Mensaje.replaceAll(&quot; &quot;, &quot;&quot;);\r\n\r\n\r\n    char[] third = trim.toCharArray();\r\n\r\n    for (int counter = 0; counter &lt; third.length; counter++) {\r\n\r\n        if (ch == &#39;,&#39;) {\r\n            continue;\r\n        }\r\n\r\n        char ch = third[counter];\r\n        int count = 0;\r\n\r\n        for (int i = 0; i &lt; third.length; i++) {\r\n\r\n            if (ch == third[i]) {\r\n                count++;\r\n            }\r\n        }\r\n\r\n\r\n        boolean flag = false;\r\n        for (int j = counter - 1; j &gt;= 0; j--) {\r\n            if (ch == third[j]) {\r\n                flag = true;\r\n            }\r\n        }\r\n\r\n        if (!flag) {\r\n\r\n            trim = &quot;Letra:&quot; + ch + &quot; se repite &quot; + count + &quot; veces &quot;;\r\n             // trim is a String where I need to store this information\r\n        }\r\n\r\n\r\n}", 
      "owner": {
        "user_id": 1360646, 
        "profile_image": "https://www.gravatar.com/avatar/a46d5479c38223a4c9b167659eec2595?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 317, 
        "link": "http://stackoverflow.com/users/1360646/sabbath", 
        "accept_rate": 92, 
        "display_name": "Sabbath"
      }, 
      "is_accepted": false, 
      "answer_id": 11303674
    }, 
    {
      "body": "<pre><code>ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(f, true));\n</code></pre>\n\n<p>In your code, you have <code>ObjectOutputStream oos = null;</code>, so <code>oos</code> is <code>null</code>. You need to initialize it. Like this:</p>\n\n<pre><code>public class ReadFile {\n    static FileOutputStream fos = null;\n    static ObjectOutputStream oos = null;\n    public static void main(String[] args) throws IOException, ClassNotFoundException {\n\n        File f = new File(\"file.tmp\");\n        oos = new ObjectOutputStream(new FileOutputStream(f, true));\n        if (f.exists()) {\n            //How to retreive an old oos to can write on old file ?\n            oos.writeObject(\"12345\");\n            oos.writeObject(\"Today\");\n        }\n        else\n        {\n            fos = new FileOutputStream(f, true);\n            oos = new ObjectOutputStream(fos);\n        }\n        oos.close();\n    }\n }\n</code></pre>\n", 
      "question_id": 13232582, 
      "last_activity_date": 1352120444, 
      "creation_date": 1352120444, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "    ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(f, true));\r\n\r\nIn your code, you have `ObjectOutputStream oos = null;`, so `oos` is `null`. You need to initialize it. Like this:\r\n\r\n    public class ReadFile {\r\n        static FileOutputStream fos = null;\r\n        static ObjectOutputStream oos = null;\r\n        public static void main(String[] args) throws IOException, ClassNotFoundException {\r\n    \r\n            File f = new File(&quot;file.tmp&quot;);\r\n            oos = new ObjectOutputStream(new FileOutputStream(f, true));\r\n            if (f.exists()) {\r\n                //How to retreive an old oos to can write on old file ?\r\n                oos.writeObject(&quot;12345&quot;);\r\n                oos.writeObject(&quot;Today&quot;);\r\n            }\r\n            else\r\n            {\r\n                fos = new FileOutputStream(f, true);\r\n                oos = new ObjectOutputStream(fos);\r\n            }\r\n            oos.close();\r\n        }\r\n     }", 
      "owner": {
        "user_id": 1223693, 
        "profile_image": "http://i.stack.imgur.com/uhStG.png?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 24370, 
        "link": "http://stackoverflow.com/users/1223693/doorknob", 
        "accept_rate": 97, 
        "display_name": "Doorknob"
      }, 
      "is_accepted": false, 
      "answer_id": 13232661
    }, 
    {
      "body": "<p>If you don't want to overrite the file, add the true argument to the File or File OutputStream  constructors</p>\n\n<pre><code>new FileOutputStream( new File(\"Filename.txt\"), true );\n\nParameters:\nname - the system-dependent file name\nappend - if true, then bytes will be written to the end of the file rather than the beginning \n</code></pre>\n", 
      "question_id": 13232582, 
      "last_activity_date": 1352120465, 
      "creation_date": 1352120465, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "If you don&#39;t want to overrite the file, add the true argument to the File or File OutputStream  constructors\r\n\r\n    new FileOutputStream( new File(&quot;Filename.txt&quot;), true );\r\n\r\n    Parameters:\r\n    name - the system-dependent file name\r\n    append - if true, then bytes will be written to the end of the file rather than the beginning \r\n\r\n", 
      "owner": {
        "user_id": 798818, 
        "profile_image": "https://www.gravatar.com/avatar/cb86148f549bff856b471127b4be7712?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 6129, 
        "link": "http://stackoverflow.com/users/798818/mob", 
        "accept_rate": 94, 
        "display_name": "Mob"
      }, 
      "is_accepted": false, 
      "answer_id": 13232664
    }, 
    {
      "body": "<p>Try using a <code>FileWriter</code> instead of <code>FileOutputStream</code>, if you plan to write plain text.</p>\n\n<pre><code>    PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(\"outfilename\", true)));\n    out.println(\"the text\");\n</code></pre>\n\n<p>The second parameter (<code>true</code>) will tell to append to file.</p>\n", 
      "question_id": 13232582, 
      "last_activity_date": 1352120519, 
      "creation_date": 1352120519, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "Try using a `FileWriter` instead of `FileOutputStream`, if you plan to write plain text.\r\n\r\n        PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(&quot;outfilename&quot;, true)));\r\n        out.println(&quot;the text&quot;);\r\n\r\nThe second parameter (`true`) will tell to append to file.", 
      "owner": {
        "user_id": 1180088, 
        "profile_image": "https://www.gravatar.com/avatar/918701b0d1336b0b4132c551258d3e8f?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 108, 
        "link": "http://stackoverflow.com/users/1180088/alan-sambol", 
        "display_name": "alan.sambol"
      }, 
      "is_accepted": false, 
      "answer_id": 13232678
    }, 
    {
      "body": "<p>Just create new <code>FileOutputStream</code> with second argument set to <code>true</code></p>\n\n<pre><code>FileOutputStream d = new FileOutputStream(file, append);\n</code></pre>\n", 
      "question_id": 13232582, 
      "last_activity_date": 1352120563, 
      "creation_date": 1352120563, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "Just create new `FileOutputStream` with second argument set to `true`\r\n\r\n    FileOutputStream d = new FileOutputStream(file, append);", 
      "owner": {
        "user_id": 1700321, 
        "profile_image": "http://i.stack.imgur.com/IPs4W.png?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 12744, 
        "link": "http://stackoverflow.com/users/1700321/aleksandr-m", 
        "display_name": "Aleksandr M"
      }, 
      "is_accepted": false, 
      "answer_id": 13232695
    }, 
    {
      "body": "<p>The code as written is correct.  It writes data at the end of the file with overwriting any existing data.</p>\n\n<p>The only <em>possible</em> issue is that if the last line of the existing file does not end with a line terminator, then the first line of extra data that you write at the end will be appended to the and of the previous last line.  If that is your concern, then the simple fix is to start by appending an empty line; e.g. <code>filewriter.write(newline);</code> where <code>newline</code> contains the appropriate line termination character or characters.</p>\n\n<p>(I also notice that you \"code\" for writing does not include an explicit line terminator.  Is it part of the string?  Might that be your problem?  The <code>Writer.write(...)</code> methods don't add line terminators automatically ...)</p>\n", 
      "question_id": 14916582, 
      "last_activity_date": 1361084420, 
      "creation_date": 1361082197, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "The code as written is correct.  It writes data at the end of the file with overwriting any existing data.\r\n\r\nThe only *possible* issue is that if the last line of the existing file does not end with a line terminator, then the first line of extra data that you write at the end will be appended to the and of the previous last line.  If that is your concern, then the simple fix is to start by appending an empty line; e.g. `filewriter.write(newline);` where `newline` contains the appropriate line termination character or characters.\r\n\r\n(I also notice that you &quot;code&quot; for writing does not include an explicit line terminator.  Is it part of the string?  Might that be your problem?  The `Writer.write(...)` methods don&#39;t add line terminators automatically ...)", 
      "owner": {
        "user_id": 139985, 
        "profile_image": "https://www.gravatar.com/avatar/147c5a9cc1feec049c50da791ac7d144?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 277222, 
        "link": "http://stackoverflow.com/users/139985/stephen-c", 
        "accept_rate": 61, 
        "display_name": "Stephen C"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1361084420, 
      "answer_id": 14918564
    }, 
    {
      "body": "<p>Go with <code>indexOf()</code> or <code>contains()</code> instead of equals() and equalsIgnoreCase(), </p>\n\n<p>I am sure that the line you read may contain</p>\n\n<ul>\n<li>Empty spaces (before or after)</li>\n<li>Next line problem may occur</li>\n</ul>\n\n<p>If you use <code>indexOf()</code> or <code>contains()</code> , it will check ,whether the line have the string (<code>rule_write</code>)</p>\n\n<p>Make sure the the values are coming  in <code>while()</code></p>\n", 
      "question_id": 19854395, 
      "last_activity_date": 1383899183, 
      "creation_date": 1383899183, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "Go with `indexOf()` or `contains()` instead of equals() and equalsIgnoreCase(), \r\n\r\nI am sure that the line you read may contain\r\n\r\n- Empty spaces (before or after)\r\n- Next line problem may occur\r\n\r\nIf you use `indexOf()` or `contains()` , it will check ,whether the line have the string (`rule_write`)\r\n\r\nMake sure the the values are coming  in `while()`\r\n\r\n", 
      "owner": {
        "user_id": 1923055, 
        "profile_image": "http://i.stack.imgur.com/PNKTN.jpg?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 959, 
        "link": "http://stackoverflow.com/users/1923055/kark", 
        "accept_rate": 71, 
        "display_name": "kark"
      }, 
      "is_accepted": false, 
      "answer_id": 19854538
    }, 
    {
      "body": "<p>For every line that is not equal you (potentially) try to write to the file.</p>\n\n<p>What you want is to write to the file if <strong>all</strong> lines are not equal:</p>\n\n<pre><code>    boolean found = false;\n    while (scanner.hasNextLine()) \n    {\n        String lineFromFile = scanner.nextLine();\n        if (rule_write.equals(lineFromFile))\n        {\n           found = true;\n           break;\n        }\n    }\n\n    if (!found) {\n        // append rule_write to the file\n        ...\n    }\n</code></pre>\n", 
      "question_id": 19854395, 
      "last_activity_date": 1383899234, 
      "creation_date": 1383899234, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "For every line that is not equal you (potentially) try to write to the file.\r\n\r\nWhat you want is to write to the file if **all** lines are not equal:\r\n\r\n        boolean found = false;\r\n        while (scanner.hasNextLine()) \r\n        {\r\n            String lineFromFile = scanner.nextLine();\r\n            if (rule_write.equals(lineFromFile))\r\n            {\r\n               found = true;\r\n               break;\r\n            }\r\n        }\r\n\r\n        if (!found) {\r\n            // append rule_write to the file\r\n            ...\r\n        }", 
      "owner": {
        "user_id": 646887, 
        "profile_image": "http://i.stack.imgur.com/YJ0Ye.jpg?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 16795, 
        "link": "http://stackoverflow.com/users/646887/klas-lindb%c3%a4ck", 
        "display_name": "Klas Lindb&#228;ck"
      }, 
      "is_accepted": true, 
      "answer_id": 19854550
    }, 
    {
      "body": "<p>This snippet was found in \\sdk\\samples\\android-19\\connectivity\\NetworkConnect\\NetworkConnectSample\\src\\main\\java\\com\\example\\android\\networkconnect\\MainActivity.java which is licensed under Apache License, Version 2.0 and written by Google.</p>\n\n<pre><code>/** Reads an InputStream and converts it to a String.\n * @param stream InputStream containing HTML from targeted site.\n * @param len Length of string that this method returns.\n * @return String concatenated according to len parameter.\n * @throws java.io.IOException\n * @throws java.io.UnsupportedEncodingException\n */\nprivate String readIt(InputStream stream, int len) throws IOException, UnsupportedEncodingException {\n    Reader reader = null;\n    reader = new InputStreamReader(stream, \"UTF-8\");\n    char[] buffer = new char[len];\n    reader.read(buffer);\n    return new String(buffer);\n}\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1392910139, 
      "creation_date": 1392910139, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "This snippet was found in \\sdk\\samples\\android-19\\connectivity\\NetworkConnect\\NetworkConnectSample\\src\\main\\java\\com\\example\\android\\networkconnect\\MainActivity.java which is licensed under Apache License, Version 2.0 and written by Google.\r\n\r\n    /** Reads an InputStream and converts it to a String.\r\n     * @param stream InputStream containing HTML from targeted site.\r\n     * @param len Length of string that this method returns.\r\n     * @return String concatenated according to len parameter.\r\n     * @throws java.io.IOException\r\n     * @throws java.io.UnsupportedEncodingException\r\n     */\r\n    private String readIt(InputStream stream, int len) throws IOException, UnsupportedEncodingException {\r\n        Reader reader = null;\r\n        reader = new InputStreamReader(stream, &quot;UTF-8&quot;);\r\n        char[] buffer = new char[len];\r\n        reader.read(buffer);\r\n        return new String(buffer);\r\n    }", 
      "owner": {
        "user_id": 2470524, 
        "profile_image": "https://www.gravatar.com/avatar/30572a95a69e05b8c921c1ac6672cb63?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 452, 
        "link": "http://stackoverflow.com/users/2470524/fred", 
        "accept_rate": 0, 
        "display_name": "Fred"
      }, 
      "is_accepted": false, 
      "answer_id": 21912248
    }, 
    {
      "body": "<p>You can take the substring of the path till folder structure(excluding file name) and create directories using method <strong>mkdirs()</strong>. Then create file using <strong>createNewFile()</strong> method. After that write to newly created file. Don't forget to handle exceptions.</p>\n", 
      "question_id": 24482716, 
      "last_activity_date": 1404104510, 
      "creation_date": 1404104510, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "You can take the substring of the path till folder structure(excluding file name) and create directories using method **mkdirs()**. Then create file using **createNewFile()** method. After that write to newly created file. Don&#39;t forget to handle exceptions.", 
      "owner": {
        "user_id": 3547733, 
        "profile_image": "https://www.gravatar.com/avatar/27d52c80e3a4acf0c98957b930135f5f?s=128&d=identicon&r=PG&f=1", 
        "user_type": "registered", 
        "reputation": 44, 
        "link": "http://stackoverflow.com/users/3547733/dhan", 
        "display_name": "Dhan"
      }, 
      "is_accepted": false, 
      "answer_id": 24483191
    }, 
    {
      "body": "<pre><code>InputStream is = Context.openFileInput(someFileName); // whatever formate you have\n\nByteArrayOutputStream bos = new ByteArrayOutputStream();\n\nbyte[] b = new byte[1024];\n\nwhile ((int bytesRead = is.read(b)) != -1) {\n\n        bos.write(b, 0, bytesRead);\n}\n\nbyte[] bytes = bos.toByteArray();\n\nString audioDataString=bytes.toString();\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1410359199, 
      "creation_date": 1408969846, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "    InputStream is = Context.openFileInput(someFileName); // whatever formate you have\r\n    \r\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\r\n    \r\n    byte[] b = new byte[1024];\r\n    \r\n    while ((int bytesRead = is.read(b)) != -1) {\r\n    \r\n            bos.write(b, 0, bytesRead);\r\n    }\r\n    \r\n    byte[] bytes = bos.toByteArray();\r\n     \r\n    String audioDataString=bytes.toString();", 
      "owner": {
        "user_id": 3129572, 
        "profile_image": "http://i.stack.imgur.com/iouWp.png?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 832, 
        "link": "http://stackoverflow.com/users/3129572/vaishali", 
        "display_name": "Vaishali"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1410359199, 
      "answer_id": 25486003
    }, 
    {
      "body": "<p>The following doesn't address the original question, but rather some of the responses.</p>\n\n<p>Several responses suggest loops of the form</p>\n\n<pre><code>String line = null;\nwhile((line = reader.readLine()) != null) {\n  // ...\n}\n</code></pre>\n\n<p>or</p>\n\n<pre><code>for(String line = reader.readLine(); line != null; line = reader.readLine()) {\n    // ...\n}\n</code></pre>\n\n<p>The first form pollutes the namespace of the enclosing scope by declaring a variable \"read\" in the enclosing scope that will not be used for anything outside the for loop. The second form duplicates the readline() call.</p>\n\n<p>Here is a much cleaner way of writing this sort of loop in Java. It turns out that the first clause in a for-loop doesn't require an actual initializer value. This keeps the scope of the variable \"line\" to within the body of the for loop. Much more elegant! I haven't seen anybody using this form anywhere (I randomly discovered it one day years ago), but I use it all the time.</p>\n\n<pre><code>for (String line; (line = reader.readLine()) != null; ) {\n    //...\n}\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1410423745, 
      "creation_date": 1410423745, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "The following doesn&#39;t address the original question, but rather some of the responses.\r\n\r\nSeveral responses suggest loops of the form\r\n\r\n    String line = null;\r\n    while((line = reader.readLine()) != null) {\r\n      // ...\r\n    }\r\n\r\nor\r\n\r\n    for(String line = reader.readLine(); line != null; line = reader.readLine()) {\r\n        // ...\r\n    }\r\n\r\nThe first form pollutes the namespace of the enclosing scope by declaring a variable &quot;read&quot; in the enclosing scope that will not be used for anything outside the for loop. The second form duplicates the readline() call.\r\n\r\nHere is a much cleaner way of writing this sort of loop in Java. It turns out that the first clause in a for-loop doesn&#39;t require an actual initializer value. This keeps the scope of the variable &quot;line&quot; to within the body of the for loop. Much more elegant! I haven&#39;t seen anybody using this form anywhere (I randomly discovered it one day years ago), but I use it all the time.\r\n\r\n    for (String line; (line = reader.readLine()) != null; ) {\r\n        //...\r\n    }\r\n", 
      "owner": {
        "user_id": 3950982, 
        "profile_image": "https://www.gravatar.com/avatar/7491f45ae073ed6bfe01b1e63fb06bf0?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 101, 
        "link": "http://stackoverflow.com/users/3950982/luke-hutchison", 
        "display_name": "Luke Hutchison"
      }, 
      "is_accepted": false, 
      "answer_id": 25782577
    }, 
    {
      "body": "<p>This is a different approach by using <a href=\"http://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html\" rel=\"nofollow\">try with resource</a></p>\n\n<pre><code>String id = scan.nextLine();\ntry(BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(new File(id + \".txt\")))\n{\n}\ncatch(Exception e)\n{\n}\n</code></pre>\n", 
      "question_id": 26030579, 
      "last_activity_date": 1411624376, 
      "creation_date": 1411624376, 
      "comment_count": 0, 
      "score": 0, 
      "body_markdown": "This is a different approach by using [try with resource][1]\r\n\r\n    String id = scan.nextLine();\r\n    try(BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(new File(id + &quot;.txt&quot;)))\r\n    {\r\n    }\r\n    catch(Exception e)\r\n    {\r\n    }\r\n\r\n\r\n  [1]: http://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html", 
      "owner": {
        "user_id": 2664200, 
        "profile_image": "https://www.gravatar.com/avatar/e850532d7a7f9dc4fd5bbbb642271e90?s=128&d=identicon&r=PG&f=1", 
        "user_type": "registered", 
        "reputation": 7833, 
        "link": "http://stackoverflow.com/users/2664200/springlearner", 
        "accept_rate": 75, 
        "display_name": "SpringLearner"
      }, 
      "is_accepted": false, 
      "answer_id": 26031528
    }, 
    {
      "body": "<p>First ,you have to know the encoding of string that you want to convert.Because the java.io.InputStream operates an underlying array of bytes,however,a string is composed by a array of character that needs an encoding, e,g. UTF-8,the JDK will take the default encoding that is taken from System.getProperty(\"file.encoding\",\"UTF-8\"); </p>\n\n<pre><code>byte[] bytes=new byte[inputStream.available()];\ninputStream.read(bytes);\nString s = new String(bytes);\n</code></pre>\n\n<p>If inputStream's byte array is very big, you could do it in loop.</p>\n\n<p>:EOF</p>\n", 
      "question_id": 309424, 
      "last_activity_date": 1282049105, 
      "comments": [
        {
          "body": "From the javadocs: Note that while some implementations of InputStream will return the total number of bytes in the stream, many will not. It is never correct to use the return value of this method to allocate a buffer intended to hold all data in this stream.", 
          "edited": false, 
          "comment_id": 9331251, 
          "creation_date": 1317917369, 
          "post_id": 3502497, 
          "score": 7, 
          "body_markdown": "From the javadocs: Note that while some implementations of InputStream will return the total number of bytes in the stream, many will not. It is never correct to use the return value of this method to allocate a buffer intended to hold all data in this stream.", 
          "owner": {
            "user_id": 38104, 
            "profile_image": "https://www.gravatar.com/avatar/7a5c4fb93aaac189286c63c23c4b505b?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 473, 
            "link": "http://stackoverflow.com/users/38104/tylermac", 
            "display_name": "tylermac"
          }
        }, 
        {
          "body": "This is a bad idea! Don&#39;t be burnt by misunderstanding what <code>available()</code> gives you.", 
          "edited": false, 
          "comment_id": 19520810, 
          "creation_date": 1357011760, 
          "post_id": 3502497, 
          "score": 0, 
          "body_markdown": "This is a bad idea! Don&#39;t be burnt by misunderstanding what `available()` gives you.", 
          "owner": {
            "user_id": 24874, 
            "profile_image": "https://www.gravatar.com/avatar/b85169daf0d165b94ea4fa70f409686c?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 77634, 
            "link": "http://stackoverflow.com/users/24874/drew-noakes", 
            "accept_rate": 80, 
            "display_name": "Drew Noakes"
          }
        }, 
        {
          "body": "As mentioned above, available() is not the way to go. It&#39;s highly  recommended to ignore this method so much so that you could treat this to be a restricted API.", 
          "edited": false, 
          "comment_id": 26485958, 
          "creation_date": 1375845000, 
          "post_id": 3502497, 
          "score": 0, 
          "body_markdown": "As mentioned above, available() is not the way to go. It&#39;s highly  recommended to ignore this method so much so that you could treat this to be a restricted API.", 
          "owner": {
            "user_id": 282345, 
            "profile_image": "http://www.gravatar.com/avatar/a4f96894ca46c1c7e7c3aba97cb1c642?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 2133, 
            "link": "http://stackoverflow.com/users/282345/asgs", 
            "accept_rate": 80, 
            "display_name": "asgs"
          }
        }
      ], 
      "creation_date": 1282049105, 
      "comment_count": 3, 
      "score": -1, 
      "body_markdown": "First ,you have to know the encoding of string that you want to convert.Because the java.io.InputStream operates an underlying array of bytes,however,a string is composed by a array of character that needs an encoding, e,g. UTF-8,the JDK will take the default encoding that is taken from System.getProperty(&quot;file.encoding&quot;,&quot;UTF-8&quot;); \r\n\r\n\r\n    byte[] bytes=new byte[inputStream.available()];\r\n    inputStream.read(bytes);\r\n    String s = new String(bytes);\r\n\r\n\r\nIf inputStream&#39;s byte array is very big, you could do it in loop.\r\n\r\n:EOF", 
      "owner": {
        "user_id": 421788, 
        "profile_image": "https://www.gravatar.com/avatar/4828cfa146a79fbec79374f957109f7d?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 77, 
        "link": "http://stackoverflow.com/users/421788/mercy", 
        "display_name": "Mercy"
      }, 
      "is_accepted": false, 
      "answer_id": 3502497
    }, 
    {
      "body": "<pre><code>  InputStream IS=new URL(\"http://www.petrol.si/api/gas_prices.json\").openStream();   \n\n  ByteArrayOutputStream BAOS=new ByteArrayOutputStream();\n  IOUtils.copy(IS, BAOS);\n  String d= new String(BAOS.toByteArray(),\"UTF-8\");           \n\nSystem.out.println(d);\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1368206715, 
      "comments": [
        {
          "body": "See the commet by ChristofferHammarstr&#246;m in the answer by HarryLime.", 
          "edited": false, 
          "comment_id": 23806798, 
          "creation_date": 1368631412, 
          "post_id": 16487716, 
          "score": 0, 
          "body_markdown": "See the commet by ChristofferHammarstr&#246;m in the answer by HarryLime.", 
          "owner": {
            "user_id": 821436, 
            "profile_image": "https://www.gravatar.com/avatar/d8110a8a8a97be0803549ea5ee2e638b?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 1355, 
            "link": "http://stackoverflow.com/users/821436/martin-schr%c3%b6der", 
            "accept_rate": 83, 
            "display_name": "Martin Schr&#246;der"
          }
        }
      ], 
      "creation_date": 1368206715, 
      "comment_count": 1, 
      "score": -1, 
      "body_markdown": "      InputStream IS=new URL(&quot;http://www.petrol.si/api/gas_prices.json&quot;).openStream();   \r\n         \r\n      ByteArrayOutputStream BAOS=new ByteArrayOutputStream();\r\n      IOUtils.copy(IS, BAOS);\r\n      String d= new String(BAOS.toByteArray(),&quot;UTF-8&quot;);           \r\n        \r\n    System.out.println(d);", 
      "owner": {
        "user_id": 2370932, 
        "profile_image": "https://www.gravatar.com/avatar/a30d1cf5f308365d64e8bae3e69f1ec9?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 1, 
        "link": "http://stackoverflow.com/users/2370932/user2370932", 
        "display_name": "user2370932"
      }, 
      "is_accepted": false, 
      "answer_id": 16487716
    }, 
    {
      "body": "<p>I had log4j available, so I was able to use the org.apache.log4j.lf5.util.StreamUtils.getBytes to get the bytes, which I was able to convert into a string using the String ctor</p>\n\n<pre><code>String result = new String(StreamUtils.getBytes(inputStream));\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1399917879, 
      "comments": [
        {
          "body": "-1. Just because something is available doesn&#39;t mean it should be used. When you switch the logging provider, you&#39;re going to have to replace this. Also, it looks like it is internal and shouldn&#39;t really be used outside of log4j.", 
          "edited": false, 
          "comment_id": 39433231, 
          "creation_date": 1407995511, 
          "post_id": 23615823, 
          "score": 0, 
          "body_markdown": "-1. Just because something is available doesn&#39;t mean it should be used. When you switch the logging provider, you&#39;re going to have to replace this. Also, it looks like it is internal and shouldn&#39;t really be used outside of log4j.", 
          "owner": {
            "user_id": 305973, 
            "profile_image": "https://www.gravatar.com/avatar/cd49db0b676767ea4358b1047c4cddd2?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 10383, 
            "link": "http://stackoverflow.com/users/305973/robinst", 
            "accept_rate": 100, 
            "display_name": "robinst"
          }
        }
      ], 
      "creation_date": 1399917879, 
      "comment_count": 1, 
      "score": -1, 
      "body_markdown": "I had log4j available, so I was able to use the org.apache.log4j.lf5.util.StreamUtils.getBytes to get the bytes, which I was able to convert into a string using the String ctor\r\n\r\n    String result = new String(StreamUtils.getBytes(inputStream));", 
      "owner": {
        "user_id": 262379, 
        "profile_image": "https://www.gravatar.com/avatar/b8bcd362d67c89dbb8dc7b0418109597?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 1107, 
        "link": "http://stackoverflow.com/users/262379/dinis-cruz", 
        "accept_rate": 38, 
        "display_name": "Dinis Cruz"
      }, 
      "is_accepted": false, 
      "answer_id": 23615823
    }, 
    {
      "body": "<p>Quick and easy:</p>\n\n<pre><code>String result = (String)new ObjectInputStream( inputStream ).readObject();\n</code></pre>\n", 
      "question_id": 309424, 
      "last_activity_date": 1342719219, 
      "comments": [
        {
          "body": "I get <code>java.io.StreamCorruptedException: invalid stream header</code>", 
          "edited": false, 
          "comment_id": 15318282, 
          "creation_date": 1342782813, 
          "post_id": 11566262, 
          "score": 0, 
          "body_markdown": "I get `java.io.StreamCorruptedException: invalid stream header`", 
          "owner": {
            "user_id": 674856, 
            "profile_image": "https://www.gravatar.com/avatar/959dcf1e004eb5e9e42b22346ce370c7?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 521, 
            "link": "http://stackoverflow.com/users/674856/xxl", 
            "accept_rate": 85, 
            "display_name": "XXL"
          }
        }, 
        {
          "body": "<code>ObjectInputStream</code> is about deserialization, and the stream have to respect the serialization protocol to work, which may not always true in the context of this question.", 
          "edited": false, 
          "comment_id": 22450251, 
          "creation_date": 1364998633, 
          "post_id": 11566262, 
          "score": 2, 
          "body_markdown": "`ObjectInputStream` is about deserialization, and the stream have to respect the serialization protocol to work, which may not always true in the context of this question.", 
          "owner": {
            "user_id": 48136, 
            "profile_image": "https://www.gravatar.com/avatar/f31c7fbcbb0766d0632d96fd7e74b649?s=128&d=identicon&r=PG", 
            "user_type": "registered", 
            "reputation": 5966, 
            "link": "http://stackoverflow.com/users/48136/brice", 
            "display_name": "Brice"
          }
        }
      ], 
      "creation_date": 1342719219, 
      "comment_count": 2, 
      "score": -7, 
      "body_markdown": "Quick and easy:\r\n\r\n    String result = (String)new ObjectInputStream( inputStream ).readObject();", 
      "owner": {
        "user_id": 772549, 
        "profile_image": "https://www.gravatar.com/avatar/f6ec07c16857a31a20fbea3dfc4a3816?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 304, 
        "link": "http://stackoverflow.com/users/772549/sobinary", 
        "accept_rate": 71, 
        "display_name": "soBinary"
      }, 
      "is_accepted": false, 
      "answer_id": 11566262
    }
  ], 
  "quota_max": 300, 
  "quota_remaining": 199
}