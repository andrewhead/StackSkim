{
  "items": [
    {
      "body": "<p>By default, when launching a command with sudo, the normal context is not used, so PYTHONPATH is forgotten. In order to have PYTHONPATH with sudo, follow those steps :</p>\n\n<ul>\n<li>add PYTHONPATH to Defaults env_keep += \"ENV1 ENV2 ...\" in sudoers file</li>\n<li>remove Defaults !env_reset from sudoers file if present</li>\n</ul>\n", 
      "question_id": 27045539, 
      "last_activity_date": 1418812622, 
      "creation_date": 1418812622, 
      "score": 0, 
      "owner": {
        "user_id": 4274363, 
        "profile_image": "https://www.gravatar.com/avatar/e7e999ae61a78cc7070876d2a73a3005?s=128&d=identicon&r=PG&f=1", 
        "user_type": "registered", 
        "reputation": 33, 
        "link": "http://stackoverflow.com/users/4274363/remi-delassus", 
        "display_name": "Remi Delassus"
      }, 
      "is_accepted": true, 
      "answer_id": 27523599
    }, 
    {
      "body": "<p>Assuming you're using python 2.x here, use unicode keys:</p>\n\n<pre><code>&gt;&gt;&gt; c.foo.bar.insert({u'Cl\\uff0eG_bibcode': 'some value'})\nObjectId('5488fe8dfba52249d72069bf')\n&gt;&gt;&gt; doc = c.foo.bar.find_one()\n&gt;&gt;&gt; doc\n{u'_id': ObjectId('5488fe8dfba52249d72069bf'), u'Cl\\uff0eG_bibcode': u'some value'}   \n&gt;&gt;&gt; for key in doc:\n...     print key.encode(\"utf-8\")\n... \n_id\nCl\uff0eG_bibcode\n</code></pre>\n", 
      "question_id": 27391812, 
      "last_activity_date": 1418264961, 
      "creation_date": 1418264961, 
      "score": 0, 
      "owner": {
        "user_id": 600498, 
        "profile_image": "https://www.gravatar.com/avatar/b7a20402407af749902e68c8e31ad052?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 1541, 
        "link": "http://stackoverflow.com/users/600498/bernie-hackett", 
        "display_name": "Bernie Hackett"
      }, 
      "is_accepted": false, 
      "answer_id": 27414401
    }, 
    {
      "body": "<p>You could simply print the \"Loading...\" before entering the function or at the first line when you enter the function. However, this is not doing something \"else\". It is a sequential execution. </p>\n\n<p>If you want to do something else in parallel, yes, threads would be the way to go. </p>\n\n<p>You should post your code and perhaps tell us what exactly is it that you want to do for a precise answer!</p>\n", 
      "question_id": 26759118, 
      "last_activity_date": 1415196415, 
      "creation_date": 1415196415, 
      "score": 1, 
      "owner": {
        "user_id": 867545, 
        "profile_image": "https://www.gravatar.com/avatar/842b45a726789b30ed0ce8210b11e9d3?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 21, 
        "link": "http://stackoverflow.com/users/867545/mohammad-ghufran", 
        "display_name": "Mohammad Ghufran"
      }, 
      "is_accepted": false, 
      "answer_id": 26759193
    }, 
    {
      "body": "<p>Would something like this work?</p>\n\n<pre><code>&gt;&gt;&gt; entries = \"\"\"&lt;entry ns1:etag=\"&amp;quot;RcDVSLt7I2AQEQAM.&amp;quot;\"&gt;\n...  &lt;category scheme=\"http://schemas.google.com/g/...\" /&gt;\n...  &lt;title&gt;Pepe Estropajo&lt;/title&gt;\n...  &lt;/edited&gt;\n...  &lt;name&gt;\n...  &lt;fullName&gt;Pepe&lt;/fullName&gt;\n...  &lt;givenName&gt;...&lt;/givenName&gt;\n...  &lt;familyName&gt;Estropajo&lt;/familyName&gt;\n...  &lt;/name&gt;\n...  &lt;/entry&gt;\"\"\"\n&gt;&gt;&gt; \n&gt;&gt;&gt; from bs4 import BeautifulSoup\n&gt;&gt;&gt; soup = BeautifulSoup(entries)\n&gt;&gt;&gt; \n&gt;&gt;&gt; for entry in soup.findAll('entry'):\n...     print entry.find('title').getText()\n... \nPepe Estropajo\n</code></pre>\n", 
      "question_id": 25221352, 
      "last_activity_date": 1407614481, 
      "creation_date": 1407614481, 
      "score": 0, 
      "owner": {
        "user_id": 2626491, 
        "profile_image": "https://www.gravatar.com/avatar/b8fa2a412c2101e7df568fb0975f7f96?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 594, 
        "link": "http://stackoverflow.com/users/2626491/alex-woolford", 
        "accept_rate": 67, 
        "display_name": "Alex Woolford"
      }, 
      "is_accepted": false, 
      "answer_id": 25222518
    }, 
    {
      "body": "<p>There is a handy python script for updating all libraries with pip (<a href=\"http://stackoverflow.com/a/5839291/2327328\">source</a>):</p>\n\n<pre><code>import pip\nfrom subprocess import call\n\nfor dist in pip.get_installed_distributions():\n    call(\"pip install --upgrade \" + dist.project_name, shell=True)\n</code></pre>\n\n<p>In the 'for' loop you can loop over the requirements.</p>\n\n<pre><code># read requirements.txt file, create list of package names\nfor package in requirements:\n    call(\"pip install \" + package, shell=True)\n</code></pre>\n\n<p>This won't crash if you can't install a package.</p>\n", 
      "question_id": 23740288, 
      "last_activity_date": 1400510178, 
      "creation_date": 1400510178, 
      "score": 2, 
      "owner": {
        "user_id": 2327328, 
        "profile_image": "http://i.stack.imgur.com/dDIn1.jpg?s=128&g=1", 
        "user_type": "registered", 
        "reputation": 1543, 
        "link": "http://stackoverflow.com/users/2327328/philshem", 
        "accept_rate": 100, 
        "display_name": "philshem"
      }, 
      "is_accepted": true, 
      "answer_id": 23740522
    }, 
    {
      "body": "<p>Use</p>\n\n<ul>\n<li>the <a href=\"http://docs.python.org/2/library/zipfile\" rel=\"nofollow\"><code>zipfile</code></a> module, particularly <a href=\"http://docs.python.org/2/library/zipfile#zipfile.ZipFile.extractall\" rel=\"nofollow\"><code>ZipFile.extractall()</code></a></li>\n<li><a href=\"http://docs.python.org/2/library/os.path.html#os.path.splitext\" rel=\"nofollow\"><code>os.path.splitext()</code></a>\nto get <code>test1</code> from the string <code>test1.zip</code></li>\n<li><a href=\"http://docs.python.org/2/library/tempfile.html#tempfile.mkdtemp\" rel=\"nofollow\"><code>tmpfile.mkdtemp()</code></a> to create a temporary directory</li>\n<li><a href=\"http://docs.python.org/2/library/shutil.html#shutil.move\" rel=\"nofollow\"><code>shutil.move()</code></a> to move entire directory trees.</li>\n</ul>\n\n<p>For example:</p>\n\n<pre><code>#!/usr/bin/env python\n\"\"\"Usage:\n./extract.py test.zip\n\"\"\"\n\nfrom zipfile import ZipFile\nimport os\nimport sys\nimport tempfile\nimport shutil\n\n\nROOT_PATH = 'xl/media/'\n\nzip_name = sys.argv[1]\nzip_path = os.path.abspath(zip_name)\nextraction_dir = os.path.join(os.getcwd(), os.path.splitext(zip_name)[0])\ntemp_dir = tempfile.mkdtemp()\n\n\nwith ZipFile(zip_path, 'r') as zip_file:\n    # Build a list of only the members below ROOT_PATH\n    members = zip_file.namelist()\n    members_to_extract = [m for m in members if m.startswith(ROOT_PATH)]\n    # Extract only those members to the temp directory\n    zip_file.extractall(temp_dir, members_to_extract)\n    # Move the extracted ROOT_PATH directory to its final location\n    shutil.move(os.path.join(temp_dir, ROOT_PATH), extraction_dir)\n\n# Uncomment if you want to delete the original zip file\n# os.remove(zip_path)\n\nprint \"Sucessfully extracted '%s' to '%s'\" % (zip_path, extraction_dir)\n</code></pre>\n\n<p>Use <a href=\"http://docs.python.org/2/tutorial/errors.html#handling-exceptions\" rel=\"nofollow\"><code>try..except</code></a> blocks to deal with the various exceptions that can happen when creating directories, removing files and extracting the zip.</p>\n", 
      "question_id": 19618268, 
      "last_activity_date": 1382881578, 
      "creation_date": 1382880242, 
      "score": 2, 
      "owner": {
        "user_id": 1599111, 
        "profile_image": "https://www.gravatar.com/avatar/7e3147a010e5a5d4796739e9a3a47ad2?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 6486, 
        "link": "http://stackoverflow.com/users/1599111/lukas-graf", 
        "display_name": "Lukas Graf"
      }, 
      "is_accepted": true, 
      "last_edit_date": 1382881578, 
      "answer_id": 19618531
    }, 
    {
      "body": "<p>I cannot test it personally at the moment, but I found some people using <code>Python.CreateEngine()</code> in their code, example:</p>\n\n<pre><code>Microsoft.Scripting.Hosting.ScriptEngine engine = \n    IronPython.Hosting.Python.CreateEngine();\n</code></pre>\n\n<p>This line was taken from <a href=\"http://stackoverflow.com/a/9080714/1816426\">this SO question</a>.</p>\n\n<p>You can also check <a href=\"http://underthehood.ironworks.com/2011/04/executing-python-code-in-net-using-ironpython.html\" rel=\"nofollow\">this article</a> with example class using python code. It also uses <code>Python.CreateEngine()</code>.</p>\n", 
      "question_id": 19087332, 
      "last_activity_date": 1380522211, 
      "creation_date": 1380522211, 
      "score": 0, 
      "owner": {
        "user_id": 1816426, 
        "profile_image": "https://www.gravatar.com/avatar/435dd61aa723c0d3fb8f7fc1d281b688?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 2209, 
        "link": "http://stackoverflow.com/users/1816426/konrad-gadzina", 
        "display_name": "Konrad Gadzina"
      }, 
      "is_accepted": false, 
      "answer_id": 19087631
    }, 
    {
      "body": "<p>It is easy to update existing <code>matplotlib</code> plots.  All most all of the artists have <code>update_*</code> functions which will modify the data used by the graph, and the graph will reflect the updated data after a call to <code>draw()</code>.</p>\n\n<p>A lot of this has already been written and is nicely wrapped up in the <a href=\"http://matplotlib.org/api/animation_api.html\" rel=\"nofollow\">animation</a> module, and there is a very nice <a href=\"http://jakevdp.github.com/blog/2012/08/18/matplotlib-animation-tutorial/\" rel=\"nofollow\">tutorial</a>.</p>\n\n<p>If you already have a framework you want to shove this into, you need do to something like:</p>\n\n<pre><code>ln, = ax.plot(...)\ncanv = ax.figure.canvas\n# some code \nwhile True:\n    # code\n    ln.set_xdata(new_x)\n    ln.set_ydata(new_y)\n    canv.draw()\n    # code\n</code></pre>\n", 
      "question_id": 14104228, 
      "last_activity_date": 1356974704, 
      "creation_date": 1356974704, 
      "score": 0, 
      "owner": {
        "user_id": 380231, 
        "profile_image": "https://www.gravatar.com/avatar/8744048060e5931c500d3c9d1ecb997e?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 23805, 
        "link": "http://stackoverflow.com/users/380231/tcaswell", 
        "accept_rate": 100, 
        "display_name": "tcaswell"
      }, 
      "is_accepted": false, 
      "answer_id": 14104369
    }, 
    {
      "body": "<p>If you want to delete both subtrees, there's no need to recurse. Just set <code>root.left</code> and <code>root.right</code> to <code>None</code> and let the garbage collector take care of them. Indeed, rather than making a <code>delete</code> function in the first place, you could just set <code>root = None</code> and be done with it!</p>\n\n<p><strong>Edit:</strong> If you need to run cleanup code on the data values, you might want to recurse through the tree to get to all of them if the GC doesn't do enough. Tearing down the links in the tree shouldn't really be necessary, but I'll do that too for good measure:</p>\n\n<pre><code>def delete(node):\n    if node:\n        node.data.cleanup() # run data value cleanup code\n\n        delete(node.left)   # recurse\n        delete(node.right)\n\n        node.data = None    # clear pointers (not really necessary)\n        node.left = None\n        none.right = None\n</code></pre>\n\n<p>You had also asked about an iterative approach to traversing the tree, which is a little more complicated. Here's a way to an traversal using a <code>deque</code> (as a stack) to keep track of the ancestors:</p>\n\n<pre><code>from collections import deque\n\ndef delete_iterative(node):\n    stack = deque()\n    last = None\n\n    # start up by pushing nodes to the stack until reaching leftmost node\n    while node:\n        stack.append(node)\n        node = node.left\n\n    # the main loop\n    while stack:\n        node = stack.pop()\n\n        # should we expand the right subtree?\n        if node.right &amp;&amp; node.right != last: # yes\n            stack.append(node)\n            node = node.right\n\n            while node: # expand to find leftmost node in right subtree\n                stack.append(node)\n                node = node.left\n\n        else: # no, we just came from there (or it doesn't exist)\n            # delete node's contents\n            node.data.cleanup()\n\n            node.data = None # clear pointers (not really necessary)\n            node.left = None\n            node.right = None\n\n            # let our parent know that it was us it just visited\n            last = node\n</code></pre>\n", 
      "question_id": 12872387, 
      "last_activity_date": 1350133499, 
      "creation_date": 1350125908, 
      "score": 4, 
      "owner": {
        "user_id": 1405065, 
        "profile_image": "https://www.gravatar.com/avatar/e5c422b239ab1f49d3f4fcff9e5df3cf?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 22183, 
        "link": "http://stackoverflow.com/users/1405065/blckknght", 
        "display_name": "Blckknght"
      }, 
      "is_accepted": false, 
      "last_edit_date": 1350133499, 
      "answer_id": 12872443
    }, 
    {
      "body": "<p>Is there anything in your <code>tests/__init__.py</code> file?</p>\n\n<p>I'm looking into the source of unittest (Python's all open source, and very readable -- you can do it too :) ), because I'm more familiar with the Django test runner, but it is likely that your <code>__init__.py</code> file should at least have a line that looks like this:</p>\n\n<pre><code>from criteria_test import *\n</code></pre>\n", 
      "question_id": 12591832, 
      "last_activity_date": 1348611380, 
      "creation_date": 1348611380, 
      "score": 1, 
      "owner": {
        "user_id": 70605, 
        "profile_image": "https://www.gravatar.com/avatar/35924340384102c2d7b4624777cc40db?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 16512, 
        "link": "http://stackoverflow.com/users/70605/ian-clelland", 
        "display_name": "Ian Clelland"
      }, 
      "is_accepted": false, 
      "answer_id": 12591905
    }, 
    {
      "body": "<p>The file is encoded in UTF-16, and you are attempting to process it like ASCII. When you strip the newline, you only consume one byte, so the UTF-16 is off by one until the next newline. See \u201c<a href=\"http://stackoverflow.com/questions/2184543/python-thinks-a-3000-line-text-file-is-one-line-long\">Python thinks a 3000-line text file is one line long?</a>\u201d for a solution and explanation.</p>\n\n<p>This is what you\u2019re doing:</p>\n\n<pre><code>&gt;&gt;&gt; b = u'Like pie?\\tI love it\\tomnomnom'.encode('utf-16le')\n&gt;&gt;&gt; s = ('\\n' + b + '\\0').decode('utf-16le')\n&gt;&gt;&gt; print s\n\u4c0a\u6900\u6b00\u6500\u2002\u7000\u6900\u6500\u3f00\u0900\u4900\u2002\u6c00\u6f00\u7600\u6500\u2002\u6900\u7400\u0900\u6f00\u6d00\u6e00\u6f00\u6d00\u6e00\u6f00\u6d00\n</code></pre>\n", 
      "question_id": 9505971, 
      "last_activity_date": 1330547169, 
      "creation_date": 1330547169, 
      "score": 4, 
      "owner": {
        "user_id": 19750, 
        "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 59590, 
        "link": "http://stackoverflow.com/users/19750/josh-lee", 
        "accept_rate": 100, 
        "display_name": "Josh Lee"
      }, 
      "is_accepted": true, 
      "answer_id": 9506077
    }, 
    {
      "body": "<p>First you need to allocate the id range using <a href=\"http://code.google.com/appengine/docs/python/datastore/functions.html\">allocate_id_range</a>, to make sure to reserve the ids for those entities.</p>\n\n<p>And then just build the key manually, and pass it to <code>Player</code> constructor:</p>\n\n<pre><code>k = Key.from_path('Player', playerID)\nplayer = Player(key = k, ...)\nplayer.put()\n</code></pre>\n", 
      "question_id": 9003288, 
      "last_activity_date": 1327498746, 
      "creation_date": 1327498746, 
      "score": 5, 
      "owner": {
        "user_id": 656408, 
        "profile_image": "https://www.gravatar.com/avatar/71bddd14b9c0fcfa50330450485abbde?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 7069, 
        "link": "http://stackoverflow.com/users/656408/proppy", 
        "display_name": "proppy"
      }, 
      "is_accepted": true, 
      "answer_id": 9003638
    }, 
    {
      "body": "<p>You could go to the <a href=\"http://python3wos.appspot.com/\" rel=\"nofollow\">Python Wall of Shame</a>, find a project that needs porting to Python3... That would be an interesting way to familiarize yourself with a code base, Python3, and we will all <strong>love</strong> you for it!</p>\n", 
      "question_id": 8115087, 
      "last_activity_date": 1321222235, 
      "creation_date": 1321222235, 
      "score": 2, 
      "owner": {
        "user_id": 190597, 
        "profile_image": "https://www.gravatar.com/avatar/dd069899166bba0f0e53d3097452b00b?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 257578, 
        "link": "http://stackoverflow.com/users/190597/unutbu", 
        "accept_rate": 88, 
        "display_name": "unutbu"
      }, 
      "is_accepted": false, 
      "answer_id": 8115155
    }, 
    {
      "body": "<p>Your code actually works, but never ends because poss is continously growing.<br>\nTry:</p>\n\n<pre><code>poss = [1,2]\n\nfor n in poss:\n    poss.append(n+6)\n    if n &gt; 10:\n        print poss\n        break\n</code></pre>\n\n<p>produces:</p>\n\n<pre><code>[1, 2, 7, 8, 13, 14, 19]\n</code></pre>\n", 
      "question_id": 5931223, 
      "last_activity_date": 1304899584, 
      "creation_date": 1304899584, 
      "score": 1, 
      "owner": {
        "user_id": 308903, 
        "profile_image": "https://www.gravatar.com/avatar/712ac24edc67b5e789ed86dcc11ca6b9?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 24630, 
        "link": "http://stackoverflow.com/users/308903/joaquin", 
        "accept_rate": 94, 
        "display_name": "joaquin"
      }, 
      "is_accepted": false, 
      "answer_id": 5931253
    }, 
    {
      "body": "<p>The multi-thread is usefull and efficient when you have to access to different ressources (files, network, user interface...) on the same time.\nIn your code it seems to me that you access at only one ressource, a file, so the mutlti-thread is less efficient</p>\n", 
      "question_id": 5362732, 
      "last_activity_date": 1300545735, 
      "creation_date": 1300545735, 
      "score": 0, 
      "owner": {
        "user_id": 359671, 
        "profile_image": "https://www.gravatar.com/avatar/5a88a295dfc45c4fcb91abf29e8dcacf?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 1343, 
        "link": "http://stackoverflow.com/users/359671/philnext", 
        "accept_rate": 94, 
        "display_name": "philnext"
      }, 
      "is_accepted": false, 
      "answer_id": 5362764
    }, 
    {
      "body": "<p>If your program is an executable (otherwise you would compile it ;) ) you can use the Unix module as you use it in C, for example :</p>\n\n<pre><code>let program = \"path_to_python_program_exe\" in\n\nmatch Unix.fork () with\n    | 0 -&gt; (try\n          Unix.execvp program [|program; \"any_more_args_here\"|]\n       with\n          _ -&gt; printf \"%s\" \"error while execv\\n\"; exit (-1))\n    | -1 -&gt; printf \"%s\" \"error accured on fork\\n\"\n    | _ -&gt; ignore (wait ()); printf \"%s\" \"parent exit...\\n\"\n</code></pre>\n\n<p>When you compile, you use the unix.cma for the compiler: <code>ocamlc unix.cma you_ml.ml</code></p>\n", 
      "question_id": 4683639, 
      "last_activity_date": 1294946093, 
      "creation_date": 1294946093, 
      "score": 2, 
      "owner": {
        "user_id": 66681, 
        "profile_image": "https://www.gravatar.com/avatar/2b24b87664cd8e0ea82d839f7a0b61ce?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 2097, 
        "link": "http://stackoverflow.com/users/66681/0xff", 
        "accept_rate": 57, 
        "display_name": "0xFF"
      }, 
      "is_accepted": false, 
      "answer_id": 4684210
    }, 
    {
      "body": "<pre><code>import time  \ncurrent = time.time()\n\n...job...\nend = time.time()\ndiff = end - current\n</code></pre>\n\n<p>would that work for you?</p>\n", 
      "question_id": 4362491, 
      "last_activity_date": 1291599258, 
      "creation_date": 1291599258, 
      "score": 8, 
      "owner": {
        "user_id": 445762, 
        "profile_image": "https://www.gravatar.com/avatar/0dc3d3e6ede97a600e7b5e3d55f30eb4?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 1760, 
        "link": "http://stackoverflow.com/users/445762/matcheek", 
        "accept_rate": 96, 
        "display_name": "matcheek"
      }, 
      "is_accepted": false, 
      "answer_id": 4362514
    }, 
    {
      "body": "<p>To adjust the <a href=\"http://matplotlib.sourceforge.net/api/artist_api.html?highlight=dashes#matplotlib.lines.Line2D.set_dashes\">dashes</a>, use</p>\n\n<pre><code>a.plot(x, y, '--', label='foo bar', dashes=(2,2))\n</code></pre>\n\n<p>and the <a href=\"http://matplotlib.sourceforge.net/api/artist_api.html?highlight=legend#matplotlib.legend.Legend.get_frame\">legend box</a> line width,</p>\n\n<pre><code>lg = a.legend()\nfr = lg.get_frame()\nfr.set_lw(0.2)\n</code></pre>\n", 
      "question_id": 3190798, 
      "last_activity_date": 1278776956, 
      "creation_date": 1278776956, 
      "score": 7, 
      "owner": {
        "user_id": 26575, 
        "profile_image": "https://www.gravatar.com/avatar/58f309e6d05208bbc64ade2835591055?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 16374, 
        "link": "http://stackoverflow.com/users/26575/jouni-k-sepp%c3%a4nen", 
        "display_name": "Jouni K. Sepp&#228;nen"
      }, 
      "is_accepted": true, 
      "answer_id": 3219849
    }, 
    {
      "body": "<p>Check out <a href=\"http://docs.python.org/library/pprint.html\">pprint module</a>.</p>\n", 
      "question_id": 2187821, 
      "last_activity_date": 1265145960, 
      "creation_date": 1265145960, 
      "score": 17, 
      "owner": {
        "user_id": 199397, 
        "profile_image": "https://www.gravatar.com/avatar/8807d544a2d1049174b4c10fb19977c9?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 13533, 
        "link": "http://stackoverflow.com/users/199397/aj", 
        "accept_rate": 94, 
        "display_name": "AJ."
      }, 
      "is_accepted": false, 
      "answer_id": 2187834
    }, 
    {
      "body": "<p>\"data / architectural models so that we can get a better idea of the approach we should use using a framework we've never made use of before\"</p>\n\n<p>Django imposes best practices on you.  You don't have a lot of choices and can't make a lot of mistakes.</p>\n\n<p>MVC (while a noble aspiration) is implemented as follows:</p>\n\n<ul>\n<li>Data is defined in \"models.py\" files using the Django ORM models.</li>\n<li>urls.py file maps URL to view function.  Pick your URL's wisely.</li>\n<li>View function does all processing, making use of models and methods in models</li>\n<li>Presentation (via HTML templates) invoked by View function.  Essentially no processing can be done in presentation, just lightweight iteration and decision-making</li>\n</ul>\n\n<p>The model is defined for you.  Just stick to what Django does naturally and you'll be happy.</p>\n\n<p>Architecturally, you usually have a stack like this.</p>\n\n<ul>\n<li><p>Apache does two things.</p>\n\n<ul>\n<li>serves static content directly and immediately </li>\n<li>hands dynamic URL to Django (via mod_python, mod_wsgi or mod_fastcgi).  Django apps map URL to view functions (which access to database (via ORM/model) and display via templates.</li>\n</ul></li>\n<li><p>Database used by Django view functions.</p></li>\n</ul>\n\n<p>The architecture is well-defined for you.  Just stick to what Django does naturally and you'll be happy.</p>\n\n<p>Feel free to read the <a href=\"http://docs.djangoproject.com/en/dev/\">Django documentation</a>.  It's excellent; perhaps the best there is.</p>\n", 
      "question_id": 364015, 
      "last_activity_date": 1229114256, 
      "creation_date": 1229114256, 
      "score": 15, 
      "owner": {
        "user_id": 10661, 
        "profile_image": "https://www.gravatar.com/avatar/c2c732bbf13dc96670b210b3c0c1ead5?s=128&d=identicon&r=PG", 
        "user_type": "registered", 
        "reputation": 218355, 
        "link": "http://stackoverflow.com/users/10661/s-lott", 
        "accept_rate": 93, 
        "display_name": "S.Lott"
      }, 
      "is_accepted": false, 
      "answer_id": 364074
    }
  ]
}