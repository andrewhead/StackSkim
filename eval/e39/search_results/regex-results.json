[
  {
    "kind": "customsearch#result", 
    "title": "JavaScript RegExp Object", 
    "displayLink": "www.w3schools.com", 
    "htmlTitle": "<b>JavaScript RegExp</b> Object", 
    "formattedUrl": "www.w3schools.com/js/js_regexp.asp", 
    "htmlFormattedUrl": "www.w3schools.com/<b>js</b>/<b>js</b>_<b>regexp</b>.asp", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ]
    }, 
    "snippet": "Free HTML CSS JavaScript DOM jQuery XML AJAX Angular ASP . ... Regular \nexpressions can be used to perform all types of text search and text replace\u00a0...", 
    "htmlSnippet": "Free HTML CSS <b>JavaScript</b> DOM <b>jQuery</b> XML AJAX Angular ASP . ... <b>Regular</b> <br>\n<b>expressions</b> can be used to perform all types of text search and text <b>replace</b>&nbsp;...", 
    "link": "http://www.w3schools.com/js/js_regexp.asp", 
    "cacheId": "TyrzPQnvjUUJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "jQuery RegEx Examples to use with .match()", 
    "displayLink": "www.sitepoint.com", 
    "htmlTitle": "<b>jQuery RegEx Examples</b> to use with .<b>match</b>()", 
    "formattedUrl": "www.sitepoint.com/jquery-basic-regex-selector-examples/", 
    "htmlFormattedUrl": "www.sitepoint.com/<b>jquery</b>-basic-<b>regex</b>-selector-<b>examples</b>/", 
    "pagemap": {
      "metatags": [
        {
          "twitter:creator": "@samdeering", 
          "twitter:domain": "SitePoint", 
          "og:locale": "en_US", 
          "twitter:site": "@sitepointdotcom", 
          "article:publisher": "https://www.facebook.com/sitepoint", 
          "og:url": "http://www.sitepoint.com/jquery-basic-regex-selector-examples/", 
          "twitter:account_id": "15743570", 
          "og:type": "article", 
          "fb:admins": "121300382", 
          "og:title": "jQuery RegEx Examples to use with .match()", 
          "twitter:title": "jQuery RegEx Examples to use with .match()", 
          "article:tag": "add regex cheat sheet", 
          "article:section": "JavaScript", 
          "wp-parsely_version": "1.7", 
          "og:image": "http://www.sitepoint.com/wp-content/themes/sitepoint/assets/images/icon.javascript.png", 
          "article:published_time": "2011-05-20T07:29:59+00:00", 
          "viewport": "width=device-width, initial-scale=1.0", 
          "og:site_name": "SitePoint", 
          "twitter:card": "summary", 
          "twitter:description": "RegExp reference post for common RegExp (regular expressions) selectors that can be used with jQuery.match() function for finding pretty much anything.", 
          "og:description": "RegExp reference post for common RegExp (regular expressions) selectors that can be used with jQuery.match() function for finding pretty much anything.", 
          "twitter:image:src": "http://(.*?)"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.sitepoint.com/wp-content/themes/sitepoint/assets/images/icon.javascript.png"
        }
      ]
    }, 
    "snippet": "May 20, 2011 ... RegExp reference post for common RegExp (regular expressions) selectors ... \nhttp://www.jquery4u.com/javascript/jquery-exec-compile-regex/", 
    "htmlSnippet": "May 20, 2011 <b>...</b> <b>RegExp</b> reference post for common <b>RegExp</b> (<b>regular expressions</b>) selectors ... <br>\nhttp://www.jquery4u.com/<b>javascript</b>/<b>jquery</b>-exec-compile-<b>regex</b>/", 
    "link": "http://www.sitepoint.com/jquery-basic-regex-selector-examples/", 
    "cacheId": "Edned0Ze998J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "JavaScript RegExp Reference", 
    "displayLink": "www.w3schools.com", 
    "htmlTitle": "<b>JavaScript RegExp</b> Reference", 
    "formattedUrl": "www.w3schools.com/jsref/jsref_obj_regexp.asp", 
    "htmlFormattedUrl": "www.w3schools.com/jsref/jsref_obj_<b>regexp</b>.asp", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "200", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcTofv70oMBVXBxa5aPMf9-6Ga29wrgvxHuHT8pLDuOWF4Mu9OAxXYTROqW4", 
          "height": "150"
        }
      ], 
      "cse_image": [
        {
          "src": "http://di.si/cache/th_wt4d18e3806115b.jpg"
        }
      ]
    }, 
    "snippet": "Free HTML CSS JavaScript DOM jQuery XML AJAX Angular ASP .NET PHP ... \nFor a tutorial about Regular Expressions, read our JavaScript RegExp Tutorial.", 
    "htmlSnippet": "Free HTML CSS <b>JavaScript</b> DOM <b>jQuery</b> XML AJAX Angular ASP .NET PHP ... <br>\nFor a <b>tutorial</b> about <b>Regular Expressions</b>, read our <b>JavaScript RegExp Tutorial</b>.", 
    "link": "http://www.w3schools.com/jsref/jsref_obj_regexp.asp", 
    "cacheId": "LX5WSmPq46QJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "JavaScript/jQuery String Replace With Regex - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>JavaScript</b>/<b>jQuery</b> String <b>Replace</b> With <b>Regex</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/.../javascript-jquery-string-replace-with-regex", 
    "htmlFormattedUrl": "stackoverflow.com/.../<b>javascript</b>-<b>jquery</b>-string-<b>replace</b>-with-<b>regex</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "Use a regex replace: yourTextArea.value = yourTextArea.value.replace(/\\$\\$(.+?)\\$\\$/, '<i>$1</i>') Explanation of the regex: \\$\\$ two dollar signs ( start a group to capture . a character +...", 
          "upvotecount": "16"
        }, 
        {
          "text": "Use this: str.replace(/\\${2}(.*?)\\${2}/g, \"<I>$1</I>\"); \\${2} matches two $ characters (.*?) matches your string to be wrapped \\${2} same as above /g matches globally jsFiddle If you wanted...", 
          "upvotecount": "4"
        }, 
        {
          "text": "Using the string .replace method will do. .replace(/\\$\\$(.*?)\\$\\$/g, '<I>$1</I>')", 
          "upvotecount": "2"
        }, 
        {
          "text": "Use this, change link and tag for extended linkify function : String.prototype.linkify = function() { var wikipediaPattern = /<wikipedia>(.+?)<\\/wikipedia>/g; return this.replace(wikipediaPattern,...", 
          "upvotecount": "2"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "Let's say I retrieve the value of a <textarea> using jQuery. How can I then replace a portion of the value using JavaScript/jQuery. For example: string: \"Hey I'm $$zach$$\" replace $$zach$$ ...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "JavaScript/jQuery String Replace With Regex", 
          "title": "JavaScript/jQuery String Replace With Regex"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/16137562/javascript-jquery-string-replace-with-regex", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/16137562/javascript-jquery-string-replace-with-regex", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/16137562/javascript-jquery-string-replace-with-regex", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "Let's say I retrieve the value of a &lt;textarea&gt; using jQuery. How can I then replace a portion of the value using JavaScript/jQuery. For example:  string: \"Hey I'm $$zach$$\"  replace $$zach$$ ...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/16137562/javascript-jquery-string-replace-with-regex", 
          "twitter:card": "summary", 
          "twitter:title": "JavaScript/jQuery String Replace With Regex", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "4", 
          "text": "Let's say I retrieve the value of a <textarea> using jQuery. How can I then replace a portion of the value using JavaScript/jQuery. For example: string: \"Hey I'm $$zach$$\" replace $$zach$$...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "JavaScript/jQuery String Replace With Regex", 
          "upvotecount": "7"
        }
      ]
    }, 
    "snippet": "Use a regex replace: yourTextArea.value = yourTextArea.value.replace(/\\$\\$(.+?)\\\n$\\$/, '<i>$1</i>'). Explanation of the regex: \\$\\$ two dollar signs\u00a0...", 
    "htmlSnippet": "Use a <b>regex replace</b>: yourTextArea.value = yourTextArea.value.<b>replace</b>(/\\$\\$(.+?)\\<br>\n$\\$/, &#39;&lt;i&gt;$1&lt;/i&gt;&#39;). Explanation of the <b>regex</b>: \\$\\$ two dollar signs&nbsp;...", 
    "link": "http://stackoverflow.com/questions/16137562/javascript-jquery-string-replace-with-regex", 
    "cacheId": "ME6uPVprX1cJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "JavaScript String match() Method", 
    "displayLink": "www.w3schools.com", 
    "htmlTitle": "<b>JavaScript</b> String <b>match</b>() Method", 
    "formattedUrl": "www.w3schools.com/jsref/jsref_match.asp", 
    "htmlFormattedUrl": "www.w3schools.com/jsref/jsref_<b>match</b>.asp", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ]
    }, 
    "snippet": "Free HTML CSS JavaScript DOM jQuery XML AJAX Angular ASP . ... Read more \nabout regular expressions in our RegExp Tutorial and our RegExp Object\u00a0...", 
    "htmlSnippet": "Free HTML CSS <b>JavaScript</b> DOM <b>jQuery</b> XML AJAX Angular ASP . ... Read more <br>\nabout <b>regular expressions</b> in our <b>RegExp Tutorial</b> and our <b>RegExp</b> Object&nbsp;...", 
    "link": "http://www.w3schools.com/jsref/jsref_match.asp", 
    "cacheId": "-1xKoGXuHCsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Understanding Regular Expression", 
    "displayLink": "www.9lessons.info", 
    "htmlTitle": "Understanding <b>Regular Expression</b>", 
    "formattedUrl": "www.9lessons.info/.../understanding-regular-expression.html", 
    "htmlFormattedUrl": "www.9lessons.info/.../understanding-<b>regular-expression</b>.html", 
    "pagemap": {
      "hcard": [
        {
          "fn": "Srinivas Tamada"
        }
      ], 
      "metatags": [
        {
          "dcterms.datecopyrighted": "Copyright (c) 2008-2015 Srinivas Tamada", 
          "author": "Srinivas Tamada", 
          "fb:admins": "1025751018", 
          "alexaverifyid": "6AjQa-NbwaKsfO-CAR2zEP4InUc", 
          "article:author": "https://www.facebook.com/srinivas.tamada", 
          "mobileoptimized": "320", 
          "yandex-verification": "4df3c85ea53c8f10", 
          "msvalidate.01": "F2FEEF3D9FA54697BBAF9E08A80D3483", 
          "article:publisher": "https://www.facebook.com/srinivas.tamada", 
          "handheldfriendly": "True", 
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "blog": [
        {
          "description": "Regular expression is the most important part in form validations and it is widely used for search, replace and web crawling systems. If you want to write a selector engine (used to find elements...", 
          "name": "Understanding Regular Expression", 
          "image": "https://lh5.googleusercontent.com/-gqAc5C4rdng/UmQnnYMT-RI/AAAAAAAAIRw/RY43oZ-FPRQ/s550/regex.png", 
          "datecreated": "Monday, October 21, 2013"
        }
      ], 
      "person": [
        {
          "location": "Atlanta - United States"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "304", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcS7bstSDftO7UZZ_ifNnp3PDkbDtBjfG4V3M1sWQJxkSi7jd6SLBz9wzYc", 
          "height": "166"
        }
      ], 
      "cse_image": [
        {
          "src": "https://lh5.googleusercontent.com/-gqAc5C4rdng/UmQnnYMT-RI/AAAAAAAAIRw/RY43oZ-FPRQ/s550/regex.png"
        }
      ]
    }, 
    "snippet": "Oct 21, 2013 ... How to do Understanding Regular Expression . Tutorial focused on Programming\n, Jquery, Ajax, PHP, Demos, Web Design, Javascript,\u00a0...", 
    "htmlSnippet": "Oct 21, 2013 <b>...</b> How to do Understanding <b>Regular Expression</b> . <b>Tutorial</b> focused on Programming<br>\n, <b>Jquery</b>, Ajax, PHP, Demos, Web Design, <b>Javascript</b>,&nbsp;...", 
    "link": "http://www.9lessons.info/2013/10/understanding-regular-expression.html", 
    "cacheId": "K4efqUbeFVMJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "HiFi Regex Tester - Live JavaScript Regular Expression Tester", 
    "displayLink": "www.gethifi.com", 
    "htmlTitle": "HiFi <b>Regex</b> Tester - Live <b>JavaScript Regular Expression</b> Tester", 
    "formattedUrl": "www.gethifi.com/tools/regex", 
    "htmlFormattedUrl": "www.gethifi.com/tools/<b>regex</b>", 
    "pagemap": {
      "cse_thumbnail": [
        {
          "width": "167", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ6z_JNTmnKTTjOkSp7kwoRQePucc0lDa-sLskVId6CRTPWyT7pmjl_hw", 
          "height": "64"
        }
      ], 
      "cse_image": [
        {
          "src": "http://files.gethifi.com/tools/regex/imgs/hifi-ad.jpg"
        }
      ]
    }, 
    "snippet": "Learn, practice, and test regular expressions with this free javascript tool. Regex \nvalidity ... The HiFi RegExp tool is 100% JavaScript using jQuery. This tool was\u00a0...", 
    "htmlSnippet": "Learn, practice, and test <b>regular expressions</b> with this free <b>javascript</b> tool. <b>Regex</b> <br>\nvalidity ... The HiFi <b>RegExp</b> tool is 100% <b>JavaScript</b> using <b>jQuery</b>. This tool was&nbsp;...", 
    "link": "http://www.gethifi.com/tools/regex", 
    "cacheId": "fn0ua1ETss4J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "jQuery javascript regex Replace <br> with \\n - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>jQuery javascript regex Replace</b> &lt;br&gt; with \\n - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/.../jquery-javascript-regex-replace-br-with-n", 
    "htmlFormattedUrl": "stackoverflow.com/.../<b>jquery</b>-<b>javascript</b>-<b>regex</b>-<b>replace</b>-br-with-n", 
    "pagemap": {
      "answer": [
        {
          "text": "var str = document.getElementById('mydiv').innerHTML; document.getElementById('mytextarea').innerHTML = str.replace(/<br\\s*[\\/]?>/gi, \"\\n\"); or using jQuery: var str = $(\"#mydiv\").html(); var...", 
          "upvotecount": "59"
        }, 
        {
          "text": "myString.replace(/<br ?\\/?>/g, \"\\n\")", 
          "upvotecount": "6"
        }, 
        {
          "text": "a cheap and nasty would be: jQuery(\"#myDiv\").html().replace(\"<br>\", \"\\n\").replace(\"<br />\", \"\\n\") EDIT jQuery(\"#myTextArea\").val( jQuery(\"#myDiv\").html() .replace(/\\<br\\>/g, \"\\n\") .replace(/\\<br...", 
          "upvotecount": "2"
        }, 
        {
          "text": "Not really anything to do with jQuery, but if you want to trim a pattern from a string, then use a regular expression: <textarea id=\"ta0\"></textarea> <button onclick=\" var ta = document.getElementB...", 
          "upvotecount": "2"
        }, 
        {
          "text": "True jQuery way if you want to change directly the DOM without messing with inner HTML: $('#text').find('br').prepend(document.createTextNode('\\n')).remove(); Prepend inserts inside the element,...", 
          "upvotecount": "2"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "How do i write a regex to replace <br /> or <br> with \\n. I'm trying to move text from div to textarea, but don't want <br>'s to show in the textarea, so i want to replace then w...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "jQuery javascript regex Replace <br> with \\n", 
          "title": "jQuery javascript regex Replace <br> with \\n"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/5959415/jquery-javascript-regex-replace-br-with-n", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/5959415/jquery-javascript-regex-replace-br-with-n", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/5959415/jquery-javascript-regex-replace-br-with-n", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "How do i write a regex to replace &lt;br /&gt; or &lt;br&gt;  with \\n. I'm trying to move text from div to textarea, but don't want &lt;br&gt;'s to show in the textarea, so i want to replace then w...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/5959415/jquery-javascript-regex-replace-br-with-n", 
          "twitter:card": "summary", 
          "twitter:title": "jQuery javascript regex Replace <br> with \\n", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "5", 
          "text": "How do i write a regex to replace <br /> or <br> with \\n. I'm trying to move text from div to textarea, but don't want <br>'s to show in the textarea, so i want to replace then with \\n.", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "jQuery javascript regex Replace <br> with \\n", 
          "upvotecount": "21"
        }
      ]
    }, 
    "snippet": "How do i write a regex to replace <br /> or <br> with \\n . I'm trying to ... var str = \ndocument.getElementById('mydiv').innerHTML; document.", 
    "htmlSnippet": "How do i write a <b>regex</b> to <b>replace</b> &lt;br /&gt; or &lt;br&gt; with \\n . I&#39;m trying to ... var str = <br>\ndocument.getElementById(&#39;mydiv&#39;).innerHTML; document.", 
    "link": "http://stackoverflow.com/questions/5959415/jquery-javascript-regex-replace-br-with-n", 
    "cacheId": "F7F8tHTlz4YJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Form Validation Using jQuery and Regular Expressions \u00ab Design ...", 
    "displayLink": "www.designchemical.com", 
    "htmlTitle": "Form Validation Using <b>jQuery</b> and <b>Regular Expressions</b> \u00ab Design <b>...</b>", 
    "formattedUrl": "www.designchemical.com/.../jquery/form-validation-using-jquery-and- regular-expressions/", 
    "htmlFormattedUrl": "www.designchemical.com/.../<b>jquery</b>/form-validation-using-<b>jquery</b>-and- <b>regular-expressions</b>/", 
    "pagemap": {
      "metatags": [
        {
          "syntaxhighlighter-version": "3.1.3"
        }
      ]
    }, 
    "snippet": "Regular expressions combined with jQuery offer a powerful way of validating \nform input ... and conditional branching to form sections using client-side \njavascript.", 
    "htmlSnippet": "<b>Regular expressions</b> combined with <b>jQuery</b> offer a powerful way of validating <br>\nform input ... and conditional branching to form sections using client-side <br>\n<b>javascript</b>.", 
    "link": "http://www.designchemical.com/blog/index.php/jquery/form-validation-using-jquery-and-regular-expressions/", 
    "cacheId": "rmzScNVA2iMJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "jquery - Regex explanation - how does it work? - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>jquery</b> - <b>Regex</b> explanation - how does it work? - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/.../regex-explanation-how-does-it-work", 
    "htmlFormattedUrl": "stackoverflow.com/questions/.../<b>regex</b>-explanation-how-does-it-work", 
    "pagemap": {
      "answer": [
        {
          "text": "Beginning of a string: ^ This part of the string may contain the characters A-Z, a-z, 0-9, underscores, hyphens, and periods. ([A-Za-z0-9_\\ -\\ .]) Match one or more characters using the previous...", 
          "upvotecount": "7"
        }, 
        {
          "text": "The regex is, as you might know, defined between the two / characters. The first thing in the regex is the ^ character which indicates the beginning of the string, so it doesn't start to match...", 
          "upvotecount": "2"
        }, 
        {
          "text": "The enclosing /slashes/ defines the start and stop of pattern \"^\" means beginning of string Anything inside (parenthesis) will be matched as a separate group/part The characters inside [brackets]...", 
          "upvotecount": "1"
        }, 
        {
          "text": "For a good tutorial, you can start with this link. Though this link speaks in generic terms about regexes, you should be aware (and the link also explains) that there are subtle variations...", 
          "upvotecount": "1"
        }, 
        {
          "text": "May I recommend the following website: http://www.regex101.com Here's a link to an explanation of your regular expression: http://regex101.com/r/aE3yB5 You can also insert test strings and...", 
          "upvotecount": "1"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I came across on \"REGEX\" but I not really understand those symbol use by it. example... and many more rege = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/; I use above to do email", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Regex explanation - how does it work?", 
          "title": "Regex explanation - how does it work?"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/12341627/regex-explanation-how-does-it-work", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/12341627/regex-explanation-how-does-it-work", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/12341627/regex-explanation-how-does-it-work", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I came across on \"REGEX\" but I not really understand those symbol use by it. example... and many more  rege = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;   I use above to do email", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/12341627/regex-explanation-how-does-it-work", 
          "twitter:card": "summary", 
          "twitter:title": "Regex explanation - how does it work?", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "5", 
          "text": "I came across on \"REGEX\" but I not really understand those symbol use by it. example... and many more rege = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/; I use above to do...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Regex explanation - how does it work? [closed]", 
          "upvotecount": "-5"
        }
      ]
    }, 
    "snippet": "I came across on \"REGEX\" but I not really understand those symbol use by it. \nexample... and many more rege = /^([A-Za-z0-9_\\-\\.]\u00a0...", 
    "htmlSnippet": "I came across on &quot;<b>REGEX</b>&quot; but I not really understand those symbol use by it. <br>\n<b>example</b>... and many more rege = /^([A-Za-z0-9_\\-\\.]&nbsp;...", 
    "link": "http://stackoverflow.com/questions/12341627/regex-explanation-how-does-it-work", 
    "cacheId": "By-bIoypdtIJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Mod rewrite syntax Tutorial - Mod Rewrite Regular Expressions", 
    "displayLink": "www.webforgers.net", 
    "htmlTitle": "<b>Mod rewrite</b> syntax <b>Tutorial</b> - <b>Mod Rewrite Regular Expressions</b>", 
    "formattedUrl": "www.webforgers.net/mod-rewrite/mod-rewrite-syntax.php", 
    "htmlFormattedUrl": "www.webforgers.net/<b>mod</b>-<b>rewrite</b>/<b>mod</b>-<b>rewrite</b>-syntax.php", 
    "snippet": "Example: RewriteRule ^dir/([0-9]+)/?$ /index.php?id=$1 [L]. Call to action: ... a \n500 error on your site it mostlikely due to a bad line of code in your .htaccess file.", 
    "htmlSnippet": "<b>Example</b>: <b>RewriteRule</b> ^dir/([0-9]+)/?$ /index.php?id=$1 [L]. Call to action: ... a <br>\n500 error on your site it mostlikely due to a bad line of code in your .<b>htaccess</b> file.", 
    "link": "http://www.webforgers.net/mod-rewrite/mod-rewrite-syntax.php", 
    "cacheId": "_XkAJNMxDRQJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Apache mod_rewrite Introduction - Apache HTTP Server Version 2.2", 
    "displayLink": "httpd.apache.org", 
    "htmlTitle": "<b>Apache mod_rewrite</b> Introduction - <b>Apache</b> HTTP Server Version 2.2", 
    "formattedUrl": "httpd.apache.org/docs/2.2/rewrite/intro.html", 
    "htmlFormattedUrl": "httpd.<b>apache</b>.org/docs/2.2/<b>rewrite</b>/intro.html", 
    "pagemap": {
      "cse_thumbnail": [
        {
          "width": "281", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcTK917nf51Ao3idg9NLySWDlrzun-OQjLNv8TZYvN7seY1lHbnzoWhIbe3b", 
          "height": "179"
        }
      ], 
      "cse_image": [
        {
          "src": "http://httpd.apache.org/docs/2.2/images/syntax_rewriterule.png"
        }
      ]
    }, 
    "snippet": "mod_rewrite uses the Perl Compatible Regular Expression vocabulary. In this \ndocument, we do not attempt to provide a\u00a0...", 
    "htmlSnippet": "<b>mod_rewrite</b> uses the Perl Compatible <b>Regular Expression</b> vocabulary. In this <br>\ndocument, we do not attempt to provide a&nbsp;...", 
    "link": "http://httpd.apache.org/docs/2.2/rewrite/intro.html", 
    "cacheId": "Qd6Q4e_quRsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Learn Apache mod_rewrite: 13 Real-world Examples", 
    "displayLink": "www.sitepoint.com", 
    "htmlTitle": "Learn <b>Apache mod_rewrite</b>: 13 Real-world <b>Examples</b>", 
    "formattedUrl": "www.sitepoint.com/apache-mod_rewrite-examples/", 
    "htmlFormattedUrl": "www.sitepoint.com/<b>apache</b>-<b>mod_rewrite</b>-<b>examples</b>/", 
    "pagemap": {
      "metatags": [
        {
          "twitter:creator": "@sitepointdotcom", 
          "og:url": "http://www.sitepoint.com/apache-mod_rewrite-examples/", 
          "article:section": "Programming", 
          "og:type": "article", 
          "twitter:domain": "SitePoint", 
          "og:site_name": "SitePoint", 
          "fb:admins": "121300382", 
          "article:published_time": "2007-09-26T00:00:00+00:00", 
          "twitter:description": "Apache users, it's time to see why the mod_rewrite module is one of the server's most valued treasures. Here, DK steps you though the rewrite rules, regular expressions, and rewrite conditions, before providing 13 examples of mod_rewrite in action.", 
          "og:locale": "en_US", 
          "og:description": "Apache users, it's time to see why the mod_rewrite module is one of the server's most valued treasures. Here, DK steps you though the rewrite rules, regular expressions, and rewrite conditions, before providing 13 examples of mod_rewrite in action.", 
          "twitter:site": "@sitepointdotcom", 
          "og:title": "Learn Apache mod_rewrite: 13 Real-world Examples", 
          "twitter:card": "summary", 
          "twitter:title": "Learn Apache mod_rewrite: 13 Real-world Examples", 
          "article:publisher": "https://www.facebook.com/sitepoint", 
          "wp-parsely_version": "1.7", 
          "og:image": "http://www.sitepoint.com/wp-content/themes/sitepoint/assets/images/icon.programming.png", 
          "twitter:account_id": "15743570", 
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.sitepoint.com/wp-content/themes/sitepoint/assets/images/icon.programming.png"
        }
      ]
    }, 
    "snippet": "Sep 26, 2007 ... If you're keen to learn more about Apache, you may find this recent article ... This \narticle will lead you through rewrite rules, regular expressions,\u00a0...", 
    "htmlSnippet": "Sep 26, 2007 <b>...</b> If you&#39;re keen to learn more about <b>Apache</b>, you may find this recent article ... This <br>\narticle will lead you through <b>rewrite</b> rules, <b>regular expressions</b>,&nbsp;...", 
    "link": "http://www.sitepoint.com/apache-mod_rewrite-examples/", 
    "cacheId": "tfhfqr2_cAsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "mod_rewrite Cheat Sheet by DaveChild - Cheatography.com: Cheat ...", 
    "displayLink": "www.cheatography.com", 
    "htmlTitle": "<b>mod_rewrite</b> Cheat Sheet by DaveChild - Cheatography.com: Cheat <b>...</b>", 
    "formattedUrl": "www.cheatography.com/davechild/cheat-sheets/mod-rewrite/", 
    "htmlFormattedUrl": "www.cheatography.com/davechild/cheat-sheets/<b>mod</b>-<b>rewrite</b>/", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://www.cheatography.com/davechild/cheat-sheets/mod-rewrite/", 
          "og:site_name": "Cheatography", 
          "fb:admins": "860405712", 
          "og:type": "cheatography:cheat_sheet", 
          "og:description": "mod_rewrite cheat_sheet from DaveChild. A mod_rewrite Cheat Sheet - a quick reference guide for mod_rewrite, with rewrite flags, regular expression syntax and sample rules.", 
          "og:title": "mod_rewrite cheat_sheet", 
          "fb:app_id": "152741628156662", 
          "og:image": "http://www.cheatography.com/storage/thumb/davechild_mod-rewrite.600.jpg", 
          "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "189", 
          "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcTwE3PLgxz5ANMyeZE0AaNwEbuX6hHuNKIvo1U31dqprycKnmq1brp1hLn_", 
          "height": "267"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.cheatography.com/storage/thumb/davechild_mod-rewrite.600.jpg"
        }
      ]
    }, 
    "snippet": "A mod_rewrite Cheat Sheet - a quick reference guide for mod_rewrite, with \nrewrite flags, ... http://net.tutsplus.com/tutorials/other/a-deeper-look-at-\nmod_rewrite-for-apache/ ... There's an excellent regular expression tester at: http:\n//regexpal.com/\u00a0...", 
    "htmlSnippet": "A <b>mod_rewrite</b> Cheat Sheet - a quick reference guide for <b>mod_rewrite</b>, with <br>\nrewrite flags, ... http://net.tutsplus.com/<b>tutorials</b>/other/a-deeper-look-at-<br>\n<b>mod_rewrite</b>-for-<b>apache</b>/ ... There&#39;s an excellent <b>regular expression tester</b> at: http:<br>\n//<b>regexpal</b>.com/&nbsp;...", 
    "link": "http://www.cheatography.com/davechild/cheat-sheets/mod-rewrite/", 
    "cacheId": "MDmE9kNMSXEJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "URL Rewriting for Beginners - Web Development in Brighton ...", 
    "displayLink": "www.addedbytes.com", 
    "htmlTitle": "URL <b>Rewriting</b> for Beginners - Web Development in Brighton <b>...</b>", 
    "formattedUrl": "https://www.addedbytes.com/articles/for.../url-rewriting-for-beginners/", 
    "htmlFormattedUrl": "https://www.addedbytes.com/articles/for.../url-<b>rewriting</b>-for-beginners/", 
    "pagemap": {
      "metatags": [
        {
          "readability-verification": "M2yJBSY87fQXWGH3v2KnUHUZbpFst73kV5Y6xD4g", 
          "fb:admins": "860405712"
        }
      ]
    }, 
    "snippet": "Aug 4, 2008 ... Apache URL Rewriting Guide - The best guide around ... may find it helpful to \nhave the mod_rewrite cheat sheet and/or the regular expressions\u00a0...", 
    "htmlSnippet": "Aug 4, 2008 <b>...</b> <b>Apache</b> URL Rewriting Guide - The best guide around ... may find it helpful to <br>\nhave the <b>mod_rewrite</b> cheat sheet and/or the <b>regular expressions</b>&nbsp;...", 
    "link": "https://www.addedbytes.com/articles/for-beginners/url-rewriting-for-beginners/", 
    "cacheId": "omNrPg34lOUJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Mod_Rewrite and Regular Expressions - Apache Web Server forum ...", 
    "displayLink": "www.webmasterworld.com", 
    "htmlTitle": "<b>Mod_Rewrite</b> and <b>Regular Expressions</b> - <b>Apache</b> Web Server forum <b>...</b>", 
    "formattedUrl": "https://www.webmasterworld.com/forum92/4332.htm", 
    "htmlFormattedUrl": "https://www.webmasterworld.com/forum92/4332.htm", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ]
    }, 
    "snippet": "Aug 11, 2005 ... Part 2 of a mod_rewrite tutorial. mod_rewrite and regular expressions.", 
    "htmlSnippet": "Aug 11, 2005 <b>...</b> Part 2 of a <b>mod_rewrite tutorial</b>. <b>mod_rewrite</b> and <b>regular expressions</b>.", 
    "link": "https://www.webmasterworld.com/forum92/4332.htm"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "An In-Depth Guide to mod_rewrite for Apache - Tuts+ Code Tutorial", 
    "displayLink": "code.tutsplus.com", 
    "htmlTitle": "An In-Depth Guide to <b>mod_rewrite</b> for <b>Apache</b> - Tuts+ Code <b>Tutorial</b>", 
    "formattedUrl": "code.tutsplus.com/tutorials/an-in-depth-guide-to-mod_rewrite-for-apache-- net-6708", 
    "htmlFormattedUrl": "code.tutsplus.com/<b>tutorials</b>/an-in-depth-guide-to-<b>mod_rewrite</b>-for-<b>apache</b>-- net-6708", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://code.tutsplus.com/tutorials/an-in-depth-guide-to-mod_rewrite-for-apache--net-6708", 
          "og:site_name": "Code Tuts+", 
          "csrf-token": "iHbUzPLMd3DqZMIJERhgFdeI/4Sb7DJQyyX0pEX8YORXfuC5tf6p31HQKYjC1H7VInj6NK0ZuJ8JntoNrw0exA==", 
          "og:type": "article", 
          "og:description": "Twice a month, we revisit some of our readers\u2019 favorite posts from throughout the history of Nettuts+. This tutorial was first published last September.&#13; When people think of .htaccess configuration, the first thing that might pop into their minds is URL manipulation with mod_rewrite. But they're often frustrated by mod_rewrite's complexity.  This tutorial will walk you through everything you need to know for the most common mod_rewrite tasks. | Difficulty: Intermediate; Tags: Web Development, Apache, Mod Rewrite, .htaccess", 
          "csrf-param": "authenticity_token", 
          "et.category": "Web Development", 
          "og:title": "An In-Depth Guide to mod_rewrite for Apache - Tuts+ Code Tutorial", 
          "fb:app_id": "1494084460809023", 
          "og:image": "https://cdn.tutsplus.com/net/uploads/legacy/435_htaccess/200x200.jpg", 
          "viewport": "initial-scale=1"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "160", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRP681OGWyRq8Xsr0txyQpTw216B--MhUQYLD9CKob2yqiKQJZwBdFEaq4", 
          "height": "160"
        }
      ], 
      "cse_image": [
        {
          "src": "https://cdn.tutsplus.com/net/uploads/legacy/435_htaccess/200x200.jpg"
        }
      ]
    }, 
    "snippet": "Apr 26, 2011 ... mldk: Aargh! .htaccess and mod_rewrite can be such a pain in the ---! .... In \nApache 2.0 they're Perl Compatible Regular Expressions (PCRE).", 
    "htmlSnippet": "Apr 26, 2011 <b>...</b> mldk: Aargh! .<b>htaccess</b> and <b>mod_rewrite</b> can be such a pain in the ---! .... In <br>\n<b>Apache</b> 2.0 they&#39;re Perl Compatible <b>Regular Expressions</b> (PCRE).", 
    "link": "http://code.tutsplus.com/tutorials/an-in-depth-guide-to-mod_rewrite-for-apache--net-6708", 
    "cacheId": "Mlhk0j99L3oJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Using .htaccess rewrite rules - Media Temple", 
    "displayLink": "mediatemple.net", 
    "htmlTitle": "Using .<b>htaccess rewrite</b> rules - Media Temple", 
    "formattedUrl": "https://mediatemple.net/community/.../using-htaccess-rewrite-rules", 
    "htmlFormattedUrl": "https://mediatemple.net/community/.../using-<b>htaccess</b>-<b>rewrite</b>-rules", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1, user-scalable=no"
        }
      ]
    }, 
    "snippet": "The Apache module mod_rewrite allows you to rewrite URL requests that come \ninto your server and is based on a regular-expression parser. The examples\u00a0...", 
    "htmlSnippet": "The <b>Apache</b> module <b>mod_rewrite</b> allows you to rewrite URL requests that come <br>\ninto your server and is based on a <b>regular-expression</b> parser. The <b>examples</b>&nbsp;...", 
    "link": "https://mediatemple.net/community/products/dv/204643270/using-htaccess-rewrite-rules", 
    "cacheId": "V3Wl_GCritcJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "mod rewrite - Online mod_rewrite testing tool - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>mod rewrite</b> - Online <b>mod_rewrite</b> testing tool - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/.../online-mod-rewrite-testing-tool", 
    "htmlFormattedUrl": "stackoverflow.com/questions/.../online-<b>mod</b>-<b>rewrite</b>-testing-tool", 
    "pagemap": {
      "answer": [
        {
          "text": "I found this http://htaccess.madewithlove.be/ one and it is excellent", 
          "upvotecount": "33"
        }, 
        {
          "text": "I was looking for the same tool when I came across your post. I then found this online tool: http://civilolydnad.se/projects/rewriterule/ Hope it helps. Cheers.", 
          "upvotecount": "8"
        }, 
        {
          "text": "Martin Melin's rewrite test tool lets you write and test your rewrite rules for Apache's mod_rewrite on-the-fly. Note there are certain restrictions with the tool: Rules are saved in a session,...", 
          "upvotecount": "6"
        }, 
        {
          "text": "I found this excellent tool for creating and testing regular expressions... http://www.gskinner.com/RegExr/ Good luck.", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "mod_rewrite statements can be hard to write and debug, therefore I need a lightweight online tool that enables me to test my RewriteCond, RewriteRule statements on the fly. Any such tool?", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Online mod_rewrite testing tool", 
          "title": "Online mod_rewrite testing tool"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/857516/online-mod-rewrite-testing-tool", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/857516/online-mod-rewrite-testing-tool", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/857516/online-mod-rewrite-testing-tool", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "mod_rewrite statements can be hard to write and debug, therefore I need a lightweight online tool that enables me to test my RewriteCond, RewriteRule statements on the fly.  Any such tool?", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/857516/online-mod-rewrite-testing-tool", 
          "twitter:card": "summary", 
          "twitter:title": "Online mod_rewrite testing tool", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "4", 
          "text": "mod_rewrite statements can be hard to write and debug, therefore I need a lightweight online tool that enables me to test my RewriteCond, RewriteRule statements on the fly. Any such tool?", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Online mod_rewrite testing tool [closed]", 
          "upvotecount": "28"
        }
      ]
    }, 
    "snippet": "mod_rewrite statements can be hard to write and debug, therefore I need a ... I \nfound this http://htaccess.madewithlove.be/ one and it is excellent ... testing \nregular expressions... http://www.gskinner.com/RegExr/ Good luck.", 
    "htmlSnippet": "<b>mod_rewrite</b> statements can be hard to write and debug, therefore I need a ... I <br>\nfound this http://<b>htaccess</b>.madewithlove.be/ one and it is excellent ... testing <br>\n<b>regular expressions</b>... http://www.gskinner.com/RegExr/ Good luck.", 
    "link": "http://stackoverflow.com/questions/857516/online-mod-rewrite-testing-tool", 
    "cacheId": "lHUH5tbhllgJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "mod_rewrite, a beginner's guide (with examples)", 
    "displayLink": "www.workingwith.me.uk", 
    "htmlTitle": "<b>mod_rewrite</b>, a beginner&#39;s guide (with <b>examples</b>)", 
    "formattedUrl": "www.workingwith.me.uk/articles/scripting/mod_rewrite", 
    "htmlFormattedUrl": "www.workingwith.me.uk/articles/scripting/<b>mod_rewrite</b>", 
    "pagemap": {
      "person": [
        {
          "role": "web developer", 
          "location": "London"
        }
      ], 
      "hcard": [
        {
          "url": "http://www.workingwith.me.uk/", 
          "url_text": "workingwith.me.uk", 
          "fn": "Neil Crosby", 
          "title": "web developer"
        }
      ]
    }, 
    "snippet": "May 23, 2004 ... This article isn't intended to be a tutorial about regular expressions though ... A \nfull list of flags is given in the Apache mod_rewrite manual.", 
    "htmlSnippet": "May 23, 2004 <b>...</b> This article isn&#39;t intended to be a <b>tutorial</b> about <b>regular expressions</b> though ... A <br>\nfull list of flags is given in the <b>Apache mod_rewrite manual</b>.", 
    "link": "http://www.workingwith.me.uk/articles/scripting/mod_rewrite", 
    "cacheId": "O4gmd27QTFwJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP: preg_match - Manual", 
    "displayLink": "php.net", 
    "htmlTitle": "<b>PHP</b>: <b>preg_match</b> - <b>Manual</b>", 
    "formattedUrl": "php.net/manual/en/function.preg-match.php", 
    "htmlFormattedUrl": "<b>php</b>.net/<b>manual</b>/en/function.<b>preg</b>-<b>match</b>.<b>php</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "Feb 27, 2009 ... preg_match \u2014 Perform a regular expression match ... $matches[0] will contain \nthe text that matched the full pattern, $matches[1] will have the\u00a0...", 
    "htmlSnippet": "Feb 27, 2009 <b>...</b> <b>preg_match</b> \u2014 Perform a <b>regular expression match</b> ... $matches[0] will contain <br>\nthe text that matched the full <b>pattern</b>, $matches[1] will have the&nbsp;...", 
    "link": "http://php.net/manual/en/function.preg-match.php", 
    "cacheId": "BD2B0eLURG8J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Using Regular Expressions with PHP", 
    "displayLink": "webcheatsheet.com", 
    "htmlTitle": "Using <b>Regular Expressions</b> with <b>PHP</b>", 
    "formattedUrl": "webcheatsheet.com/php/regular_expressions.php", 
    "htmlFormattedUrl": "webcheatsheet.com/<b>php</b>/<b>regular_expressions</b>.<b>php</b>", 
    "snippet": "The preg_match() function performs Perl-style pattern matching on a string. \npreg_match() takes two basic and three optional\u00a0...", 
    "htmlSnippet": "The <b>preg_match</b>() function performs Perl-style <b>pattern</b> matching on a string. <br>\n<b>preg_match</b>() takes two basic and three optional&nbsp;...", 
    "link": "http://webcheatsheet.com/php/regular_expressions.php", 
    "cacheId": "LR7TSangU60J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP Regex Tutorial", 
    "displayLink": "www.rexegg.com", 
    "htmlTitle": "<b>PHP Regex Tutorial</b>", 
    "formattedUrl": "www.rexegg.com/regex-php.html", 
    "htmlFormattedUrl": "www.rexegg.com/<b>regex</b>-<b>php</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "dcterms.rightsholder": "copyright (c) RexEgg.com --- ALL RIGHTS RESERVED"
        }
      ]
    }, 
    "snippet": "With the preg family of functions, PHP has a great interface to regex! .... The \npreg_replace function comes in when you need a regex pattern to match the \nstring to\u00a0...", 
    "htmlSnippet": "With the preg family of functions, <b>PHP</b> has a great interface to <b>regex</b>! .... The <br>\n<b>preg_replace</b> function comes in when you need a <b>regex pattern</b> to match the <br>\nstring to&nbsp;...", 
    "link": "http://www.rexegg.com/regex-php.html", 
    "cacheId": "IJxKciRqG3cJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP Live Regex", 
    "displayLink": "www.phpliveregex.com", 
    "htmlTitle": "<b>PHP</b> Live <b>Regex</b>", 
    "formattedUrl": "www.phpliveregex.com/", 
    "htmlFormattedUrl": "www.<b>php</b>live<b>regex</b>.com/", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ]
    }, 
    "snippet": "PHP Live Regex - A Live Regular Expression Tester for PHP \u00b7 Get the Offline \nVersion! ... preg_match; preg_match_all; preg_replace; preg_grep; preg_split.", 
    "htmlSnippet": "<b>PHP</b> Live <b>Regex</b> - A Live <b>Regular Expression Tester</b> for <b>PHP</b> &middot; Get the Offline <br>\nVersion! ... <b>preg_match</b>; <b>preg_match_all</b>; <b>preg_replace</b>; preg_grep; preg_split.", 
    "link": "http://www.phpliveregex.com/", 
    "cacheId": "ezVIQlDEp3sJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Introduction to PHP Regex", 
    "displayLink": "www.phpro.org", 
    "htmlTitle": "Introduction to <b>PHP Regex</b>", 
    "formattedUrl": "www.phpro.org/tutorials/Introduction-to-PHP-Regex.html", 
    "htmlFormattedUrl": "www.<b>php</b>ro.org/<b>tutorials</b>/Introduction-to-<b>PHP</b>-<b>Regex</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0", 
          "author": "Kevin Waterson"
        }
      ]
    }, 
    "snippet": "Lets match the beginning and end of a string or a pattern that occurs ... echo \npreg_match(\"/dog/\", $string); // returns 0 as no match was\u00a0...", 
    "htmlSnippet": "Lets match the beginning and end of a string or a <b>pattern</b> that occurs ... echo <br>\n<b>preg_match</b>(&quot;/dog/&quot;, $string); // returns 0 as no match was&nbsp;...", 
    "link": "http://www.phpro.org/tutorials/Introduction-to-PHP-Regex.html", 
    "cacheId": "TngA-mE2I-MJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Using Regular Expressions with PHP", 
    "displayLink": "www.regular-expressions.info", 
    "htmlTitle": "Using <b>Regular Expressions</b> with <b>PHP</b>", 
    "formattedUrl": "www.regular-expressions.info/php.html", 
    "htmlFormattedUrl": "www.<b>regular-expressions</b>.info/<b>php</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width", 
          "author": "Jan Goyvaerts"
        }
      ]
    }, 
    "snippet": "When the tutorial talks about PHP specifically, it assumes you're using the ... The \nregex \\\\ to match a single backslash would become '/\\\\\\\\/' as a PHP preg string.", 
    "htmlSnippet": "When the <b>tutorial</b> talks about <b>PHP</b> specifically, it assumes you&#39;re using the ... The <br>\n<b>regex</b> \\\\ to <b>match</b> a single backslash would become &#39;/\\\\\\\\/&#39; as a <b>PHP preg</b> string.", 
    "link": "http://www.regular-expressions.info/php.html", 
    "cacheId": "2O3BteUbSvQJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Preg Match Regular Expression Tester", 
    "displayLink": "www.switchplane.com", 
    "htmlTitle": "<b>Preg Match Regular Expression Tester</b>", 
    "formattedUrl": "www.switchplane.com/.../preg-match-regular-expression-tester", 
    "htmlFormattedUrl": "www.switchplane.com/.../<b>preg</b>-<b>match</b>-<b>regular-expression</b>-<b>tester</b>", 
    "pagemap": {
      "metatags": [
        {
          "msapplication-tilecolor": "#FFFFFF", 
          "msapplication-tileimage": "/msapplication-tile-image-144x144.png", 
          "viewport": "width=device-width"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "220", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcS9ADIAccpswfMaA45iB2cgSuyZftJ9avji0bFopM1WVjsU36eNosB-D5I", 
          "height": "140"
        }
      ], 
      "cse_image": [
        {
          "src": "http://static.www.switchplane.com/_resources/images/cms2/29/preg-match-tester.jpg"
        }
      ]
    }, 
    "snippet": "This useful tool allows you to test your regular expression using PHP's \npreg_match function.", 
    "htmlSnippet": "This useful tool allows you to test your <b>regular expression</b> using <b>PHP&#39;s</b> <br>\n<b>preg_match</b> function.", 
    "link": "http://www.switchplane.com/awesome/preg-match-regular-expression-tester", 
    "cacheId": "5dCeaAAI2PYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP preg_match Examples", 
    "displayLink": "lzone.de", 
    "htmlTitle": "<b>PHP preg_match Examples</b>", 
    "formattedUrl": "lzone.de/examples/PHP%20preg_match", 
    "htmlFormattedUrl": "lzone.de/<b>examples</b>/<b>PHP</b>%20<b>preg_match</b>", 
    "pagemap": {
      "metatags": [
        {
          "msvalidate.01": "E44DCBC369E3C3527E9DD8CCA28D3680", 
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "Oct 20, 2012 ... Use preg_match() to match strings with regular expressions. Check the return \nvalue for true to see if the expression did match.", 
    "htmlSnippet": "Oct 20, 2012 <b>...</b> Use <b>preg_match</b>() to match strings with <b>regular expressions</b>. Check the return <br>\nvalue for true to see if the expression did match.", 
    "link": "http://lzone.de/examples/PHP%20preg_match", 
    "cacheId": "KKtMUQT6GSIJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Getting Started with PHP Regular Expressions - noupe", 
    "displayLink": "www.noupe.com", 
    "htmlTitle": "Getting Started with <b>PHP Regular Expressions</b> - noupe", 
    "formattedUrl": "www.noupe.com/development/php-regular-expressions.html", 
    "htmlFormattedUrl": "www.noupe.com/development/<b>php</b>-<b>regular-expressions</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "og:updated_time": "2009-08-24T15:18:11+00:00", 
          "og:url": "http://www.noupe.com/development/php-regular-expressions.html", 
          "article:section": "Development", 
          "og:type": "article", 
          "og:site_name": "noupe", 
          "og:locale": "en_US", 
          "og:description": "1. What are Regular Expressions The main purpose of regular expressions, also called regex or regexp, is to efficiently search for patterns in a given text", 
          "og:image": "http://noupe.com/img/express-1.gif", 
          "og:title": "Getting Started with PHP Regular Expressions - noupe", 
          "article:modified_time": "2009-08-24T15:18:11+00:00", 
          "article:tag": "PHP", 
          "article:published_time": "2009-08-24T07:01:42+00:00", 
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "282", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcRdhmiZF8K7h4GoWu9agOn7huwKUQfA7YAWD7Ks8eRYeIbVaaIbhPjUVbFU", 
          "height": "179"
        }
      ], 
      "cse_image": [
        {
          "src": "http://noupe.com/img/express-1.gif"
        }
      ]
    }, 
    "snippet": "Aug 24, 2009 ... In PHP every PCRE function starts with preg_ such as preg_match or ... In PHP \nevery regular expression pattern is defined as a string using the\u00a0...", 
    "htmlSnippet": "Aug 24, 2009 <b>...</b> In <b>PHP</b> every PCRE function starts with preg_ such as <b>preg_match</b> or ... In <b>PHP</b> <br>\nevery <b>regular expression pattern</b> is defined as a string using the&nbsp;...", 
    "link": "http://www.noupe.com/development/php-regular-expressions.html", 
    "cacheId": "Y2y24OksmkkJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP Regular Expressions", 
    "displayLink": "www.tutorialspoint.com", 
    "htmlTitle": "<b>PHP Regular Expressions</b>", 
    "formattedUrl": "www.tutorialspoint.com/php/php_regular_expression.htm", 
    "htmlFormattedUrl": "www.<b>tutorials</b>point.com/<b>php</b>/<b>php</b>_<b>regular_expression</b>.htm", 
    "pagemap": {
      "metatags": [
        {
          "fb:app_id": "471319149685276", 
          "viewport": "width=device-width,initial-scale=1.0,user-scalable=yes", 
          "author": "tutorialspoint.com"
        }
      ]
    }, 
    "snippet": "They provide the foundation for pattern-matching functionality. Using regular \nexpression you can search a particular string inside a another string, you can\u00a0...", 
    "htmlSnippet": "They provide the foundation for <b>pattern</b>-<b>matching</b> functionality. Using <b>regular</b> <br>\n<b>expression</b> you can search a particular string inside a another string, you can&nbsp;...", 
    "link": "http://www.tutorialspoint.com/php/php_regular_expression.htm", 
    "cacheId": "60uA1_vjJmoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP: preg_replace - Manual", 
    "displayLink": "php.net", 
    "htmlTitle": "<b>PHP</b>: <b>preg_replace</b> - Manual", 
    "formattedUrl": "php.net/manual/en/function.preg-replace.php", 
    "htmlFormattedUrl": "<b>php</b>.net/manual/en/function.<b>preg</b>-<b>replace</b>.<b>php</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "preg_replace \u2014 Perform a regular expression search and replace ... When \nworking with a replacement pattern where a backreference is immediately \nfollowed\u00a0...", 
    "htmlSnippet": "<b>preg_replace</b> \u2014 Perform a <b>regular expression</b> search and replace ... When <br>\nworking with a replacement <b>pattern</b> where a backreference is immediately <br>\nfollowed&nbsp;...", 
    "link": "http://php.net/manual/en/function.preg-replace.php", 
    "cacheId": "OFhof6vEm_AJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular expression replacements: preg_replace() \u2013 Hacking with ...", 
    "displayLink": "www.hackingwithphp.com", 
    "htmlTitle": "<b>Regular expression</b> replacements: <b>preg_replace</b>() \u2013 Hacking with <b>...</b>", 
    "formattedUrl": "www.hackingwithphp.com/4/8/5/regular-expression-replacements", 
    "htmlFormattedUrl": "www.hackingwith<b>php</b>.com/4/8/5/<b>regular-expression</b>-<b>replacement</b>s", 
    "pagemap": {
      "metatags": [
        {
          "msapplication-tilecolor": "#da532c", 
          "msapplication-tileimage": "/mstile-144x144.png", 
          "viewport": "width=device-width, initial-scale=1, maximum-scale=1", 
          "author": "Paul Hudson"
        }
      ]
    }, 
    "snippet": "mixed preg_replace ( mixed pattern, mixed replacement, mixed input [, int limit]) \n... Using regular expressions to accomplish string replacement is done with the ... \n<?php $a = \"Foo moo boo tool foo\"; $b = preg_replace(\"/[A-Za-z]oo\\b/\", \"Got\u00a0...", 
    "htmlSnippet": "mixed <b>preg_replace</b> ( mixed <b>pattern</b>, mixed replacement, mixed input [, int limit]) <br>\n... Using <b>regular expressions</b> to accomplish string replacement is done with the ... <br>\n&lt;?<b>php</b> $a = &quot;Foo moo boo tool foo&quot;; $b = <b>preg_replace</b>(&quot;/[A-Za-z]oo\\b/&quot;, &quot;Got&nbsp;...", 
    "link": "http://www.hackingwithphp.com/4/8/5/regular-expression-replacements", 
    "cacheId": "5j23liV7PsEJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "RegEx Cheatsheet \u203a Regular Expressions in PHP & More", 
    "displayLink": "regexone.com", 
    "htmlTitle": "<b>RegEx</b> Cheatsheet \u203a <b>Regular Expressions</b> in <b>PHP</b> &amp; More", 
    "formattedUrl": "regexone.com/cheatsheet", 
    "htmlFormattedUrl": "<b>regex</b>one.com/cheatsheet", 
    "pagemap": {
      "metatags": [
        {
          "application-url": "http://regexone.com/", 
          "fb:admins": "28111059", 
          "application-name": "RegexOne - Learn regular expressions with simple, interactive examples.", 
          "created": "2011-06-01"
        }
      ]
    }, 
    "snippet": "Regular Expressions in PHP need to have a start and end delimiter, with the most \n... In PHP, you can use the preg_match() function to test whether a regular ... It is \nhandy sometimes to search and replace a string using regular expressions,\u00a0...", 
    "htmlSnippet": "<b>Regular Expressions</b> in <b>PHP</b> need to have a start and end delimiter, with the most <br>\n... In <b>PHP</b>, you can use the <b>preg_match</b>() function to test whether a <b>regular</b> ... It is <br>\nhandy sometimes to search and <b>replace</b> a string using <b>regular expressions</b>,&nbsp;...", 
    "link": "http://regexone.com/cheatsheet", 
    "cacheId": "NSCy4b-0-UoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "regex - PHP preg_replace regular expression - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>regex</b> - <b>PHP preg_replace regular expression</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/.../php-preg-replace-regular-expression", 
    "htmlFormattedUrl": "stackoverflow.com/questions/.../<b>php</b>-<b>preg</b>-<b>replace</b>-<b>regular-expression</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "You can use backreferences in preg_replace to do this: preg_replace('#.*/([^\\.]+)\\..*#', '$1', $input); This searches for anything up to a slash, then as much of the following string that is...", 
          "upvotecount": "1"
        }, 
        {
          "text": "$s = preg_replace(\"#^.*/(.*?)\\\\..*$#\",\"$1\",$string) Explanation: ^ matches start of string .* matches a string of arbitrary characters (greedy) / matches the / (.*?) matches a string of arbirtrary...", 
          "upvotecount": "2"
        }, 
        {
          "text": "You don't need regex for this case, it would be over kill. You can just use the build in substr and strpos functions. $from = strpos($string, '/') + 1; $to = strpos($string, '.'); echo substr($stri...", 
          "upvotecount": "2"
        }, 
        {
          "text": "$string = preg_replace('~^.*/(.*?)\\..*$~',\"$1\",$string);", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "How to remove anything before a given character and anything after a given character with preg_replace using a regular expression? Of course this could be done in many other ways like explode and", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "PHP preg_replace regular expression", 
          "title": "PHP preg_replace regular expression"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/5192463/php-preg-replace-regular-expression", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/5192463/php-preg-replace-regular-expression", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/5192463/php-preg-replace-regular-expression", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "How to remove anything before a given character and anything after a given character with preg_replace using a regular expression? Of course this could be done in many other ways like explode and", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/5192463/php-preg-replace-regular-expression", 
          "twitter:card": "summary", 
          "twitter:title": "PHP preg_replace regular expression", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "4", 
          "text": "How to remove anything before a given character and anything after a given character with preg_replace using a regular expression? Of course this could be done in many other ways like explode...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "PHP preg_replace regular expression", 
          "upvotecount": "1"
        }
      ]
    }, 
    "snippet": "But I am curious about preg_replace and regex. ... Here is a good website about \nregex: http://www.regular-expressions.info/php.html. Hope this\u00a0...", 
    "htmlSnippet": "But I am curious about <b>preg_replace</b> and <b>regex</b>. ... Here is a good website about <br>\n<b>regex</b>: http://www.<b>regular-expressions</b>.info/<b>php</b>.html. Hope this&nbsp;...", 
    "link": "http://stackoverflow.com/questions/5192463/php-preg-replace-regular-expression", 
    "cacheId": "ugRdTkwABqEJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Apache mod_rewrite Introduction - Apache HTTP Server Version 2.4", 
    "displayLink": "httpd.apache.org", 
    "htmlTitle": "<b>Apache mod_rewrite</b> Introduction - <b>Apache</b> HTTP Server Version 2.4", 
    "formattedUrl": "httpd.apache.org/docs/2.4/rewrite/intro.html", 
    "htmlFormattedUrl": "httpd.<b>apache</b>.org/docs/2.4/<b>rewrite</b>/intro.html", 
    "snippet": "mod_rewrite uses the Perl Compatible Regular Expression vocabulary. In this \ndocument, we do not attempt to provide a\u00a0...", 
    "htmlSnippet": "<b>mod_rewrite</b> uses the Perl Compatible <b>Regular Expression</b> vocabulary. In this <br>\ndocument, we do not attempt to provide a&nbsp;...", 
    "link": "http://httpd.apache.org/docs/2.4/rewrite/intro.html", 
    "cacheId": "QLBd5s4YawkJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "mod_rewrite: Regular Expressions", 
    "displayLink": "www.mediacollege.com", 
    "htmlTitle": "<b>mod_rewrite</b>: <b>Regular Expressions</b>", 
    "formattedUrl": "www.mediacollege.com/.../apache/mod-rewrite/regular-expressions.html", 
    "htmlFormattedUrl": "www.mediacollege.com/.../<b>apache</b>/<b>mod</b>-<b>rewrite</b>/<b>regular-expressions</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes"
        }
      ]
    }, 
    "snippet": "A brief explanation of the wonderful world of regular expressions, in the context of \ncreating useful URL rewrites using the Apache module, mod_rewrite.", 
    "htmlSnippet": "A brief explanation of the wonderful world of <b>regular expressions</b>, in the context of <br>\ncreating useful URL rewrites using the <b>Apache module</b>, <b>mod_rewrite</b>.", 
    "link": "http://www.mediacollege.com/internet/server/apache/mod-rewrite/regular-expressions.html", 
    "cacheId": "v7GtPflv720J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "mod_rewrite cheat sheet | mod_rewrite reference with useful ...", 
    "displayLink": "mod-rewrite-cheatsheet.com", 
    "htmlTitle": "<b>mod_rewrite</b> cheat sheet | <b>mod_rewrite</b> reference with useful <b>...</b>", 
    "formattedUrl": "mod-rewrite-cheatsheet.com/", 
    "htmlFormattedUrl": "<b>mod</b>-<b>rewrite</b>-cheatsheet.com/", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "81", 
          "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQzWyeGi7j15EWSY61T6ClEVHU__eQ7BBIpU-tmqWl6hURNRJMVTSVScQ", 
          "height": "128"
        }
      ], 
      "cse_image": [
        {
          "src": "http://ws.assoc-amazon.com/widgets/q?_encoding=UTF8&ASIN=0596514271&Format=_SL160_&ID=AsinImage&MarketPlace=US&ServiceVersion=20070822&WS=1&tag=modrewriteche-20"
        }
      ]
    }, 
    "snippet": "mod_rewrite is a Apache webserver module for flexible url rewriting. It is part of \nthe standard ... with minimal detail. It is designed as a quick mod_rewrite \nreference with useful examples for practical use. ... regex reference (e.g. for \nmod_rewrite)\u00a0...", 
    "htmlSnippet": "<b>mod_rewrite</b> is a <b>Apache</b> webserver module for flexible url rewriting. It is part of <br>\nthe standard ... with minimal detail. It is designed as a quick <b>mod_rewrite</b> <br>\nreference with useful <b>examples</b> for practical use. ... <b>regex</b> reference (e.g. for <br>\n<b>mod_rewrite</b>)&nbsp;...", 
    "link": "http://mod-rewrite-cheatsheet.com/", 
    "cacheId": "aEoNNG3g-OYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Java Regex - Tutorial", 
    "displayLink": "www.vogella.com", 
    "htmlTitle": "<b>Java Regex</b> - <b>Tutorial</b>", 
    "formattedUrl": "www.vogella.com/tutorials/JavaRegularExpressions/article.html", 
    "htmlFormattedUrl": "www.vogella.com/<b>tutorials</b>/<b>JavaRegularExpressions</b>/article.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ]
    }, 
    "snippet": "Dec 1, 2014 ... Java and Regular Expressions This tutorial introduces the usage of regular ... A \nregular expression defines a search pattern for strings.", 
    "htmlSnippet": "Dec 1, 2014 <b>...</b> <b>Java</b> and <b>Regular Expressions</b> This <b>tutorial</b> introduces the usage of <b>regular</b> ... A <br>\n<b>regular expression</b> defines a search <b>pattern</b> for <b>strings</b>.", 
    "link": "http://www.vogella.com/tutorials/JavaRegularExpressions/article.html", 
    "cacheId": "p4mHll1W0RYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "How-To: Regular Expressions in Java (Part 1) - Tutorial | Examples ...", 
    "displayLink": "www.ocpsoft.org", 
    "htmlTitle": "How-To: <b>Regular Expressions</b> in <b>Java</b> (Part 1) - <b>Tutorial</b> | <b>Examples</b> <b>...</b>", 
    "formattedUrl": "www.ocpsoft.org/.../guide-to-regular-expressions-in-java-part-1/", 
    "htmlFormattedUrl": "www.ocpsoft.org/.../guide-to-<b>regular-expressions</b>-in-<b>java</b>-part-1/", 
    "pagemap": {
      "metatags": [
        {
          "msvalidate.01": "A54BE748E8688A384395C6901A272562", 
          "viewport": "width=device-width"
        }
      ], 
      "hcard": [
        {
          "url": "http://ocpsoft.com/?p=915", 
          "url_text": "How-To: Regular Expressions in Java (Part 2) - Tutorial | Examples | OcpSoft", 
          "fn": "How-To: Regular Expressions in Java (Part 2) - Tutorial | Examples | OcpSoft"
        }, 
        {
          "url": "http://rockhoppertech.com/blogs", 
          "photo": "http://0.gravatar.com/avatar/9ef959723fb9043ccefe0453a5c139e1?s=48&d=wavatar&r=g", 
          "url_text": "Gene De Lisa", 
          "fn": "Gene De Lisa"
        }, 
        {
          "url": "http://ocpsoft.com/opensource/guide-to-regular-expressions-in-java-part-2/", 
          "url_text": "How-To: Regular Expressions in Java (Part 2) - Tutorial | Examples | OcpSoft", 
          "fn": "How-To: Regular Expressions in Java (Part 2) - Tutorial | Examples | OcpSoft"
        }, 
        {
          "photo": "http://1.gravatar.com/avatar/dc6b999124525346e68797a791b01fb9?s=48&d=wavatar&r=g", 
          "fn": "Nitin Gautam"
        }, 
        {
          "photo": "http://2.gravatar.com/avatar/e1b0b345921a3fc7629abaf4cc55031a?s=48&d=wavatar&r=g", 
          "nickname": "param", 
          "fn": "param"
        }, 
        {
          "url": "http://ocpsoft.com/", 
          "photo": "http://0.gravatar.com/avatar/32add0b96a37d444ca20f8856a9173e5?s=48&d=wavatar&r=g", 
          "url_text": "Lincoln Baxter III", 
          "fn": "Lincoln Baxter III"
        }, 
        {
          "url": "http://ocpsoft.com/support/topic/move-url-parameter-position", 
          "url_text": "Move URL parameter position \u00ab OcpSoft Support Forums", 
          "fn": "Move URL parameter position \u00ab OcpSoft Support Forums"
        }, 
        {
          "url": "http://ocpsoft.com/support/topic/question-about-redirect-with-pretty-faces", 
          "url_text": "Question about redirect with pretty faces \u00ab OcpSoft Support Forums", 
          "fn": "Question about redirect with pretty faces \u00ab OcpSoft Support Forums"
        }, 
        {
          "url": "http://ocpsoft.com/support/topic/dynaview-doesnt-work-with-resourcex", 
          "url_text": "[solved] DynaView doesn't work with #{resource['x']} \u00ab OcpSoft Support Forums", 
          "fn": "[solved] DynaView doesn't work with #{resource['x']} \u00ab OcpSoft Support Forums"
        }, 
        {
          "photo": "http://2.gravatar.com/avatar/b0e6e22157d860633091e814a40a2ddc?s=48&d=wavatar&r=g", 
          "fn": "Ygor Fonseca"
        }
      ]
    }, 
    "snippet": "Jul 22, 2013 ... Java: Regular Expressions are a language of string patterns built in to most \nmodern programming languages; they can be used for: searching,\u00a0...", 
    "htmlSnippet": "Jul 22, 2013 <b>...</b> <b>Java</b>: <b>Regular Expressions</b> are a language of <b>string</b> patterns built in to most <br>\nmodern programming languages; they can be used for: searching,&nbsp;...", 
    "link": "http://www.ocpsoft.org/opensource/guide-to-regular-expressions-in-java-part-1/", 
    "cacheId": "VEDe0bDb868J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Java - Regular Expressions", 
    "displayLink": "www.tutorialspoint.com", 
    "htmlTitle": "<b>Java</b> - <b>Regular Expressions</b>", 
    "formattedUrl": "www.tutorialspoint.com/java/java_regular_expressions.htm", 
    "htmlFormattedUrl": "www.<b>tutorials</b>point.com/<b>java</b>/<b>java</b>_<b>regular_expressions</b>.htm", 
    "pagemap": {
      "metatags": [
        {
          "fb:app_id": "471319149685276", 
          "viewport": "width=device-width,initial-scale=1.0,user-scalable=yes", 
          "author": "tutorialspoint.com"
        }
      ]
    }, 
    "snippet": "Java Regular Expressions - Learning Java in simple and easy steps : A \nbeginner's ... Following example illustrates how to find a digit string from the \ngiven\u00a0...", 
    "htmlSnippet": "<b>Java Regular Expressions</b> - Learning <b>Java</b> in simple and easy steps : A <br>\nbeginner&#39;s ... Following <b>example</b> illustrates how to find a digit <b>string</b> from the <br>\ngiven&nbsp;...", 
    "link": "http://www.tutorialspoint.com/java/java_regular_expressions.htm", 
    "cacheId": "_1u9D1GsPD0J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Lesson: Regular Expressions (The Java\u2122 Tutorials > Essential ...", 
    "displayLink": "docs.oracle.com", 
    "htmlTitle": "Lesson: <b>Regular Expressions</b> (The <b>Java</b>\u2122 <b>Tutorials</b> &gt; Essential <b>...</b>", 
    "formattedUrl": "https://docs.oracle.com/javase/tutorial/essential/regex/", 
    "htmlFormattedUrl": "https://docs.oracle.com/<b>java</b>se/<b>tutorial</b>/essential/<b>regex</b>/", 
    "snippet": "This lesson explains how to use the java.util.regex API for pattern matching ... \nString Literals: Introduces basic pattern matching, metacharacters, and quoting.", 
    "htmlSnippet": "This lesson explains how to use the <b>java</b>.util.<b>regex</b> API for <b>pattern</b> matching ... <br>\n<b>String</b> Literals: Introduces basic <b>pattern</b> matching, metacharacters, and quoting.", 
    "link": "https://docs.oracle.com/javase/tutorial/essential/regex/", 
    "cacheId": "Q_OENnOt5FoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Java Regular Expression Tutorial with Examples", 
    "displayLink": "www.javacodegeeks.com", 
    "htmlTitle": "<b>Java Regular Expression Tutorial</b> with <b>Examples</b>", 
    "formattedUrl": "www.javacodegeeks.com/.../java-regular-expression-tutorial-with-examples. html", 
    "htmlFormattedUrl": "www.<b>java</b>codegeeks.com/.../<b>java</b>-<b>regular-expression</b>-<b>tutorial</b>-with-<b>examples</b>. html", 
    "pagemap": {
      "thing": [
        {
          "name": "Java Regular Expression Tutorial with Examples"
        }
      ], 
      "metatags": [
        {
          "twitter:creator": "@journaldev", 
          "og:url": "http://www.javacodegeeks.com/2012/11/java-regular-expression-tutorial-with-examples.html", 
          "og:type": "article", 
          "og:site_name": "Java Code Geeks", 
          "twitter:domain": "Java Code Geeks", 
          "twitter:description": "When I started my career in java, regular expressions were a nightmare for me. This tutorial is aimed to help you mastering java regular expression and for me to come back at regular interval to refresh my regular expressions learning. What Are Regular Expressions? A regular expression defines a pattern for a String. Regular Expressions ...", 
          "twitter:image:src": "http://a3ab771892fd198a96736e50.javacodegeeks.netdna-cdn.com/wp-content/uploads/2012/10/enterprise-java-logo.jpg", 
          "og:description": "When I started my career in java, regular expressions were a nightmare for me. This tutorial is aime...", 
          "twitter:site": "@javacodegeeks", 
          "og:title": "Java Regular Expression Tutorial with Examples", 
          "twitter:card": "summary", 
          "twitter:title": "Java Regular Expression Tutorial with Examples", 
          "og:image": "http://a3ab771892fd198a96736e50.javacodegeeks.netdna-cdn.com/wp-content/uploads/2012/10/enterprise-java-logo.jpg", 
          "viewport": "width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"
        }
      ], 
      "hcard": [
        {
          "fn": "+Pankaj Kumar"
        }
      ], 
      "person": [
        {
          "name": "+Pankaj Kumar"
        }
      ], 
      "Breadcrumb": [
        {
          "url": "Home", 
          "title": "Home"
        }, 
        {
          "url": "Java", 
          "title": "Java"
        }, 
        {
          "url": "Enterprise Java", 
          "title": "Enterprise Java"
        }
      ], 
      "cse_image": [
        {
          "src": "http://a3ab771892fd198a96736e50.javacodegeeks.netdna-cdn.com/wp-content/uploads/2012/10/enterprise-java-logo.jpg"
        }
      ]
    }, 
    "snippet": "Nov 12, 2012 ... This tutorial is aimed to help you mastering java regular expression and for me to \ncome ... A regular expression defines a pattern for a String.", 
    "htmlSnippet": "Nov 12, 2012 <b>...</b> This <b>tutorial</b> is aimed to help you mastering <b>java regular expression</b> and for me to <br>\ncome ... A <b>regular expression</b> defines a <b>pattern</b> for a <b>String</b>.", 
    "link": "http://www.javacodegeeks.com/2012/11/java-regular-expression-tutorial-with-examples.html", 
    "cacheId": "glunbc3oEOIJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Java Regex - Pattern (java.util.regex.Pattern) | tutorials.jenkov.com", 
    "displayLink": "tutorials.jenkov.com", 
    "htmlTitle": "<b>Java Regex</b> - <b>Pattern</b> (<b>java</b>.util.<b>regex</b>.<b>Pattern</b>) | <b>tutorials</b>.jenkov.com", 
    "formattedUrl": "tutorials.jenkov.com/java-regex/pattern.html", 
    "htmlFormattedUrl": "<b>tutorials</b>.jenkov.com/<b>java</b>-<b>regex</b>/<b>pattern</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "twitter:creator": "@jjenkov", 
          "og:url": "http://tutorials.jenkov.com/java-regex/pattern.html", 
          "og:type": "article", 
          "twitter:domain": "jenkov.com", 
          "twitter:card": "summary_large_image", 
          "author": "Jakob Jenkov", 
          "og:description": "This tutorial explains how to use Java's Pattern class in the regex API to match patterns in strings.", 
          "handheldfriendly": "True", 
          "twitter:title": "Java Regex - Pattern (java.util.regex.Pattern)", 
          "mobileoptimized": "480", 
          "og:title": "Java Regex - Pattern (java.util.regex.Pattern)", 
          "twitter:site": "@jjenkov", 
          "viewport": "width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"
        }
      ]
    }, 
    "snippet": "This tutorial explains how to use Java's Pattern class in the regex API to match \npatterns in strings.", 
    "htmlSnippet": "This <b>tutorial</b> explains how to use <b>Java&#39;s Pattern</b> class in the <b>regex</b> API to match <br>\npatterns in <b>strings</b>.", 
    "link": "http://tutorials.jenkov.com/java-regex/pattern.html", 
    "cacheId": "TPOfsvrOycAJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Using Regular Expressions in Java", 
    "displayLink": "www.regular-expressions.info", 
    "htmlTitle": "Using <b>Regular Expressions</b> in <b>Java</b>", 
    "formattedUrl": "www.regular-expressions.info/java.html", 
    "htmlFormattedUrl": "www.<b>regular-expressions</b>.info/<b>java</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width", 
          "author": "Jan Goyvaerts"
        }
      ]
    }, 
    "snippet": "The Java String class has several methods that allow you to perform an operation \n.... While the regular expressions tutorial on this website is more complete and\u00a0...", 
    "htmlSnippet": "The <b>Java String</b> class has several methods that allow you to perform an operation <br>\n.... While the <b>regular expressions tutorial</b> on this website is more complete and&nbsp;...", 
    "link": "http://www.regular-expressions.info/java.html", 
    "cacheId": "jwqWJ1-fnwoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Java Regex - Matcher (java.util.regex.Matcher) | tutorials.jenkov.com", 
    "displayLink": "tutorials.jenkov.com", 
    "htmlTitle": "<b>Java Regex</b> - Matcher (<b>java</b>.util.<b>regex</b>.Matcher) | <b>tutorials</b>.jenkov.com", 
    "formattedUrl": "tutorials.jenkov.com/java-regex/matcher.html", 
    "htmlFormattedUrl": "<b>tutorials</b>.jenkov.com/<b>java</b>-<b>regex</b>/matcher.html", 
    "pagemap": {
      "metatags": [
        {
          "twitter:creator": "@jjenkov", 
          "og:url": "http://tutorials.jenkov.com/java-regex/matcher.html", 
          "og:type": "article", 
          "twitter:domain": "jenkov.com", 
          "twitter:card": "summary_large_image", 
          "author": "Jakob Jenkov", 
          "og:description": "This tutorial explains how to use the Java Regex Matcher class to match a pattern (regular expression) against one or more strings.", 
          "handheldfriendly": "True", 
          "twitter:title": "Java Regex - Matcher (java.util.regex.Matcher)", 
          "mobileoptimized": "480", 
          "og:title": "Java Regex - Matcher (java.util.regex.Matcher)", 
          "twitter:site": "@jjenkov", 
          "viewport": "width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"
        }
      ]
    }, 
    "snippet": "This tutorial explains how to use the Java Regex Matcher class to match a pattern \n(regular expression) against one or more strings.", 
    "htmlSnippet": "This <b>tutorial</b> explains how to use the <b>Java Regex</b> Matcher class to match a <b>pattern</b> <br>\n(<b>regular expression</b>) against one or more <b>strings</b>.", 
    "link": "http://tutorials.jenkov.com/java-regex/matcher.html", 
    "cacheId": "ww2qRphS7pYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "10 Java Regular Expression Examples You Should Know", 
    "displayLink": "www.mkyong.com", 
    "htmlTitle": "10 <b>Java Regular Expression Examples</b> You Should Know", 
    "formattedUrl": "www.mkyong.com/regular-expressions/10-java-regular-expression-examples -you-should-know/", 
    "htmlFormattedUrl": "www.mkyong.com/<b>regular-expressions</b>/10-<b>java</b>-<b>regular-expression</b>-<b>examples</b> -you-should-know/", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"
        }
      ]
    }, 
    "snippet": "Nov 18, 2009 ... 10 Java Regular Expression Examples You Should Know ... #start of the line [_A-\nZa-z0-9-]+ # must start with string in the bracket [ ], must\u00a0...", 
    "htmlSnippet": "Nov 18, 2009 <b>...</b> 10 <b>Java Regular Expression Examples</b> You Should Know ... #start of the line [_A-<br>\nZa-z0-9-]+ # must start with <b>string</b> in the bracket [ ], must&nbsp;...", 
    "link": "http://www.mkyong.com/regular-expressions/10-java-regular-expression-examples-you-should-know/", 
    "cacheId": "DGD-mneb5hMJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Java 101: Regular expressions simplify pattern-matching code ...", 
    "displayLink": "www.javaworld.com", 
    "htmlTitle": "<b>Java</b> 101: <b>Regular expressions</b> simplify <b>pattern</b>-matching code <b>...</b>", 
    "formattedUrl": "www.javaworld.com/javaworld/jw-02-2003/jw-0207-java101.html", 
    "htmlFormattedUrl": "www.<b>java</b>world.com/<b>java</b>world/jw-02-2003/jw-0207-<b>java</b>101.html", 
    "pagemap": {
      "blogposting": [
        {
          "articlebody": "Text processing frequently requires code to match text against patterns. That capability makes possible text searches, email header validation, custom text creation from generic text (e.g.,...", 
          "description": "Discover the elegance of regular expressions in text-processing scenarios that involve pattern matching", 
          "headline": "Java 101: Regular expressions simplify pattern-matching code", 
          "image": "http://core1.staticworld.net/images/article/2015/01/microservices-in-2015-100538873-carousel.idge.png", 
          "datepublished": "2003-02-07T00:00-0800", 
          "keywords": "Core Java Java language Learn Java Regular Expressions in Java", 
          "genre": "Tutorial"
        }
      ], 
      "person": [
        {
          "url": "Jeff Friesen", 
          "image": "http://core4.staticworld.net/images/article/2013/12/jvw-jeff-friesen_150x150-100159624-byline.jpg", 
          "name": "Jeff Friesen"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://www.javaworld.com/article/2073192/core-java/core-java-regular-expressions-simplify-pattern-matching-code.html", 
          "twitter:url": "http://www.javaworld.com/article/2073192/core-java/core-java-regular-expressions-simplify-pattern-matching-code.html", 
          "rating": "General", 
          "og:site_name": "JavaWorld", 
          "author": "Jeff Friesen", 
          "twitter:image": "http://www.javaworld.com/www.idge.jvw/images/JVW_logo_300x300.png", 
          "twitter:description": "Text processing frequently requires code to match text against patterns -- for instance, for text searches, email header validation, and custom text creation from generic text. Java supports pattern matching via its character and assorted string classes, and also via regular expressions, which can help you streamline and simplify your code.", 
          "og:type": "article", 
          "og:description": "Text processing frequently requires code to match text against patterns -- for instance, for text searches, email header validation, and custom text creation from generic text. Java supports pattern matching via its character and assorted string classes, and also via regular expressions, which can help you streamline and simplify your code.", 
          "dc.date.issued": "2003-02-07T00:00-05:00", 
          "twitter:site": "@javaworldcom", 
          "og:title": "Java 101: Regular expressions simplify pattern-matching code", 
          "twitter:card": "summary_large_image", 
          "fb:app_id": "196366870381968", 
          "og:image": "http://www.javaworld.com/www.idge.jvw/images/JVW_logo_300x300.png", 
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ], 
      "hcard": [
        {
          "fn": "Jeff Friesen"
        }
      ], 
      "breadcrumb": [
        {
          "url": "Home", 
          "title": "Home"
        }
      ], 
      "organization": [
        {
          "name": "JavaWorld"
        }, 
        {
          "url": "http://www.javaworld.com/", 
          "sameas": "https://twitter.com/javaworldcom"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.javaworld.com/www.idge.jvw/images/JVW_logo_300x300.png"
        }
      ]
    }, 
    "snippet": "Feb 7, 2003 ... Java supports pattern matching via its character and assorted string classes, ... \nFor example, a new-line character sequence (represented as\u00a0...", 
    "htmlSnippet": "Feb 7, 2003 <b>...</b> <b>Java</b> supports <b>pattern</b> matching via its character and assorted <b>string</b> classes, ... <br>\nFor <b>example</b>, a new-line character sequence (represented as&nbsp;...", 
    "link": "http://www.javaworld.com/javaworld/jw-02-2003/jw-0207-java101.html", 
    "cacheId": "A-KXwUMWF8kJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regex Tutorial\u2014Regular Expressions have Many Uses", 
    "displayLink": "www.rexegg.com", 
    "htmlTitle": "<b>Regex Tutorial</b>\u2014<b>Regular Expressions</b> have Many Uses", 
    "formattedUrl": "www.rexegg.com/regex-uses.html", 
    "htmlFormattedUrl": "www.rexegg.com/<b>regex</b>-uses.html", 
    "pagemap": {
      "metatags": [
        {
          "dcterms.rightsholder": "copyright (c) RexEgg.com --- ALL RIGHTS RESERVED"
        }
      ]
    }, 
    "snippet": "May 24, 2015 ... Mentions regex for Apache, mySQL, PHP programming, searching, ... you have \nregular expressions somewhere in your .htaccess file or in your\u00a0...", 
    "htmlSnippet": "May 24, 2015 <b>...</b> Mentions <b>regex</b> for <b>Apache</b>, mySQL, PHP programming, searching, ... you have <br>\n<b>regular expressions</b> somewhere in your .<b>htaccess</b> file or in your&nbsp;...", 
    "link": "http://www.rexegg.com/regex-uses.html", 
    "cacheId": "CI5LJCVwUz0J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "regex - .htaccess regular expression difference/pros/cons - Stack ...", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>regex</b> - .<b>htaccess regular expression</b> difference/pros/cons - Stack <b>...</b>", 
    "formattedUrl": "stackoverflow.com/.../htaccess-regular-expression-difference-pros-cons", 
    "htmlFormattedUrl": "stackoverflow.com/.../<b>htaccess</b>-<b>regular-expression</b>-difference-pros-cons", 
    "pagemap": {
      "answer": [
        {
          "text": "Let's say we have this .htaccess: RewriteRule ^index\\.php$ - [L] RewriteCond %{REQUEST_FILENAME} !-f RewriteCond %{REQUEST_FILENAME} !-d RewriteRule ^(.*)$ index.php?request=$1 [L] The expression...", 
          "upvotecount": "26"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I have a bunch of rules in my .htaccess (sub-domains, folders, users specific folders etc...) and I am using now this regular expression: ([a-z0-9A-Z]) I was looking for a specific rule and i fo...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": ".htaccess regular expression difference/pros/cons", 
          "title": ".htaccess regular expression difference/pros/cons"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/9254052/htaccess-regular-expression-difference-pros-cons", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/9254052/htaccess-regular-expression-difference-pros-cons", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/9254052/htaccess-regular-expression-difference-pros-cons", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I have a bunch of rules in my .htaccess (sub-domains, folders, users specific folders etc...)  and I am using now this regular expression:  ([a-z0-9A-Z])  I was looking for a specific rule and i fo...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/9254052/htaccess-regular-expression-difference-pros-cons", 
          "twitter:card": "summary", 
          "twitter:title": ".htaccess regular expression difference/pros/cons", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "1", 
          "text": "I have a bunch of rules in my .htaccess (sub-domains, folders, users specific folders etc...) and I am using now this regular expression: ([a-z0-9A-Z]) I was looking for a specific rule and...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": ".htaccess regular expression difference/pros/cons", 
          "upvotecount": "13"
        }
      ]
    }, 
    "snippet": "I have a bunch of rules in my .htaccess (sub-domains, folders, users specific ... \nThe Apache regexp engine is just the same PCRE engine as in PHP and Perl. ... \nmatch any character and any single character; * : match zero or\u00a0...", 
    "htmlSnippet": "I have a bunch of rules in my .<b>htaccess</b> (sub-domains, folders, users specific ... <br>\nThe <b>Apache regexp</b> engine is just the same PCRE engine as in PHP and Perl. ... <br>\n<b>match</b> any character and any single character; * : <b>match</b> zero or&nbsp;...", 
    "link": "http://stackoverflow.com/questions/9254052/htaccess-regular-expression-difference-pros-cons", 
    "cacheId": "lY431VdH78YJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Using FilesMatch and Files in htaccess", 
    "displayLink": "www.askapache.com", 
    "htmlTitle": "Using FilesMatch and Files in <b>htaccess</b>", 
    "formattedUrl": "www.askapache.com/htaccess/using-filesmatch-and-files-in-htaccess.html", 
    "htmlFormattedUrl": "www.ask<b>apache</b>.com/<b>htaccess</b>/using-files<b>match</b>-and-files-in-<b>htaccess</b>.html", 
    "pagemap": {
      "Breadcrumb": [
        {
          "url": "Home"
        }
      ], 
      "metatags": [
        {
          "twitter:creator": "@askapache", 
          "twitter:domain": "AskApache", 
          "og:locale": "en_US", 
          "dc.publisher": "AskApache Web Development", 
          "dc.date.issued": "2007-04-03T16:46:30+00:00", 
          "twitter:site": "@askapache", 
          "article:publisher": "http://www.facebook.com/htaccess.AskApache", 
          "og:type": "article", 
          "fb:admins": "100005107449774", 
          "dc.author": "Charles Torvalds", 
          "dc.language": "en", 
          "og:title": "Using FilesMatch and Files in htaccess", 
          "twitter:title": "Using FilesMatch and Files in htaccess", 
          "article:tag": "FilesMatch", 
          "article:section": "Htaccess", 
          "dc.format": "text/html", 
          "article:modified_time": "2013-04-08T15:58:17+00:00", 
          "article:author": "https://www.facebook.com/htaccess.AskApache", 
          "og:image": "http://www.askapache.com/avatar.png", 
          "article:published_time": "2007-04-03T16:46:30+00:00", 
          "viewport": "width=device-width, initial-scale=.75, minimum-scale=.15, maximum-scale=2.6", 
          "dc.title": "Using FilesMatch and Files in htaccess", 
          "og:updated_time": "2013-04-08T15:58:17+00:00", 
          "og:site_name": "AskApache", 
          "twitter:card": "summary_large_image", 
          "twitter:description": "Some good examples for how to use the Files and FilesMatch directives in .htaccess files and httpd.conf files for Apache.<FilesMatch \".(htm|html|css|js|php)$\">AddDefaultCharset UTF-8DefaultLanguage en-US</FilesMatch>", 
          "og:description": "Some good examples for how to use the Files and FilesMatch directives in .htaccess files and httpd.conf files for Apache.<FilesMatch \".(htm|html|css|js|php)$\">AddDefaultCharset UTF-8DefaultLanguage en-US</FilesMatch>", 
          "dc.date": "2015-06-16", 
          "twitter:image:src": "http://www.askapache.com/avatar.png"
        }
      ], 
      "person": [
        {
          "name": "Charles Torvalds"
        }
      ], 
      "organization": [
        {
          "name": "AskApache Web Development"
        }
      ], 
      "article": [
        {
          "url": "Using FilesMatch and Files in htaccess", 
          "articlebody": "Files and FilesMatch to target multiple files and using Regular expressions using .htaccess files on Apache.NOTE:FilesMatch should be used instead of Files when dealing with multiple files.Adding...", 
          "image": "http://www.askapache.com/t/img/askapache_favicon_128-01.png", 
          "name": "Using FilesMatch and Files in htaccess", 
          "datepublished": "2007-04-03T16:46:30+00:00"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "224", 
          "src": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRLSvOMdla_RGY_sqmqWoj8v_DSZzXPJ8uRBnDZWPZL7sixgMH7Si617Zc", 
          "height": "217"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.askapache.com/avatar.png"
        }
      ]
    }, 
    "snippet": "Apr 3, 2007 ... Files and FilesMatch to target multiple files and using Regular expressions using \n.htaccess files on Apache. NOTE: FilesMatch should be used\u00a0...", 
    "htmlSnippet": "Apr 3, 2007 <b>...</b> Files and FilesMatch to target multiple files and using <b>Regular expressions</b> using <br>\n.<b>htaccess</b> files on <b>Apache</b>. NOTE: FilesMatch should be used&nbsp;...", 
    "link": "http://www.askapache.com/htaccess/using-filesmatch-and-files-in-htaccess.html", 
    "cacheId": "Q_XNgyrI1N8J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expression Language - Quick Reference", 
    "displayLink": "msdn.microsoft.com", 
    "htmlTitle": "<b>Regular Expression</b> Language - Quick Reference", 
    "formattedUrl": "https://msdn.microsoft.com/en-us/library/az24scfc(v=vs.110).aspx", 
    "htmlFormattedUrl": "https://msdn.microsoft.com/en-us/library/az24scfc(v=vs.110).aspx", 
    "pagemap": {
      "metatags": [
        {
          "search.mshattr.ms.prod": ".net-framework-4.6", 
          "search.mshattr.abstract": "A regular expression is a pattern that the regular expression engine attempts to match in input text. A pattern consists of one or more character literals, operators, or constructs.  For a brief introduction, see .NET Framework Regular Expressions.", 
          "search.mshattr.preferredsitename": "MSDN", 
          "search.microsoft.help.tocparenttopicversion": "110", 
          "search.mshattr.ms.date": "2014/11/12", 
          "search.mshattr.preferredlib": "/library", 
          "search.language": "en-us", 
          "search.mshattr.shippedin": "vs.80", 
          "search.mshattr.communitycontent": "0", 
          "search.dcsext.title": "Regular Expression Language - Quick Reference", 
          "search.dcsext.productfamily": "LIB_DG", 
          "search.mshkeyworda": "930653a6-95d2-4697-9d5a-52d11bb6fd4c", 
          "search.system.keywords": ".NET Framework regular expressions, language elements", 
          "search.mshkeywordf": "VS.RegularExpressionBuilder", 
          "search.mshkeywordk": ".NET Framework regular expressions, language elements", 
          "search.description": "A regular expression is a pattern that the regular expression engine attempts to match in input text. A pattern consists of one or more character literals, operators, or constructs. For a brief introduction, see .NET Framework Regular Expressions.", 
          "search.mshattr.ms.devlang": "dotnet", 
          "search.mshattr.assetid": "930653a6-95d2-4697-9d5a-52d11bb6fd4c", 
          "search.dcsext.product": "NDP_CLR", 
          "search.microsoft.help.id": "930653a6-95d2-4697-9d5a-52d11bb6fd4c", 
          "search.mshattr.ms.author": "REDMOND\\ronpet", 
          "search.microsoft.help.contenttype": "Concepts", 
          "search.microsoft.help.f1": "VS.RegularExpressionBuilder", 
          "search.mshattr.revisionnumber": "53", 
          "search.microsoft.help.keywords": ".NET Framework regular expressions, language elements", 
          "search.mshattr.ms.topic": "article", 
          "search.mshattr.docset": "NETFramework", 
          "search.mshattr.mtpsteamname": "Visual Studio"
        }
      ]
    }, 
    "snippet": "A pattern consists of one or more character literals, operators, or constructs. For a \nbrief introduction, see .NET Framework Regular Expressions.", 
    "htmlSnippet": "A <b>pattern</b> consists of one or more character literals, operators, or constructs. For a <br>\nbrief introduction, see .<b>NET</b> Framework <b>Regular Expressions</b>.", 
    "link": "https://msdn.microsoft.com/en-us/library/az24scfc(v=vs.110).aspx", 
    "cacheId": "rSovkNJ0sdIJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "The 30 Minute Regex Tutorial - CodeProject", 
    "displayLink": "www.codeproject.com", 
    "htmlTitle": "The 30 Minute <b>Regex Tutorial</b> - CodeProject", 
    "formattedUrl": "www.codeproject.com/Articles/9099/The-Minute-Regex-Tutorial", 
    "htmlFormattedUrl": "www.codeproject.com/Articles/9099/The-Minute-<b>Regex</b>-<b>Tutorial</b>", 
    "pagemap": {
      "aggregaterating": [
        {
          "ratingvalue": "4.95", 
          "ratingcount": "673", 
          "worstrating": "1", 
          "bestrating": "5"
        }
      ], 
      "metatags": [
        {
          "rating": "General", 
          "viewport": "width=device-width, initial-scale=1.0", 
          "google-translate-customization": "d908bb7ce7aff658-4c2f3a504525c916-g629383f736781a8a-13", 
          "application-name": "CodeProject", 
          "author": "Jim Hollenhorst"
        }
      ], 
      "person": [
        {
          "name": "Jim Hollenhorst"
        }
      ], 
      "article": [
        {
          "articlebody": "Expresso 2.1C - 328 Kb Learning .NET Regular Expressions with Expresso Did you ever wonder what Regular Expressions are all about and want to gain a basic understanding quickly? My goal is...", 
          "name": "The 30 Minute Regex Tutorial", 
          "url": "Permalink", 
          "datepublished": "2004-12-18", 
          "articlesection": ".NET Framework", 
          "datemodified": "2005-11-21 17:04:00"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "256", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQXMJ21pOAEqhaS44N2xATJvI92OwSBLuH2W4PE9H89Sxidn_qJcDiQBYTb", 
          "height": "197"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.codeproject.com/KB/dotnet/RegexTutorial/Example5.jpg"
        }
      ], 
      "hreviewaggregate": [
        {
          "votes": "673"
        }
      ]
    }, 
    "snippet": "Dec 18, 2004 ... Learn how to use regular expressions in 30 minutes with Expresso.; Author: Jim \nHollenhorst; Updated: 21 Nov 2005; Section: .NET Framework\u00a0...", 
    "htmlSnippet": "Dec 18, 2004 <b>...</b> Learn how to use <b>regular expressions</b> in 30 minutes with Expresso.; Author: Jim <br>\nHollenhorst; Updated: 21 Nov 2005; Section: .<b>NET</b> Framework&nbsp;...", 
    "link": "http://www.codeproject.com/Articles/9099/The-Minute-Regex-Tutorial", 
    "cacheId": "t1F2kynZVRsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": ".NET Framework Regular Expressions", 
    "displayLink": "msdn.microsoft.com", 
    "htmlTitle": ".<b>NET</b> Framework <b>Regular Expressions</b>", 
    "formattedUrl": "https://msdn.microsoft.com/en-us/library/hs600312(v=vs.110).aspx", 
    "htmlFormattedUrl": "https://msdn.microsoft.com/en-us/library/hs600312(v=vs.110).aspx", 
    "pagemap": {
      "metatags": [
        {
          "search.microsoft.help.contenttype": "Concepts", 
          "search.language": "en-us", 
          "search.mshattr.assetid": "521b3f6d-f869-42e1-93e5-158c54a6895d", 
          "search.mshattr.abstract": "Regular expressions provide a powerful, flexible, and efficient method for processing text. The extensive pattern-matching notation of regular expressions enables you to quickly parse large amounts of text to find specific character patterns; to vali ...", 
          "search.dcsext.product": "NDP_CLR", 
          "search.mshkeyworda": "521b3f6d-f869-42e1-93e5-158c54a6895d", 
          "search.microsoft.help.id": "521b3f6d-f869-42e1-93e5-158c54a6895d", 
          "search.microsoft.help.keywords": ".NET Framework regular expressions", 
          "search.dcsext.productfamily": "LIB_DG", 
          "search.dcsext.title": ".NET Framework Regular Expressions", 
          "search.system.keywords": ".NET Framework regular expressions", 
          "search.mshattr.revisionnumber": "21", 
          "search.mshkeywordk": ".NET Framework regular expressions", 
          "search.description": "Regular expressions provide a powerful, flexible, and efficient method for processing text."
        }
      ]
    }, 
    "snippet": "6 matches ... Regex object in the .NET Framework. At a minimum, processing text using \nregular expressions requires that the regular expression engine be\u00a0...", 
    "htmlSnippet": "6 matches <b>...</b> <b>Regex</b> object in the .<b>NET</b> Framework. At a minimum, processing text using <br>\n<b>regular expressions</b> requires that the <b>regular expression</b> engine be&nbsp;...", 
    "link": "https://msdn.microsoft.com/en-us/library/hs600312(v=vs.110).aspx", 
    "cacheId": "pN9cyT4WWR4J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "C# Regex.Match Examples: Regular Expressions", 
    "displayLink": "www.dotnetperls.com", 
    "htmlTitle": "<b>C# Regex</b>.Match <b>Examples</b>: <b>Regular Expressions</b>", 
    "formattedUrl": "www.dotnetperls.com/regex-match", 
    "htmlFormattedUrl": "www.dot<b>net</b>perls.com/<b>regex</b>-match", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width,initial-scale=1"
        }
      ]
    }, 
    "snippet": "This C# tutorial covers the Regex class and Regex.Match. ... Based on: .NET 4.5 \nC# program that uses Match, Regex using System; using System.Text.", 
    "htmlSnippet": "This <b>C# tutorial</b> covers the <b>Regex</b> class and <b>Regex</b>.Match. ... Based on: .<b>NET</b> 4.5 <br>\n<b>C#</b> program that uses Match, <b>Regex</b> using System; using System.Text.", 
    "link": "http://www.dotnetperls.com/regex-match", 
    "cacheId": "RbLo6CtMnhAJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "C# Regex Tutorial", 
    "displayLink": "www.rexegg.com", 
    "htmlTitle": "<b>C# Regex Tutorial</b>", 
    "formattedUrl": "www.rexegg.com/regex-csharp.html", 
    "htmlFormattedUrl": "www.rexegg.com/<b>regex</b>-csharp.html", 
    "pagemap": {
      "metatags": [
        {
          "dcterms.rightsholder": "copyright (c) RexEgg.com --- ALL RIGHTS RESERVED"
        }
      ]
    }, 
    "snippet": "Apr 28, 2015 ... C# Regular Expressions Tutorial. Discusses the .NET Regex classes in C#, \nprovides working code for matching, replacing and splitting.", 
    "htmlSnippet": "Apr 28, 2015 <b>...</b> <b>C# Regular Expressions Tutorial</b>. Discusses the .<b>NET Regex</b> classes in <b>C#</b>, <br>\nprovides working code for matching, replacing and splitting.", 
    "link": "http://www.rexegg.com/regex-csharp.html", 
    "cacheId": "sDeCXnTm-ecJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "C# - Regular Expressions", 
    "displayLink": "www.tutorialspoint.com", 
    "htmlTitle": "<b>C#</b> - <b>Regular Expressions</b>", 
    "formattedUrl": "www.tutorialspoint.com/csharp/csharp_regular_expressions.htm", 
    "htmlFormattedUrl": "www.<b>tutorials</b>point.com/csharp/csharp_<b>regular_expressions</b>.htm", 
    "pagemap": {
      "metatags": [
        {
          "fb:app_id": "471319149685276", 
          "viewport": "width=device-width,initial-scale=1.0,user-scalable=yes", 
          "author": "tutorialspoint.com"
        }
      ]
    }, 
    "snippet": "A regular expression is a pattern that could be matched against an input text. The \n.Net framework provides a regular expression engine that allows such\u00a0...", 
    "htmlSnippet": "A <b>regular expression</b> is a <b>pattern</b> that could be matched against an input text. The <br>\n.<b>Net</b> framework provides a <b>regular expression</b> engine that allows such&nbsp;...", 
    "link": "http://www.tutorialspoint.com/csharp/csharp_regular_expressions.htm", 
    "cacheId": "JUL5todYJWoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Using Regular Expressions with .NET - C# and Visual Basic", 
    "displayLink": "www.regular-expressions.info", 
    "htmlTitle": "Using <b>Regular Expressions</b> with .<b>NET</b> - <b>C#</b> and Visual Basic", 
    "formattedUrl": "www.regular-expressions.info/dotnet.html", 
    "htmlFormattedUrl": "www.<b>regular-expressions</b>.info/dot<b>net</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width", 
          "author": "Jan Goyvaerts"
        }
      ]
    }, 
    "snippet": "... readily used in any .NET programming language such as C# (C sharp) or \nVisual Basic. ... Easily use the power of regular expressions in your C# and VB.\nNET\u00a0...", 
    "htmlSnippet": "... readily used in any .<b>NET</b> programming language such as <b>C#</b> (C sharp) or <br>\nVisual Basic. ... Easily use the power of <b>regular expressions</b> in your <b>C#</b> and VB.<br>\n<b>NET</b>&nbsp;...", 
    "link": "http://www.regular-expressions.info/dotnet.html", 
    "cacheId": "308us4_2-5wJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "C# Regular Expressions Cheat Sheet", 
    "displayLink": "www.mikesdotnetting.com", 
    "htmlTitle": "<b>C# Regular Expressions</b> Cheat Sheet", 
    "formattedUrl": "www.mikesdotnetting.com/article/.../c-regular-expressions-cheat-sheet", 
    "htmlFormattedUrl": "www.mikesdot<b>net</b>ting.com/article/.../c-<b>regular-expressions</b>-cheat-sheet", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ], 
      "usercomments": [
        {
          "commenttext": "Thanks. Been quite a while since I last used Regular Expressions. Your cheat sheet is just what the doctor ordered.", 
          "commenttime": "Monday, December 29, 2008 10:02 AM"
        }
      ], 
      "techarticle": [
        {
          "headline": "C# Regular Expressions Cheat Sheet", 
          "commentcount": "36", 
          "about": "Cheat sheet for C# regular expressions metacharacters, operators, quantifiers etc", 
          "articlebody": "Cheat sheet for C# regular expressions metacharacters, operators, quantifiers etc CharacterDescription\\ Marks the next character as either a special character or escapes a literal. For example,...", 
          "datecreated": "Saturday, May 19, 2007 8:36 PM"
        }
      ]
    }, 
    "snippet": "May 19, 2007 ... Cheat sheet for C# regular expressions metacharacters, operators, ... a life saver \nfor me. The samples on Regexlib.com just don't work in .NET.", 
    "htmlSnippet": "May 19, 2007 <b>...</b> Cheat sheet for <b>C# regular expressions</b> metacharacters, operators, ... a life saver <br>\nfor me. The samples on <b>Regexlib</b>.com just don&#39;t work in .<b>NET</b>.", 
    "link": "http://www.mikesdotnetting.com/article/46/c-regular-expressions-cheat-sheet", 
    "cacheId": "tzTE-TRzYkQJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "C# Tutorial 82: Using Regular Expressions (regex or regexp) in C# ...", 
    "displayLink": "www.youtube.com", 
    "htmlTitle": "<b>C# Tutorial</b> 82: Using <b>Regular Expressions</b> (<b>regex</b> or <b>regexp</b>) in <b>C#</b> <b>...</b>", 
    "formattedUrl": "www.youtube.com/watch?v=2mXeSvohG6w", 
    "htmlFormattedUrl": "www.youtube.com/watch?v=2mXeSvohG6w", 
    "pagemap": {
      "videoobject": [
        {
          "isfamilyfriendly": "True", 
          "name": "C# Tutorial 82: Using Regular Expressions (regex or regexp) in C#", 
          "unlisted": "False", 
          "url": "http://www.youtube.com/watch?v=2mXeSvohG6w", 
          "datepublished": "2013-06-14", 
          "regionsallowed": "AD,AE,AF,AG,AI,AL,AM,AO,AQ,AR,AS,AT,AU,AW,AX,AZ,BA,BB,BD,BE,BF,BG,BH,BI,BJ,BL,BM,BN,BO,BQ,BR,BS,BT,BV,BW,BY,BZ,CA,CC,CD,CF,CG,CH,CI,CK,CL,CM,CN,CO,CR,CU,CV,CW,CX,CY,CZ,DE,DJ,DK,DM,DO,DZ,EC,EE,EG,EH...", 
          "channelid": "UCs6nmQViDpUw0nuIx9c_WvA", 
          "videoid": "2mXeSvohG6w", 
          "paid": "False", 
          "height": "360", 
          "playertype": "HTML5 Flash", 
          "width": "480", 
          "interactioncount": "14442", 
          "duration": "PT17M37S", 
          "embedurl": "https://www.youtube.com/embed/2mXeSvohG6w", 
          "thumbnailurl": "http://i.ytimg.com/vi/2mXeSvohG6w/hqdefault.jpg", 
          "genre": "Education", 
          "description": "Searches related to Regular expression with c# c# regular expression tester Regex Class Regular Expression Language Using Regular Expressions with .NET - C# ..."
        }
      ], 
      "metatags": [
        {
          "og:url": "http://www.youtube.com/watch?v=2mXeSvohG6w", 
          "al:web:url": "http://www.youtube.com/watch?v=2mXeSvohG6w&feature=applinks", 
          "al:ios:app_name": "YouTube", 
          "og:site_name": "YouTube", 
          "al:ios:app_store_id": "544007664", 
          "title": "C# Tutorial 82: Using Regular Expressions (regex or regexp) in C#", 
          "og:video:type": "text/html", 
          "al:android:package": "com.google.android.youtube", 
          "og:type": "video", 
          "og:description": "Searches related to Regular expression with c# c# regular expression tester Regex Class Regular Expression Language Using Regular Expressions with .NET - C# ...", 
          "og:video:secure_url": "https://www.youtube.com/embed/2mXeSvohG6w", 
          "og:video:height": "360", 
          "og:video:tag": "Regular Expressions", 
          "og:title": "C# Tutorial 82: Using Regular Expressions (regex or regexp) in C#", 
          "al:android:url": "vnd.youtube://www.youtube.com/watch?v=2mXeSvohG6w&feature=applinks", 
          "al:android:app_name": "YouTube", 
          "og:image": "http://i.ytimg.com/vi/2mXeSvohG6w/hqdefault.jpg", 
          "og:video:url": "https://www.youtube.com/embed/2mXeSvohG6w", 
          "og:video:width": "480", 
          "al:ios:url": "vnd.youtube://www.youtube.com/watch?v=2mXeSvohG6w&feature=applinks"
        }
      ], 
      "imageobject": [
        {
          "url": "http://i.ytimg.com/vi/2mXeSvohG6w/hqdefault.jpg", 
          "width": "480", 
          "height": "360"
        }
      ], 
      "person": [
        {
          "url": "http://www.youtube.com/user/ProgrammingKnowledge"
        }, 
        {
          "url": "https://plus.google.com/106132176833207976203"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "259", 
          "src": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRuR-r3ece5-79H4ZBgi_IOjeejqqQPG486nLMcgnbKV5AlG4nbMDlP_yY", 
          "height": "194"
        }
      ], 
      "cse_image": [
        {
          "src": "http://i.ytimg.com/vi/2mXeSvohG6w/hqdefault.jpg"
        }
      ]
    }, 
    "snippet": "Jun 14, 2013 ... c# regular expression tester. Regex Class Regular Expression Language Using \nRegular Expressions with .NET - C# C# Regex Validation Rule\u00a0...", 
    "htmlSnippet": "Jun 14, 2013 <b>...</b> <b>c# regular expression</b> tester. <b>Regex</b> Class <b>Regular Expression</b> Language Using <br>\n<b>Regular Expressions</b> with .<b>NET</b> - <b>C# C# Regex</b> Validation Rule&nbsp;...", 
    "link": "http://www.youtube.com/watch?v=2mXeSvohG6w", 
    "cacheId": "nUPG9wOLfKoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "C# Regular Expressions - O'Reilly Media", 
    "displayLink": "www.oreilly.com", 
    "htmlTitle": "<b>C# Regular Expressions</b> - O&#39;Reilly Media", 
    "formattedUrl": "www.oreilly.com/pub/a//windows/.../csharp-regular-expressions.html", 
    "htmlFormattedUrl": "www.oreilly.com/pub/a//windows/.../csharp-<b>regular-expressions</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "twitter:site": "@OReillyMedia", 
          "fb:page_id": "15137500430", 
          "twitter:card": "summary", 
          "author": "Brad Merrill", 
          "search_date": "2001-01-18", 
          "site": "O'Reilly Media Inc.", 
          "twitter:title": "C# Regular Expressions", 
          "pagename": "C# Regular Expressions", 
          "date": "Jan. 18, 2001", 
          "twitter:url": "http://archive.oreilly.com/pub/a/windows/archive/csharp-regular-expressions.html"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "144", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcShU8km35zv0C8ZPaMMdXjMHj407JJ8qLA8HX2JxxtNAo7Niz0seIzdiEop", 
          "height": "216"
        }
      ], 
      "cse_image": [
        {
          "src": "http://covers.oreilly.com/images/9780596000790/cat.gif"
        }
      ]
    }, 
    "snippet": "I'm also presuming a basic knowledge of C# syntax and the .NET Framework \nenvironment. If you are new to regular expressions, I suggest starting with some \nof\u00a0...", 
    "htmlSnippet": "I&#39;m also presuming a basic knowledge of <b>C#</b> syntax and the .<b>NET</b> Framework <br>\nenvironment. If you are new to <b>regular expressions</b>, I suggest starting with some <br>\nof&nbsp;...", 
    "link": "http://www.oreilly.com/pub/a//windows/archive/csharp-regular-expressions.html", 
    "cacheId": "8n7LjtLSXegJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP: Examples - Manual", 
    "displayLink": "php.net", 
    "htmlTitle": "<b>PHP</b>: <b>Examples</b> - Manual", 
    "formattedUrl": "php.net/manual/en/regex.examples.php", 
    "htmlFormattedUrl": "<b>php</b>.net/manual/en/<b>regex</b>.<b>examples</b>.<b>php</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "Example #1 Regular Expression Examples. <?php // Returns true if \"abc\" is ... \nReturns true if \"abc\" is found at the beginning of $string. ereg(\"^abc\", $string);", 
    "htmlSnippet": "<b>Example</b> #1 <b>Regular Expression Examples</b>. &lt;?<b>php</b> // Returns true if &quot;abc&quot; is ... <br>\nReturns true if &quot;abc&quot; is found at the beginning of $<b>string</b>. ereg(&quot;^abc&quot;, $<b>string</b>);", 
    "link": "http://php.net/manual/en/regex.examples.php", 
    "cacheId": "IoBWh4vfzl4J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP regular expression tutorial", 
    "displayLink": "www.phpf1.com", 
    "htmlTitle": "<b>PHP regular expression tutorial</b>", 
    "formattedUrl": "www.phpf1.com/tutorial/php-regular-expression.html", 
    "htmlFormattedUrl": "www.<b>php</b>f1.com/<b>tutorial</b>/<b>php</b>-<b>regular-expression</b>.html", 
    "snippet": "Historically regular expressions were originally designed to help working with \nstrings under Unix systems. Using regular expressions you can easy find a \npattern\u00a0...", 
    "htmlSnippet": "Historically <b>regular expressions</b> were originally designed to help working with <br>\n<b>strings</b> under Unix systems. Using <b>regular expressions</b> you can easy find a <br>\npattern&nbsp;...", 
    "link": "http://www.phpf1.com/tutorial/php-regular-expression.html", 
    "cacheId": "GEKPxt91Bf0J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "15 PHP regular expressions for web developers | CatsWhoCode.com", 
    "displayLink": "www.catswhocode.com", 
    "htmlTitle": "15 <b>PHP regular expressions</b> for web developers | CatsWhoCode.com", 
    "formattedUrl": "www.catswhocode.com/.../15-php-regular-expressions-for-web-developers", 
    "htmlFormattedUrl": "www.catswhocode.com/.../15-<b>php</b>-<b>regular-expressions</b>-for-web-developers", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width; initial-scale=1.0; maximum-scale=1.0;"
        }
      ]
    }, 
    "snippet": "Jul 27, 2009 ... ^foo, \u201cfoo\u201d at the start of a string ... PHP regular expression functions. Function, \nDescription. preg_match(), The preg_match() function searches string for pattern, \n.... For example, you could easily match <div id=\u201dheader\u201d>.", 
    "htmlSnippet": "Jul 27, 2009 <b>...</b> ^foo, \u201cfoo\u201d at the start of a <b>string</b> ... <b>PHP regular expression</b> functions. Function, <br>\nDescription. preg_match(), The preg_match() function searches <b>string</b> for pattern, <br>\n.... For <b>example</b>, you could easily match &lt;div id=\u201dheader\u201d&gt;.", 
    "link": "http://www.catswhocode.com/blog/15-php-regular-expressions-for-web-developers", 
    "cacheId": "L9kwHoHs4tIJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP Tutorial- Regular Expressions Simple Usage", 
    "displayLink": "www.trans4mind.com", 
    "htmlTitle": "<b>PHP Tutorial</b>- <b>Regular Expressions</b> Simple Usage", 
    "formattedUrl": "www.trans4mind.com/.../phpTutorial/regExpressionsSimpleUsage.htm", 
    "htmlFormattedUrl": "www.trans4mind.com/.../<b>phpTutorial</b>/<b>regExp</b>ressionsSimpleUsage.htm", 
    "pagemap": {
      "metatags": [
        {
          "javascript": "jsEditor", 
          "viewport": "width=device-width, initial-scale=0.85"
        }
      ]
    }, 
    "snippet": "... The caret (^) is used to match strings beginning with certain characters. So /^[\nA-Z]/ matches any capital letter\u00a0...", 
    "htmlSnippet": "... The caret (^) is used to match <b>strings</b> beginning with certain characters. So /^[<br>\nA-Z]/ matches any capital letter&nbsp;...", 
    "link": "http://www.trans4mind.com/personal_development/phpTutorial/regExpressionsSimpleUsage.htm", 
    "cacheId": "GT1Uh9m82wUJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "c# regex matches example - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>c# regex</b> matches example - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/.../c-sharp-regex-matches-example", 
    "htmlFormattedUrl": "stackoverflow.com/questions/.../c-sharp-<b>regex</b>-matches-example", 
    "pagemap": {
      "answer": [
        {
          "text": "So you're trying to grab numeric values that are preceded by the token \"%download%#\"? Try this pattern: (?<=%download%#)\\d+ That should work. I don't think # or % are special characters in...", 
          "upvotecount": "20"
        }, 
        {
          "text": "All the other responses I see are fine, but C# has support for named groups! I'd use the following code: const string input = \"Lorem ipsum dolor sit %download%#456 amet, consectetur adipiscing...", 
          "upvotecount": "16"
        }, 
        {
          "text": "It looks like most of post here described what you need here. However - something you might need more complex behavior - depending on what you're parsing. In your case it might be so that you...", 
          "upvotecount": "1"
        }, 
        {
          "text": "This pattern should work: #\\d foreach(var match in System.Text.RegularExpressions.RegEx.Matches(input, \"#\\d\")) { Console.WriteLine(match.Value); } (I'm not in front of Visual Studio, but even...", 
          "upvotecount": "0"
        }, 
        {
          "text": "Regex regex = new Regex(\"%download#(\\\\d+?)%\", RegexOptions.SingleLine); Matches m = regex.Matches(input); I think will do the trick (not tested).", 
          "upvotecount": "0"
        }, 
        {
          "text": "public void match2() { string input = \"%download%#893434\"; Regex word = new Regex(@\"\\d+\"); Match m = word.Match(input); Console.WriteLine(m.Value); }", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "Am trying to get values using following text, any thoughts this can be done with Regex? Input: Lorem ipsum dolor sit %download%#456 amet, consectetur adipiscing %download%#3434 elit. Duis non nunc...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "c# regex matches example", 
          "title": "c# regex matches example"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/4740984/c-sharp-regex-matches-example", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/4740984/c-sharp-regex-matches-example", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/4740984/c-sharp-regex-matches-example", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "Am trying to get values using following text, any thoughts this can be done with Regex?  Input: Lorem ipsum dolor sit %download%#456 amet, consectetur adipiscing %download%#3434 elit. Duis non nunc...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/4740984/c-sharp-regex-matches-example", 
          "twitter:card": "summary", 
          "twitter:title": "c# regex matches example", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "6", 
          "text": "Am trying to get values using following text, any thoughts this can be done with Regex? Input: Lorem ipsum dolor sit %download%#456 amet, consectetur adipiscing %download%#3434 elit. Duis non...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "c# regex matches example", 
          "upvotecount": "13"
        }
      ]
    }, 
    "snippet": "For an excellent regex reference and tutorial, check out regular-expressions.info . \n... All the other responses I see are fine, but C# has support for named groups! ... \nstatic void Main(string[] args) { Regex expression = new\u00a0...", 
    "htmlSnippet": "For an excellent <b>regex</b> reference and <b>tutorial</b>, check out <b>regular-expressions</b>.info . <br>\n... All the other responses I see are fine, but <b>C#</b> has support for named groups! ... <br>\nstatic void Main(<b>string</b>[] args) { <b>Regex</b> expression = new&nbsp;...", 
    "link": "http://stackoverflow.com/questions/4740984/c-sharp-regex-matches-example", 
    "cacheId": "C87TsDZsgz8J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "C# Regex File Tutorial", 
    "displayLink": "www.dotnetperls.com", 
    "htmlTitle": "<b>C# Regex</b> File <b>Tutorial</b>", 
    "formattedUrl": "www.dotnetperls.com/regex-file", 
    "htmlFormattedUrl": "www.dotnetperls.com/<b>regex</b>-file", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width,initial-scale=1"
        }
      ]
    }, 
    "snippet": "Oct 16, 2008 ... First, to use a regular expression on a file you must first read in the file into a \nstring in the C# language. Here's a console program that opens a\u00a0...", 
    "htmlSnippet": "Oct 16, 2008 <b>...</b> First, to use a <b>regular expression</b> on a file you must first read in the file into a <br>\n<b>string</b> in the <b>C#</b> language. Here&#39;s a console program that opens a&nbsp;...", 
    "link": "http://www.dotnetperls.com/regex-file", 
    "cacheId": "rwJNlkKaO0kJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Unix Regular Expressions with SED", 
    "displayLink": "www.tutorialspoint.com", 
    "htmlTitle": "Unix <b>Regular Expressions</b> with <b>SED</b>", 
    "formattedUrl": "www.tutorialspoint.com/unix/unix-regular-expressions.htm", 
    "htmlFormattedUrl": "www.<b>tutorial</b>spoint.com/unix/unix-<b>regular-expressions</b>.htm", 
    "pagemap": {
      "metatags": [
        {
          "fb:app_id": "471319149685276", 
          "viewport": "width=device-width,initial-scale=1.0,user-scalable=yes", 
          "author": "tutorialspoint.com"
        }
      ]
    }, 
    "snippet": "Regular expressions are used by several different Unix commands, including ed, \nsed, awk, grep, and, to a more limited extent, vi. This tutorial would teach you\u00a0...", 
    "htmlSnippet": "<b>Regular expressions</b> are used by several different Unix <b>commands</b>, including ed, <br>\n<b>sed</b>, <b>awk</b>, <b>grep</b>, and, to a more limited extent, vi. This <b>tutorial</b> would teach you&nbsp;...", 
    "link": "http://www.tutorialspoint.com/unix/unix-regular-expressions.htm", 
    "cacheId": "gYZbynGGJjUJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Unix Sed Tutorial: Find and Replace Text Inside a File Using RegEx", 
    "displayLink": "www.thegeekstuff.com", 
    "htmlTitle": "Unix <b>Sed Tutorial</b>: Find and <b>Replace</b> Text Inside a File Using <b>RegEx</b>", 
    "formattedUrl": "www.thegeekstuff.com/.../unix-sed-tutorial-replace-text-inside-a-file-using- substitute-command/", 
    "htmlFormattedUrl": "www.thegeekstuff.com/.../unix-<b>sed</b>-<b>tutorial</b>-<b>replace</b>-text-inside-a-file-using- substitute-<b>command</b>/", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "article": [
        {
          "articlebody": "This article is part of on-going Unix Sed Tutorial series. In previous articles, we discussed about sed print operation and sed delete operation. In this article let us review how to use sed...", 
          "name": "Unix Sed Tutorial: Find and Replace Text Inside a File Using RegEx", 
          "author": "Sasikala", 
          "datepublished": "2009-09-30", 
          "keywords": "Tagged as: Linux Sed Command, Sed Examples, Sed Tips and Tricks, Unix Sed Command, Unix Sed Substitution", 
          "datemodified": "2013-03-18"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "240", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQKoPUKx2O1clemHRll3InJCwAC-tJJ9XY3J_iGclQ9FPXDIrpwQwbsYtA", 
          "height": "180"
        }
      ], 
      "cse_image": [
        {
          "src": "http://static.thegeekstuff.com/wp-content/uploads/2009/09/unix-sed-tutorial-substitute-operation-300x225.png"
        }
      ]
    }, 
    "snippet": "Sep 30, 2009 ... This article is part of on-going Unix Sed Tutorial series. In previous ... It was a \nbash shell escape and had nothing to do with sed. The sed\u00a0...", 
    "htmlSnippet": "Sep 30, 2009 <b>...</b> This article is part of on-going Unix <b>Sed Tutorial</b> series. In previous ... It was a <br>\n<b>bash</b> shell escape and had nothing to do with <b>sed</b>. The <b>sed</b>&nbsp;...", 
    "link": "http://www.thegeekstuff.com/2009/09/unix-sed-tutorial-replace-text-inside-a-file-using-substitute-command/", 
    "cacheId": "GSKu0gTmUJwJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions - sed, a stream editor", 
    "displayLink": "www.gnu.org", 
    "htmlTitle": "<b>Regular Expressions</b> - <b>sed</b>, a stream editor", 
    "formattedUrl": "www.gnu.org/software/sed/manual/html.../Regular-Expressions.html", 
    "htmlFormattedUrl": "www.gnu.org/software/<b>sed</b>/manual/html.../<b>Regular-Expressions</b>.html", 
    "snippet": "To know how to use sed , people should understand regular expressions ... A \nregular expression is a pattern that is matched against a subject string from left to\n\u00a0...", 
    "htmlSnippet": "To know how to use <b>sed</b> , people should understand <b>regular expressions</b> ... A <br>\n<b>regular expression</b> is a pattern that is matched against a subject string from left to<br>\n&nbsp;...", 
    "link": "http://www.gnu.org/software/sed/manual/html_node/Regular-Expressions.html", 
    "cacheId": "cDGBY9mAS-UJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Sed - An Introduction and Tutorial", 
    "displayLink": "www.grymoire.com", 
    "htmlTitle": "<b>Sed</b> - An Introduction and <b>Tutorial</b>", 
    "formattedUrl": "www.grymoire.com/Unix/Sed.html", 
    "htmlFormattedUrl": "www.grymoire.com/Unix/<b>Sed</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1", 
          "author": "Bruce Barnett"
        }
      ]
    }, 
    "snippet": "Apr 23, 2015 ... Delimiter one Regular Expression Pattern Search Pattern ONE Replacement \nstring ..... Sed has more commands that make grep unnecessary.", 
    "htmlSnippet": "Apr 23, 2015 <b>...</b> Delimiter one <b>Regular Expression</b> Pattern Search Pattern ONE Replacement <br>\nstring ..... <b>Sed</b> has more <b>commands</b> that make <b>grep</b> unnecessary.", 
    "link": "http://www.grymoire.com/Unix/Sed.html", 
    "cacheId": "NufLpMpJhxkJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "linux - Print RegEx matches using SED in bash - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "linux - Print <b>RegEx</b> matches using <b>SED</b> in <b>bash</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/.../print-regex-matches-using-sed-in-bash", 
    "htmlFormattedUrl": "stackoverflow.com/questions/.../print-<b>regex</b>-matches-using-<b>sed</b>-in-<b>bash</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "Nothing wrong with good old grep here. grep -E -o 'finalNumber=\"[0-9]+\"' file.xml | grep -E -o '[0-9]+' Use -E for extended regular expressions, and -o to print only the matching part.", 
          "upvotecount": "5"
        }, 
        {
          "text": "Though you already select an answer, here is a way you can do in pure sed: sed -n 's/^.*finalNumber=\"\\([[:digit:]]\\+\\)\".*$/\\1/p' <test Output: 28 This replaces the entire line by the match...", 
          "upvotecount": "3"
        }, 
        {
          "text": "sed does not support look-ahead assertions. Perl does, though: perl -ne 'print $1 if /(?<=finalNumber=\")(.*?)(?=\")/'", 
          "upvotecount": "1"
        }, 
        {
          "text": "As I understand, there is no need to use look-aheads here. Try this one sed -n '/finalNumber=\"[[:digit:]]\\+\"/p'", 
          "upvotecount": "0"
        }, 
        {
          "text": "This might work for you (GNU sed): sed -r 's/.*finalNumber=\"([^\"]*)\".*/\\1/' file", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I have an XML file, the file is made up of one line. What I am trying to do is extract the \"finalNumber\" attribute value from the file via Putty. Rather than having to download a copy and search u...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Print RegEx matches using SED in bash", 
          "title": "Print RegEx matches using SED in bash"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/14479535/print-regex-matches-using-sed-in-bash", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/14479535/print-regex-matches-using-sed-in-bash", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/14479535/print-regex-matches-using-sed-in-bash", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I have an XML file, the file is made up of one line.  What I am trying to do is extract the \"finalNumber\" attribute value from the file via Putty. Rather than having to download a copy and search u...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/14479535/print-regex-matches-using-sed-in-bash", 
          "twitter:card": "summary", 
          "twitter:title": "Print RegEx matches using SED in bash", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "5", 
          "text": "I have an XML file, the file is made up of one line. What I am trying to do is extract the \"finalNumber\" attribute value from the file via Putty. Rather than having to download a copy and search...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Print RegEx matches using SED in bash", 
          "upvotecount": "2"
        }
      ]
    }, 
    "snippet": "I've built up a regular expression that I've tested on an On-line Tool, and tried \nusing it within a sed command to duplicate grep functionality.", 
    "htmlSnippet": "I&#39;ve built up a <b>regular expression</b> that I&#39;ve tested on an On-line Tool, and tried <br>\nusing it within a <b>sed command</b> to duplicate <b>grep</b> functionality.", 
    "link": "http://stackoverflow.com/questions/14479535/print-regex-matches-using-sed-in-bash", 
    "cacheId": "jebsViEHmRUJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Sed by Example, Part 2", 
    "displayLink": "www.funtoo.org", 
    "htmlTitle": "<b>Sed</b> by <b>Example</b>, Part 2", 
    "formattedUrl": "www.funtoo.org/Sed_by_Example,_Part_2", 
    "htmlFormattedUrl": "www.funtoo.org/<b>Sed</b>_by_<b>Example</b>,_Part_2", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width"
        }
      ]
    }, 
    "snippet": "Dec 28, 2014 ... Using it, we can replace a particular string or matched regular expression with \nanother string. Here's an example of the most basic use of this\u00a0...", 
    "htmlSnippet": "Dec 28, 2014 <b>...</b> Using it, we can <b>replace</b> a particular string or matched <b>regular expression</b> with <br>\nanother string. Here&#39;s an <b>example</b> of the most basic use of this&nbsp;...", 
    "link": "http://www.funtoo.org/Sed_by_Example,_Part_2", 
    "cacheId": "p-PszLWg33AJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Sed Tutorial", 
    "displayLink": "www.panix.com", 
    "htmlTitle": "<b>Sed Tutorial</b>", 
    "formattedUrl": "www.panix.com/~elflord/unix/sed.html", 
    "htmlFormattedUrl": "www.panix.com/~elflord/unix/<b>sed</b>.html", 
    "snippet": "It is assumed that the reader is familiar with regular expressions. If this is not the \ncase, read the grep tutorial which includes information on regular expressions.", 
    "htmlSnippet": "It is assumed that the reader is familiar with <b>regular expressions</b>. If this is not the <br>\ncase, read the <b>grep tutorial</b> which includes information on <b>regular expressions</b>.", 
    "link": "http://www.panix.com/~elflord/unix/sed.html", 
    "cacheId": "u7V17YgojnQJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "regular expression - Using sed to find and replace complex string ...", 
    "displayLink": "unix.stackexchange.com", 
    "htmlTitle": "<b>regular expression</b> - Using <b>sed</b> to find and <b>replace</b> complex string <b>...</b>", 
    "formattedUrl": "unix.stackexchange.com/.../using-sed-to-find-and-replace-complex-string- preferrably-with-regex", 
    "htmlFormattedUrl": "unix.stackexchange.com/.../using-<b>sed</b>-to-find-and-<b>replace</b>-complex-string- preferrably-with-<b>regex</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "sed -i -E \"s/(<username>.+)name(.+<\\/username>)/\\1something\\2/\" file.xml This is, I think, what you're looking for. Explanation: parenthesises in the first part define groups (strings in fact)...", 
          "upvotecount": "7"
        }, 
        {
          "text": "sed -e '/username/s/CDATA\\[name\\]/CDATA\\[something\\]/' \\ -e '/password/s/CDATA\\[password\\]/CDATA\\[somethingelse\\]/' \\ -e '/dbname/s/CDATA\\[name\\]/CDATA\\[somethingdifferent\\]/' file.txt The...", 
          "upvotecount": "4"
        }, 
        {
          "text": "If sed is not a hard requirement, better use a dedicated tool instead. If your file is valid XML (not just those 3 XML-looking tags), then you can use XMLStarlet: xml ed -P -O -L \\ -u '//username/t...", 
          "upvotecount": "2"
        }, 
        {
          "text": "For replace the \"name\" word with the \"something\" word, use: sed \"s/\\(<username><\\!\\[[A-Z]*\\[\\)name\\]/\\1something/g\" file.xml That is going to replace all the occurrences of the specified word....", 
          "upvotecount": "1"
        }, 
        {
          "text": "You need to quote \\[.*^$/ in the regular expression part of the s command and \\&/ in the replacement part, plus newlines. The regular expression is a basic regular expression, and in addition...", 
          "upvotecount": "1"
        }, 
        {
          "text": "$ sed -e '1s/name/something/2' \\ -e '3s/name/somethingdifferent/2' \\ -e 's/password/somethingelse/2' sample.xml You can simply use addresses as in the number preceding \"s\" which indicates the...", 
          "upvotecount": "1"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a", 
          "description": "I have a file with the following contents: <username><![CDATA[name]]></username> <password><![CDATA[password]]></password>", 
          "primaryimageofpage": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a", 
          "name": "Using sed to find and replace complex string (preferrably with regex)", 
          "title": "Using sed to find and replace complex string (preferrably with regex)"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://unix.stackexchange.com/questions/78625/using-sed-to-find-and-replace-complex-string-preferrably-with-regex", 
          "twitter:app:url:iphone": "se-zaphod://unix.stackexchange.com/questions/78625/using-sed-to-find-and-replace-complex-string-preferrably-with-regex", 
          "twitter:app:url:ipad": "se-zaphod://unix.stackexchange.com/questions/78625/using-sed-to-find-and-replace-complex-string-preferrably-with-regex", 
          "twitter:app:country": "US", 
          "twitter:domain": "unix.stackexchange.com", 
          "twitter:description": "I have a file with the following contents:  &lt;username&gt;&lt;![CDATA[name]]&gt;&lt;/username&gt; &lt;password&gt;&lt;![CDATA[password]]&gt;&lt;/password&gt;", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:title": "Using sed to find and replace complex string (preferrably with regex)", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://unix.stackexchange.com/questions/78625/using-sed-to-find-and-replace-complex-string-preferrably-with-regex", 
          "twitter:card": "summary", 
          "twitter:site": "@StackUnix", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "6", 
          "text": "I have a file with the following contents: <username><![CDATA[name]]></username> <password><![CDATA[password]]></password> <dbname><![CDATA[name]]></dbname> and I need to make a script that...", 
          "image": "http://cdn.sstatic.net/unix/img/apple-touch-icon.png?v=5cf7fe716a89", 
          "name": "Using sed to find and replace complex string (preferrably with regex)", 
          "upvotecount": "5"
        }
      ]
    }, 
    "snippet": "Jun 7, 2013 ... Ideally, I'd love to be able to use regex to just match the two \"username\" \noccurrences and replace only the \"name\". Something like this but with\u00a0...", 
    "htmlSnippet": "Jun 7, 2013 <b>...</b> Ideally, I&#39;d love to be able to use <b>regex</b> to just match the two &quot;username&quot; <br>\noccurrences and <b>replace</b> only the &quot;name&quot;. Something like this but with&nbsp;...", 
    "link": "http://unix.stackexchange.com/questions/78625/using-sed-to-find-and-replace-complex-string-preferrably-with-regex", 
    "cacheId": "vsfJhbSmUhYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "sed, a stream editor", 
    "displayLink": "www.gnu.org", 
    "htmlTitle": "<b>sed</b>, a stream editor", 
    "formattedUrl": "https://www.gnu.org/software/sed/manual/sed.html", 
    "htmlFormattedUrl": "https://www.gnu.org/software/<b>sed</b>/manual/<b>sed</b>.html", 
    "snippet": "Centering lines; Increment a number; Rename files to lower case; Print bash .... \nThis also matches the regular expression regexp , but allows one to use a\u00a0...", 
    "htmlSnippet": "Centering lines; Increment a number; Rename files to lower case; Print <b>bash</b> .... <br>\nThis also matches the <b>regular expression regexp</b> , but allows one to use a&nbsp;...", 
    "link": "https://www.gnu.org/software/sed/manual/sed.html", 
    "cacheId": "6pLNMP_1ve0J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "The GNU sed stream editor", 
    "displayLink": "tldp.org", 
    "htmlTitle": "The GNU <b>sed</b> stream editor", 
    "formattedUrl": "tldp.org/LDP/Bash-Beginners-Guide/html/chap_05.html", 
    "htmlFormattedUrl": "tldp.org/LDP/<b>Bash</b>-Beginners-Guide/html/chap_05.html", 
    "snippet": "Introduction. 5.1.1. What is sed? 5.1.2. sed commands ... 5.3.1. Reading sed \ncommands from a file; 5.3.2. ... Regular expressions and stream editing. Using \nsed\u00a0...", 
    "htmlSnippet": "Introduction. 5.1.1. What is <b>sed</b>? 5.1.2. <b>sed commands</b> ... 5.3.1. Reading <b>sed</b> <br>\n<b>commands</b> from a file; 5.3.2. ... <b>Regular expressions</b> and stream editing. Using <br>\n<b>sed</b>&nbsp;...", 
    "link": "http://tldp.org/LDP/Bash-Beginners-Guide/html/chap_05.html", 
    "cacheId": "vTNxuWoibiYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expression HOWTO \u2014 Python 2.7.10 documentation", 
    "displayLink": "docs.python.org", 
    "htmlTitle": "<b>Regular Expression</b> HOWTO \u2014 <b>Python</b> 2.7.10 documentation", 
    "formattedUrl": "https://docs.python.org/2/howto/regex.html", 
    "htmlFormattedUrl": "https://docs.<b>python</b>.org/2/howto/<b>regex</b>.html", 
    "snippet": "For example, the regular expression test will match the string test exactly. (You \ncan enable a case-insensitive mode that would let this RE match Test or TEST as\n\u00a0...", 
    "htmlSnippet": "For <b>example</b>, the <b>regular expression</b> test will match the <b>string</b> test exactly. (You <br>\ncan enable a case-insensitive mode that would let this RE match Test or TEST as<br>\n&nbsp;...", 
    "link": "https://docs.python.org/2/howto/regex.html", 
    "cacheId": "LsNA58NECI0J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Python - Regular Expressions tutorial", 
    "displayLink": "www.tutorialspoint.com", 
    "htmlTitle": "<b>Python</b> - <b>Regular Expressions tutorial</b>", 
    "formattedUrl": "www.tutorialspoint.com/python/python_reg_expressions.htm", 
    "htmlFormattedUrl": "www.<b>tutorial</b>spoint.com/<b>python</b>/<b>python</b>_reg_expressions.htm", 
    "pagemap": {
      "metatags": [
        {
          "fb:app_id": "471319149685276", 
          "viewport": "width=device-width,initial-scale=1.0,user-scalable=yes", 
          "author": "tutorialspoint.com"
        }
      ]
    }, 
    "snippet": "Python Regular Expressions - Learning Python in simple and easy steps : A \nbeginner's ... This function attempts to match RE pattern to string with optional \nflags.", 
    "htmlSnippet": "<b>Python Regular Expressions</b> - Learning <b>Python</b> in simple and easy steps : A <br>\nbeginner&#39;s ... This function attempts to match RE pattern to <b>string</b> with optional <br>\nflags.", 
    "link": "http://www.tutorialspoint.com/python/python_reg_expressions.htm", 
    "cacheId": "wu47Z2-ThVwJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Python Regular Expressions | Google for Education | Google ...", 
    "displayLink": "developers.google.com", 
    "htmlTitle": "<b>Python Regular Expressions</b> | Google for Education | Google <b>...</b>", 
    "formattedUrl": "https://developers.google.com/edu/python/regular-expressions", 
    "htmlFormattedUrl": "https://developers.google.com/edu/<b>python</b>/<b>regular-expressions</b>", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "https://developers.google.com/edu/python/regular-expressions", 
          "og:type": "website", 
          "og:site_name": "Google Developers", 
          "og:locale": "en", 
          "og:title": "Python Regular Expressions", 
          "xsrf_token": "T42NvySXESHxz1Yuonzew9zs8nbtLfpRE8c9XiOvSVI6MTQzNjA2NTM4MjM2MDk2MA", 
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "article": [
        {
          "articlebody": "Regular expressions are a powerful language for matching text patterns. This page gives a basic introduction to regular expressions themselves sufficient for our Python exercises and shows...", 
          "name": "Python Regular Expressions", 
          "datepublished": "2012-12-13T01:16:45.614230"
        }
      ]
    }, 
    "snippet": "Dec 13, 2012 ... Contents; Basic Patterns; Basic Examples; Repetition ... The 'r' at the start of the \npattern string designates a python \"raw\" string which passes\u00a0...", 
    "htmlSnippet": "Dec 13, 2012 <b>...</b> Contents; Basic Patterns; Basic <b>Examples</b>; Repetition ... The &#39;r&#39; at the start of the <br>\npattern <b>string</b> designates a <b>python</b> &quot;raw&quot; <b>string</b> which passes&nbsp;...", 
    "link": "https://developers.google.com/edu/python/regular-expressions", 
    "cacheId": "3PQaqyKvUz4J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "7 Python Regular Expressions Examples \u2013 Re Match Search FindAll", 
    "displayLink": "www.thegeekstuff.com", 
    "htmlTitle": "7 <b>Python Regular Expressions Examples</b> \u2013 Re Match Search FindAll", 
    "formattedUrl": "www.thegeekstuff.com/2014/07/python-regex-examples/", 
    "htmlFormattedUrl": "www.thegeekstuff.com/2014/07/<b>python</b>-<b>regex</b>-<b>examples</b>/", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "article": [
        {
          "articlebody": "Tweet Regular expressions as a concept is not exclusive to Python at all. Python, however, does have some nuances when it come to working with regular expressions. This article is part of a...", 
          "name": "7 Python Regular Expressions Examples \u2013 Re Match Search FindAll", 
          "author": "Aaron Tabor", 
          "datepublished": "2014-07-14", 
          "keywords": "Tagged as: Python findall RegEx, Python Match Exact String, Python Match Example, Python Match Group Example, Python Match object, Python Match Pattern, Python Match RegEx, Python Match String,...", 
          "datemodified": "2014-07-15"
        }
      ]
    }, 
    "snippet": "Jul 14, 2014 ... Regular expressions as a concept is not exclusive to Python at all. ... of the string, \nso searching for 'cat' in our example string finds a match:", 
    "htmlSnippet": "Jul 14, 2014 <b>...</b> <b>Regular expressions</b> as a concept is not exclusive to <b>Python</b> at all. ... of the <b>string</b>, <br>\nso searching for &#39;cat&#39; in our <b>example string</b> finds a match:", 
    "link": "http://www.thegeekstuff.com/2014/07/python-regex-examples/", 
    "cacheId": "5Rs_OYZ1oGsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Chapter 7. Regular Expressions", 
    "displayLink": "www.diveintopython.net", 
    "htmlTitle": "Chapter 7. <b>Regular Expressions</b>", 
    "formattedUrl": "www.diveintopython.net/regular_expressions/", 
    "htmlFormattedUrl": "www.diveinto<b>python</b>.net/<b>regular_expressions</b>/", 
    "snippet": "Python from novice to pro. ... Regular expressions are a powerful and \nstandardized way of searching, replacing, and parsing text with complex patterns \nof characters. ... Strings have methods for searching (index, find, and count), \nreplacing\u00a0...", 
    "htmlSnippet": "<b>Python</b> from novice to pro. ... <b>Regular expressions</b> are a powerful and <br>\nstandardized way of searching, replacing, and parsing text with complex patterns <br>\nof characters. ... <b>Strings</b> have methods for searching (index, find, and count), <br>\nreplacing&nbsp;...", 
    "link": "http://www.diveintopython.net/regular_expressions/", 
    "cacheId": "2eNC1OkOLo4J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Python Tutorial: Regular Expression", 
    "displayLink": "www.python-course.eu", 
    "htmlTitle": "<b>Python Tutorial</b>: <b>Regular Expression</b>", 
    "formattedUrl": "www.python-course.eu/re.php", 
    "htmlFormattedUrl": "www.<b>python</b>-course.eu/re.php", 
    "pagemap": {
      "cse_thumbnail": [
        {
          "width": "292", 
          "src": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcR9vmG5uNGpEevqr7e6KvFEOgbu_bx6Bvv9FMNDngqw3wHXe2GNwXH1AJ8", 
          "height": "173"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.python-course.eu/images/RE.png"
        }
      ]
    }, 
    "snippet": "Feb 12, 2011 ... Introduction into the usage of Regular Expression under Python. ... We check in \nthe following example, if the string \"easily\" is a substring of the\u00a0...", 
    "htmlSnippet": "Feb 12, 2011 <b>...</b> Introduction into the usage of <b>Regular Expression</b> under <b>Python</b>. ... We check in <br>\nthe following <b>example</b>, if the <b>string</b> &quot;easily&quot; is a substring of the&nbsp;...", 
    "link": "http://www.python-course.eu/re.php", 
    "cacheId": "_l9KdO3E7fwJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "re \u2013 Regular Expressions - Python Module of the Week", 
    "displayLink": "pymotw.com", 
    "htmlTitle": "re \u2013 <b>Regular Expressions</b> - <b>Python</b> Module of the Week", 
    "formattedUrl": "pymotw.com/2/re/", 
    "htmlFormattedUrl": "pymotw.com/2/re/", 
    "snippet": "Other languages, such as C, C++, and Python supports regular expressions \nthrough ... This example looks for two literal strings, 'this' and 'that', in a text string.", 
    "htmlSnippet": "Other languages, such as C, C++, and <b>Python</b> supports <b>regular expressions</b> <br>\nthrough ... This <b>example</b> looks for two literal <b>strings</b>, &#39;this&#39; and &#39;that&#39;, in a text <b>string</b>.", 
    "link": "http://pymotw.com/2/re/", 
    "cacheId": "YLRLdTr42CcJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Python Re Match, Search Examples", 
    "displayLink": "www.dotnetperls.com", 
    "htmlTitle": "<b>Python</b> Re Match, Search <b>Examples</b>", 
    "formattedUrl": "www.dotnetperls.com/re", 
    "htmlFormattedUrl": "www.dotnetperls.com/re", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width,initial-scale=1"
        }
      ]
    }, 
    "snippet": "This Python article covers regular expressions and the re module. It uses match \n... So: Search scans through the input string and tries to match at any location.", 
    "htmlSnippet": "This <b>Python</b> article covers <b>regular expressions</b> and the re module. It uses match <br>\n... So: Search scans through the input <b>string</b> and tries to match at any location.", 
    "link": "http://www.dotnetperls.com/re", 
    "cacheId": "fLLpp_xRdNsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Python Tutorial: Regular Expression for Advanced Users", 
    "displayLink": "www.python-course.eu", 
    "htmlTitle": "<b>Python Tutorial</b>: <b>Regular Expression</b> for Advanced Users", 
    "formattedUrl": "www.python-course.eu/re_advanced.php", 
    "htmlFormattedUrl": "www.<b>python</b>-course.eu/re_advanced.php", 
    "pagemap": {
      "cse_thumbnail": [
        {
          "width": "168", 
          "src": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcS2K5p2P3IFd5DbMUlv-6e-awasevk-4qpvcUJ1f9omyF9KzMX5CTN9hNs", 
          "height": "241"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.python-course.eu/images/stairs_green_fog.jpg"
        }
      ]
    }, 
    "snippet": "Second Part of our Introduction into Regular Expression under Python. ... We \nwant to split the string in the following little example using semicolons as\u00a0...", 
    "htmlSnippet": "Second Part of our Introduction into <b>Regular Expression</b> under <b>Python</b>. ... We <br>\nwant to split the <b>string</b> in the following little <b>example</b> using semicolons as&nbsp;...", 
    "link": "http://www.python-course.eu/re_advanced.php", 
    "cacheId": "0tUpffN3J6wJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions in Python", 
    "displayLink": "www.pythonforbeginners.com", 
    "htmlTitle": "<b>Regular Expressions</b> in <b>Python</b>", 
    "formattedUrl": "www.pythonforbeginners.com/.../regular-expressions-in-python/", 
    "htmlFormattedUrl": "www.<b>python</b>forbeginners.com/.../<b>regular-expressions</b>-in-<b>python</b>/", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://www.pythonforbeginners.com/systems-programming/regular-expressions-in-python/", 
          "og:type": "website", 
          "og:site_name": "Python For Beginners", 
          "og:locale": "en_US", 
          "og:title": "Regular Expressions in Python", 
          "viewport": "width=device-width"
        }
      ]
    }, 
    "snippet": "Feb 18, 2013 ... Many examples in this articles can be found on: Googles Python Course ... In the \nexample below we create a string that have a text with many\u00a0...", 
    "htmlSnippet": "Feb 18, 2013 <b>...</b> Many <b>examples</b> in this articles can be found on: Googles <b>Python</b> Course ... In the <br>\n<b>example</b> below we create a <b>string</b> that have a text with many&nbsp;...", 
    "link": "http://www.pythonforbeginners.com/systems-programming/regular-expressions-in-python/", 
    "cacheId": "SOCrpd31zSQJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP/regex: How to get the string value of HTML tag? - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>PHP</b>/<b>regex</b>: How to get the string value of <b>HTML</b> tag? - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/.../php-regex-how-to-get-the-string-value-of-html-tag", 
    "htmlFormattedUrl": "stackoverflow.com/.../<b>php</b>-<b>regex</b>-how-to-get-the-string-value-of-<b>html</b>-tag", 
    "pagemap": {
      "answer": [
        {
          "text": "<?php function getTextBetweenTags($string, $tagname) { $pattern = \"/<$tagname ?.*>(.*)<\\/$tagname>/\"; preg_match($pattern, $string, $matches); return $matches[1]; } $str = '<textformat leading=\"2\">...", 
          "upvotecount": "36"
        }, 
        {
          "text": "In your pattern, you simply want to match all text between the two tags. Thus, you could use for example a [\\w\\W] to match all characters. function getTextBetweenTags($string, $tagname) { $pattern...", 
          "upvotecount": "6"
        }, 
        {
          "text": "Try this $str = '<option value=\"123\">abc</option> <option value=\"123\">aabbcc</option>'; preg_match_all(\"#<option.*?>([^<]+)</option>#\", $str, $foo); print_r($foo[1]);", 
          "upvotecount": "4"
        }, 
        {
          "text": "Since attribute values may contain a plain > character, try this regular expression: $pattern = '/<'.preg_quote($tagname, '/').'(?:[^\"'>]*|\"[^\"]*\"|\\'[^\\']*\\')*>(.*?)<\\/'.preg_quote($tagname,...", 
          "upvotecount": "2"
        }, 
        {
          "text": "The following php snippets would return the text between html tags/elements. regex : \"/tagname(.*)endtag/\" will return text between tags. i.e. $regex=\"/[start_tag_name](.*)[/end_tag_name]/\";...", 
          "upvotecount": "0"
        }, 
        {
          "text": "$userinput = \"http://www.example.vn/\"; //$url = urlencode($userinput); $input = @file_get_contents($userinput) or die(\"Could not access file: $userinput\"); $regexp = \"<tagname\\s[^>]*>(.*)<\\/tagname...", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I need help on regex or preg_match because I am not that experienced yet with regards to those so here is my problem. I need to get the value \"get me\" but I think my function has an error. The num...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "PHP/regex: How to get the string value of HTML tag?", 
          "title": "PHP/regex: How to get the string value of HTML tag?"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/828870/php-regex-how-to-get-the-string-value-of-html-tag", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/828870/php-regex-how-to-get-the-string-value-of-html-tag", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/828870/php-regex-how-to-get-the-string-value-of-html-tag", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I need help on regex or preg_match because I am not that experienced yet with regards to those so here is my problem.  I need to get the value \"get me\" but I think my function has an error. The num...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/828870/php-regex-how-to-get-the-string-value-of-html-tag", 
          "twitter:card": "summary", 
          "twitter:title": "PHP/regex: How to get the string value of HTML tag?", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "6", 
          "text": "I need help on regex or preg_match because I am not that experienced yet with regards to those so here is my problem. I need to get the value \"get me\" but I think my function has an error....", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "PHP/regex: How to get the string value of HTML tag?", 
          "upvotecount": "18"
        }
      ]
    }, 
    "snippet": "<?php function getTextBetweenTags($string, $tagname) { $pattern ... some \nexamples of why it is hard to parse XML and HTML with a regex?", 
    "htmlSnippet": "&lt;?<b>php</b> function getTextBetweenTags($string, $tagname) { $<b>pattern</b> ... some <br>\n<b>examples</b> of why it is hard to parse XML and <b>HTML</b> with a <b>regex</b>?", 
    "link": "http://stackoverflow.com/questions/828870/php-regex-how-to-get-the-string-value-of-html-tag", 
    "cacheId": "ZWoRbChlBDYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Parsing HTML to find Links < PHP | The Art of Web", 
    "displayLink": "www.the-art-of-web.com", 
    "htmlTitle": "Parsing <b>HTML</b> to find Links &lt; <b>PHP</b> | The Art of Web", 
    "formattedUrl": "www.the-art-of-web.com/php/parse-links/", 
    "htmlFormattedUrl": "www.the-art-of-web.com/<b>php</b>/parse-links/", 
    "pagemap": {
      "website": [
        {
          "url": "http://www.the-art-of-web.com/"
        }
      ], 
      "metatags": [
        {
          "viewport": "width=device-width", 
          "author": "Chirp Internet"
        }
      ], 
      "comment": [
        {
          "text": "The regex for matching both double and single quotes does not properly match any double-quotes within the URL. <a href='bl\"ah'>foo</a> will incorrectly match 'bl (yes, it's a dumb URL, but...", 
          "datecreated": "11 February, 2014", 
          "author": "Martijn van der Lee"
        }, 
        {
          "text": "Hello, nice work. But I have a problem. The regular expression does not match the type of links: <a href=\"www.neco.cz/userfiles/Slevov\u00fd coupon KH.pdf\"> here </ a>. Can you please help regular...", 
          "datecreated": "29 July, 2013", 
          "author": "dj-phaser"
        }, 
        {
          "text": "If there is multi-line formatting within the tag the regex will not match. <a href=\"example.com\"> {newline} {tabbed indent} <img src=\"example.com/image.png\"/> Two changes were necessary for...", 
          "datecreated": "24 January, 2012", 
          "author": "Cary"
        }, 
        {
          "text": "Sometimes, every bit is critical, and you can't afford the extra RAM and CPU. Even if its just a small change. For example changing the file_get_contents to CURL, will save you on one of our...", 
          "datecreated": "12 May, 2011", 
          "author": "Ron"
        }, 
        {
          "text": "hi there, does anyone know how i would extract the title value from the link also please ? what changes would i need to make to : $regexp = \"/<as[^>]*href=(\"??)(http[^\" >]*?)1[^>]*>(.*)</a>/siU\";...", 
          "datecreated": "14 December, 2010", 
          "author": "Sean"
        }, 
        {
          "text": "Have to agree with the guy above. Regex may be quicker - moot point really though - but using the dom is much easier and more intuitive... especially if you find regex like a foreign language.", 
          "datecreated": "24 November, 2010", 
          "author": "mark 1959"
        }, 
        {
          "text": "Your regex is great.. however I need to get other attributes of links like class=, id= or rel=", 
          "datecreated": "30 September, 2010", 
          "author": "Khairil"
        }, 
        {
          "text": "I think that PHP regular expressions are going to be faster than using the DOM structure. Anyway, I found that using DOM is better and reliable to find all the URLs in the Google HTML. Besides,...", 
          "datecreated": "29 September, 2010", 
          "author": "Google HTML Parser"
        }, 
        {
          "text": "Surely regexp is faster. At least when you leave holes in it. The thing with classes etc for this is that you don't need to rewrite html parser, which is not a simple thing to do. Much better...", 
          "datecreated": "4 June, 2009", 
          "author": "Lauri Raittila"
        }, 
        {
          "text": "Parsing HTML with regex is riddled with gotcha's and the look aheads and look behinds to accomplish this make it very slow. In PHP, this is better accomplished by using the build in DOM class.", 
          "datecreated": "15 May, 2009", 
          "author": "Kevin Waterson"
        }, 
        {
          "text": "Great article. Works fine for me thx", 
          "datecreated": "12 May, 2009", 
          "author": "Arek"
        }, 
        {
          "text": "If the link href contains a space, it gets loaded into the matches[2] array as a null element.", 
          "datecreated": "6 August, 2008", 
          "author": "Johnathan"
        }
      ], 
      "searchaction": [
        {
          "query-input": "name=words", 
          "target": "http://www.the-art-of-web.com/searchresult.html?words={words}"
        }
      ]
    }, 
    "snippet": "Feb 13, 2015 ... Tutorial on using PHP to parse HTML files and extract links using pcre regex \nregexp regular expression patterns.", 
    "htmlSnippet": "Feb 13, 2015 <b>...</b> <b>Tutorial</b> on using <b>PHP</b> to parse <b>HTML</b> files and extract links using pcre <b>regex</b> <br>\n<b>regexp regular expression</b> patterns.", 
    "link": "http://www.the-art-of-web.com/php/parse-links/", 
    "cacheId": "qn7lY2opwtsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP: preg_match_all - Manual", 
    "displayLink": "php.net", 
    "htmlTitle": "<b>PHP</b>: preg_match_all - <b>Manual</b>", 
    "formattedUrl": "php.net/manual/en/function.preg-match-all.php", 
    "htmlFormattedUrl": "<b>php</b>.net/<b>manual</b>/en/function.<b>preg</b>-<b>match</b>-all.<b>php</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "preg_match_all. (PHP 4, PHP 5). preg_match_all \u2014 Perform a global regular \nexpression match .... $html = \"<b>bold text</b><a href=howdy.html>click me</a>\"\n;", 
    "htmlSnippet": "preg_match_all. (<b>PHP</b> 4, <b>PHP</b> 5). preg_match_all \u2014 Perform a global <b>regular</b> <br>\n<b>expression match</b> .... $<b>html</b> = &quot;&lt;b&gt;bold text&lt;/b&gt;&lt;a href=howdy.<b>html</b>&gt;click me&lt;/a&gt;&quot;<br>\n;", 
    "link": "http://php.net/manual/en/function.preg-match-all.php", 
    "cacheId": "rscJG337FOsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions :: Eloquent JavaScript", 
    "displayLink": "eloquentjavascript.net", 
    "htmlTitle": "<b>Regular Expressions</b> :: Eloquent <b>JavaScript</b>", 
    "formattedUrl": "eloquentjavascript.net/09_regexp.html", 
    "htmlFormattedUrl": "eloquent<b>javascript</b>.net/09_<b>regexp</b>.<b>html</b>", 
    "snippet": "Regular expressions are a way to describe patterns in string data. They form a \nsmall, separate language that is part of JavaScript and many other languages \nand\u00a0...", 
    "htmlSnippet": "<b>Regular expressions</b> are a way to describe patterns in string data. They form a <br>\nsmall, separate language that is part of <b>JavaScript</b> and many other languages <br>\nand&nbsp;...", 
    "link": "http://eloquentjavascript.net/09_regexp.html", 
    "cacheId": "K6_cmmtYphMJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions - JavaScript | MDN", 
    "displayLink": "developer.mozilla.org", 
    "htmlTitle": "<b>Regular Expressions</b> - <b>JavaScript</b> | MDN", 
    "formattedUrl": "https://developer.mozilla.org/en.../JavaScript/.../Regular_Expressions", 
    "htmlFormattedUrl": "https://developer.mozilla.org/en.../<b>JavaScript</b>/.../<b>Regular_Expressions</b>", 
    "pagemap": {
      "metatags": [
        {
          "twitter:creator": "@MozDevNet", 
          "og:url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions", 
          "twitter:url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions", 
          "og:site_name": "Mozilla Developer Network", 
          "twitter:card": "summary", 
          "twitter:image": "https://developer.mozilla.org/media/img/opengraph-logo.png", 
          "twitter:description": "Regular expressions are patterns used to match character combinations in strings. In JavaScript, regular expressions are also objects. These patterns are used with the exec and test methods of RegExp, and with the match, replace, search, and split methods of String. This chapter describes JavaScript regular expressions.", 
          "og:type": "website", 
          "og:description": "Regular expressions are patterns used to match character combinations in strings. In JavaScript, regular expressions are also objects. These patterns are used with the exec and test methods of RegExp, and with the match, replace, search, and split methods of String. This chapter describes JavaScript regular expressions.", 
          "twitter:title": "Regular Expressions", 
          "og:title": "Regular Expressions", 
          "twitter:site": "@MozDevNet", 
          "og:image": "https://developer.mozilla.org/media/img/opengraph-logo.png", 
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "Breadcrumb": [
        {
          "url": "MDN", 
          "title": "MDN"
        }, 
        {
          "url": "Web technology for developers", 
          "title": "Web technology for developers"
        }, 
        {
          "url": "JavaScript", 
          "title": "JavaScript"
        }, 
        {
          "url": "JavaScript Guide", 
          "title": "JavaScript Guide"
        }
      ], 
      "cse_image": [
        {
          "src": "https://developer.mozilla.org/media/img/opengraph-logo.png"
        }
      ]
    }, 
    "snippet": "Jun 10, 2015 ... In JavaScript, regular expressions are also objects. ... This chapter describes \nJavaScript regular expressions. ... DOCTYPE html> <html> <head> <meta http-\nequiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\u00a0...", 
    "htmlSnippet": "Jun 10, 2015 <b>...</b> In <b>JavaScript</b>, <b>regular expressions</b> are also objects. ... This chapter describes <br>\n<b>JavaScript regular expressions</b>. ... DOCTYPE <b>html</b>&gt; &lt;<b>html</b>&gt; &lt;head&gt; &lt;meta http-<br>\nequiv=&quot;Content-Type&quot; content=&quot;text/<b>html</b>; charset=ISO-8859-1&quot;&gt;&nbsp;...", 
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions", 
    "cacheId": "o1B-7SXYvE4J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "You Don't Know Anything About Regular Expressions: A Complete ...", 
    "displayLink": "code.tutsplus.com", 
    "htmlTitle": "You Don&#39;t Know Anything About <b>Regular Expressions</b>: A Complete <b>...</b>", 
    "formattedUrl": "code.tutsplus.com/tutorials/you-dont-know-anything-about-regular- expressions-a-complete-guide--net-7869", 
    "htmlFormattedUrl": "code.tutsplus.com/<b>tutorials</b>/you-dont-know-anything-about-<b>regular- expressions</b>-a-complete-guide--net-7869", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://code.tutsplus.com/tutorials/you-dont-know-anything-about-regular-expressions-a-complete-guide--net-7869", 
          "og:site_name": "Code Tuts+", 
          "csrf-token": "3UPtYQ6tvBRK8mFaE9wxr0Q0ApwLeezSYIAyUI02Tq3anKJLo0/SoSRE21ClbUrzsw/LsWNIwhwO/hox7pJ8vg==", 
          "og:type": "article", 
          "og:description": "Regular expressions can be scary...really scary. Fortunately, once you memorize what each symbol represents, the fear quickly subsides. If you fit the title of this article, there's much to learn! Let's get started. | Difficulty: Intermediate; Tags: Web Development, Regular Expressions, Regex, JavaScript", 
          "csrf-param": "authenticity_token", 
          "et.category": "Web Development", 
          "og:title": "You Don't Know Anything About Regular Expressions: A Complete Guide - Tuts+ Code Tutorial", 
          "fb:app_id": "1494084460809023", 
          "og:image": "https://cdn.tutsplus.com/net/uploads/legacy/503_regex/200x200.png", 
          "viewport": "initial-scale=1"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "160", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcScEbSsvH66W0SaVgTpVovUE_hPcmF-8iEG1w71qdBUJyrhnCJaKEhW1zSl", 
          "height": "160"
        }
      ], 
      "cse_image": [
        {
          "src": "https://cdn.tutsplus.com/net/uploads/legacy/503_regex/200x200.png"
        }
      ]
    }, 
    "snippet": "Nov 26, 2009 ... Regular expressions can be scary...really scary. Fortunately, once you ... Section \n3: Regular Expressions and JavaScript. In this final section,\u00a0...", 
    "htmlSnippet": "Nov 26, 2009 <b>...</b> <b>Regular expressions</b> can be scary...really scary. Fortunately, once you ... Section <br>\n3: <b>Regular Expressions</b> and <b>JavaScript</b>. In this final section,&nbsp;...", 
    "link": "http://code.tutsplus.com/tutorials/you-dont-know-anything-about-regular-expressions-a-complete-guide--net-7869", 
    "cacheId": "XuWGZP2VZGYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Introductory Guide to regular expressions", 
    "displayLink": "www.javascriptkit.com", 
    "htmlTitle": "Introductory Guide to <b>regular expressions</b>", 
    "formattedUrl": "www.javascriptkit.com/javatutors/re.shtml", 
    "htmlFormattedUrl": "www.<b>javascript</b>kit.com/javatutors/re.s<b>html</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ]
    }, 
    "snippet": "Fortunately, JavaScript 1.2+ has incorporated regular expressions. In this article I \nwill present a brief tutorial on the basics of regular expressions and then give\u00a0...", 
    "htmlSnippet": "Fortunately, <b>JavaScript</b> 1.2+ has incorporated <b>regular expressions</b>. In this article I <br>\nwill present a brief <b>tutorial</b> on the basics of <b>regular expressions</b> and then give&nbsp;...", 
    "link": "http://www.javascriptkit.com/javatutors/re.shtml", 
    "cacheId": "S5RoJwbGWm4J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "JavaScript RegExp Object - Using Regular Expressions with Client ...", 
    "displayLink": "www.regular-expressions.info", 
    "htmlTitle": "<b>JavaScript RegExp</b> Object - Using <b>Regular Expressions</b> with Client <b>...</b>", 
    "formattedUrl": "www.regular-expressions.info/javascript.html", 
    "htmlFormattedUrl": "www.<b>regular-expressions</b>.info/<b>javascript</b>.<b>html</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width", 
          "author": "Jan Goyvaerts"
        }
      ]
    }, 
    "snippet": "Detailed description of the capabilities of the JavaScript RegExp Object, defined \nin the ... Page URL: http://www.regular-expressions.info/javascript.html", 
    "htmlSnippet": "Detailed description of the capabilities of the <b>JavaScript RegExp</b> Object, defined <br>\nin the ... Page URL: http://www.<b>regular-expressions</b>.info/<b>javascript</b>.<b>html</b>", 
    "link": "http://www.regular-expressions.info/javascript.html", 
    "cacheId": "X-wwLUZ9ui4J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular expressions in JavaScript | JavaScript Tutorial", 
    "displayLink": "javascript.info", 
    "htmlTitle": "<b>Regular expressions</b> in <b>JavaScript</b> | <b>JavaScript Tutorial</b>", 
    "formattedUrl": "javascript.info/tutorial/regular-expressions-javascript", 
    "htmlFormattedUrl": "<b>javascript</b>.info/<b>tutorial</b>/<b>regular-expressions</b>-<b>javascript</b>", 
    "pagemap": {
      "metatags": [
        {
          "fb:app_id": "112959575461438"
        }
      ]
    }, 
    "snippet": "Regular expressions in JavaScript. Ilya Kantor. Regular expressions provide a \nway for really powerful substring search and replace. They exist in many\u00a0...", 
    "htmlSnippet": "<b>Regular expressions</b> in <b>JavaScript</b>. Ilya Kantor. <b>Regular expressions</b> provide a <br>\nway for really powerful substring search and <b>replace</b>. They exist in many&nbsp;...", 
    "link": "http://javascript.info/tutorial/regular-expressions-javascript", 
    "cacheId": "g6Qnzf24L0MJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "JavaScript RegExp Example: Online Regular Expression Tester", 
    "displayLink": "www.regular-expressions.info", 
    "htmlTitle": "<b>JavaScript RegExp Example</b>: Online <b>Regular Expression</b> Tester", 
    "formattedUrl": "www.regular-expressions.info/javascriptexample.html", 
    "htmlFormattedUrl": "www.<b>regular-expressions</b>.info/<b>javascriptexample</b>.<b>html</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width", 
          "author": "Jan Goyvaerts"
        }
      ]
    }, 
    "snippet": "Example of how to use the JavaScript RegExp Object. Test your regular ... Page \nURL: http://www.regular-expressions.info/javascriptexample.html. Page last\u00a0...", 
    "htmlSnippet": "<b>Example</b> of how to use the <b>JavaScript RegExp</b> Object. Test your <b>regular</b> ... Page <br>\nURL: http://www.<b>regular-expressions</b>.info/javascriptexample.<b>html</b>. Page last&nbsp;...", 
    "link": "http://www.regular-expressions.info/javascriptexample.html", 
    "cacheId": "8EfFBeK-vVYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular expressions methods | JavaScript Tutorial", 
    "displayLink": "javascript.info", 
    "htmlTitle": "<b>Regular expressions</b> methods | <b>JavaScript Tutorial</b>", 
    "formattedUrl": "javascript.info/tutorial/regular-expressions-methods", 
    "htmlFormattedUrl": "<b>javascript</b>.info/<b>tutorial</b>/<b>regular-expressions</b>-methods", 
    "pagemap": {
      "metatags": [
        {
          "fb:app_id": "112959575461438"
        }
      ]
    }, 
    "snippet": "In JavaScript regular expressions are represented by RegExp class and \nintegrated into String . ... For a regexp without g flag - returns the first match and \ngroups:.", 
    "htmlSnippet": "In <b>JavaScript regular expressions</b> are represented by <b>RegExp</b> class and <br>\nintegrated into String . ... For a <b>regexp</b> without g flag - returns the first <b>match</b> and <br>\ngroups:.", 
    "link": "http://javascript.info/tutorial/regular-expressions-methods", 
    "cacheId": "RYCKF1zZHtUJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions methods and usage", 
    "displayLink": "www.javascriptkit.com", 
    "htmlTitle": "<b>Regular Expressions</b> methods and usage", 
    "formattedUrl": "www.javascriptkit.com/javatutors/redev3.shtml", 
    "htmlFormattedUrl": "www.<b>javascript</b>kit.com/javatutors/redev3.shtml", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ]
    }, 
    "snippet": "Home \u00b7 JavaScript Tutorials \u00b7 Programmer's Guide to Regular Expressions Here \n... Applies the RegExp to the given string, and returns the match information.", 
    "htmlSnippet": "Home &middot; <b>JavaScript Tutorials</b> &middot; Programmer&#39;s Guide to <b>Regular Expressions</b> Here <br>\n... Applies the <b>RegExp</b> to the given <b>string</b>, and returns the match information.", 
    "link": "http://www.javascriptkit.com/javatutors/redev3.shtml", 
    "cacheId": "7wIn0L7cj80J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "JavaScript replace/regex - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>JavaScript replace</b>/<b>regex</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/1162529/javascript-replace-regex", 
    "htmlFormattedUrl": "stackoverflow.com/questions/1162529/<b>javascript</b>-<b>replace</b>-<b>regex</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "You need to double escape any RegExp characters (once for the slash in the string and once for the regexp): \"$TESTONE $TESTONE\".replace( new RegExp(\"\\\\$TESTONE\",\"gm\"),\"foo\") Otherwise, it looks...", 
          "upvotecount": "57"
        }, 
        {
          "text": "In terms of pattern interpretation, there's no difference between the following forms: /pattern/ new RegExp(\"pattern\") If you want to replace a literal string using the replace method, I think...", 
          "upvotecount": "34"
        }, 
        {
          "text": "Your regex pattern should have the g modifier: var pattern = /[somepattern]+/g; notice the g at the end. it tells the replacer to do a global replace. Also you dont need to use the RegExp object...", 
          "upvotecount": "15"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "Given this function: function Repeater(template) { var repeater = { markup: template, replace: function(pattern, value) { this.markup = this.markup.replace(patte...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "JavaScript replace/regex", 
          "title": "JavaScript replace/regex"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/1162529/javascript-replace-regex", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/1162529/javascript-replace-regex", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/1162529/javascript-replace-regex", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "Given this function:  function Repeater(template) {      var repeater = {          markup: template,          replace: function(pattern, value) {             this.markup = this.markup.replace(patte...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/1162529/javascript-replace-regex", 
          "twitter:card": "summary", 
          "twitter:title": "JavaScript replace/regex", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "3", 
          "text": "Given this function: function Repeater(template) { var repeater = { markup: template, replace: function(pattern, value) { this.markup = this.markup.replace(pattern, value); } }; return repeater;...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "JavaScript replace/regex", 
          "upvotecount": "41"
        }
      ]
    }, 
    "snippet": "Given this function: function Repeater(template) { var repeater = { markup: \ntemplate, replace: function(pattern, value) { this.markup\u00a0...", 
    "htmlSnippet": "Given this function: function Repeater(template) { var repeater = { markup: <br>\ntemplate, <b>replace</b>: function(<b>pattern</b>, value) { this.markup&nbsp;...", 
    "link": "http://stackoverflow.com/questions/1162529/javascript-replace-regex", 
    "cacheId": "pQqfef_sIRcJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "JavaScript String replace() Method", 
    "displayLink": "www.w3schools.com", 
    "htmlTitle": "<b>JavaScript</b> String <b>replace</b>() Method", 
    "formattedUrl": "www.w3schools.com/jsref/jsref_replace.asp", 
    "htmlFormattedUrl": "www.w3schools.com/jsref/jsref_<b>replace</b>.asp", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ]
    }, 
    "snippet": "The replace() method searches a string for a specified value, or a regular \nexpression, ... Read more about regular expressions in our RegExp Tutorial and \nour\u00a0...", 
    "htmlSnippet": "The <b>replace</b>() method searches a string for a specified value, or a <b>regular</b> <br>\n<b>expression</b>, ... Read more about <b>regular expressions</b> in our <b>RegExp Tutorial</b> and <br>\nour&nbsp;...", 
    "link": "http://www.w3schools.com/jsref/jsref_replace.asp", 
    "cacheId": "unVHa4t1_C8J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Using Regular Expressions In Javascript (A General Overview)", 
    "displayLink": "www.bennadel.com", 
    "htmlTitle": "Using <b>Regular Expressions</b> In <b>Javascript</b> (A General Overview)", 
    "formattedUrl": "www.bennadel.com/.../1742-using-regular-expressions-in-javascript-a- general-overview.htm", 
    "htmlFormattedUrl": "www.bennadel.com/.../1742-using-<b>regular-expressions</b>-in-<b>javascript</b>-a- general-overview.htm", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "328", 
          "src": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYB9vSp-v4EOvtND05SukWJwsuR8BRC1MBzIEpeveVvVV3wMO0jSIgE_c", 
          "height": "154"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.bennadel.com/images/header/photos/gert_franz_peter_bell_mark_drew.jpg"
        }
      ]
    }, 
    "snippet": "Nov 2, 2009 ... This replace() method takes a regular expression object as its first ... Each \ncaptured group in the regular expression pattern can be used within\u00a0...", 
    "htmlSnippet": "Nov 2, 2009 <b>...</b> This <b>replace</b>() method takes a <b>regular expression</b> object as its first ... Each <br>\ncaptured group in the <b>regular expression pattern</b> can be used within&nbsp;...", 
    "link": "http://www.bennadel.com/blog/1742-using-regular-expressions-in-javascript-a-general-overview.htm", 
    "cacheId": "-lXvGUxSWdEJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "String.prototype.replace() - JavaScript | MDN", 
    "displayLink": "developer.mozilla.org", 
    "htmlTitle": "String.prototype.<b>replace</b>() - <b>JavaScript</b> | MDN", 
    "formattedUrl": "https://developer.mozilla.org/en-US/docs/.../JavaScript/.../replace", 
    "htmlFormattedUrl": "https://developer.mozilla.org/en-US/docs/.../<b>JavaScript</b>/.../<b>replace</b>", 
    "pagemap": {
      "metatags": [
        {
          "twitter:creator": "@MozDevNet", 
          "og:url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace", 
          "twitter:url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace", 
          "og:site_name": "Mozilla Developer Network", 
          "twitter:card": "summary", 
          "twitter:image": "https://developer.mozilla.org/media/img/opengraph-logo.png", 
          "twitter:description": "The replace() method returns a new string with some or all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match.", 
          "og:type": "website", 
          "og:description": "The replace() method returns a new string with some or all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match.", 
          "twitter:title": "String.prototype.replace()", 
          "og:title": "String.prototype.replace()", 
          "twitter:site": "@MozDevNet", 
          "og:image": "https://developer.mozilla.org/media/img/opengraph-logo.png", 
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "Breadcrumb": [
        {
          "url": "MDN", 
          "title": "MDN"
        }, 
        {
          "url": "Web technology for developers", 
          "title": "Web technology for developers"
        }, 
        {
          "url": "JavaScript", 
          "title": "JavaScript"
        }, 
        {
          "url": "JavaScript reference", 
          "title": "JavaScript reference"
        }, 
        {
          "url": "Standard built-in objects", 
          "title": "Standard built-in objects"
        }, 
        {
          "url": "String", 
          "title": "String"
        }
      ], 
      "cse_image": [
        {
          "src": "https://developer.mozilla.org/media/img/opengraph-logo.png"
        }
      ]
    }, 
    "snippet": "Jun 10, 2015 ... The pattern can be a string or a RegExp, and the replacement can ... Note: The \nflags argument does not work in v8 Core (Chrome and Node.js).", 
    "htmlSnippet": "Jun 10, 2015 <b>...</b> The <b>pattern</b> can be a string or a <b>RegExp</b>, and the <b>replacement</b> can ... Note: The <br>\nflags argument does not work in v8 Core (Chrome and Node.<b>js</b>).", 
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace", 
    "cacheId": "PeiWP0nbyDsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions in ASP.NET", 
    "displayLink": "msdn.microsoft.com", 
    "htmlTitle": "<b>Regular Expressions</b> in <b>ASP</b>.<b>NET</b>", 
    "formattedUrl": "https://msdn.microsoft.com/en-us/library/ms972966.aspx", 
    "htmlFormattedUrl": "https://msdn.microsoft.com/en-us/library/ms972966.<b>aspx</b>", 
    "pagemap": {
      "metatags": [
        {
          "search.mshattr.locale": "kbEnglish", 
          "search.mshattr.docsettitle": "ASP.NET Technical Articles", 
          "search.mshattr.topictype": "kbArticle", 
          "search.date": "2004-03-22", 
          "search.mshattr.docsetroot": "ms972966", 
          "mshkeywordk": "ASP.NET, regular expressions", 
          "search.mscategoryv": "ms310241MSDN10", 
          "search.abstract": "Regular Expressions are an extremely useful tool for working with text. Whether you need to validate user input, search for patterns within strings, or reformat text in powerful ways, regular expressions can help.", 
          "mshkeyworda": "regexnet", 
          "search.mshkeyworda": "regexnet", 
          "search.mshkeywordk": "ASP.NET, regular expressions", 
          "search.mshattr.targetos": "Windows", 
          "mshattr": "Locale:kbEnglish", 
          "search.mscategory": "ms310241", 
          "search.href": "samples/MSDNRegExASPNET.sfl", 
          "search.mshattr.technology": "ASP", 
          "search.rtffilename": "regexnet.rtf", 
          "search.mshattr.productvers": "kbVBNet", 
          "search.mshattr.product": "VB", 
          "search.mshattr.targetosvers": "kbWinOS", 
          "search.author": "Steven A. Smith", 
          "search.mshattr.targetcpu": "kbx86", 
          "search.tocnodeid": "ms972966", 
          "search.mshattr.docset": "kbmsdn", 
          "search.mshattr.technologyvers": "kbASP", 
          "search.msdnid": "_1049614"
        }
      ]
    }, 
    "snippet": "NET Framework Microsoft\u00ae ASP.NET Regular Expression API. Summary: \nRegular expressions are an extremely useful tool for working with text. Whether \nyou\u00a0...", 
    "htmlSnippet": "NET Framework Microsoft\u00ae <b>ASP</b>.<b>NET Regular Expression</b> API. Summary: <br>\n<b>Regular expressions</b> are an extremely useful tool for working with text. Whether <br>\nyou&nbsp;...", 
    "link": "https://msdn.microsoft.com/en-us/library/ms972966.aspx", 
    "cacheId": "rzejCY3IuVgJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "How To: Use Regular Expressions to Constrain Input in ASP.NET", 
    "displayLink": "msdn.microsoft.com", 
    "htmlTitle": "How To: Use <b>Regular Expressions</b> to Constrain Input in <b>ASP</b>.<b>NET</b>", 
    "formattedUrl": "https://msdn.microsoft.com/en-us/library/ff650303.aspx", 
    "htmlFormattedUrl": "https://msdn.microsoft.com/en-us/library/ff650303.<b>aspx</b>", 
    "pagemap": {
      "metatags": [
        {
          "search.mshattr.targetos": "Windows", 
          "mshattr": "TargetOS:Windows", 
          "search.mscategory": "ms310241", 
          "mshkeywordk": "ASP.NET", 
          "search.mshattr.locale": "kbEnglish", 
          "search.keywords": "SecurityGuidance, PAGSecurityHowTo, Security, Input Validation, Injection Attacks, ASP.NET", 
          "search.msdnid": "_1076007", 
          "search.mshattr.docsettitle": "patterns &amp; practices", 
          "search.mshattr.topictype": "kbArticle", 
          "search.dcsext.msdnlibrarynode": "_pandp_all_", 
          "search.rtffilename": "paght000001.rtf", 
          "mshkeyworda": "PAGHT000001", 
          "search.mshkeyworda": "PAGHT000001", 
          "search.tocnodeid": "ff650303", 
          "search.mshattr.docset": "kbmsdn", 
          "search.mshkeywordk": "ASP.NET", 
          "search.description": "Regular expressions are a good way to validate text fields such as names, addresses, phone numbers, and other user information. You can use them to constrain input, apply formatting rules, and check lengths. To validate input captured with server controls, you can use the RegularExpressionValidator control. To validate other forms of input, such as query strings, cookies, and HTML control input, you can use the System.Text.RegularExpression.RegEx class. This How To explains how you can use regular expressions within ASP.NET applications to constrain untrusted input.", 
          "search.mshattr.docsetroot": "Ff650303", 
          "search.mscategoryv": "ms310241MSDN10"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "256", 
          "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRF7Gz4pK9KO2JJ2DG1yBCiXcKFP486kamrOsY2NFM0Bxz_7rB4JN9xG5s", 
          "height": "72"
        }
      ], 
      "cse_image": [
        {
          "src": "https://i-msdn.sec.s-msft.com/dynimg/IC368873.png"
        }
      ]
    }, 
    "snippet": "This How To shows how you can use regular expressions within ASP.NET \napplications to constrain untrusted input. Regular expressions are a good way to\n\u00a0...", 
    "htmlSnippet": "This How To shows how you can use <b>regular expressions</b> within <b>ASP</b>.<b>NET</b> <br>\napplications to constrain untrusted input. <b>Regular expressions</b> are a good way to<br>\n&nbsp;...", 
    "link": "https://msdn.microsoft.com/en-us/library/ff650303.aspx", 
    "cacheId": "N_3UGO6o4PoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Learn Regular Expressions (RegEx) with Ease - CodeProject", 
    "displayLink": "www.codeproject.com", 
    "htmlTitle": "Learn <b>Regular Expressions</b> (<b>RegEx</b>) with Ease - CodeProject", 
    "formattedUrl": "www.codeproject.com/.../Learning-REGEX-regular-expression-in-the-most- ea", 
    "htmlFormattedUrl": "www.codeproject.com/.../Learning-<b>REGEX</b>-<b>regular-expression</b>-in-the-most- ea", 
    "pagemap": {
      "aggregaterating": [
        {
          "ratingvalue": "4.93", 
          "ratingcount": "144", 
          "worstrating": "1", 
          "bestrating": "5"
        }
      ], 
      "metatags": [
        {
          "rating": "General", 
          "viewport": "width=device-width, initial-scale=1.0", 
          "google-translate-customization": "d908bb7ce7aff658-4c2f3a504525c916-g629383f736781a8a-13", 
          "application-name": "CodeProject", 
          "author": "<b>Shivprasad koirala</b>"
        }
      ], 
      "person": [
        {
          "name": "Shivprasad koirala"
        }
      ], 
      "article": [
        {
          "articlebody": "Contents So, what\u2019s the agenda? Just in case if you are new comer, what is regex? 3 important regex commands Check if the user has entered shivkoirala? Let\u2019s start with the first validation,...", 
          "name": "Learn Regular Expressions (RegEx) with Ease", 
          "url": "Permalink", 
          "datepublished": "2011-06-04", 
          "articlesection": "ASP.NET", 
          "datemodified": "2014-02-24 06:07:00"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "289", 
          "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRyF7XLOBu6EIPq5GH7tQ_AXLk1egWzChsJ8JFpncQHiyHmpr3jz27CCLCY", 
          "height": "174"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.codeproject.com/KB/aspnet/regex1/sam.JPG"
        }
      ], 
      "hreviewaggregate": [
        {
          "votes": "144"
        }
      ]
    }, 
    "snippet": "NET regex video which demonstrates how regex DOS attack looks like. To \novercome this ... I am a Microsoft MVP for ASP/ASP.NET and ... NET, C# , design \npattern , WCF , Silverlight", 
    "htmlSnippet": "NET <b>regex</b> video which demonstrates how <b>regex</b> DOS attack looks like. To <br>\novercome this ... I am a Microsoft MVP for ASP/<b>ASP</b>.<b>NET</b> and ... NET, <b>C#</b> , design <br>\n<b>pattern</b> , WCF , Silverlight", 
    "link": "http://www.codeproject.com/Articles/206330/Learning-REGEX-regular-expression-in-the-most-ea", 
    "cacheId": "Y_dItwzk33YJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Part 6 - ASP.NET \"Regular Expression Validator\" Control Tutorial ...", 
    "displayLink": "www.youtube.com", 
    "htmlTitle": "Part 6 - <b>ASP</b>.<b>NET</b> &quot;<b>Regular Expression</b> Validator&quot; Control <b>Tutorial</b> <b>...</b>", 
    "formattedUrl": "www.youtube.com/watch?v=ayMl7roCYeQ", 
    "htmlFormattedUrl": "www.youtube.com/watch?v=ayMl7roCYeQ", 
    "pagemap": {
      "videoobject": [
        {
          "isfamilyfriendly": "True", 
          "name": "Part 6 - ASP.NET \"Regular Expression Validator\" Control Tutorial", 
          "unlisted": "False", 
          "url": "http://www.youtube.com/watch?v=ayMl7roCYeQ", 
          "datepublished": "2013-12-02", 
          "regionsallowed": "AD,AE,AF,AG,AI,AL,AM,AO,AQ,AR,AS,AT,AU,AW,AX,AZ,BA,BB,BD,BE,BF,BG,BH,BI,BJ,BL,BM,BN,BO,BQ,BR,BS,BT,BV,BW,BY,BZ,CA,CC,CD,CF,CG,CH,CI,CK,CL,CM,CN,CO,CR,CU,CV,CW,CX,CY,CZ,DE,DJ,DK,DM,DO,DZ,EC,EE,EG,EH...", 
          "channelid": "UCTkdsuHV5Q2cyxly3JyNbDg", 
          "videoid": "ayMl7roCYeQ", 
          "paid": "False", 
          "height": "720", 
          "playertype": "HTML5 Flash", 
          "width": "1280", 
          "interactioncount": "800", 
          "duration": "PT7M4S", 
          "embedurl": "https://www.youtube.com/embed/ayMl7roCYeQ", 
          "thumbnailurl": "http://i.ytimg.com/vi/ayMl7roCYeQ/maxresdefault.jpg", 
          "genre": "Education", 
          "description": "ASP.NET \"Regular Expression Validator\" Control Tutorial using C# In Urdu"
        }
      ], 
      "metatags": [
        {
          "twitter:app:name:googleplay": "YouTube", 
          "twitter:app:url:ipad": "vnd.youtube://www.youtube.com/watch?v=ayMl7roCYeQ&feature=applinks", 
          "twitter:image": "http://i.ytimg.com/vi/ayMl7roCYeQ/maxresdefault.jpg", 
          "al:web:url": "http://www.youtube.com/watch?v=ayMl7roCYeQ&feature=applinks", 
          "twitter:site": "@youtube", 
          "twitter:app:url:googleplay": "http://www.youtube.com/watch?v=ayMl7roCYeQ", 
          "fb:app_id": "87741124305", 
          "og:video:url": "https://www.youtube.com/embed/ayMl7roCYeQ", 
          "og:url": "http://www.youtube.com/watch?v=ayMl7roCYeQ", 
          "twitter:app:url:iphone": "vnd.youtube://www.youtube.com/watch?v=ayMl7roCYeQ&feature=applinks", 
          "twitter:url": "http://www.youtube.com/watch?v=ayMl7roCYeQ", 
          "al:ios:app_store_id": "544007664", 
          "title": "Part 6 - ASP.NET \"Regular Expression Validator\" Control Tutorial", 
          "og:video:type": "text/html", 
          "og:type": "video", 
          "al:android:package": "com.google.android.youtube", 
          "twitter:player:width": "1280", 
          "og:title": "Part 6 - ASP.NET \"Regular Expression Validator\" Control Tutorial", 
          "twitter:title": "Part 6 - ASP.NET \"Regular Expression Validator\" Control Tutorial", 
          "attribution": "TkdsuHV5Q2cyxly3JyNbDg/", 
          "al:ios:url": "vnd.youtube://www.youtube.com/watch?v=ayMl7roCYeQ&feature=applinks", 
          "twitter:player": "https://www.youtube.com/embed/ayMl7roCYeQ", 
          "twitter:app:name:iphone": "YouTube", 
          "og:video:secure_url": "https://www.youtube.com/embed/ayMl7roCYeQ", 
          "twitter:app:name:ipad": "YouTube", 
          "twitter:app:id:ipad": "544007664", 
          "al:ios:app_name": "YouTube", 
          "og:video:height": "720", 
          "al:android:app_name": "YouTube", 
          "twitter:app:id:googleplay": "com.google.android.youtube", 
          "og:image": "http://i.ytimg.com/vi/ayMl7roCYeQ/maxresdefault.jpg", 
          "twitter:app:id:iphone": "544007664", 
          "og:site_name": "YouTube", 
          "twitter:card": "player", 
          "twitter:description": "ASP.NET \"Regular Expression Validator\" Control Tutorial using C# In Urdu", 
          "og:description": "ASP.NET \"Regular Expression Validator\" Control Tutorial using C# In Urdu", 
          "og:video:tag": "ASP.NET", 
          "al:android:url": "vnd.youtube://www.youtube.com/watch?v=ayMl7roCYeQ&feature=applinks", 
          "og:video:width": "1280", 
          "twitter:player:height": "720"
        }
      ], 
      "imageobject": [
        {
          "url": "http://i.ytimg.com/vi/ayMl7roCYeQ/maxresdefault.jpg", 
          "width": "1280", 
          "height": "720"
        }
      ], 
      "person": [
        {
          "url": "http://www.youtube.com/user/ProgramInUrdu"
        }, 
        {
          "url": "https://plus.google.com/106295420926814276898"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "300", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcRV-EyL2T9I0u1nKJz8x7-W9TnPSMy6I5k4G_WHoM80ybeTtT-lANqhgr0e", 
          "height": "168"
        }
      ], 
      "cse_image": [
        {
          "src": "http://i.ytimg.com/vi/ayMl7roCYeQ/maxresdefault.jpg"
        }
      ]
    }, 
    "snippet": "Dec 2, 2013 ... ASP.NET \"Regular Expression Validator\" Control Tutorial using C# In Urdu.", 
    "htmlSnippet": "Dec 2, 2013 <b>...</b> <b>ASP</b>.<b>NET</b> &quot;<b>Regular Expression</b> Validator&quot; Control <b>Tutorial</b> using <b>C#</b> In Urdu.", 
    "link": "http://www.youtube.com/watch?v=ayMl7roCYeQ", 
    "cacheId": "jt_WCEE2WNoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Validation - RegularExpressionValidator - The complete ASP.NET ...", 
    "displayLink": "asp.net-tutorials.com", 
    "htmlTitle": "Validation - RegularExpressionValidator - The complete <b>ASP</b>.<b>NET</b> <b>...</b>", 
    "formattedUrl": "asp.net-tutorials.com/validation/regular-expression-validator/", 
    "htmlFormattedUrl": "<b>asp</b>.<b>net</b>-<b>tutorials</b>.com/validation/<b>regular-expression</b>-validator/", 
    "pagemap": {
      "metatags": [
        {
          "dc.subject": "asp.net, asp, .net, microsoft, visual web developer,visual studio", 
          "viewport": "width=device-width, initial-scale=1, maximum-scale=1", 
          "fb:admins": "730715216"
        }
      ]
    }, 
    "snippet": "C# tutorial \u00b7 ASP.NET tutorial \u00b7 AJAX. ... If you don't feel like learning Regular \nExpressions, but still feel like using this validator, have a look around the Internet. \nYou can find ... 4 digit number:<br /> <asp:TextBox runat=\"server\" id=\"txtNumber\"\n\u00a0...", 
    "htmlSnippet": "<b>C# tutorial</b> &middot; <b>ASP</b>.<b>NET tutorial</b> &middot; AJAX. ... If you don&#39;t feel like learning <b>Regular</b> <br>\n<b>Expressions</b>, but still feel like using this validator, have a look around the Internet. <br>\nYou can find ... 4 digit number:&lt;br /&gt; &lt;asp:TextBox runat=&quot;server&quot; id=&quot;txtNumber&quot;<br>\n&nbsp;...", 
    "link": "http://asp.net-tutorials.com/validation/regular-expression-validator/", 
    "cacheId": "sRdhAFMRr7AJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expression Library", 
    "displayLink": "www.regxlib.com", 
    "htmlTitle": "<b>Regular Expression</b> Library", 
    "formattedUrl": "www.regxlib.com/", 
    "htmlFormattedUrl": "www.regxlib.com/", 
    "pagemap": {
      "cse_thumbnail": [
        {
          "width": "97", 
          "src": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcTZj9Kb8hBr6MlSxq-j3QNlXzgyZ8XjGLFj4LnrpJcBaZsJdKBWAFGcZw", 
          "height": "128"
        }
      ], 
      "cse_image": [
        {
          "src": "http://images.amazon.com/images/P/0596002890.01.MZZZZZZZ.jpg"
        }
      ]
    }, 
    "snippet": "Users can add, edit, rate, and test regular expressions. ... about regex related \ncontent you can request one via: http://regexadvice.com/blogs/ssmith/contact.\naspx\u00a0...", 
    "htmlSnippet": "Users can add, edit, rate, and test <b>regular expressions</b>. ... about <b>regex</b> related <br>\ncontent you can request one via: http://<b>regexadvice</b>.com/blogs/ssmith/contact.<br>\n<b>aspx</b>&nbsp;...", 
    "link": "http://www.regxlib.com/", 
    "cacheId": "jVFgJNPeLQsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP: preg_match_all - Manual", 
    "displayLink": "php.net", 
    "htmlTitle": "<b>PHP</b>: <b>preg_match_all</b> - Manual", 
    "formattedUrl": "php.net/manual/es/function.preg-match-all.php", 
    "htmlFormattedUrl": "<b>php</b>.net/manual/es/function.<b>preg</b>-<b>match</b>-<b>all</b>.<b>php</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "int preg_match_all ( string $pattern , string $subject [, array &$matches [, int ..... \nyour regular expressions with real-time highlighting of regex match on data input.", 
    "htmlSnippet": "int <b>preg_match_all</b> ( string $<b>pattern</b> , string $subject [, array &amp;$matches [, int ..... <br>\nyour <b>regular expressions</b> with real-time highlighting of <b>regex</b> match on data input.", 
    "link": "http://php.net/manual/es/function.preg-match-all.php", 
    "cacheId": "2c-WLeNHccgJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "php - Htaccess Regular expression to match any character - Stack ...", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>php</b> - <b>Htaccess Regular expression</b> to <b>match</b> any character - Stack <b>...</b>", 
    "formattedUrl": "stackoverflow.com/.../htaccess-regular-expression-to-match-any-character", 
    "htmlFormattedUrl": "stackoverflow.com/.../<b>htaccess</b>-<b>regular-expression</b>-to-<b>match</b>-any-character", 
    "pagemap": {
      "answer": [
        {
          "text": "To allow a dot (.) you have to escape it, so use \\. instead of .. You can also use [^abc] to allow all characters but abc. Edit: To allow dots in the path, use this: ^([A-Za-z0-9_-\\s\\.]+)/([A-Za-z0...", 
          "upvotecount": "4"
        }, 
        {
          "text": "RewriteRule ^([a-zA-Z0-9-]+)([/]*)$", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I am using this regular expression on my htaccess: RewriteCond %{REQUEST_FILENAME} !-d RewriteRule ^([A-Za-z0-9_-\\s]+)/([A-Za-z0-9_-\\s]+)/?$ index.php?param1=$1&param2=$2 [L,NC] The problem is", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Htaccess Regular expression to match any character", 
          "title": "Htaccess Regular expression to match any character"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/12144510/htaccess-regular-expression-to-match-any-character", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/12144510/htaccess-regular-expression-to-match-any-character", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/12144510/htaccess-regular-expression-to-match-any-character", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I am using this regular expression on my htaccess:  RewriteCond %{REQUEST_FILENAME} !-d RewriteRule ^([A-Za-z0-9_-\\s]+)/([A-Za-z0-9_-\\s]+)/?$ index.php?param1=$1&amp;param2=$2 [L,NC]   The problem is", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/12144510/htaccess-regular-expression-to-match-any-character", 
          "twitter:card": "summary", 
          "twitter:title": "Htaccess Regular expression to match any character", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "2", 
          "text": "I am using this regular expression on my htaccess: RewriteCond %{REQUEST_FILENAME} !-d RewriteRule ^([A-Za-z0-9_-\\s]+)/([A-Za-z0-9_-\\s]+)/?$ index.php?param1=$1&param2=$2 [L,NC] The problem...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Htaccess Regular expression to match any character", 
          "upvotecount": "2"
        }
      ]
    }, 
    "snippet": "To allow a dot (.) you have to escape it, so use \\. instead of . . You can also use [^\nabc] to allow all characters but abc. Edit: To allow dots in the path,\u00a0...", 
    "htmlSnippet": "To allow a dot (.) you have to escape it, so use \\. instead of . . You can also use [^<br>\nabc] to allow all characters but abc. Edit: To allow dots in the path,&nbsp;...", 
    "link": "http://stackoverflow.com/questions/12144510/htaccess-regular-expression-to-match-any-character", 
    "cacheId": "JRL_n5Z151sJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Htaccess File Tutorial and Tips.", 
    "displayLink": "www.9lessons.info", 
    "htmlTitle": "<b>Htaccess</b> File <b>Tutorial</b> and Tips.", 
    "formattedUrl": "www.9lessons.info/2013/11/htaccess-file-tutorial-and-tips.html", 
    "htmlFormattedUrl": "www.9lessons.info/2013/11/<b>htaccess</b>-file-<b>tutorial</b>-and-tips.html", 
    "pagemap": {
      "hcard": [
        {
          "fn": "Srinivas Tamada"
        }
      ], 
      "metatags": [
        {
          "dcterms.datecopyrighted": "Copyright (c) 2008-2015 Srinivas Tamada", 
          "author": "Srinivas Tamada", 
          "fb:admins": "1025751018", 
          "alexaverifyid": "6AjQa-NbwaKsfO-CAR2zEP4InUc", 
          "article:author": "https://www.facebook.com/srinivas.tamada", 
          "mobileoptimized": "320", 
          "yandex-verification": "4df3c85ea53c8f10", 
          "msvalidate.01": "F2FEEF3D9FA54697BBAF9E08A80D3483", 
          "article:publisher": "https://www.facebook.com/srinivas.tamada", 
          "handheldfriendly": "True", 
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "blog": [
        {
          "description": "After posting Understanding of Regular Expression article most of my readers are expecting .htaccess basics, and I did not find any useful article on Google first page results. Specially I...", 
          "name": "Htaccess File Tutorial and Tips.", 
          "image": "https://lh3.googleusercontent.com/-mSroaw3IiFI/UoparJTYmeI/AAAAAAAAIec/LSmFG144YHc/s550/htaccess.png", 
          "datecreated": "Tuesday, November 19, 2013"
        }
      ], 
      "person": [
        {
          "location": "Atlanta - United States"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "304", 
          "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcSVnZqa_ApL5CWbWzy9QM3y66b4cdKbQbb1Nb1mJP4tmQ23Vr9vJ-mWRC6S", 
          "height": "166"
        }
      ], 
      "cse_image": [
        {
          "src": "https://lh3.googleusercontent.com/-mSroaw3IiFI/UoparJTYmeI/AAAAAAAAIec/LSmFG144YHc/s550/htaccess.png"
        }
      ]
    }, 
    "snippet": "Nov 19, 2013 ... Tutorial focused on Programming, Jquery, Ajax, PHP, Demos, Web ... After \nposting Understanding of Regular Expression article most of my\u00a0...", 
    "htmlSnippet": "Nov 19, 2013 <b>...</b> <b>Tutorial</b> focused on Programming, Jquery, Ajax, <b>PHP</b>, Demos, Web ... After <br>\nposting Understanding of <b>Regular Expression</b> article most of my&nbsp;...", 
    "link": "http://www.9lessons.info/2013/11/htaccess-file-tutorial-and-tips.html", 
    "cacheId": "un62Uh8vkzkJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "URL Rewriting for the Fearful 24 ways", 
    "displayLink": "24ways.org", 
    "htmlTitle": "URL Rewriting for the Fearful 24 ways", 
    "formattedUrl": "24ways.org/2013/url-rewriting-for-the-fearful/", 
    "htmlFormattedUrl": "24ways.org/2013/url-rewriting-for-the-fearful/", 
    "pagemap": {
      "metatags": [
        {
          "twitter:creator": "@drewm", 
          "application-name": "24 ways", 
          "twitter:card": "summary", 
          "twitter:image": "http://cloud.24ways.org/authors/drewmclellan160.jpg", 
          "twitter:description": "Drew McLellan opens 24 ways\u2019 ninth annual advent calendar with a primer on the sometimes arcane lore of rewriting URLs. But while Drew may ably match URL patterns using regular expressions, that shirt with the snowflake pattern clashes hideously with his holly and ivy tie\u2026", 
          "apple-mobile-web-app-title": "24 ways", 
          "twitter:title": "URL Rewriting for the Fearful", 
          "twitter:site": "@24ways", 
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "Dec 1, 2013 ... By far the simplest and most portable option is to use an .htaccess file in ... \nTechnically, it is what's called a Perl Compatible Regular Expression (PCRE) or \n... For our example, we want to make sure that article.php knows the\u00a0...", 
    "htmlSnippet": "Dec 1, 2013 <b>...</b> By far the simplest and most portable option is to use an .<b>htaccess</b> file in ... <br>\nTechnically, it is what&#39;s called a Perl Compatible <b>Regular Expression</b> (PCRE) or <br>\n... For our <b>example</b>, we want to make sure that article.<b>php</b> knows the&nbsp;...", 
    "link": "http://24ways.org/2013/url-rewriting-for-the-fearful/", 
    "cacheId": "SqR53eY2LOYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Essential Guide To Regular Expressions: Tools and Tutorials ...", 
    "displayLink": "www.smashingmagazine.com", 
    "htmlTitle": "Essential Guide To <b>Regular Expressions</b>: Tools and <b>Tutorials</b> <b>...</b>", 
    "formattedUrl": "www.smashingmagazine.com/.../essential-guide-to-regular-expressions-tools- tutorials-and-resources/", 
    "htmlFormattedUrl": "www.smashingmagazine.com/.../essential-guide-to-<b>regular-expressions</b>-tools- <b>tutorials</b>-and-resources/", 
    "pagemap": {
      "metatags": [
        {
          "twitter:creator": "@glenstansberry", 
          "msapplication-tilecolor": "#e53b2c", 
          "application-name": "Smashing Magazine", 
          "twitter:domain": "Smashing Magazine", 
          "og:locale": "en_US", 
          "twitter:site": "@smashingmag", 
          "article:publisher": "https://www.facebook.com/smashmag", 
          "og:url": "http://www.smashingmagazine.com/2009/06/01/essential-guide-to-regular-expressions-tools-tutorials-and-resources/", 
          "og:type": "article", 
          "og:title": "Essential Guide To Regular Expressions: Tools and Tutorials \u2013 Smashing Magazine", 
          "twitter:title": "Essential Guide To Regular Expressions: Tools and Tutorials \u2013 Smashing Magazine", 
          "article:tag": "Regular Expressions,Resources", 
          "article:section": "Coding", 
          "msapplication-square70x70logo": "http://media.mediatemple.netdna-cdn.com/wp-content/themes/smashing-magazine/assets/images/smashing-windows-icon-70-70.png", 
          "og:image": "http://www.smashingmagazine.com/images/regular-expression-roundup/abs.gif", 
          "article:published_time": "2009-06-01T14:20:35+02:00", 
          "viewport": "width=device-width, initial-scale=1.0", 
          "og:site_name": "Smashing Magazine", 
          "twitter:card": "summary_large_image", 
          "twitter:description": "Regular expressions are an essential part of any programmer\u2019s toolkit. They can be very handy when you need to identify, replace or modify text, words, patterns or characters. In a nutshell: regular expressions (regex) are like a Swiss army knife for modifying strings of just about anything. Need to make your site URLs look pretty? Use regex. Need to remove all punctuation from a sentence? Definitely use regex. The uses for regular expressions are almost limitless.   Regular expressions are something that you\u2019ll come across at least once in your development cycle, whether you\u2019re just trying to modify an .htaccess file to make clean URLs, or something much more advanced like filtering RSS feeds or other data. Here are some resources to get you well on your way to mastering regex.", 
          "og:description": "Regular expressions are an essential part of any programmer\u2019s toolkit. They can be very handy when you need to identify, replace or modify text, words, patterns or characters. In a nutshell: regular expressions (regex) are like a Swiss army knife for modifying strings of just about anything. Need to make your site URLs look pretty? Use regex. Need to remove all punctuation from a sentence? Definitely use regex. The uses for regular expressions are almost limitless.   Regular expressions are something that you\u2019ll come across at least once in your development cycle, whether you\u2019re just trying to modify an .htaccess file to make clean URLs, or something much more advanced like filtering RSS feeds or other data. Here are some resources to get you well on your way to mastering regex.", 
          "twitter:image:src": "http://media.mediatemple.netdna-cdn.com/wp-content/uploads/images/post-pictures/regex2.jpg"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "259", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQSA-CegMI1cgnR6B__MDlE-W2zIuqi_-YJrauzBcZp-o3E5SgSIBs5Z_Br", 
          "height": "194"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.smashingmagazine.com/images/regular-expression-roundup/abs.gif"
        }
      ], 
      "TechArticle": [
        {
          "name": "Essential Guide To Regular Expressions: Tools and Tutorials", 
          "discussionUrl": "51 Comments", 
          "url": "Essential Guide To Regular Expressions: Tools and Tutorials", 
          "datePublished": "June 1st, 2009", 
          "bookmark": "Essential Guide To Regular Expressions: Tools and Tutorials", 
          "keywords": "Regular ExpressionsResources"
        }
      ]
    }, 
    "snippet": "Jun 1, 2009 ... In a nutshell: regular expressions (regex) are like a Swiss army knife for \nmodifying strings of just about anything. ... whether you're just trying to modify an .\nhtaccess file to make clean ... Using Regular Expressions with PHP", 
    "htmlSnippet": "Jun 1, 2009 <b>...</b> In a nutshell: <b>regular expressions</b> (<b>regex</b>) are like a Swiss army knife for <br>\nmodifying strings of just about anything. ... whether you&#39;re just trying to modify an .<br>\n<b>htaccess</b> file to make clean ... Using <b>Regular Expressions</b> with <b>PHP</b>", 
    "link": "http://www.smashingmagazine.com/2009/06/01/essential-guide-to-regular-expressions-tools-tutorials-and-resources/", 
    "cacheId": "UtRF8uVdMDkJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": ".htaccess MOD_REWRITE Tutorial - YouTube", 
    "displayLink": "www.youtube.com", 
    "htmlTitle": ".<b>htaccess</b> MOD_REWRITE <b>Tutorial</b> - YouTube", 
    "formattedUrl": "www.youtube.com/watch?v=oqg6Chk6L7M", 
    "htmlFormattedUrl": "www.youtube.com/watch?v=oqg6Chk6L7M", 
    "pagemap": {
      "videoobject": [
        {
          "name": ".htaccess MOD_REWRITE Tutorial", 
          "unlisted": "False", 
          "url": "http://www.youtube.com/watch?v=oqg6Chk6L7M", 
          "datepublished": "2010-12-02", 
          "regionsallowed": "AD,AE,AF,AG,AI,AL,AM,AO,AQ,AR,AS,AT,AU,AW,AX,AZ,BA,BB,BD,BE,BF,BG,BH,BI,BJ,BL,BM,BN,BO,BQ,BR,BS,BT,BV,BW,BY,BZ,CA,CC,CD,CF,CG,CH,CI,CK,CL,CM,CN,CO,CR,CU,CV,CW,CX,CY,CZ,DE,DJ,DK,DM,DO,DZ,EC,EE,EG,EH...", 
          "channelid": "UCFfuK45zBZxhq0m1bxYP-Zw", 
          "videoid": "oqg6Chk6L7M", 
          "paid": "False", 
          "isfamilyfriendly": "True", 
          "genre": "Howto & Style", 
          "interactioncount": "47063", 
          "duration": "PT7M20S", 
          "thumbnailurl": "http://i.ytimg.com/vi/oqg6Chk6L7M/hqdefault.jpg", 
          "description": "The guy who works here has been a great help to me with Mod Rewrite: http://datakoncepts.com/seo We are going to make a Page Handler to route every page requ..."
        }
      ], 
      "metatags": [
        {
          "twitter:image": "http://i.ytimg.com/vi/oqg6Chk6L7M/hqdefault.jpg", 
          "al:web:url": "http://www.youtube.com/watch?v=oqg6Chk6L7M&feature=applinks", 
          "twitter:site": "@youtube", 
          "fb:app_id": "87741124305", 
          "og:url": "http://www.youtube.com/watch?v=oqg6Chk6L7M", 
          "twitter:app:url:iphone": "vnd.youtube://www.youtube.com/watch?v=oqg6Chk6L7M&feature=applinks", 
          "og:image": "http://i.ytimg.com/vi/oqg6Chk6L7M/hqdefault.jpg", 
          "al:ios:app_store_id": "544007664", 
          "title": ".htaccess MOD_REWRITE Tutorial", 
          "og:type": "video", 
          "al:android:package": "com.google.android.youtube", 
          "og:title": ".htaccess MOD_REWRITE Tutorial", 
          "twitter:title": ".htaccess MOD_REWRITE Tutorial", 
          "al:ios:url": "vnd.youtube://www.youtube.com/watch?v=oqg6Chk6L7M&feature=applinks", 
          "twitter:app:name:iphone": "YouTube", 
          "twitter:app:name:ipad": "YouTube", 
          "twitter:app:id:ipad": "544007664", 
          "al:ios:app_name": "YouTube", 
          "al:android:app_name": "YouTube", 
          "twitter:url": "http://www.youtube.com/watch?v=oqg6Chk6L7M", 
          "twitter:app:id:iphone": "544007664", 
          "og:site_name": "YouTube", 
          "twitter:card": "player", 
          "twitter:description": "The guy who works here has been a great help to me with Mod Rewrite: http://datakoncepts.com/seo We are going to make a Page Handler to route every page requ...", 
          "og:description": "The guy who works here has been a great help to me with Mod Rewrite: http://datakoncepts.com/seo We are going to make a Page Handler to route every page requ...", 
          "og:video:tag": ".htaccess", 
          "al:android:url": "vnd.youtube://www.youtube.com/watch?v=oqg6Chk6L7M&feature=applinks"
        }
      ], 
      "imageobject": [
        {
          "url": "http://i.ytimg.com/vi/oqg6Chk6L7M/hqdefault.jpg", 
          "width": "480", 
          "height": "360"
        }
      ], 
      "person": [
        {
          "url": "http://www.youtube.com/user/JREAMdesign"
        }, 
        {
          "url": "https://plus.google.com/116660730628746706005"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "259", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRLaZyMLV85oarGRf1NAZfvHNia9V42G6WYGexjRxYlgBGdyCEmXkQ9nic", 
          "height": "194"
        }
      ], 
      "cse_image": [
        {
          "src": "http://i.ytimg.com/vi/oqg6Chk6L7M/hqdefault.jpg"
        }
      ]
    }, 
    "snippet": "Dec 2, 2010 ... I'll show you some basics and how to grab the URL inside PHP as well. This is \nfun, but .... Dude! How can you not know regular expressions?", 
    "htmlSnippet": "Dec 2, 2010 <b>...</b> I&#39;ll show you some basics and how to grab the URL inside <b>PHP</b> as well. This is <br>\nfun, but .... Dude! How can you not know <b>regular expressions</b>?", 
    "link": "http://www.youtube.com/watch?v=oqg6Chk6L7M", 
    "cacheId": "FtGAJU5R3FEJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Sculpting text with regex, grep, sed and awk", 
    "displayLink": "matt.might.net", 
    "htmlTitle": "Sculpting text with <b>regex</b>, <b>grep</b>, <b>sed</b> and <b>awk</b>", 
    "formattedUrl": "matt.might.net/articles/sculpting-text/", 
    "htmlFormattedUrl": "matt.might.net/articles/sculpting-text/", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=480, initial-scale=1"
        }
      ]
    }, 
    "snippet": "regex is a language for describing patterns in strings;; grep filters its input against \na pattern;; sed applies transformation rules to each line; and; awk manipulates\u00a0...", 
    "htmlSnippet": "<b>regex</b> is a language for describing <b>patterns</b> in strings;; <b>grep</b> filters its input against <br>\na pattern;; <b>sed</b> applies transformation rules to each line; and; <b>awk</b> manipulates&nbsp;...", 
    "link": "http://matt.might.net/articles/sculpting-text/", 
    "cacheId": "RCmY9c7h6U4J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "GNU Regular Expression Extensions - Gnulib Regex Module", 
    "displayLink": "www.regular-expressions.info", 
    "htmlTitle": "GNU <b>Regular Expression</b> Extensions - Gnulib <b>Regex</b> Module", 
    "formattedUrl": "www.regular-expressions.info/gnu.html", 
    "htmlFormattedUrl": "www.<b>regular-expressions</b>.info/gnu.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width", 
          "author": "Jan Goyvaerts"
        }
      ]
    }, 
    "snippet": "This obviously includes traditional regular expression utilities like grep, sed and \nawk. GNU's implementation of these tools follows the POSIX standard, with\u00a0...", 
    "htmlSnippet": "This obviously includes traditional <b>regular expression</b> utilities like <b>grep</b>, <b>sed</b> and <br>\n<b>awk</b>. GNU&#39;s implementation of these tools follows the POSIX standard, with&nbsp;...", 
    "link": "http://www.regular-expressions.info/gnu.html", 
    "cacheId": "VrvFnxYLg1IJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "regex - how to use sed, awk, or gawk to print only what is matched ...", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>regex</b> - how to use <b>sed</b>, <b>awk</b>, or <b>gawk</b> to print only what is matched <b>...</b>", 
    "formattedUrl": "stackoverflow.com/.../how-to-use-sed-awk-or-gawk-to-print-only-what-is- matched", 
    "htmlFormattedUrl": "stackoverflow.com/.../how-to-use-<b>sed</b>-<b>awk</b>-or-<b>gawk</b>-to-print-only-what-is- matched", 
    "pagemap": {
      "answer": [
        {
          "text": "My sed (Mac OS X) didn't work with +. I tried * instead and I added p tag for printing match: sed -n 's/^.*abc\\([0-9]*\\)xyz.*$/\\1/p' example.txt For matching at least one numeric character...", 
          "upvotecount": "24"
        }, 
        {
          "text": "I use perl to make this easier for myself. e.g. perl -ne 'print $1 if /.*abc([0-9]+)xyz.*/' This runs Perl, the -n option instructs Perl to read in one line at a time from STDIN and execute...", 
          "upvotecount": "9"
        }, 
        {
          "text": "If your version of grep supports it you could use the -o option to print only the portion of any line that matches your regexp. If not then here's the best sed I could come up with: sed -e...", 
          "upvotecount": "3"
        }, 
        {
          "text": "If you want to select lines then strip out the bits you don't want: egrep 'abc[0-9]+xyz' inputFile | sed -e 's/^.*abc//' -e 's/xyz.*$//' It basically selects the lines you want with egrep and...", 
          "upvotecount": "1"
        }, 
        {
          "text": "perl is the cleanest syntax, but if you don't have perl (not always there, I understand), then the only way to use gawk and components of a regex is to use the gensub feature. gawk '/abc[0-9]+xyz/...", 
          "upvotecount": "1"
        }, 
        {
          "text": "you can do it with the shell while read -r line do case \"$line\" in *abc*[0-9]*xyz* ) t=\"${line##abc}\" echo \"num is ${t%%xyz}\";; esac done <\"file\"", 
          "upvotecount": "-1"
        }, 
        {
          "text": "For awk. I would use the following script: /.*abc([0-9]+)xyz.*/ { print $0; next; } { /* default, do nothing */ }", 
          "upvotecount": "-3"
        }, 
        {
          "text": "gawk '/.*abc([0-9]+)xyz.*/' file", 
          "upvotecount": "-3"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I see lots of examples and man pages on how to do things like search-and-replace using sed, awk, or gawk. But in my case, I have a regular expression that I want to run against a text file to extr...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "how to use sed, awk, or gawk to print only what is matched?", 
          "title": "how to use sed, awk, or gawk to print only what is matched?"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/1733692/how-to-use-sed-awk-or-gawk-to-print-only-what-is-matched", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/1733692/how-to-use-sed-awk-or-gawk-to-print-only-what-is-matched", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/1733692/how-to-use-sed-awk-or-gawk-to-print-only-what-is-matched", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I see lots of examples and man pages on how to do things like search-and-replace using sed, awk, or gawk.  But in my case, I have a regular expression that I want to run against a text file to extr...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/1733692/how-to-use-sed-awk-or-gawk-to-print-only-what-is-matched", 
          "twitter:card": "summary", 
          "twitter:title": "how to use sed, awk, or gawk to print only what is matched?", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "8", 
          "text": "I see lots of examples and man pages on how to do things like search-and-replace using sed, awk, or gawk. But in my case, I have a regular expression that I want to run against a text file...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "how to use sed, awk, or gawk to print only what is matched?", 
          "upvotecount": "40"
        }
      ]
    }, 
    "snippet": "But in my case, I have a regular expression that I want to run against a text ... \nusing Regex and powerful command line utilities like sed/awk or\u00a0...", 
    "htmlSnippet": "But in my case, I have a <b>regular expression</b> that I want to run against a text ... <br>\nusing <b>Regex</b> and powerful <b>command</b> line utilities like <b>sed</b>/<b>awk</b> or&nbsp;...", 
    "link": "http://stackoverflow.com/questions/1733692/how-to-use-sed-awk-or-gawk-to-print-only-what-is-matched", 
    "cacheId": "1Hg7KORQ9tMJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Lab5: Regular Expression (Use of grep, awk and sed) - YouTube", 
    "displayLink": "www.youtube.com", 
    "htmlTitle": "Lab5: <b>Regular Expression</b> (Use of <b>grep</b>, <b>awk</b> and <b>sed</b>) - YouTube", 
    "formattedUrl": "www.youtube.com/watch?v=KByVf5-OJuQ", 
    "htmlFormattedUrl": "www.youtube.com/watch?v=KByVf5-OJuQ", 
    "pagemap": {
      "videoobject": [
        {
          "isfamilyfriendly": "True", 
          "name": "Lab5: Regular Expression (Use of grep, awk and sed)", 
          "unlisted": "False", 
          "url": "http://www.youtube.com/watch?v=KByVf5-OJuQ", 
          "datepublished": "2012-09-15", 
          "regionsallowed": "AD,AE,AF,AG,AI,AL,AM,AO,AQ,AR,AS,AT,AU,AW,AX,AZ,BA,BB,BD,BE,BF,BG,BH,BI,BJ,BL,BM,BN,BO,BQ,BR,BS,BT,BV,BW,BY,BZ,CA,CC,CD,CF,CG,CH,CI,CK,CL,CM,CN,CO,CR,CU,CV,CW,CX,CY,CZ,DE,DJ,DK,DM,DO,DZ,EC,EE,EG,EH...", 
          "channelid": "UCIpBw-uQDKaCATA0RDcdI_Q", 
          "videoid": "KByVf5-OJuQ", 
          "paid": "False", 
          "height": "360", 
          "playertype": "HTML5 Flash", 
          "width": "480", 
          "interactioncount": "5013", 
          "duration": "PT14M2S", 
          "embedurl": "https://www.youtube.com/embed/KByVf5-OJuQ", 
          "thumbnailurl": "http://i.ytimg.com/vi/KByVf5-OJuQ/hqdefault.jpg", 
          "genre": "Education", 
          "description": "This video was made as part of hypo-explanation by Aakanksha, Maneet, Utkarsh who are the students from 2011 batch."
        }
      ], 
      "metatags": [
        {
          "twitter:app:name:googleplay": "YouTube", 
          "twitter:app:url:ipad": "vnd.youtube://www.youtube.com/watch?v=KByVf5-OJuQ&feature=applinks", 
          "twitter:image": "http://i.ytimg.com/vi/KByVf5-OJuQ/hqdefault.jpg", 
          "al:web:url": "http://www.youtube.com/watch?v=KByVf5-OJuQ&feature=applinks", 
          "twitter:site": "@youtube", 
          "twitter:app:url:googleplay": "http://www.youtube.com/watch?v=KByVf5-OJuQ", 
          "fb:app_id": "87741124305", 
          "og:video:url": "https://www.youtube.com/embed/KByVf5-OJuQ", 
          "og:url": "http://www.youtube.com/watch?v=KByVf5-OJuQ", 
          "twitter:app:url:iphone": "vnd.youtube://www.youtube.com/watch?v=KByVf5-OJuQ&feature=applinks", 
          "twitter:url": "http://www.youtube.com/watch?v=KByVf5-OJuQ", 
          "al:ios:app_store_id": "544007664", 
          "title": "Lab5: Regular Expression (Use of grep, awk and sed)", 
          "og:video:type": "text/html", 
          "og:type": "video", 
          "al:android:package": "com.google.android.youtube", 
          "twitter:player:width": "480", 
          "og:title": "Lab5: Regular Expression (Use of grep, awk and sed)", 
          "twitter:title": "Lab5: Regular Expression (Use of grep, awk and sed)", 
          "al:ios:url": "vnd.youtube://www.youtube.com/watch?v=KByVf5-OJuQ&feature=applinks", 
          "twitter:player": "https://www.youtube.com/embed/KByVf5-OJuQ", 
          "twitter:app:name:iphone": "YouTube", 
          "og:video:secure_url": "https://www.youtube.com/embed/KByVf5-OJuQ", 
          "twitter:app:name:ipad": "YouTube", 
          "twitter:app:id:ipad": "544007664", 
          "al:ios:app_name": "YouTube", 
          "og:video:height": "360", 
          "al:android:app_name": "YouTube", 
          "twitter:app:id:googleplay": "com.google.android.youtube", 
          "og:image": "http://i.ytimg.com/vi/KByVf5-OJuQ/hqdefault.jpg", 
          "twitter:app:id:iphone": "544007664", 
          "og:site_name": "YouTube", 
          "twitter:card": "player", 
          "twitter:description": "This video was made as part of hypo-explanation by Aakanksha, Maneet, Utkarsh who are the students from 2011 batch.", 
          "og:description": "This video was made as part of hypo-explanation by Aakanksha, Maneet, Utkarsh who are the students from 2011 batch.", 
          "og:video:tag": "Regular Expression", 
          "al:android:url": "vnd.youtube://www.youtube.com/watch?v=KByVf5-OJuQ&feature=applinks", 
          "og:video:width": "480", 
          "twitter:player:height": "360"
        }
      ], 
      "imageobject": [
        {
          "url": "http://i.ytimg.com/vi/KByVf5-OJuQ/hqdefault.jpg", 
          "width": "480", 
          "height": "360"
        }
      ], 
      "person": [
        {
          "url": "http://www.youtube.com/user/SystemMgmtIiitd"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "259", 
          "src": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRKWVlUI3DsZYl6FsLpfSguKpLRXBa2JRXtaYKRs7bQgVZl-hoORnCVkb8", 
          "height": "194"
        }
      ], 
      "cse_image": [
        {
          "src": "http://i.ytimg.com/vi/KByVf5-OJuQ/hqdefault.jpg"
        }
      ]
    }, 
    "snippet": "Sep 15, 2012 ... This video was made as part of hypo-explanation by Aakanksha, Maneet, \nUtkarsh who are the students from 2011 batch.", 
    "htmlSnippet": "Sep 15, 2012 <b>...</b> This video was made as part of hypo-explanation by Aakanksha, Maneet, <br>\nUtkarsh who are the students from 2011 batch.", 
    "link": "http://www.youtube.com/watch?v=KByVf5-OJuQ", 
    "cacheId": "QYekZvmmCbIJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "grep, awk and sed \u2013 three VERY useful command-line utilities Matt ...", 
    "displayLink": "www-users.york.ac.uk", 
    "htmlTitle": "<b>grep</b>, <b>awk</b> and <b>sed</b> \u2013 three VERY useful <b>command</b>-line utilities Matt <b>...</b>", 
    "formattedUrl": "www-users.york.ac.uk/~mijp1/teaching/2nd.../grep_awk_sed.pdf", 
    "htmlFormattedUrl": "www-users.york.ac.uk/~mijp1/teaching/2nd.../<b>grep</b>_<b>awk</b>_<b>sed</b>.pdf", 
    "pagemap": {
      "metatags": [
        {
          "creationdate": "D:20141120114208Z'", 
          "creator": "Writer", 
          "producer": "LibreOffice 4.2", 
          "author": "Matt Probert"
        }
      ]
    }, 
    "fileFormat": "PDF/Adobe Acrobat", 
    "snippet": "In the simplest terms, grep (global regular expression print) will search input files \nfor a search string, and print the lines that match it. Beginning at the first line in\u00a0...", 
    "htmlSnippet": "In the simplest terms, <b>grep</b> (global <b>regular expression</b> print) will search input files <br>\nfor a search string, and print the lines that match it. Beginning at the first line in&nbsp;...", 
    "link": "http://www-users.york.ac.uk/~mijp1/teaching/2nd_year_Comp_Lab/guides/grep_awk_sed.pdf", 
    "mime": "application/pdf", 
    "cacheId": "xDjepNhOeIUJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Welcome to The UNIX Grymoire!", 
    "displayLink": "www.grymoire.com", 
    "htmlTitle": "Welcome to The <b>UNIX</b> Grymoire!", 
    "formattedUrl": "www.grymoire.com/Unix/", 
    "htmlFormattedUrl": "www.grymoire.com/<b>Unix</b>/", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ]
    }, 
    "snippet": "The Unix Grymoire list of tutorials. ... Grep - the global/regular expression/print \ncommand - Find strings and regular expresisons in one or more files. SED - The\u00a0...", 
    "htmlSnippet": "The <b>Unix</b> Grymoire list of tutorials. ... <b>Grep</b> - the global/<b>regular expression</b>/print <br>\n<b>command</b> - Find strings and regular expresisons in one or more files. <b>SED</b> - The&nbsp;...", 
    "link": "http://www.grymoire.com/Unix/", 
    "cacheId": "ic2nMs0t2xQJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Sed and Awk", 
    "displayLink": "www.cs.nyu.edu", 
    "htmlTitle": "<b>Sed</b> and <b>Awk</b>", 
    "formattedUrl": "www.cs.nyu.edu/~mohri/unix08/lect5.pdf", 
    "htmlFormattedUrl": "www.cs.nyu.edu/~mohri/<b>unix</b>08/lect5.pdf", 
    "pagemap": {
      "metatags": [
        {
          "author": "Mehryar Mohri", 
          "producer": "Mac OS X 10.4.8 Quartz PDFContext", 
          "creator": "PowerPoint", 
          "title": "lect5.ppt", 
          "moddate": "D:20070201225922-05'00'", 
          "creationdate": "D:20070201225922-05'00'"
        }
      ]
    }, 
    "fileFormat": "PDF/Adobe Acrobat", 
    "snippet": "Last week. \u2022 Regular Expressions. \u2013 grep. \u2013 egrep ... Look for patterns one line at \na time, like grep ... All editing commands in a sed script are applied in order to\u00a0...", 
    "htmlSnippet": "Last week. \u2022 <b>Regular Expressions</b>. \u2013 <b>grep</b>. \u2013 egrep ... Look for <b>patterns</b> one line at <br>\na time, like <b>grep</b> ... All editing <b>commands</b> in a <b>sed script</b> are applied in order to&nbsp;...", 
    "link": "http://www.cs.nyu.edu/~mohri/unix08/lect5.pdf", 
    "mime": "application/pdf", 
    "cacheId": "Ctsq9DyZSh0J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular expressions and sed & awk", 
    "displayLink": "www.cs.umsl.edu", 
    "htmlTitle": "<b>Regular expressions</b> and <b>sed</b> &amp; <b>awk</b>", 
    "formattedUrl": "www.cs.umsl.edu/~sanjiv/classes/cs2750/lectures/re.pdf", 
    "htmlFormattedUrl": "www.cs.umsl.edu/~sanjiv/classes/cs2750/lectures/re.pdf", 
    "pagemap": {
      "metatags": [
        {
          "fullbanner": "This is pdfeTeX, Version 3.141592-1.21a-2.2 (Web2C 7.5.4) kpathsea version 3.5.4", 
          "creationdate": "D:20120214172138-06'00'", 
          "producer": "pdfeTeX-1.21a", 
          "creator": "TeX"
        }
      ]
    }, 
    "fileFormat": "PDF/Adobe Acrobat", 
    "snippet": "Nov 20, 1996 ... Used by several Unix utilities such as ed, vi, emacs, grep, sed, and awk to ... The \nquotes above are not a part of the regular expression but are\u00a0...", 
    "htmlSnippet": "Nov 20, 1996 <b>...</b> Used by several <b>Unix</b> utilities such as ed, vi, emacs, <b>grep</b>, <b>sed</b>, and <b>awk</b> to ... The <br>\nquotes above are not a part of the <b>regular expression</b> but are&nbsp;...", 
    "link": "http://www.cs.umsl.edu/~sanjiv/classes/cs2750/lectures/re.pdf", 
    "mime": "application/pdf", 
    "cacheId": "N3uL-_bCfZUJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Is there a basic tutorial for grep, awk and sed? - Unix & Linux Stack ...", 
    "displayLink": "unix.stackexchange.com", 
    "htmlTitle": "Is there a basic <b>tutorial</b> for <b>grep</b>, <b>awk</b> and <b>sed</b>? - <b>Unix</b> &amp; Linux Stack <b>...</b>", 
    "formattedUrl": "unix.stackexchange.com/.../is-there-a-basic-tutorial-for-grep-awk-and-sed", 
    "htmlFormattedUrl": "<b>unix</b>.stackexchange.com/.../is-there-a-basic-<b>tutorial</b>-for-<b>grep</b>-<b>awk</b>-and-<b>sed</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "AWK is particularly well suited for tabular data and has a lower learning curve than some alternatives. AWK: A Tutorial and Introduction An AWK Primer RegularExpressions.info sed tutorial grep...", 
          "upvotecount": "43"
        }, 
        {
          "text": "The O'Reilly sed and awk book is great for er sed and awk.", 
          "upvotecount": "12"
        }, 
        {
          "text": "I wrote a book on sed\u2014Definitive Guide to sed\u2014that includes a tutorial. It fully covers sed, as well as related commands like grep, tr, head and tail. Also fully covers regular expressions...", 
          "upvotecount": "3"
        }, 
        {
          "text": "The Regular Expressions Cookbook published by O'Rielly would be enough to get you anywhere in any language that uses them.", 
          "upvotecount": "2"
        }, 
        {
          "text": "If you are to learn one out of these 3( grep , sed and awk ) , you can just learn awk/gawk.. awk can do grep and sed's functions, ie using regex to search/replace text, plus much more because...", 
          "upvotecount": "1"
        }, 
        {
          "text": "The authors of the book are Kernigan and Pike the title is something like \"The Unix Programming Environment\". The book that I actually learned from was called \"An Introduction to Berkely Unix\".", 
          "upvotecount": "1"
        }, 
        {
          "text": "In my opinion, awk is more or less obsolete (however, others will strongly argue this opinion), most people I know nowadays instead use some script language like perl or today often python...", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a", 
          "description": "I've been a Linux user for a while, and I've a pretty decent understanding of most the common command line utilities. However, ones that come up and up again in relation to programming are grep, aw...", 
          "primaryimageofpage": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a", 
          "name": "Is there a basic tutorial for grep, awk and sed?", 
          "title": "Is there a basic tutorial for grep, awk and sed?"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://unix.stackexchange.com/questions/2434/is-there-a-basic-tutorial-for-grep-awk-and-sed", 
          "twitter:app:url:iphone": "se-zaphod://unix.stackexchange.com/questions/2434/is-there-a-basic-tutorial-for-grep-awk-and-sed", 
          "twitter:app:url:ipad": "se-zaphod://unix.stackexchange.com/questions/2434/is-there-a-basic-tutorial-for-grep-awk-and-sed", 
          "twitter:app:country": "US", 
          "twitter:domain": "unix.stackexchange.com", 
          "twitter:description": "I've been a Linux user for a while, and I've a pretty decent understanding of most the common command line utilities. However, ones that come up and up again in relation to programming are grep, aw...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:title": "Is there a basic tutorial for grep, awk and sed?", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://unix.stackexchange.com/questions/2434/is-there-a-basic-tutorial-for-grep-awk-and-sed", 
          "twitter:card": "summary", 
          "twitter:site": "@StackUnix", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "7", 
          "text": "I've been a Linux user for a while, and I've a pretty decent understanding of most the common command line utilities. However, ones that come up and up again in relation to programming are...", 
          "image": "http://cdn.sstatic.net/unix/img/apple-touch-icon.png?v=5cf7fe716a89", 
          "name": "Is there a basic tutorial for grep, awk and sed? [closed]", 
          "upvotecount": "64"
        }
      ]
    }, 
    "snippet": "Sep 25, 2010 ... It fully covers sed , as well as related commands like grep , tr , head and tail . Also \nfully covers regular expressions much better than I've seen\u00a0...", 
    "htmlSnippet": "Sep 25, 2010 <b>...</b> It fully covers <b>sed</b> , as well as related <b>commands</b> like <b>grep</b> , tr , head and tail . Also <br>\nfully covers <b>regular expressions</b> much better than I&#39;ve seen&nbsp;...", 
    "link": "http://unix.stackexchange.com/questions/2434/is-there-a-basic-tutorial-for-grep-awk-and-sed", 
    "cacheId": "Md1YaMgCJ-MJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "7.2. re \u2014 Regular expression operations \u2014 Python 2.7.10 ...", 
    "displayLink": "docs.python.org", 
    "htmlTitle": "7.2. re \u2014 <b>Regular expression</b> operations \u2014 <b>Python 2.7</b>.10 <b>...</b>", 
    "formattedUrl": "https://docs.python.org/2/library/re.html", 
    "htmlFormattedUrl": "https://docs.<b>python</b>.org/2/library/re.html", 
    "snippet": "Regular expressions use the backslash character ('\\') to indicate special forms or \nto allow special characters to be used without invoking their special meaning.", 
    "htmlSnippet": "<b>Regular expressions</b> use the backslash character (&#39;\\&#39;) to indicate special forms or <br>\nto allow special characters to be used without invoking their special meaning.", 
    "link": "https://docs.python.org/2/library/re.html", 
    "cacheId": "u3pL_r_YTfwJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Python 2.7+ Regex Tester", 
    "displayLink": "ksamuel.pythonanywhere.com", 
    "htmlTitle": "<b>Python 2.7</b>+ <b>Regex</b> Tester", 
    "formattedUrl": "ksamuel.pythonanywhere.com/", 
    "htmlFormattedUrl": "ksamuel.<b>python</b>anywhere.com/", 
    "snippet": "A standalone Python 2.7 online regex tester using the Bottle framework.", 
    "htmlSnippet": "A standalone <b>Python 2.7</b> online <b>regex</b> tester using the Bottle framework.", 
    "link": "http://ksamuel.pythonanywhere.com/", 
    "cacheId": "TNYZfgljWHcJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Python 2.7 Tutorial", 
    "displayLink": "www.pitt.edu", 
    "htmlTitle": "<b>Python 2.7 Tutorial</b>", 
    "formattedUrl": "www.pitt.edu/~naraehan/python2/re.html", 
    "htmlFormattedUrl": "www.pitt.edu/~naraehan/<b>python</b>2/re.html", 
    "snippet": "So you learned all about regular expressions and are ready to use them in \nPython. Let's get to it! The re module is Python's standard library that handles all\u00a0...", 
    "htmlSnippet": "So you learned all about <b>regular expressions</b> and are ready to use them in <br>\n<b>Python</b>. Let&#39;s get to it! The re module is <b>Python&#39;s</b> standard library that handles all&nbsp;...", 
    "link": "http://www.pitt.edu/~naraehan/python2/re.html", 
    "cacheId": "CVIYb7om4XcJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Let's Learn Python #23 - Regular Expressions - YouTube", 
    "displayLink": "www.youtube.com", 
    "htmlTitle": "Let&#39;s Learn <b>Python</b> #23 - <b>Regular Expressions</b> - YouTube", 
    "formattedUrl": "www.youtube.com/watch?v=ZdDOauFIDkw", 
    "htmlFormattedUrl": "www.youtube.com/watch?v=ZdDOauFIDkw", 
    "pagemap": {
      "videoobject": [
        {
          "isfamilyfriendly": "True", 
          "name": "Let's Learn Python #23 - Regular Expressions", 
          "unlisted": "False", 
          "url": "http://www.youtube.com/watch?v=ZdDOauFIDkw", 
          "datepublished": "2014-02-15", 
          "regionsallowed": "AD,AE,AF,AG,AI,AL,AM,AO,AQ,AR,AS,AT,AU,AW,AX,AZ,BA,BB,BD,BE,BF,BG,BH,BI,BJ,BL,BM,BN,BO,BQ,BR,BS,BT,BV,BW,BY,BZ,CA,CC,CD,CF,CG,CH,CI,CK,CL,CM,CN,CO,CR,CU,CV,CW,CX,CY,CZ,DE,DJ,DK,DM,DO,DZ,EC,EE,EG,EH...", 
          "channelid": "UCPme28sMOcWS50CgtTWUZIw", 
          "videoid": "ZdDOauFIDkw", 
          "paid": "False", 
          "height": "720", 
          "playertype": "HTML5 Flash", 
          "width": "1280", 
          "interactioncount": "20855", 
          "duration": "PT21M34S", 
          "embedurl": "https://www.youtube.com/embed/ZdDOauFIDkw", 
          "thumbnailurl": "http://i.ytimg.com/vi/ZdDOauFIDkw/maxresdefault.jpg", 
          "genre": "Education", 
          "description": "This week, I cover Regular Expressions in Python! Please leave me a comment or question below! Like and Subscribe to show your support! :D ==================..."
        }
      ], 
      "metatags": [
        {
          "og:url": "http://www.youtube.com/watch?v=ZdDOauFIDkw", 
          "al:web:url": "http://www.youtube.com/watch?v=ZdDOauFIDkw&feature=applinks", 
          "al:ios:app_name": "YouTube", 
          "og:site_name": "YouTube", 
          "al:ios:app_store_id": "544007664", 
          "title": "Let's Learn Python #23 - Regular Expressions", 
          "og:video:type": "text/html", 
          "al:android:package": "com.google.android.youtube", 
          "og:type": "video", 
          "og:description": "This week, I cover Regular Expressions in Python! Please leave me a comment or question below! Like and Subscribe to show your support! :D ==================...", 
          "og:video:secure_url": "https://www.youtube.com/embed/ZdDOauFIDkw", 
          "og:video:height": "720", 
          "og:video:tag": "TPayne", 
          "og:title": "Let's Learn Python #23 - Regular Expressions", 
          "al:android:url": "vnd.youtube://www.youtube.com/watch?v=ZdDOauFIDkw&feature=applinks", 
          "al:android:app_name": "YouTube", 
          "og:image": "http://i.ytimg.com/vi/ZdDOauFIDkw/maxresdefault.jpg", 
          "og:video:url": "https://www.youtube.com/embed/ZdDOauFIDkw", 
          "og:video:width": "1280", 
          "al:ios:url": "vnd.youtube://www.youtube.com/watch?v=ZdDOauFIDkw&feature=applinks"
        }
      ], 
      "imageobject": [
        {
          "url": "http://i.ytimg.com/vi/ZdDOauFIDkw/maxresdefault.jpg", 
          "width": "1280", 
          "height": "720"
        }
      ], 
      "person": [
        {
          "url": "http://www.youtube.com/user/TPayneExperience"
        }, 
        {
          "url": "https://plus.google.com/111294143933266362397"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "300", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcSIl2hVSaWWFvuX44EeoRRh593ud0c92f_9Ice97oRz7t78ftNcbnTHSOg", 
          "height": "168"
        }
      ], 
      "cse_image": [
        {
          "src": "http://i.ytimg.com/vi/ZdDOauFIDkw/maxresdefault.jpg"
        }
      ]
    }, 
    "snippet": "Feb 15, 2014 ... This week, I cover Regular Expressions in Python! Please leave me a ... Python \n2.7.x: http://docs.python.org/2/library/re.html. Python 3.3.x:\u00a0...", 
    "htmlSnippet": "Feb 15, 2014 <b>...</b> This week, I cover <b>Regular Expressions</b> in <b>Python</b>! Please leave me a ... <b>Python</b> <br>\n<b>2.7</b>.x: http://docs.<b>python</b>.org/2/library/re.html. <b>Python</b> 3.3.x:&nbsp;...", 
    "link": "http://www.youtube.com/watch?v=ZdDOauFIDkw", 
    "cacheId": "7uvz6VsKgYMJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Python 2.7 Regular Expressions", 
    "displayLink": "montcs.bloomu.edu", 
    "htmlTitle": "<b>Python 2.7 Regular Expressions</b>", 
    "formattedUrl": "montcs.bloomu.edu/Information/Python/python-regex-cheatsheet.pdf", 
    "htmlFormattedUrl": "montcs.bloomu.edu/Information/<b>Python</b>/<b>python</b>-<b>regex</b>-cheatsheet.pdf", 
    "pagemap": {
      "metatags": [
        {
          "title": "Python 2.7 Regular Expressions", 
          "creationdate": "D:20111115081706+00'00'", 
          "subject": "(unspecified)", 
          "producer": "ReportLab PDF Library - www.reportlab.com", 
          "creator": "(unspecified)"
        }
      ]
    }, 
    "fileFormat": "PDF/Adobe Acrobat", 
    "snippet": "Python 2.7 Regular. Expressions. Special characters: \\ escapes special \ncharacters. . matches any character. ^ matches start of the string (or line if \nMULTILINE). $.", 
    "htmlSnippet": "<b>Python 2.7</b> Regular. <b>Expressions</b>. Special characters: \\ escapes special <br>\ncharacters. . matches any character. ^ matches start of the string (or line if <br>\nMULTILINE). $.", 
    "link": "http://montcs.bloomu.edu/Information/Python/python-regex-cheatsheet.pdf", 
    "mime": "application/pdf", 
    "cacheId": "Or9uPcwjk_QJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Replacement Strings Tutorial", 
    "displayLink": "www.regular-expressions.info", 
    "htmlTitle": "<b>Replacement Strings Tutorial</b>", 
    "formattedUrl": "www.regular-expressions.info/replacetutorial.html", 
    "htmlFormattedUrl": "www.<b>regular-expressions</b>.info/<b>replacetutorial</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width", 
          "author": "Jan Goyvaerts"
        }
      ]
    }, 
    "snippet": "Sep 19, 2013 ... Replacement Strings Tutorial. A replacement string, also known as the \nreplacement text, is the text that each regular expression match is\u00a0...", 
    "htmlSnippet": "Sep 19, 2013 <b>...</b> <b>Replacement Strings Tutorial</b>. A <b>replacement string</b>, also known as the <br>\n<b>replacement</b> text, is the text that each <b>regular expression match</b> is&nbsp;...", 
    "link": "http://www.regular-expressions.info/replacetutorial.html", 
    "cacheId": "0iw-njpjuHYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Search and replace with Java regular expressions", 
    "displayLink": "www.javamex.com", 
    "htmlTitle": "Search and <b>replace</b> with Java <b>regular expressions</b>", 
    "formattedUrl": "www.javamex.com/tutorials/regular_expressions/search_replace.shtml", 
    "htmlFormattedUrl": "www.javamex.com/<b>tutorials</b>/<b>regular_expressions</b>/search_<b>replace</b>.shtml", 
    "pagemap": {
      "metatags": [
        {
          "author": "Neil Coffey"
        }
      ]
    }, 
    "snippet": "In the replacement string, we can refer to captured groups from the regular \nexpression. For example, the following expression removes instances of the \nHTML\u00a0...", 
    "htmlSnippet": "In the <b>replacement string</b>, we can refer to captured groups from the <b>regular</b> <br>\n<b>expression</b>. For <b>example</b>, the following expression removes instances of the <br>\nHTML&nbsp;...", 
    "link": "http://www.javamex.com/tutorials/regular_expressions/search_replace.shtml", 
    "cacheId": "6OY40wz9eD8J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular expressions with find and replace", 
    "displayLink": "www.ultraedit.com", 
    "htmlTitle": "<b>Regular expressions</b> with find and <b>replace</b>", 
    "formattedUrl": "www.ultraedit.com/support/tutorials.../regular_expressions.html", 
    "htmlFormattedUrl": "www.ultraedit.com/support/<b>tutorials</b>.../<b>regular_expressions</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "copyright": "Copyright (c) 2015 IDM Computer Solutions, Inc", 
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "Regular Expressions are essentially patterns (rather than specific strings) that ... \nand UNIX-style regular expressions as well as some examples to demonstrate\u00a0...", 
    "htmlSnippet": "<b>Regular Expressions</b> are essentially patterns (rather than specific <b>strings</b>) that ... <br>\nand UNIX-style <b>regular expressions</b> as well as some <b>examples</b> to demonstrate&nbsp;...", 
    "link": "http://www.ultraedit.com/support/tutorials_power_tips/ultraedit/regular_expressions.html", 
    "cacheId": "dkA2J0wB2rAJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Search and Replace Regular Expressions", 
    "displayLink": "www.funduc.com", 
    "htmlTitle": "Search and <b>Replace Regular Expressions</b>", 
    "formattedUrl": "www.funduc.com/regexp.htm", 
    "htmlFormattedUrl": "www.funduc.com/<b>regexp</b>.htm", 
    "pagemap": {
      "metatags": [
        {
          "progid": "FrontPage.Editor.Document", 
          "author": "Funduc Software, Inc."
        }
      ]
    }, 
    "snippet": "Supports grep style Regular Expressions. ... *(is) will match zero or more strings \nsuch as: is, crisis ..... Regular Expression Search & Replacement Examples.", 
    "htmlSnippet": "Supports grep style <b>Regular Expressions</b>. ... *(is) will <b>match</b> zero or more <b>strings</b> <br>\nsuch as: is, crisis ..... <b>Regular Expression</b> Search &amp; <b>Replacement Examples</b>.", 
    "link": "http://www.funduc.com/regexp.htm", 
    "cacheId": "o2-cLSCbUFIJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular expression help and examples for grepWin - Stefan's Tools", 
    "displayLink": "stefanstools.sourceforge.net", 
    "htmlTitle": "<b>Regular expression</b> help and <b>examples</b> for grepWin - Stefan&#39;s Tools", 
    "formattedUrl": "stefanstools.sourceforge.net/regexhelp.html", 
    "htmlFormattedUrl": "stefanstools.sourceforge.net/<b>regex</b>help.html", 
    "snippet": "For a much more detailed tutorial on regular expressions, please go to this site - it \nalso explains a lot ... replacing strings is not more complicated than searching.", 
    "htmlSnippet": "For a much more detailed <b>tutorial</b> on <b>regular expressions</b>, please go to this site - it <br>\nalso explains a lot ... <b>replacing strings</b> is not more complicated than searching.", 
    "link": "http://stefanstools.sourceforge.net/regexhelp.html", 
    "cacheId": "00e4AZnrFmIJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "C# Regex.Replace Examples: MatchEvaluator", 
    "displayLink": "www.dotnetperls.com", 
    "htmlTitle": "C# <b>Regex</b>.<b>Replace Examples</b>: MatchEvaluator", 
    "formattedUrl": "www.dotnetperls.com/regex-replace", 
    "htmlFormattedUrl": "www.dotnetperls.com/<b>regex</b>-<b>replace</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width,initial-scale=1"
        }
      ]
    }, 
    "snippet": "Example. To start, this program is meant to demonstrate the use of the Regex.\nReplace static method with a string replacement. You can specify a delegate of\u00a0...", 
    "htmlSnippet": "<b>Example</b>. To start, this program is meant to demonstrate the use of the <b>Regex</b>.<br>\n<b>Replace</b> static method with a <b>string replacement</b>. You can specify a delegate of&nbsp;...", 
    "link": "http://www.dotnetperls.com/regex-replace", 
    "cacheId": "InaL2J1GZY0J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Methods of the Matcher Class (The Java\u2122 Tutorials > Essential ...", 
    "displayLink": "docs.oracle.com", 
    "htmlTitle": "Methods of the Matcher Class (The Java\u2122 <b>Tutorials</b> &gt; Essential <b>...</b>", 
    "formattedUrl": "https://docs.oracle.com/javase/tutorial/essential/regex/matcher.html", 
    "htmlFormattedUrl": "https://docs.oracle.com/javase/<b>tutorial</b>/essential/<b>regex</b>/<b>match</b>er.html", 
    "snippet": "public Matcher appendReplacement(StringBuffer sb, String replacement) : \nImplements ... Matcher; public class MatcherDemo { private static final String \nREGEX\u00a0...", 
    "htmlSnippet": "public Matcher appendReplacement(<b>StringBuffer</b> sb, <b>String replacement</b>) : <br>\nImplements ... Matcher; public class MatcherDemo { private static final <b>String</b> <br>\n<b>REGEX</b>&nbsp;...", 
    "link": "https://docs.oracle.com/javase/tutorial/essential/regex/matcher.html", 
    "cacheId": "_DB2oolrgK8J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Using Regular Expressions for Search/Replace", 
    "displayLink": "www.codeguru.com", 
    "htmlTitle": "Using <b>Regular Expressions</b> for Search/<b>Replace</b>", 
    "formattedUrl": "www.codeguru.com/.../string/regex/.../Using-Regular-Expressions-for- SearchReplace.htm", 
    "htmlFormattedUrl": "www.codeguru.com/.../<b>string</b>/<b>regex</b>/.../Using-<b>Regular-Expressions</b>-for- Search<b>Replace</b>.htm", 
    "pagemap": {
      "metatags": [
        {
          "cache-creation-time": "Thu Jul 2 13:45:51 PDT 2015", 
          "inject_params": "WT.qs_dlk=VZWuhwrIZ3AAAF6tgREAAAAc&", 
          "articlekey": "47840410", 
          "wt.qs_shmv": "lv20150423-rabbit.sf.quinstreet.net", 
          "wt.qs_dlk": "VZWuhwrIZ3AAAF6tgREAAAAc", 
          "dcsext.tax": "product development,product development programming languages c cplusplus visualc", 
          "dcsext.qse_b2b_tax": "product development,product development programming languages c cplusplus visualc"
        }
      ]
    }, 
    "snippet": "Regular expressions are strings that contains a mix of plain text and special ... \ncode, a couple of functions were added to enable search and replace operations.", 
    "htmlSnippet": "<b>Regular expressions</b> are <b>strings</b> that contains a mix of plain text and special ... <br>\ncode, a couple of <b>functions</b> were added to enable search and <b>replace</b> operations.", 
    "link": "http://www.codeguru.com/cpp/cpp/string/regex/article.php/c2791/Using-Regular-Expressions-for-SearchReplace.htm", 
    "cacheId": "Cg0TtcrsugkJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Perfect Javascript Form Validation using Regular Expressions.", 
    "displayLink": "www.9lessons.info", 
    "htmlTitle": "Perfect <b>Javascript</b> Form <b>Validation</b> using <b>Regular Expressions</b>.", 
    "formattedUrl": "www.9lessons.info/.../perfect-javascript-form-validation.html", 
    "htmlFormattedUrl": "www.9lessons.info/.../perfect-<b>javascript</b>-form-<b>validation</b>.html", 
    "pagemap": {
      "hcard": [
        {
          "fn": "Srinivas Tamada"
        }
      ], 
      "metatags": [
        {
          "dcterms.datecopyrighted": "Copyright (c) 2008-2015 Srinivas Tamada", 
          "author": "Srinivas Tamada", 
          "fb:admins": "1025751018", 
          "alexaverifyid": "6AjQa-NbwaKsfO-CAR2zEP4InUc", 
          "article:author": "https://www.facebook.com/srinivas.tamada", 
          "mobileoptimized": "320", 
          "yandex-verification": "4df3c85ea53c8f10", 
          "msvalidate.01": "F2FEEF3D9FA54697BBAF9E08A80D3483", 
          "article:publisher": "https://www.facebook.com/srinivas.tamada", 
          "handheldfriendly": "True", 
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "blog": [
        {
          "name": "Perfect Javascript Form Validation using Regular Expressions.", 
          "datecreated": "Thursday, March 5, 2009"
        }
      ], 
      "person": [
        {
          "location": "Atlanta - United States"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "231", 
          "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRwF2oNuJDP3ng5AosKdABs3eSqkkmqxUYJZ3YuBYuv9dQHqixcY-ckpO4", 
          "height": "218"
        }
      ], 
      "cse_image": [
        {
          "src": "http://lh3.ggpht.com/_N9kpbq3FL74/Sa5ZM0FJSWI/AAAAAAAABJk/SNCtLdV-qsE/reg.png"
        }
      ], 
      "hreviewaggregate": [
        {
          "votes": "70"
        }, 
        {
          "votes": "70"
        }, 
        {
          "votes": "70"
        }
      ]
    }, 
    "snippet": "Mar 5, 2009 ... How to do Perfect Javascript Form Validation using Regular Expressions.. \nTutorial focused on Programming, Jquery, Ajax, PHP, Demos, Web\u00a0...", 
    "htmlSnippet": "Mar 5, 2009 <b>...</b> How to do Perfect <b>Javascript</b> Form <b>Validation</b> using <b>Regular Expressions</b>.. <br>\n<b>Tutorial</b> focused on Programming, Jquery, Ajax, PHP, Demos, Web&nbsp;...", 
    "link": "http://www.9lessons.info/2009/03/perfect-javascript-form-validation.html", 
    "cacheId": "7SIVSv67otAJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "JavaScript to validate email address using a regex", 
    "displayLink": "www.sitepoint.com", 
    "htmlTitle": "<b>JavaScript</b> to <b>validate</b> email address using a <b>regex</b>", 
    "formattedUrl": "www.sitepoint.com/javascript-validate-email-address-regex/", 
    "htmlFormattedUrl": "www.sitepoint.com/<b>javascript</b>-<b>validate</b>-email-address-<b>regex</b>/", 
    "pagemap": {
      "metatags": [
        {
          "twitter:creator": "@samdeering", 
          "twitter:domain": "SitePoint", 
          "og:locale": "en_US", 
          "twitter:site": "@sitepointdotcom", 
          "article:publisher": "https://www.facebook.com/sitepoint", 
          "og:url": "http://www.sitepoint.com/javascript-validate-email-address-regex/", 
          "twitter:account_id": "15743570", 
          "og:type": "article", 
          "fb:admins": "121300382", 
          "og:title": "JavaScript to validate email address using a regex", 
          "twitter:title": "JavaScript to validate email address using a regex", 
          "article:tag": "jquery4u", 
          "article:section": "JavaScript", 
          "article:modified_time": "2014-09-09T00:22:39+00:00", 
          "wp-parsely_version": "1.7", 
          "og:image": "http://www.sitepoint.com/wp-content/themes/sitepoint/assets/images/icon.javascript.png", 
          "article:published_time": "2013-03-29T06:30:00+00:00", 
          "viewport": "width=device-width, initial-scale=1.0", 
          "og:updated_time": "2014-09-09T00:22:39+00:00", 
          "og:site_name": "SitePoint", 
          "twitter:card": "summary", 
          "twitter:description": "Here is a code snippet for basic JavaScript to validate email address using a regular expression.", 
          "og:description": "Here is a code snippet for basic JavaScript to validate email address using a regular expression."
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.sitepoint.com/wp-content/themes/sitepoint/assets/images/icon.javascript.png"
        }
      ]
    }, 
    "snippet": "Mar 29, 2013 ... This is a code snippet for basic JavaScript to validate email address using a \nregular expression. This is building on my previous post on how to\u00a0...", 
    "htmlSnippet": "Mar 29, 2013 <b>...</b> This is a code snippet for basic <b>JavaScript</b> to <b>validate</b> email address using a <br>\n<b>regular expression</b>. This is building on my previous post on how to&nbsp;...", 
    "link": "http://www.sitepoint.com/javascript-validate-email-address-regex/", 
    "cacheId": "qhIuQySKAdMJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "JavaScript Email Address validation using Regular Expression", 
    "displayLink": "www.dotnet-tricks.com", 
    "htmlTitle": "<b>JavaScript</b> Email Address <b>validation</b> using <b>Regular Expression</b>", 
    "formattedUrl": "www.dotnet-tricks.com/Tutorial/javascript/UNDS040712-JavaScript-Email- Address-validation-using-Regular-Expression.html", 
    "htmlFormattedUrl": "www.dotnet-tricks.com/<b>Tutorial</b>/<b>javascript</b>/UNDS040712-<b>JavaScript</b>-Email- Address-<b>validation</b>-using-<b>Regular-Expression</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "msvalidate.01": "E9FC66097D3DBD3E7C1462EF7951B7C6", 
          "author": "Shailendra Chauhan", 
          "copyright": "Copyright \u00a9 2012-2015 dotnet-tricks.com. The content is copyright to Shailendra Chauhan and may not be reproduced on other websites without permission from the owner.", 
          "viewport": "width=device-width, initial-scale=1.0", 
          "title": "JavaScript Email Address validation using Regular Expression"
        }
      ]
    }, 
    "snippet": "Jul 25, 2013 ... Java script can check the regular expression pattern for valid email address. We \nhave ... JQuery - Email address validation with example. <html>\u00a0...", 
    "htmlSnippet": "Jul 25, 2013 <b>...</b> Java script can check the <b>regular expression</b> pattern for <b>valid</b> email address. We <br>\nhave ... JQuery - Email address <b>validation</b> with <b>example</b>. &lt;html&gt;&nbsp;...", 
    "link": "http://www.dotnet-tricks.com/Tutorial/javascript/UNDS040712-JavaScript-Email-Address-validation-using-Regular-Expression.html", 
    "cacheId": "99oXvugckyoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "regexp validator", 
    "displayLink": "formvalidation.io", 
    "htmlTitle": "<b>regexp validator</b>", 
    "formattedUrl": "formvalidation.io/validators/regexp/", 
    "htmlFormattedUrl": "form<b>validation</b>.io/<b>validator</b>s/<b>regexp</b>/", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://formvalidation.io/validators/regexp/", 
          "og:type": "article", 
          "og:site_name": "FormValidation", 
          "twitter:card": "summary", 
          "twitter:image": "http://formvalidation.io/asset/img/logo.png", 
          "twitter:description": "FormValidation - The best jQuery plugin to validate form fields, support Bootstrap, Foundation, Pure, Semantic, UIKit frameworks", 
          "author": "Nguyen Huu Phuoc", 
          "og:description": "FormValidation - The best jQuery plugin to validate form fields, support Bootstrap, Foundation, Pure, Semantic, UIKit frameworks", 
          "twitter:title": "Check if the value matches given Javascript regular expression - FormValidation", 
          "og:title": "Check if the value matches given Javascript regular expression - FormValidation", 
          "twitter:site": "@formvalidation", 
          "og:image": "http://formvalidation.io/asset/img/logo.png", 
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "240", 
          "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcSkbhadKRxU75aDfrDz9xWu-tWTL16k6H00VkY2Ed7gumvk6hP-By_tumO3", 
          "height": "180"
        }
      ], 
      "cse_image": [
        {
          "src": "http://formvalidation.io/asset/img/adhere.png"
        }
      ]
    }, 
    "snippet": "Check if the value matches given Javascript regular expression ... For example, if \na field must be 5 digits number, then ^\\d{5} (no $ at the end) is wrong pattern.", 
    "htmlSnippet": "Check if the value matches given <b>Javascript regular expression</b> ... For <b>example</b>, if <br>\na field must be 5 digits number, then ^\\d{5} (no $ at the end) is wrong pattern.", 
    "link": "http://formvalidation.io/validators/regexp/", 
    "cacheId": "7-2R1THG72AJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions | Webucator", 
    "displayLink": "www.webucator.com", 
    "htmlTitle": "<b>Regular Expressions</b> | Webucator", 
    "formattedUrl": "https://www.webucator.com/tutorial/...javascript/regular-expressions.cfm", 
    "htmlFormattedUrl": "https://www.webucator.com/<b>tutorial</b>/...<b>javascript</b>/<b>regular-expressions</b>.cfm", 
    "pagemap": {
      "webpage": [
        {
          "breadcrumb": "Home > Resources > Free Tutorials > Advanced JavaScript Programming > Regular Expressions"
        }
      ], 
      "metatags": [
        {
          "og:url": "https://www.webucator.com/tutorial/advanced-javascript/regular-expressions.cfm", 
          "og:site_name": "Webucator", 
          "og:image:type": "image/png", 
          "og:video:type": "application/x-shockwave-flash", 
          "og:video": "https://www.youtube.com/v/T2ugLCq6Igc?version=3&hl=en_US&rel=0", 
          "og:type": "website", 
          "og:description": "Regular Expressions are powerful pattern matching expressions. JavaScript developers will often use regular expressions for sanitizing user input and advanced form validation.", 
          "og:image:width": "1200", 
          "og:title": "Regular Expressions | Webucator", 
          "og:video:height": "480", 
          "og:image": "https://images.webucator.com/open-graph/default.png", 
          "og:video:width": "640", 
          "viewport": "width=device-width, initial-scale=0.9, maximum-scale=1", 
          "og:image:height": "630"
        }
      ], 
      "cse_image": [
        {
          "src": "https://images.webucator.com/open-graph/default.png"
        }
      ]
    }, 
    "snippet": "JavaScript developers will often use regular expressions for sanitizing user input \nand advanced form validation. ... For example, a regular expression can be used \nto check whether an email address entered into a form field is syntactically\u00a0...", 
    "htmlSnippet": "<b>JavaScript</b> developers will often use <b>regular expressions</b> for sanitizing user input <br>\nand advanced form <b>validation</b>. ... For <b>example</b>, a <b>regular expression</b> can be used <br>\nto check whether an email address entered into a form field is syntactically&nbsp;...", 
    "link": "https://www.webucator.com/tutorial/advanced-javascript/regular-expressions.cfm", 
    "cacheId": "W9cA8YFg7LYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Online regex tester and debugger: JavaScript, Python, PHP, and ...", 
    "displayLink": "regex101.com", 
    "htmlTitle": "Online <b>regex</b> tester and debugger: <b>JavaScript</b>, Python, PHP, and <b>...</b>", 
    "formattedUrl": "https://regex101.com/", 
    "htmlFormattedUrl": "https://<b>regex</b>101.com/", 
    "pagemap": {
      "metatags": [
        {
          "twitter:creator": "@regex101", 
          "twitter:domain": "regex101.com", 
          "twitter:card": "summary", 
          "twitter:image": "//regex101.com/gfx/preview.png", 
          "twitter:description": "Regex101 allows you to create, debug, test and have your expressions explained for PHP, PCRE, JavaScript and Python. The website also features a community where you can share useful expressions.", 
          "author": "Firas Dib", 
          "twitter:title": "Regex101 - online regex editor and debugger", 
          "twitter:site": "@regex101", 
          "viewport": "width=device-width, initial-scale=1, maximum-scale=1"
        }
      ]
    }, 
    "snippet": "Online regex tester for PHP, PCRE, JavaScript and Python that highlights pattern \nand matches on the fly.", 
    "htmlSnippet": "Online <b>regex</b> tester for PHP, PCRE, <b>JavaScript</b> and Python that highlights pattern <br>\nand matches on the fly.", 
    "link": "https://regex101.com/", 
    "cacheId": "TcE7re6fdjYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "How to Find or Validate an Email Address", 
    "displayLink": "www.regular-expressions.info", 
    "htmlTitle": "How to Find or <b>Validate</b> an Email Address", 
    "formattedUrl": "www.regular-expressions.info/email.html", 
    "htmlFormattedUrl": "www.<b>regular-expressions</b>.info/email.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width", 
          "author": "Jan Goyvaerts"
        }
      ]
    }, 
    "snippet": "Get RegexMagic and use its Email Address pattern to generate regular ... \nMatching a valid email address is a perfect example showing that (1) before \nwriting a\u00a0...", 
    "htmlSnippet": "Get <b>RegexMagic</b> and use its Email Address pattern to generate <b>regular</b> ... <br>\nMatching a <b>valid</b> email address is a perfect <b>example</b> showing that (1) before <br>\nwriting a&nbsp;...", 
    "link": "http://www.regular-expressions.info/email.html", 
    "cacheId": "OkHGA78X094J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Ruby Regular Expressions", 
    "displayLink": "www.tutorialspoint.com", 
    "htmlTitle": "<b>Ruby Regular Expressions</b>", 
    "formattedUrl": "www.tutorialspoint.com/ruby/ruby_regular_expressions.htm", 
    "htmlFormattedUrl": "www.<b>tutorials</b>point.com/<b>ruby</b>/<b>ruby</b>_<b>regular_expressions</b>.htm", 
    "pagemap": {
      "metatags": [
        {
          "fb:app_id": "471319149685276", 
          "viewport": "width=device-width,initial-scale=1.0,user-scalable=yes", 
          "author": "tutorialspoint.com"
        }
      ]
    }, 
    "snippet": "Ruby Regular Expressions - Learning Ruby in simple and easy steps - A \nbeginner's tutorial containing complete knowledge of Ruby Syntax Syntax, \nClasses, ... usr/bin/ruby text = \"rails are rails, really good Ruby on Rails\" # \nChange \"rails\" to\u00a0...", 
    "htmlSnippet": "<b>Ruby Regular Expressions</b> - Learning <b>Ruby</b> in simple and easy steps - A <br>\nbeginner&#39;s <b>tutorial</b> containing complete knowledge of <b>Ruby</b> Syntax Syntax, <br>\nClasses, ... usr/bin/<b>ruby</b> text = &quot;<b>rails</b> are <b>rails</b>, really good <b>Ruby</b> on <b>Rails</b>&quot; # <br>\nChange &quot;<b>rails</b>&quot; to&nbsp;...", 
    "link": "http://www.tutorialspoint.com/ruby/ruby_regular_expressions.htm", 
    "cacheId": "ahLZCMuKVR0J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Class: Regexp (Ruby 2.1.1)", 
    "displayLink": "ruby-doc.org", 
    "htmlTitle": "Class: <b>Regexp</b> (<b>Ruby</b> 2.1.1)", 
    "formattedUrl": "ruby-doc.org/core-2.1.1/Regexp.html", 
    "htmlFormattedUrl": "<b>ruby</b>-doc.org/core-2.1.1/<b>Regexp</b>.html", 
    "snippet": "They are created with the / pat / and %r{ pat } literals or the Regexp.new \nconstructor. A regexp is usually delimited with forward slashes ( / ). For example:", 
    "htmlSnippet": "They are created with the / pat / and %r{ pat } literals or the <b>Regexp</b>.new <br>\nconstructor. A <b>regexp</b> is usually delimited with forward slashes ( / ). For <b>example</b>:", 
    "link": "http://ruby-doc.org/core-2.1.1/Regexp.html", 
    "cacheId": "RJhUkKSOgqEJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Using Regular Expressions in Ruby (Part 1 of 3) | Blue Box", 
    "displayLink": "www.blueboxcloud.com", 
    "htmlTitle": "Using <b>Regular Expressions</b> in <b>Ruby</b> (Part 1 of 3) | Blue Box", 
    "formattedUrl": "https://www.blueboxcloud.com/.../using-regular-expressions-in-ruby-part-1- of-3", 
    "htmlFormattedUrl": "https://www.blueboxcloud.com/.../using-<b>regular-expressions</b>-in-<b>ruby</b>-part-1- of-3", 
    "pagemap": {
      "metatags": [
        {
          "twitter:card": "summary_large_image", 
          "csrf-token": "F+ux8+Xil9Jch2BUIjo8GYI41rNBwvtCdbDTAarNJbk=", 
          "og:description": "This is the first installation in our three part series on regular expressions. Be sure to check out Part II and Part III.", 
          "csrf-param": "authenticity_token", 
          "twitter:title": "Series: Using Regular Expressions in Ruby \u2014 Part 1 of 3", 
          "twitter:site": "@bluebox", 
          "twitter:account_id": "180497628", 
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "Feb 26, 2013 ... She specializes in Ruby, Rails, and Test Driven Development. Prior to ... Ruby \nworks with regular expressions in a harmony, a symphony of code. In order to \nfully ... For this example, however, I'm just going to pass my string:", 
    "htmlSnippet": "Feb 26, 2013 <b>...</b> She specializes in <b>Ruby</b>, <b>Rails</b>, and Test Driven Development. Prior to ... <b>Ruby</b> <br>\nworks with <b>regular expressions</b> in a harmony, a symphony of code. In order to <br>\nfully ... For this <b>example</b>, however, I&#39;m just going to pass my string:", 
    "link": "https://www.blueboxcloud.com/insight/blog-article/using-regular-expressions-in-ruby-part-1-of-3", 
    "cacheId": "XrEfAEKwFZsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Ruby Regular Expressions: Ruby Study Notes - Best Ruby Guide ...", 
    "displayLink": "rubylearning.com", 
    "htmlTitle": "<b>Ruby Regular Expressions</b>: <b>Ruby</b> Study Notes - Best <b>Ruby</b> Guide <b>...</b>", 
    "formattedUrl": "rubylearning.com/satishtalim/ruby_regular_expressions.html", 
    "htmlFormattedUrl": "<b>rubylearn</b>ing.com/satishtalim/<b>ruby</b>_<b>regular_expressions</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "distribution": "Global", 
          "copyright": "Satish Talim 2007 and beyond...", 
          "author": "Satish Talim / Original design: Erwin Aligam - ealigam@gmail.com"
        }
      ]
    }, 
    "snippet": "Becoming a regular expression wizard isn't a prerequisite for Rails programming. \nHowever, it's advisable to learn at least the basics of how regular expressions \nwork. ... In Ruby, regular expressions are objects (of type Regexp) and can be\u00a0...", 
    "htmlSnippet": "Becoming a <b>regular expression</b> wizard isn&#39;t a prerequisite for <b>Rails</b> programming. <br>\nHowever, it&#39;s advisable to <b>learn</b> at least the basics of how <b>regular expressions</b> <br>\nwork. ... In <b>Ruby</b>, <b>regular expressions</b> are objects (of type <b>Regexp</b>) and can be&nbsp;...", 
    "link": "http://rubylearning.com/satishtalim/ruby_regular_expressions.html", 
    "cacheId": "qAxJKlo9_kAJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Ruby for Newbies: Regular Expressions - Tuts+ Code Tutorial", 
    "displayLink": "code.tutsplus.com", 
    "htmlTitle": "<b>Ruby</b> for Newbies: <b>Regular Expressions</b> - Tuts+ Code <b>Tutorial</b>", 
    "formattedUrl": "code.tutsplus.com/tutorials/ruby-for-newbies-regular-expressions--net-19812", 
    "htmlFormattedUrl": "code.tutsplus.com/<b>tutorials</b>/<b>ruby</b>-for-newbies-<b>regular-expressions</b>--net-19812", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://code.tutsplus.com/tutorials/ruby-for-newbies-regular-expressions--net-19812", 
          "og:site_name": "Code Tuts+", 
          "csrf-token": "dhctiaApuTlDrW99drbwD6w0hgYWaoemezwAgqpuihVH6N0DkTGhwDaQX0lYO4uVVIq7xcieEYYBJjhVmyoU4Q==", 
          "og:type": "article", 
          "og:description": "Ruby is a one of the most popular languages used on the web. We\u2019ve started a new Session here on Nettuts+ that will introduce you to Ruby, as well as the great frameworks and tools that go along with Ruby development. In this lesson, we\u2019ll look at using regular expression in Ruby. | Difficulty: Beginner; Length: Short; Tags: Ruby, Web Development", 
          "csrf-param": "authenticity_token", 
          "et.category": "Ruby", 
          "og:title": "Ruby for Newbies: Regular Expressions - Tuts+ Code Tutorial", 
          "fb:app_id": "1494084460809023", 
          "og:image": "https://cdn.tutsplus.com/net/uploads/legacy/963_ruby9/ruby-for-newbies.jpg", 
          "viewport": "initial-scale=1"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "160", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcRllFhIz32ew7HO_MUKOn7mhzDEoRJ0NS-vkeC5sksqi_AXVLgMFvsC1y8", 
          "height": "160"
        }
      ], 
      "cse_image": [
        {
          "src": "https://cdn.tutsplus.com/net/uploads/legacy/963_ruby9/ruby-for-newbies.jpg"
        }
      ]
    }, 
    "snippet": "May 2, 2011 ... In this lesson, we'll look at using regular expression in Ruby. ... familiar with \nregular expressions, you'll want to check out our Regex tutorials here on Nettuts+ \nto get up to speed. .... Deploy a Rails Application With Docker$15.", 
    "htmlSnippet": "May 2, 2011 <b>...</b> In this lesson, we&#39;ll look at using <b>regular expression</b> in <b>Ruby</b>. ... familiar with <br>\n<b>regular expressions</b>, you&#39;ll want to check out our <b>Regex tutorials</b> here on Nettuts+ <br>\nto get up to speed. .... Deploy a <b>Rails</b> Application With Docker$15.", 
    "link": "http://code.tutsplus.com/tutorials/ruby-for-newbies-regular-expressions--net-19812", 
    "cacheId": "EAV1YCTrrYIJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Chapter 6: Modeling users | Ruby on Rails Tutorial (3rd Ed ...", 
    "displayLink": "www.railstutorial.org", 
    "htmlTitle": "Chapter 6: Modeling users | <b>Ruby</b> on <b>Rails Tutorial</b> (3rd Ed <b>...</b>", 
    "formattedUrl": "https://www.railstutorial.org/book/modeling_users", 
    "htmlFormattedUrl": "https://www.<b>railstutorial</b>.org/book/modeling_users", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://www.railstutorial.org", 
          "og:site_name": "Softcover.io", 
          "og:image:type": "image/png", 
          "csrf-token": "RvUKiAtnLoMeIsOo0r/aBYZvCg3DNc2qUVaJ2uKjKJQ=", 
          "og:description": "The Ruby on Rails Tutorial book and screencast series teach you how to develop and deploy real, industrial-strength web applications with Ruby on Rails, the open-source web framework that powers top websites such as Twitter, Hulu, GitHub, and the Yellow Pages. The Ruby on Rails Tutorial book is available for free online and is available for purchase as an ebook (PDF, EPUB, and MOBI formats). The companion screencast series includes 12 individual lessons, one for each chapter of the Ruby on Rails Tutorial book. All purchases also include a free copy of the Solutions Manual for Exercises, with solutions to every exercise in the book.", 
          "og:image:width": "500", 
          "csrf-param": "authenticity_token", 
          "og:title": "Ruby on Rails Tutorial (3rd Ed.)", 
          "og:image": "https://softcover.s3.amazonaws.com/636/ruby_on_rails_tutorial_3rd_edition/images/cover-web.png", 
          "og:image:secure_url": "https://softcover.s3.amazonaws.com/636/ruby_on_rails_tutorial_3rd_edition/images/cover-web.png", 
          "og:image:height": "500"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "198", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRbUcNvWPeQyaAtwaw_2__cX5t0e4d6h65yEG0sAqjR2q5rH96cdBNDrzyc", 
          "height": "254"
        }
      ], 
      "cse_image": [
        {
          "src": "https://www.softcover.io/assets/cover_bg-88b6816f72bba1e853bbfcd1caff472a.png"
        }
      ]
    }, 
    "snippet": "Examples of authentication and authorization systems include Clearance, ...... \nHere the regex VALID_EMAIL_REGEX is a constant, indicated in Ruby by a \nname starting .... Read about fixtures at http://api.rubyonrails.org/classes/\nActiveRecord/\u00a0...", 
    "htmlSnippet": "<b>Examples</b> of authentication and authorization systems include Clearance, ...... <br>\nHere the <b>regex</b> VALID_EMAIL_REGEX is a constant, indicated in <b>Ruby</b> by a <br>\nname starting .... Read about fixtures at http://api.<b>rubyonrails</b>.org/classes/<br>\nActiveRecord/&nbsp;...", 
    "link": "https://www.railstutorial.org/book/modeling_users", 
    "cacheId": "_L1CKz2UNVEJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Ruby on Rails Security Guide \u2014 Ruby on Rails Guides", 
    "displayLink": "guides.rubyonrails.org", 
    "htmlTitle": "<b>Ruby</b> on <b>Rails</b> Security Guide \u2014 <b>Ruby</b> on <b>Rails</b> Guides", 
    "formattedUrl": "guides.rubyonrails.org/security.html", 
    "htmlFormattedUrl": "guides.<b>rubyonrails</b>.org/security.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "248", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcTxA2HCywcB19Fn9bzRB5SpHra8pfyldKQMJkli6DPEyGBzyVvdwFIMDyE", 
          "height": "203"
        }
      ], 
      "cse_image": [
        {
          "src": "http://guides.rubyonrails.org/images/session_fixation.png"
        }
      ]
    }, 
    "snippet": "Ruby on Rails has some clever helper methods, for example against SQL ..... And \nif you redirect to an URL, check it with a whitelist or a regular expression.", 
    "htmlSnippet": "<b>Ruby</b> on <b>Rails</b> has some clever helper methods, for <b>example</b> against SQL ..... And <br>\nif you redirect to an URL, check it with a whitelist or a <b>regular expression</b>.", 
    "link": "http://guides.rubyonrails.org/security.html", 
    "cacheId": "6bWlv7WiAScJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Rubular: a Ruby regular expression editor and tester", 
    "displayLink": "rubular.com", 
    "htmlTitle": "Rubular: a <b>Ruby regular expression</b> editor and tester", 
    "formattedUrl": "rubular.com/", 
    "htmlFormattedUrl": "rubular.com/", 
    "pagemap": {
      "metatags": [
        {
          "csrf-param": "authenticity_token", 
          "csrf-token": "QufTfLf0pUOnFb4PJ3oc0jVmtE3tmNf0EWjCLB+3sRc="
        }
      ]
    }, 
    "snippet": "It's a handy way to test regular expressions as you write them. Rubular is an \nespecially good fit for Ruby and Rails developers, since it uses Ruby on the \nserver to evaluate regexes, but should also be useful for ... Or you can try an \nexample.", 
    "htmlSnippet": "It&#39;s a handy way to test <b>regular expressions</b> as you write them. Rubular is an <br>\nespecially good fit for <b>Ruby</b> and <b>Rails</b> developers, since it uses <b>Ruby</b> on the <br>\nserver to evaluate <b>regexes</b>, but should also be useful for ... Or you can try an <br>\n<b>example</b>.", 
    "link": "http://rubular.com/", 
    "cacheId": "60KA557-E3IJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Rails Routing from the Outside In \u2014 Ruby on Rails Guides", 
    "displayLink": "guides.rubyonrails.org", 
    "htmlTitle": "<b>Rails</b> Routing from the Outside In \u2014 <b>Ruby</b> on <b>Rails</b> Guides", 
    "formattedUrl": "guides.rubyonrails.org/routing.html", 
    "htmlFormattedUrl": "guides.<b>rubyonrails</b>.org/routing.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ]
    }, 
    "snippet": "For example, you would like /profile to always show the profile of the currently ..... \n:constraints takes regular expressions with the restriction that regexp ..... Ruby on \nRails documentation is very welcome in the rubyonrails-docs mailing list.", 
    "htmlSnippet": "For <b>example</b>, you would like /profile to always show the profile of the currently ..... <br>\n:constraints takes <b>regular expressions</b> with the restriction that <b>regexp</b> ..... <b>Ruby</b> on <br>\nRails documentation is very welcome in the <b>rubyonrails</b>-docs mailing list.", 
    "link": "http://guides.rubyonrails.org/routing.html", 
    "cacheId": "zndDxnZg8tEJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Learn Web Development with the Ruby on Rails Tutorial | Modeling ...", 
    "displayLink": "ruby.railstutorial.org", 
    "htmlTitle": "<b>Learn</b> Web Development with the <b>Ruby</b> on <b>Rails Tutorial</b> | Modeling <b>...</b>", 
    "formattedUrl": "ruby.railstutorial.org/chapters/modeling-and-viewing-users-one?...2...", 
    "htmlFormattedUrl": "<b>ruby</b>.<b>railstutorial</b>.org/chapters/modeling-and-viewing-users-one?...2...", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://railstutorial.org/", 
          "og:site_name": "Ruby on Rails Tutorial", 
          "author": "Michael Hartl", 
          "og:type": "article", 
          "og:description": "Ruby on Rails Tutorial: Learn Web Development with Rails by Michael Hartl teaches web development with Ruby on Rails. Rails Tutorial is fully up-to-date with Rails 3.0 and Rails 3.2.", 
          "og:title": "Ruby on Rails Tutorial: Learn Rails by Example", 
          "og:image": "http://railstutorial.org/images/layout/logo.png"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "240", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRDbgA-u5hvKaykWc5jRU_scK_Nk-0jYWiWB-T06MWZo2UkQ-msPTMppE8", 
          "height": "210"
        }
      ], 
      "cse_image": [
        {
          "src": "http://ruby.railstutorial.org/images/figures/sqlite_user_row.png"
        }
      ]
    }, 
    "snippet": "1.2.2 Ruby, RubyGems, and Rails ... Chapter 4 Rails-flavored Ruby ...... To really \nlearn about regular expressions, though, I consider the amazing Rubular\u00a0...", 
    "htmlSnippet": "1.2.2 <b>Ruby</b>, <b>RubyGems</b>, and <b>Rails</b> ... Chapter 4 <b>Rails</b>-flavored <b>Ruby</b> ...... To really <br>\n<b>learn</b> about <b>regular expressions</b>, though, I consider the amazing Rubular&nbsp;...", 
    "link": "http://ruby.railstutorial.org/chapters/modeling-and-viewing-users-one?version=2.3", 
    "cacheId": "7pV8h2O71r8J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions \u2014 mod_rewrite 0.22.00 documentation", 
    "displayLink": "mod-rewrite.org", 
    "htmlTitle": "<b>Regular Expressions</b> \u2014 <b>mod_rewrite</b> 0.22.00 documentation", 
    "formattedUrl": "mod-rewrite.org/book/regular_expressions.html", 
    "htmlFormattedUrl": "<b>mod</b>-<b>rewrite</b>.org/book/<b>regular_expressions</b>.html", 
    "snippet": "There is one excellent book about regular expressions, and if you want to ... If you \njust want to know enough about regex to master mod_rewrite, read this chapter \n..... nothing at all, or is /, or is some index page such as /index.html or /index.php.", 
    "htmlSnippet": "There is one excellent book about <b>regular expressions</b>, and if you want to ... If you <br>\njust want to know enough about <b>regex</b> to master <b>mod_rewrite</b>, read this chapter <br>\n..... nothing at all, or is /, or is some index page such as /index.html or /index.<b>php</b>.", 
    "link": "http://mod-rewrite.org/book/regular_expressions.html", 
    "cacheId": "-E99B-Bmz6wJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Docs ModRewrite - Lighttpd - lighty labs", 
    "displayLink": "redmine.lighttpd.net", 
    "htmlTitle": "Docs <b>ModRewrite</b> - Lighttpd - lighty labs", 
    "formattedUrl": "redmine.lighttpd.net/projects/1/wiki/docs_modrewrite", 
    "htmlFormattedUrl": "redmine.lighttpd.net/projects/1/wiki/docs_<b>modrewrite</b>", 
    "pagemap": {
      "metatags": [
        {
          "csrf-param": "authenticity_token", 
          "csrf-token": "6SkVrIsXNyQ57xlDrUSMBICLeNpzbKfFZwexXzj0aYw="
        }
      ]
    }, 
    "snippet": "Examples\u00b6. The regex is matching the full REQUEST_URI which is supplied by \nthe user including. query-string. # the following\u00a0...", 
    "htmlSnippet": "<b>Examples</b>\u00b6. The <b>regex</b> is matching the full REQUEST_URI which is supplied by <br>\nthe user including. query-string. # the following&nbsp;...", 
    "link": "http://redmine.lighttpd.net/projects/1/wiki/docs_modrewrite", 
    "cacheId": "Rt4aUjllbJUJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Java.lang.String.split(String regex) Method Example", 
    "displayLink": "www.tutorialspoint.com", 
    "htmlTitle": "Java.lang.<b>String</b>.<b>split</b>(<b>String regex</b>) Method <b>Example</b>", 
    "formattedUrl": "www.tutorialspoint.com/java/lang/string_split.htm", 
    "htmlFormattedUrl": "www.<b>tutorial</b>spoint.com/java/lang/<b>string</b>_<b>split</b>.htm", 
    "pagemap": {
      "metatags": [
        {
          "fb:app_id": "471319149685276", 
          "viewport": "width=device-width,initial-scale=1.0,user-scalable=yes", 
          "author": "tutorialspoint.com"
        }
      ]
    }, 
    "snippet": "String.split(String regex) Method Example - Learning Java.lang Packages in \nsimple and easy steps : A beginner's tutorial containing complete knowledge of \nall\u00a0...", 
    "htmlSnippet": "<b>String</b>.<b>split</b>(<b>String regex</b>) Method <b>Example</b> - Learning Java.lang Packages in <br>\nsimple and easy steps : A beginner&#39;s <b>tutorial</b> containing complete knowledge of <br>\nall&nbsp;...", 
    "link": "http://www.tutorialspoint.com/java/lang/string_split.htm", 
    "cacheId": "QDQlfsbNHvsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "C# Regex.Split Examples", 
    "displayLink": "www.dotnetperls.com", 
    "htmlTitle": "C# <b>Regex</b>.<b>Split Examples</b>", 
    "formattedUrl": "www.dotnetperls.com/regex-split", 
    "htmlFormattedUrl": "www.dotnetperls.com/<b>regex</b>-<b>split</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width,initial-scale=1"
        }
      ]
    }, 
    "snippet": "These C# example programs use the Regex.Split method. They split strings \nbased on patterns.", 
    "htmlSnippet": "These C# <b>example</b> programs use the <b>Regex</b>.<b>Split</b> method. They <b>split strings</b> <br>\nbased on patterns.", 
    "link": "http://www.dotnetperls.com/regex-split", 
    "cacheId": "m0NrMTz-SyAJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expression Examples", 
    "displayLink": "wiki.tcl.tk", 
    "htmlTitle": "<b>Regular Expression Examples</b>", 
    "formattedUrl": "wiki.tcl.tk/989", 
    "htmlFormattedUrl": "wiki.tcl.tk/989", 
    "snippet": "May 30, 2015 ... Regular Expression Examples is a list, roughly sorted by complexity, ... You can \neven split a string of text with arbitrary spaces and special\u00a0...", 
    "htmlSnippet": "May 30, 2015 <b>...</b> <b>Regular Expression Examples</b> is a list, roughly sorted by complexity, ... You can <br>\neven <b>split</b> a <b>string</b> of text with arbitrary spaces and special&nbsp;...", 
    "link": "http://wiki.tcl.tk/989", 
    "cacheId": "gaE0DYYtDBgJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regex.Split Method (String, String) (System.Text.RegularExpressions)", 
    "displayLink": "msdn.microsoft.com", 
    "htmlTitle": "<b>Regex</b>.<b>Split</b> Method (<b>String</b>, <b>String</b>) (System.Text.RegularExpressions)", 
    "formattedUrl": "https://msdn.microsoft.com/en-us/library/8yttk7sy(v=vs.110).aspx", 
    "htmlFormattedUrl": "https://msdn.microsoft.com/en-us/library/8yttk7sy(v=vs.110).aspx", 
    "pagemap": {
      "metatags": [
        {
          "search.mshattr.abstract": "Splits an input string into an array of substrings at the positions defined by a regular expression pattern.", 
          "search.container": "System.Text.RegularExpressions", 
          "search.mshattr.locale": "en-us", 
          "search.mscategory": "ms310241", 
          "search.mshattr.topictype": "kbSyntax", 
          "search.microsoft.help.tocparenttopicversion": "110", 
          "search.mshattr.apitype": "Managed", 
          "search.mshattr.progmodel": "managed", 
          "search.mshattr.apiname": "System.Text.RegularExpressions.Regex.Split", 
          "search.mshattr.apilocation": "System.Text.RegularExpressions.dll", 
          "search.language": "en-us", 
          "search.mshattr.devlang": "VB", 
          "search.mscategoryv": "ms310241MSDN10", 
          "search.dcsext.title": "Split Method (String, String)", 
          "search.guid": "bf4fc28f-2bab-7f1e-bf82-f2fb23793573", 
          "search.dcsext.productfamily": "LIB_DG", 
          "search.mshkeyworda": "M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)", 
          "search.description": "Splits an input string into an array of substrings at the positions defined by a regular expression pattern.", 
          "search.mshattr.targetos": "Windows", 
          "search.dcsext.product": "NDP_CLR", 
          "search.mshattr.assetid": "M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)", 
          "search.file": "bf4fc28f-2bab-7f1e-bf82-f2fb23793573", 
          "search.mshattr.technology": "kbNetFramewk", 
          "search.microsoft.help.id": "M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)", 
          "search.microsoft.help.contenttype": "Reference", 
          "search.mshattr.assemblyversion": "4.0.10.0", 
          "search.mshattr.revisionnumber": "216", 
          "search.mshattr.docset": "XNA", 
          "search.mshattr.technologyvers": "netframework20"
        }
      ]
    }, 
    "snippet": "Split splits the string at a delimiter determined by a regular expression instead ... \nFor example, splitting a string on a single hyphen causes the returned array to\u00a0...", 
    "htmlSnippet": "<b>Split splits</b> the <b>string</b> at a delimiter determined by a <b>regular expression</b> instead ... <br>\nFor <b>example</b>, <b>splitting</b> a <b>string</b> on a single hyphen causes the returned array to&nbsp;...", 
    "link": "https://msdn.microsoft.com/en-us/library/8yttk7sy(v=vs.110).aspx", 
    "cacheId": "seQVGOEcZGoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "How to String Split Example in Java - Tutorial", 
    "displayLink": "javarevisited.blogspot.com", 
    "htmlTitle": "How to <b>String Split Example</b> in Java - <b>Tutorial</b>", 
    "formattedUrl": "javarevisited.blogspot.com/.../string-split-example-in-java-tutorial.html", 
    "htmlFormattedUrl": "javarevisited.blogspot.com/.../<b>string</b>-<b>split</b>-<b>example</b>-in-java-<b>tutorial</b>.html", 
    "pagemap": {
      "cse_thumbnail": [
        {
          "width": "195", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSM7_2F8XgN9k8Gk9sDSslqz-31iatD8NgxYyTpkdH2UpTsC3Ou8GJV818", 
          "height": "164"
        }
      ], 
      "cse_image": [
        {
          "src": "http://4.bp.blogspot.com/-SU3ogbJsBAk/TeJPfpAcPoI/AAAAAAAAALc/qwzYEjCLXQI/s320/7.jpg"
        }
      ]
    }, 
    "snippet": "Sep 30, 2011 ... This article explains example of splitting strinb by using both Strings split() \nmethod which ... String class itself: split (regex) and other in java.util.", 
    "htmlSnippet": "Sep 30, 2011 <b>...</b> This article explains <b>example</b> of <b>splitting</b> strinb by using both <b>Strings split</b>() <br>\nmethod which ... <b>String</b> class itself: <b>split</b> (<b>regex</b>) and other in java.util.", 
    "link": "http://javarevisited.blogspot.com/2011/09/string-split-example-in-java-tutorial.html", 
    "cacheId": "-GubK8l1jSQJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Java String.split() Regex - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "Java <b>String</b>.<b>split</b>() <b>Regex</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/9856916/java-string-split-regex", 
    "htmlFormattedUrl": "stackoverflow.com/questions/9856916/java-<b>string</b>-<b>split</b>-<b>regex</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "String[] ops = str.split(\"\\\\s*[a-zA-Z]+\\\\s*\"); String[] notops = str.split(\"\\\\s*[^a-zA-Z]+\\\\s*\"); String[] res = new String[ops.length+notops.length-1]; for(int i=0; i<res.length; i++) res[i]...", 
          "upvotecount": "15"
        }, 
        {
          "text": "str.split (\" \") res27: Array[java.lang.String] = Array(a, +, b, -, c, *, d, /, e, <, f, >, g, >=, h, <=, i, ==, j)", 
          "upvotecount": "10"
        }, 
        {
          "text": "String str = \"a + b - c * d / e < f > g >= h <= i == j\"; String reg = \"\\\\s*[a-zA-Z]+\"; String[] res = str.split(reg); for (String out : res) { if (!\"\".equals(out)) { System.out.print(out);...", 
          "upvotecount": "2"
        }, 
        {
          "text": "Can you invert your regex so split by the non operation characters? String ops[] = string.split(\"[a-z]\") // ops == [+, -, *, /, <, >, >=, <=, == ] This obviously doesn't return the variables...", 
          "upvotecount": "0"
        }, 
        {
          "text": "You could split on a word boundary with \\b", 
          "upvotecount": "0"
        }, 
        {
          "text": "You could also do something like: String str = \"a + b - c * d / e < f > g >= h <= i == j\"; String[] arr = str.split(\"(?<=\\\\G(\\\\w+(?!\\\\w+)|==|<=|>=|\\\\+|/|\\\\*|-|(<|>)(?!=)))\\\\s*\"); It handles...", 
          "upvotecount": "-2"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I have a string: String str = \"a + b - c * d / e < f > g >= h <= i == j\"; I want to split the string on all of the operators, but include the operators in the array, so the resulting", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Java String.split() Regex", 
          "title": "Java String.split() Regex"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/9856916/java-string-split-regex", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/9856916/java-string-split-regex", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/9856916/java-string-split-regex", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I have a string:   String str = \"a + b - c * d / e &lt; f &gt; g &gt;= h &lt;= i == j\";   I want to split the string on all of the operators, but include the operators in the array, so the resulting", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/9856916/java-string-split-regex", 
          "twitter:card": "summary", 
          "twitter:title": "Java String.split() Regex", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "6", 
          "text": "I have a string: String str = \"a + b - c * d / e < f > g >= h <= i == j\"; I want to split the string on all of the operators, but include the operators in the array, so the resulting array...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Java String.split() Regex", 
          "upvotecount": "7"
        }
      ]
    }, 
    "snippet": "I want to split the string on all of the operators, but include the operators ... You \ncould just split by spaces in your example expression to get the\u00a0...", 
    "htmlSnippet": "I want to <b>split</b> the <b>string</b> on all of the operators, but include the operators ... You <br>\ncould just <b>split</b> by spaces in your <b>example</b> expression to get the&nbsp;...", 
    "link": "http://stackoverflow.com/questions/9856916/java-string-split-regex", 
    "cacheId": "CswePKUYwfkJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "5 Powerfully Awesome Htaccess Redirect Tricks [How To] | Search ...", 
    "displayLink": "www.searchenginepeople.com", 
    "htmlTitle": "5 Powerfully Awesome <b>Htaccess Redirect</b> Tricks [How To] | Search <b>...</b>", 
    "formattedUrl": "www.searchenginepeople.com/.../htaccess-redirect-rewrite-rules.html", 
    "htmlFormattedUrl": "www.searchenginepeople.com/.../<b>htaccess</b>-<b>redirect</b>-rewrite-rules.html", 
    "pagemap": {
      "metatags": [
        {
          "twitter:creator": "@vertstudios", 
          "og:type": "article", 
          "twitter:domain": "Search Engine People Blog", 
          "og:locale": "en_US", 
          "twitter:site": "@senginepeople", 
          "og:url": "http://www.searchenginepeople.com/blog/htaccess-redirect-rewrite-rules.html", 
          "twitter:account_id": "49993988", 
          "fb:admins": "615771967,593907745,710810285,100001091143333", 
          "og:title": "5 Powerfully Awesome Htaccess Redirect Tricks [How To] | Search Engine People", 
          "twitter:title": "5 Powerfully Awesome Htaccess Redirect Tricks [How To]", 
          "article:tag": ".htaccess,howto,redirect,rewrite rules,tools", 
          "article:section": "Content", 
          "article:modified_time": "2013-05-30T08:44:29+00:00", 
          "og:image": "http://www.searchenginepeople.com/wp-content/uploads/2011/08/awesome.jpg", 
          "article:published_time": "2011-08-31T08:33:52+00:00", 
          "viewport": "width=device-width, user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0", 
          "og:updated_time": "2013-05-30T08:44:29+00:00", 
          "og:site_name": "Search Engine People", 
          "twitter:card": "summary_large_image", 
          "twitter:description": "Master the simple redirect as well as the art of the rewrite rule.", 
          "og:description": "Master the simple redirect as well as the art of the rewrite rule.", 
          "twitter:image:src": "http://www.searchenginepeople.com/wp-content/uploads/2011/08/awesome.jpg"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "275", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcS9hlgqaopG-nwwMwI5asiXC4mUdtw_HOIQHe7Iv_BIYvqoPrq9vSW6DvSd", 
          "height": "183"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.searchenginepeople.com/wp-content/uploads/2011/08/awesome.jpg"
        }
      ], 
      "hcard": [
        {
          "url": "http://alexjuel.com/", 
          "photo": "http://2.gravatar.com/avatar/bb815d539b174799bce656eb12fc2630?s=32&d=blank&r=g", 
          "url_text": "Alex", 
          "nickname": "Alex", 
          "fn": "Alex"
        }, 
        {
          "url": "http://www.web101marketing.com/", 
          "photo": "http://0.gravatar.com/avatar/cdad89bda458bdf5f0ede013cbba3ca1?s=32&d=blank&r=g", 
          "url_text": "Tom Parker", 
          "fn": "Tom Parker"
        }, 
        {
          "url": "http://www.zagoumenov.com/", 
          "photo": "http://0.gravatar.com/avatar/caddbaa17ca26e59eb4feaf4ddcbedfe?s=32&d=blank&r=g", 
          "url_text": "Alexander Zagoumenov", 
          "fn": "Alexander Zagoumenov"
        }, 
        {
          "url": "http://www.muhammadhussain.net/2013/09/16/5-great-resources-to-learn-about-htaccess/", 
          "url_text": "5 Great Resources to learn about .htaccess | Conquering the Web, tag by tag", 
          "fn": "5 Great Resources to learn about .htaccess | Conquering the Web, tag by tag"
        }
      ]
    }, 
    "snippet": "Aug 31, 2011 ... 5 Powerfully Awesome Htaccess Redirect Tricks [How To] ... URL Pattern: A \nRegular Expression pattern that will trigger the Rewrite; File\u00a0...", 
    "htmlSnippet": "Aug 31, 2011 <b>...</b> 5 Powerfully Awesome <b>Htaccess Redirect</b> Tricks [How To] ... URL <b>Pattern</b>: A <br>\n<b>Regular Expression pattern</b> that will trigger the Rewrite; File&nbsp;...", 
    "link": "http://www.searchenginepeople.com/blog/htaccess-redirect-rewrite-rules.html", 
    "cacheId": "UlGchYQ5HCUJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": ".htaccess - Using regular expression in htaccess for 301 redirects ...", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": ".<b>htaccess</b> - Using <b>regular expression</b> in <b>htaccess</b> for 301 redirects <b>...</b>", 
    "formattedUrl": "stackoverflow.com/.../using-regular-expression-in-htaccess-for-301-redirects", 
    "htmlFormattedUrl": "stackoverflow.com/.../using-<b>regular-expression</b>-in-<b>htaccess</b>-for-301-<b>redirect</b>s", 
    "pagemap": {
      "answer": [
        {
          "text": "Using mod_alias: RedirectMatch 301 ^/news/(.+?)(-[0-9]+)?$ /blog/$1 or using mod_rewrite: RewriteEngine On RewriteRule ^news/(.+?)(-[0-9]+)?$ /blog/$1 [L,R=301]", 
          "upvotecount": "4"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I have a Wordpress blog where I am redirecting blog posts from my old blog to my new blog in the format below: The old blog is called 'News' and the new blog is simply called 'Blog' - both exist o...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Using regular expression in htaccess for 301 redirects", 
          "title": "Using regular expression in htaccess for 301 redirects"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/16665672/using-regular-expression-in-htaccess-for-301-redirects", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/16665672/using-regular-expression-in-htaccess-for-301-redirects", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/16665672/using-regular-expression-in-htaccess-for-301-redirects", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I have a Wordpress blog where I am redirecting blog posts from my old blog to my new blog in the format below:  The old blog is called 'News' and the new blog is simply called 'Blog' - both exist o...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/16665672/using-regular-expression-in-htaccess-for-301-redirects", 
          "twitter:card": "summary", 
          "twitter:title": "Using regular expression in htaccess for 301 redirects", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "1", 
          "text": "I have a Wordpress blog where I am redirecting blog posts from my old blog to my new blog in the format below: The old blog is called 'News' and the new blog is simply called 'Blog' - both...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Using regular expression in htaccess for 301 redirects", 
          "upvotecount": "2"
        }
      ]
    }, 
    "snippet": "I have a Wordpress blog where I am redirecting blog posts from my old blog to my \nnew blog .... htaccess 301 redirect with regular expressions.", 
    "htmlSnippet": "I have a Wordpress blog where I am <b>redirecting</b> blog posts from my old blog to my <br>\nnew blog .... <b>htaccess</b> 301 <b>redirect</b> with <b>regular expressions</b>.", 
    "link": "http://stackoverflow.com/questions/16665672/using-regular-expression-in-htaccess-for-301-redirects", 
    "cacheId": "NpdQAHcZDNcJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "apache 2.2 - .htaccess 301 redirect with regex - Server Fault", 
    "displayLink": "serverfault.com", 
    "htmlTitle": "<b>apache</b> 2.2 - .<b>htaccess</b> 301 <b>redirect</b> with <b>regex</b> - Server Fault", 
    "formattedUrl": "serverfault.com/questions/168262/htaccess-301-redirect-with-regex", 
    "htmlFormattedUrl": "serverfault.com/questions/168262/<b>htaccess</b>-301-<b>redirect</b>-with-<b>regex</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "The redirect directive doesn't take regular expressions. What you probably want to use instead is RedirectMatch.", 
          "upvotecount": "0"
        }, 
        {
          "text": "you could use mod_rewrite with something like: RewriteEngine on RewriteRule ^/products/(.?)/(.?)/5702/(.*).html http://mycompany.com/footwear/wolverine-boots-waterproof-durashocks-work-boots-2582-3...", 
          "upvotecount": "1"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/serverfault/img/apple-touch-icon@2.png?v=9b1f48ae296b&a", 
          "description": "I am trying to fix a lot of errros in our old website regarding thing with product pages having multiple URLs associated with a single product. I am hoping that I can use regular expressions in wi...", 
          "primaryimageofpage": "http://cdn.sstatic.net/serverfault/img/apple-touch-icon@2.png?v=9b1f48ae296b&a", 
          "name": ".htaccess 301 redirect with regex", 
          "title": ".htaccess 301 redirect with regex"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/serverfault/img/apple-touch-icon@2.png?v=9b1f48ae296b&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://serverfault.com/questions/168262/htaccess-301-redirect-with-regex", 
          "twitter:app:url:iphone": "se-zaphod://serverfault.com/questions/168262/htaccess-301-redirect-with-regex", 
          "twitter:app:url:ipad": "se-zaphod://serverfault.com/questions/168262/htaccess-301-redirect-with-regex", 
          "twitter:app:country": "US", 
          "twitter:domain": "serverfault.com", 
          "twitter:description": "I am trying to fix a lot of errros in our old website regarding thing with product pages having multiple URLs associated with a single product.  I am hoping that I can use regular expressions in wi...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:title": ".htaccess 301 redirect with regex", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://serverfault.com/questions/168262/htaccess-301-redirect-with-regex", 
          "twitter:card": "summary", 
          "twitter:site": "@ServerFault", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/serverfault/img/apple-touch-icon@2.png?v=9b1f48ae296b&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "2", 
          "text": "I am trying to fix a lot of errros in our old website regarding thing with product pages having multiple URLs associated with a single product. I am hoping that I can use regular expressions...", 
          "image": "http://cdn.sstatic.net/serverfault/img/apple-touch-icon.png?v=6c3100d858bb", 
          "name": ".htaccess 301 redirect with regex", 
          "upvotecount": "1"
        }
      ]
    }, 
    "snippet": "Aug 8, 2010 ... Just for clarification, we are talking about Apache, right? \u2013 andol Aug 8 '10 ... The \nredirect directive doesn't take regular expressions. What you\u00a0...", 
    "htmlSnippet": "Aug 8, 2010 <b>...</b> Just for clarification, we are talking about <b>Apache</b>, right? \u2013 andol Aug 8 &#39;10 ... The <br>\n<b>redirect</b> directive doesn&#39;t take <b>regular expressions</b>. What you&nbsp;...", 
    "link": "http://serverfault.com/questions/168262/htaccess-301-redirect-with-regex", 
    "cacheId": "5DmhBPuo7EwJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": ".htaccess 301 redirect with regex? - Webmasters Stack Exchange", 
    "displayLink": "webmasters.stackexchange.com", 
    "htmlTitle": ".<b>htaccess</b> 301 <b>redirect</b> with <b>regex</b>? - Webmasters Stack Exchange", 
    "formattedUrl": "webmasters.stackexchange.com/.../htaccess-301-redirect-with-regex", 
    "htmlFormattedUrl": "webmasters.stackexchange.com/.../<b>htaccess</b>-301-<b>redirect</b>-with-<b>regex</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "this is what i came up with <IfModule mod_rewrite.c> RewriteEngine on RewriteBase / RewriteRule ^((1|2)\\.html|(3|4)\\.asp)$ /dir/$1.html [R=301,L] RewriteRule ^(4_([a-b]))\\.html$ /dir/sub/$1.html...", 
          "upvotecount": "1"
        }, 
        {
          "text": "RewriteEngine on RewriteCond %{HTTP_HOST} ^example\\.com$ [OR] RewriteCond %{HTTP_HOST} ^www\\.example\\.com$ RewriteRule ^1\\.html$ \"http\\:\\/\\/example\\.com\\/dir\\/1\\.html\" [R=301,L] RewriteCond...", 
          "upvotecount": "-1"
        }, 
        {
          "text": "This is a rather more general solution, so in that respect it might not be what you are after, but it should redirect the URLs in your question. RewriteEngine on RewriteRule ^(\\d)\\.(html|asp)$...", 
          "upvotecount": "-1"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/webmasters/img/apple-touch-icon@2.png?v=87ab80e73be8&a", 
          "description": "How to do this with regular expression? Old -> New http://www.example.com/1.html -> http://www.example.com/dir/1.html http://www.example.com/2.html -> http://www.example.com/dir/2.html", 
          "primaryimageofpage": "http://cdn.sstatic.net/webmasters/img/apple-touch-icon@2.png?v=87ab80e73be8&a", 
          "name": ".htaccess 301 redirect with regex?", 
          "title": ".htaccess 301 redirect with regex?"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/webmasters/img/apple-touch-icon@2.png?v=87ab80e73be8&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://webmasters.stackexchange.com/questions/37953/htaccess-301-redirect-with-regex", 
          "twitter:app:url:iphone": "se-zaphod://webmasters.stackexchange.com/questions/37953/htaccess-301-redirect-with-regex", 
          "twitter:app:url:ipad": "se-zaphod://webmasters.stackexchange.com/questions/37953/htaccess-301-redirect-with-regex", 
          "twitter:app:country": "US", 
          "twitter:domain": "webmasters.stackexchange.com", 
          "twitter:description": "How to do this with regular expression?  Old -&gt; New http://www.example.com/1.html   -&gt; http://www.example.com/dir/1.html http://www.example.com/2.html   -&gt; http://www.example.com/dir/2.html", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:title": ".htaccess 301 redirect with regex?", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://webmasters.stackexchange.com/questions/37953/htaccess-301-redirect-with-regex", 
          "twitter:card": "summary", 
          "twitter:site": "@StackWebmasters", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/webmasters/img/apple-touch-icon@2.png?v=87ab80e73be8&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "3", 
          "text": "How to do this with regular expression? Old -> New http://www.example.com/1.html -> http://www.example.com/dir/1.html http://www.example.com/2.html -> http://www.example.com/dir/2.html http://www.e...", 
          "image": "http://cdn.sstatic.net/webmasters/img/apple-touch-icon.png?v=2be3d512e642", 
          "name": ".htaccess 301 redirect with regex?", 
          "upvotecount": "1"
        }
      ]
    }, 
    "snippet": "Nov 17, 2012 ... \"1.html\" or \"7.asp\" and redirect to \"/dir/1.html\" or \"/dir/7.html\" respectively. The $1 \nmatches the first parenthesised sub pattern in the pattern that\u00a0...", 
    "htmlSnippet": "Nov 17, 2012 <b>...</b> &quot;1.html&quot; or &quot;7.asp&quot; and <b>redirect</b> to &quot;/dir/1.html&quot; or &quot;/dir/7.html&quot; respectively. The $1 <br>\nmatches the first parenthesised sub <b>pattern</b> in the <b>pattern</b> that&nbsp;...", 
    "link": "http://webmasters.stackexchange.com/questions/37953/htaccess-301-redirect-with-regex", 
    "cacheId": "3wdyALdLoxIJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Apache RedirectMatch wildcard examples | Apache 301 redirects ...", 
    "displayLink": "alvinalexander.com", 
    "htmlTitle": "<b>Apache RedirectMatch</b> wildcard <b>examples</b> | <b>Apache</b> 301 redirects <b>...</b>", 
    "formattedUrl": "alvinalexander.com/.../apache-redirectmatch-examples-wildcard-301", 
    "htmlFormattedUrl": "alvinalexander.com/.../<b>apache</b>-<b>redirectmatch</b>-<b>examples</b>-wildcard-301", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "Aug 31, 2011 ... A collection of Apache RedirectMatch examples, demonstrating the use of \nwildcard ... or RedirectMatch syntax and wildcard patterns (regex patterns)? ... As \na quick Apache RedirectMatch example, I just fixed all of my old Perl\u00a0...", 
    "htmlSnippet": "Aug 31, 2011 <b>...</b> A collection of <b>Apache</b> RedirectMatch <b>examples</b>, demonstrating the use of <br>\nwildcard ... or <b>RedirectMatch</b> syntax and wildcard patterns (<b>regex</b> patterns)? ... As <br>\na quick <b>Apache RedirectMatch example</b>, I just fixed all of my old Perl&nbsp;...", 
    "link": "http://alvinalexander.com/web/apache-redirectmatch-examples-wildcard-301", 
    "cacheId": "z_ezee6WZd8J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Redirection - SEO Best Practices - Moz", 
    "displayLink": "moz.com", 
    "htmlTitle": "<b>Redirection</b> - SEO Best Practices - Moz", 
    "formattedUrl": "https://moz.com/learn/seo/redirection", 
    "htmlFormattedUrl": "https://moz.com/learn/seo/<b>redirection</b>", 
    "pagemap": {
      "metatags": [
        {
          "twitter:site": "@Moz", 
          "referrer": "origin", 
          "fb:page_id": "8489236245", 
          "twitter:account_id": "15651700", 
          "viewport": "width=1200"
        }
      ], 
      "article": [
        {
          "name": "Redirection"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "240", 
          "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRpWhlsK7XpmggtjtU4JovJ24seAAQQuSfoc59Y4RYZgW4F34U_d9X7lsQW", 
          "height": "199"
        }
      ], 
      "cse_image": [
        {
          "src": "https://dc8hdnsmzapvm.cloudfront.net/assets/images/learnseo/redirect-google-301.gif?30a3633"
        }
      ]
    }, 
    "snippet": "How you redirect can make a huge difference in your SEO success. ... The per-\ndirectory context uses .htaccess files that exist in each folder a user wants to ... \nRegular expressions are a valuable skill to learn for both programmers and \nsystems\u00a0...", 
    "htmlSnippet": "How you <b>redirect</b> can make a huge difference in your SEO success. ... The per-<br>\ndirectory context uses .<b>htaccess</b> files that exist in each folder a user wants to ... <br>\n<b>Regular expressions</b> are a valuable skill to learn for both programmers and <br>\nsystems&nbsp;...", 
    "link": "https://moz.com/learn/seo/redirection", 
    "cacheId": "er6jIhFqcJYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Learn Regular Expressions: JavaScript & PHP Examples - YouTube", 
    "displayLink": "www.youtube.com", 
    "htmlTitle": "Learn <b>Regular Expressions</b>: <b>JavaScript</b> &amp; <b>PHP Examples</b> - YouTube", 
    "formattedUrl": "www.youtube.com/watch?v=9Tfq5Gt5MOo", 
    "htmlFormattedUrl": "www.youtube.com/watch?v=9Tfq5Gt5MOo", 
    "pagemap": {
      "videoobject": [
        {
          "isfamilyfriendly": "True", 
          "name": "Learn Regular Expressions: JavaScript & PHP Examples", 
          "unlisted": "False", 
          "url": "http://www.youtube.com/watch?v=9Tfq5Gt5MOo", 
          "datepublished": "2014-07-07", 
          "regionsallowed": "AD,AE,AF,AG,AI,AL,AM,AO,AQ,AR,AS,AT,AU,AW,AX,AZ,BA,BB,BD,BE,BF,BG,BH,BI,BJ,BL,BM,BN,BO,BQ,BR,BS,BT,BV,BW,BY,BZ,CA,CC,CD,CF,CG,CH,CI,CK,CL,CM,CN,CO,CR,CU,CV,CW,CX,CY,CZ,DE,DJ,DK,DM,DO,DZ,EC,EE,EG,EH...", 
          "channelid": "UCpOIUW62tnJTtpWFABxWZ8g", 
          "videoid": "9Tfq5Gt5MOo", 
          "paid": "False", 
          "height": "720", 
          "playertype": "HTML5 Flash", 
          "width": "1280", 
          "interactioncount": "3323", 
          "duration": "PT3M17S", 
          "embedurl": "https://www.youtube.com/embed/9Tfq5Gt5MOo", 
          "thumbnailurl": "http://i.ytimg.com/vi/9Tfq5Gt5MOo/maxresdefault.jpg", 
          "genre": "Education", 
          "description": "Watch the full series at https://www.youtube.com/playlist?list=PLfdtiltiRHWGRPyPMGuLPWuiWgEI9Kp1w Subscribe to phpacademy and enjoy more free web development..."
        }
      ], 
      "metatags": [
        {
          "twitter:app:name:googleplay": "YouTube", 
          "twitter:app:url:ipad": "vnd.youtube://www.youtube.com/watch?v=9Tfq5Gt5MOo&feature=applinks", 
          "twitter:image": "http://i.ytimg.com/vi/9Tfq5Gt5MOo/maxresdefault.jpg", 
          "al:web:url": "http://www.youtube.com/watch?v=9Tfq5Gt5MOo&feature=applinks", 
          "twitter:site": "@youtube", 
          "twitter:app:url:googleplay": "http://www.youtube.com/watch?v=9Tfq5Gt5MOo", 
          "fb:app_id": "87741124305", 
          "og:video:url": "https://www.youtube.com/embed/9Tfq5Gt5MOo", 
          "og:url": "http://www.youtube.com/watch?v=9Tfq5Gt5MOo", 
          "twitter:app:url:iphone": "vnd.youtube://www.youtube.com/watch?v=9Tfq5Gt5MOo&feature=applinks", 
          "twitter:url": "http://www.youtube.com/watch?v=9Tfq5Gt5MOo", 
          "al:ios:app_store_id": "544007664", 
          "title": "Learn Regular Expressions: JavaScript & PHP Examples", 
          "og:video:type": "text/html", 
          "og:type": "video", 
          "al:android:package": "com.google.android.youtube", 
          "og:title": "Learn Regular Expressions: JavaScript & PHP Examples", 
          "twitter:title": "Learn Regular Expressions: JavaScript & PHP Examples", 
          "al:ios:url": "vnd.youtube://www.youtube.com/watch?v=9Tfq5Gt5MOo&feature=applinks", 
          "twitter:app:name:iphone": "YouTube", 
          "og:video:secure_url": "https://www.youtube.com/embed/9Tfq5Gt5MOo", 
          "twitter:app:name:ipad": "YouTube", 
          "twitter:app:id:ipad": "544007664", 
          "al:ios:app_name": "YouTube", 
          "og:video:height": "720", 
          "al:android:app_name": "YouTube", 
          "twitter:app:id:googleplay": "com.google.android.youtube", 
          "og:image": "http://i.ytimg.com/vi/9Tfq5Gt5MOo/maxresdefault.jpg", 
          "twitter:app:id:iphone": "544007664", 
          "og:site_name": "YouTube", 
          "twitter:card": "player", 
          "twitter:description": "Watch the full series at https://www.youtube.com/playlist?list=PLfdtiltiRHWGRPyPMGuLPWuiWgEI9Kp1w Subscribe to phpacademy and enjoy more free web development...", 
          "og:description": "Watch the full series at https://www.youtube.com/playlist?list=PLfdtiltiRHWGRPyPMGuLPWuiWgEI9Kp1w Subscribe to phpacademy and enjoy more free web development...", 
          "og:video:tag": "web development", 
          "al:android:url": "vnd.youtube://www.youtube.com/watch?v=9Tfq5Gt5MOo&feature=applinks", 
          "og:video:width": "1280"
        }
      ], 
      "imageobject": [
        {
          "url": "http://i.ytimg.com/vi/9Tfq5Gt5MOo/maxresdefault.jpg", 
          "width": "1280", 
          "height": "720"
        }
      ], 
      "person": [
        {
          "url": "http://www.youtube.com/user/phpacademy"
        }, 
        {
          "url": "https://plus.google.com/115481848680723852766"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "300", 
          "src": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcSKQtgzM0_TMC_B_6r9RGZ6D249WJ6i2qQFeLbmv8u55l_24f3oSjLelbc", 
          "height": "168"
        }
      ], 
      "cse_image": [
        {
          "src": "http://i.ytimg.com/vi/9Tfq5Gt5MOo/maxresdefault.jpg"
        }
      ]
    }, 
    "snippet": "Jul 7, 2014 ... Watch the full series at https://www.youtube.com/playlist?list=\nPLfdtiltiRHWGRPyPMGuLPWuiWgEI9Kp1w Subscribe to phpacademy and enjoy\n\u00a0...", 
    "htmlSnippet": "Jul 7, 2014 <b>...</b> Watch the full series at https://www.youtube.com/playlist?list=<br>\nPLfdtiltiRHWGRPyPMGuLPWuiWgEI9Kp1w Subscribe to phpacademy and enjoy<br>\n&nbsp;...", 
    "link": "http://www.youtube.com/watch?v=9Tfq5Gt5MOo", 
    "cacheId": "eC_L_dHWw5sJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "37 Tested PHP, Perl, and JavaScript Regular Expressions", 
    "displayLink": "www.virtuosimedia.com", 
    "htmlTitle": "37 Tested <b>PHP</b>, Perl, and <b>JavaScript Regular Expressions</b>", 
    "formattedUrl": "www.virtuosimedia.com/.../php/37-tested-php-perl-and-javascript-regular- expressions", 
    "htmlFormattedUrl": "www.virtuosimedia.com/.../<b>php</b>/37-tested-<b>php</b>-perl-and-<b>javascript</b>-<b>regular- expressions</b>", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://www.virtuosimedia.com/dev/php/37-tested-php-perl-and-javascript-regular-expressions", 
          "og:site_name": "Virtuosi Media", 
          "fb:admins": "173600756028863", 
          "og:type": "website", 
          "og:description": "37 regexes ready for immediate use, along with links to the best regular expression tutorials and resources.", 
          "og:title": "37 Tested PHP, Perl, and JavaScript Regular Expressions"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "389", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcR438WJt_jVrGUiLbmnMt-WaY7O2cX5qfT24jHS7YC6JOX6m_G3zqPSWpU", 
          "height": "129"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.virtuosimedia.com/includes/Files/Uploaded/Images/Articles/Lead/regex.png"
        }
      ]
    }, 
    "snippet": "Sep 22, 2009 ... In order to save you time, I've compiled a list of PHP, Perl, and JavaScript regular \nexpressions for common use cases that have been tested and\u00a0...", 
    "htmlSnippet": "Sep 22, 2009 <b>...</b> In order to save you time, I&#39;ve compiled a list of <b>PHP</b>, Perl, and <b>JavaScript regular</b> <br>\n<b>expressions</b> for common use cases that have been tested and&nbsp;...", 
    "link": "http://www.virtuosimedia.com/dev/php/37-tested-php-perl-and-javascript-regular-expressions", 
    "cacheId": "xpnPFjm_vhEJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions for Dummies: Screencast Series - Tuts+ Code ...", 
    "displayLink": "code.tutsplus.com", 
    "htmlTitle": "<b>Regular Expressions</b> for Dummies: Screencast Series - Tuts+ Code <b>...</b>", 
    "formattedUrl": "code.tutsplus.com/tutorials/regular-expressions-for-dummies-screencast-series --net-7887", 
    "htmlFormattedUrl": "code.tutsplus.com/<b>tutorials</b>/<b>regular-expressions</b>-for-dummies-screencast-series --net-7887", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://code.tutsplus.com/tutorials/regular-expressions-for-dummies-screencast-series--net-7887", 
          "og:site_name": "Code Tuts+", 
          "csrf-token": "dVVNne1YtB1kyLhIhtmvmiBEnL/2w77YSQ865GxesQQI3BfP7WzYA4vqu1lzw3ehzJNcCDCYOUC9QsM/trzJxA==", 
          "og:type": "article", 
          "og:description": "Over the course of a handful of video tutorials, I'm going to teach you how to use regular expressions effectively in your Javascript and PHP applications. As always, I'll assume you know absolutely zip. | Difficulty: Intermediate; Tags: PHP, Web Development", 
          "csrf-param": "authenticity_token", 
          "et.category": "PHP", 
          "og:title": "Regular Expressions for Dummies: Screencast Series - Tuts+ Code Tutorial", 
          "fb:app_id": "1494084460809023", 
          "og:image": "https://cdn.tutsplus.com/net/uploads/legacy/503_regex/200x200.png", 
          "viewport": "initial-scale=1"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "160", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcScEbSsvH66W0SaVgTpVovUE_hPcmF-8iEG1w71qdBUJyrhnCJaKEhW1zSl", 
          "height": "160"
        }
      ], 
      "cse_image": [
        {
          "src": "https://cdn.tutsplus.com/net/uploads/legacy/503_regex/200x200.png"
        }
      ]
    }, 
    "snippet": "Nov 10, 2009 ... Over the course of a handful of video tutorials, I'm going to teach you how to use \nregular expressions effectively in your Javascript and PHP\u00a0...", 
    "htmlSnippet": "Nov 10, 2009 <b>...</b> Over the course of a handful of video <b>tutorials</b>, I&#39;m going to teach you how to use <br>\n<b>regular expressions</b> effectively in your <b>Javascript</b> and <b>PHP</b>&nbsp;...", 
    "link": "http://code.tutsplus.com/tutorials/regular-expressions-for-dummies-screencast-series--net-7887", 
    "cacheId": "vDtQkeCcE9oJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Using Regular Expressions in PHP and JavaScript - Learning PHP ...", 
    "displayLink": "www.oreilly.com", 
    "htmlTitle": "Using <b>Regular Expressions</b> in <b>PHP</b> and <b>JavaScript</b> - Learning <b>PHP</b> <b>...</b>", 
    "formattedUrl": "www.oreilly.com/php/.../php...javascript/regex-in-php-javascript.html", 
    "htmlFormattedUrl": "www.oreilly.com/<b>php</b>/.../<b>php</b>...<b>javascript</b>/<b>regex</b>-in-<b>php</b>-<b>javascript</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "twitter:site": "@OReillyMedia", 
          "fb:page_id": "15137500430", 
          "twitter:card": "summary", 
          "author": "Robin Nixon", 
          "search_date": "2009-07-21", 
          "site": "O'Reilly Media Inc.", 
          "twitter:title": "Using Regular Expressions in PHP and JavaScript - Learning PHP, MySQL, and JavaScript", 
          "pagename": "Using Regular Expressions in PHP and JavaScript - Learning PHP, MySQL, and JavaScript", 
          "date": "Jul. 21, 2009", 
          "twitter:url": "http://archive.oreilly.com/pub/a/php/excerpts/php-mysql-javascript/regex-in-php-javascript.html"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "76", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQUSFIGl9EzJQqI1wFvdjKQtcf4iv8MsoQ-hW8agQG6YG72sN0dj86M", 
          "height": "96"
        }
      ], 
      "cse_image": [
        {
          "src": "http://covers.oreilly.com/images/9780596157135/thumb.gif"
        }
      ]
    }, 
    "snippet": "Regular expressions are supported by both JavaScript and PHP, as well as a \nnumber of other languages. They make it possible to construct the most powerful \nof\u00a0...", 
    "htmlSnippet": "<b>Regular expressions</b> are supported by both <b>JavaScript</b> and <b>PHP</b>, as well as a <br>\nnumber of other languages. They make it possible to construct the most powerful <br>\nof&nbsp;...", 
    "link": "http://www.oreilly.com/php/excerpts/php-mysql-javascript/regex-in-php-javascript.html", 
    "cacheId": "lbnQVCx9TMsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regex Tester and Debugger Online - Javascript, PCRE, PHP", 
    "displayLink": "www.regextester.com", 
    "htmlTitle": "<b>Regex</b> Tester and Debugger Online - <b>Javascript</b>, PCRE, <b>PHP</b>", 
    "formattedUrl": "www.regextester.com/", 
    "htmlFormattedUrl": "www.<b>regex</b>tester.com/", 
    "pagemap": {
      "metatags": [
        {
          "fb:app_id": "527837144019277", 
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "Online regex tester that supports JavaScript and PCRE. Includes pattern \nexamples and syntax reference.", 
    "htmlSnippet": "Online <b>regex</b> tester that supports <b>JavaScript</b> and PCRE. Includes <b>pattern</b> <br>\n<b>examples</b> and syntax reference.", 
    "link": "http://www.regextester.com/", 
    "cacheId": "HnD8H2PmdRkJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular expression tool - regex.larsolavtorvik.com", 
    "displayLink": "regex.larsolavtorvik.com", 
    "htmlTitle": "<b>Regular expression</b> tool - <b>regex</b>.larsolavtorvik.com", 
    "formattedUrl": "regex.larsolavtorvik.com/", 
    "htmlFormattedUrl": "<b>regex</b>.larsolavtorvik.com/", 
    "pagemap": {
      "metatags": [
        {
          "language": "en"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "120", 
          "src": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcSesyULf9cDvLLETtafBQvJ614bezaD8mM1ojc4D-4xphq2B1WpmFgz", 
          "height": "80"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.linklog.ch/files/log/res_150_100/regex.jpg"
        }
      ]
    }, 
    "snippet": "Regular expression tool. Help you validate your regular expressions in different \nlanguages. ... PHP PCRE; JavaScript; regex 0.9.6. Hi. It is time to update this tool\n\u00a0...", 
    "htmlSnippet": "<b>Regular expression</b> tool. Help you validate your <b>regular expressions</b> in different <br>\nlanguages. ... <b>PHP</b> PCRE; <b>JavaScript</b>; <b>regex</b> 0.9.6. Hi. It is time to update this tool<br>\n&nbsp;...", 
    "link": "http://regex.larsolavtorvik.com/", 
    "cacheId": "l-5X4fat468J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions Cheat Sheet by DaveChild - Cheatography ...", 
    "displayLink": "www.cheatography.com", 
    "htmlTitle": "<b>Regular Expressions</b> Cheat Sheet by DaveChild - Cheatography <b>...</b>", 
    "formattedUrl": "www.cheatography.com/davechild/cheat-sheets/regular-expressions/", 
    "htmlFormattedUrl": "www.cheatography.com/davechild/cheat-sheets/<b>regular-expressions</b>/", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://www.cheatography.com/davechild/cheat-sheets/regular-expressions/", 
          "og:site_name": "Cheatography", 
          "fb:admins": "860405712", 
          "og:type": "cheatography:cheat_sheet", 
          "og:description": "Regular Expressions cheat_sheet from DaveChild. A quick reference guide for regular expressions (regex), including symbols, ranges, grouping, assertions and some sample patterns to get you started.", 
          "og:title": "Regular Expressions cheat_sheet", 
          "fb:app_id": "152741628156662", 
          "og:image": "http://www.cheatography.com/storage/thumb/davechild_regular-expressions.600.jpg", 
          "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "189", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTSPI-gmNoBjyfCHOa3mIsY41jFbh3oiO-HLqFaOgerBDlULimkHG3zvq_h", 
          "height": "267"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.cheatography.com/storage/thumb/davechild_regular-expressions.600.jpg"
        }
      ]
    }, 
    "snippet": "A quick reference guide for regular expressions (regex), including symbols, .... I'm \nspecifically looking for php or javascript, and I know they're all mostly the same\u00a0...", 
    "htmlSnippet": "A quick reference guide for <b>regular expressions</b> (<b>regex</b>), including symbols, .... I&#39;m <br>\nspecifically looking for <b>php</b> or <b>javascript</b>, and I know they&#39;re all mostly the same&nbsp;...", 
    "link": "http://www.cheatography.com/davechild/cheat-sheets/regular-expressions/", 
    "cacheId": "QYGR8eBzzHsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Methods of the Pattern Class (The Java\u2122 Tutorials > Essential ...", 
    "displayLink": "docs.oracle.com", 
    "htmlTitle": "Methods of the Pattern Class (The <b>Java</b>\u2122 Tutorials &gt; Essential <b>...</b>", 
    "formattedUrl": "https://docs.oracle.com/javase/tutorial/essential/regex/pattern.html", 
    "htmlFormattedUrl": "https://docs.oracle.com/<b>java</b>se/<b>tutorial</b>/essential/<b>regex</b>/pattern.html", 
    "snippet": "The expression \"a\\u030A\" , for example, will match the string \"\\u00E5\" when ... \nThe following example uses the original test harness, RegexTestHarness.java\u00a0...", 
    "htmlSnippet": "The expression &quot;a\\u030A&quot; , for <b>example</b>, will <b>match</b> the string &quot;\\u00E5&quot; when ... <br>\nThe following <b>example</b> uses the original test harness, <b>RegexTestHarness</b>.<b>java</b>&nbsp;...", 
    "link": "https://docs.oracle.com/javase/tutorial/essential/regex/pattern.html", 
    "cacheId": "8qu7-5-vxFYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "How to Split String in Java using Regular Expression | Java67", 
    "displayLink": "java67.blogspot.com", 
    "htmlTitle": "How to <b>Split</b> String in <b>Java</b> using <b>Regular Expression</b> | Java67", 
    "formattedUrl": "java67.blogspot.com/.../how-to-split-string-in-java-regular-expression.html", 
    "htmlFormattedUrl": "<b>java</b>67.blogspot.com/.../how-to-<b>split</b>-string-in-<b>java</b>-<b>regular-expression</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=1100"
        }
      ], 
      "blogposting": [
        {
          "url": "5:37 AM", 
          "articlebody": "String class provides split() method to split String in Java, based upon any delimiter, e.g. comma, colon, space or any arbitrary method. split() method splits string based on delimiter provided,...", 
          "datepublished": "5:37 AM", 
          "name": "How to Split String in Java using Regular Expression", 
          "author": "Javin Paul"
        }
      ]
    }, 
    "snippet": "Mar 31, 2013 ... String Split Example with regular expression in Java Let's see couple of String \nSplit example in Java. In first example, we will split a colon\u00a0...", 
    "htmlSnippet": "Mar 31, 2013 <b>...</b> String <b>Split Example</b> with <b>regular expression</b> in <b>Java</b> Let&#39;s see couple of String <br>\n<b>Split example</b> in <b>Java</b>. In first <b>example</b>, we will <b>split</b> a colon&nbsp;...", 
    "link": "http://java67.blogspot.com/2013/03/how-to-split-string-in-java-regular-expression.html", 
    "cacheId": "NAC81av0LAgJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Pattern | Android Developers", 
    "displayLink": "developer.android.com", 
    "htmlTitle": "<b>Pattern</b> | <b>Android</b> Developers", 
    "formattedUrl": "developer.android.com/reference/java/util/regex/Pattern.html", 
    "htmlFormattedUrl": "developer.<b>android</b>.com/reference/<b>java</b>/util/<b>regex</b>/<b>Pattern</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"
        }
      ], 
      "article": [
        {
          "articlebody": "Patterns are compiled regular expressions. In many cases, convenience methods such as String.matches, String.replaceAll and String.split will be preferable, but if you need to do a lot of work...", 
          "name": "Pattern"
        }
      ]
    }, 
    "snippet": "The Pattern class and its companion, Matcher , also offer more functionality than \n... An important gotcha is that Java has no regular expression literals, and uses\u00a0...", 
    "htmlSnippet": "The <b>Pattern</b> class and its companion, Matcher , also offer more functionality than <br>\n... An important gotcha is that <b>Java</b> has no <b>regular expression</b> literals, and uses&nbsp;...", 
    "link": "http://developer.android.com/reference/java/util/regex/Pattern.html", 
    "cacheId": "dw8DbHQalk4J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "java - How to use Android REGEX with Pattern and Matcher Classes ...", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>java</b> - How to use <b>Android REGEX</b> with <b>Pattern</b> and Matcher Classes <b>...</b>", 
    "formattedUrl": "stackoverflow.com/.../how-to-use-android-regex-with-pattern-and-matcher- classes", 
    "htmlFormattedUrl": "stackoverflow.com/.../how-to-use-<b>android</b>-<b>regex</b>-with-<b>pattern</b>-and-<b>match</b>er- classes", 
    "pagemap": {
      "answer": [
        {
          "text": "By default, the . does not match line breaks. You would need to add a regex option so that it does: Pattern p = Pattern.compile(myPattern,Pattern.DOTALL);", 
          "upvotecount": "4"
        }, 
        {
          "text": "m.matches() will only return true if the entire string matches. Use m.find() instead, and it should work better!", 
          "upvotecount": "1"
        }, 
        {
          "text": "First, as arc has said, . won't match to \\n unless you activate Pattern.DOTALL, and as Petter M, you should use m.find(), or else it won't match. Then, you could use this other expression,...", 
          "upvotecount": "1"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I have the following code: String example = \"<!--\u00a7FILES_SECTION\u00a7\\n\" + \"Example line one\\n\" + \"Example line two\\n\" + \"\u00a7FILES_SECTION\u00a7-->\"; ...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "How to use Android REGEX with Pattern and Matcher Classes?", 
          "title": "How to use Android REGEX with Pattern and Matcher Classes?"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/9585859/how-to-use-android-regex-with-pattern-and-matcher-classes", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/9585859/how-to-use-android-regex-with-pattern-and-matcher-classes", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/9585859/how-to-use-android-regex-with-pattern-and-matcher-classes", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I have the following code:  String example = \"&lt;!--\u00a7FILES_SECTION\u00a7\\n\" +                 \"Example line one\\n\" +                 \"Example line two\\n\" +                 \"\u00a7FILES_SECTION\u00a7--&gt;\";     ...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/9585859/how-to-use-android-regex-with-pattern-and-matcher-classes", 
          "twitter:card": "summary", 
          "twitter:title": "How to use Android REGEX with Pattern and Matcher Classes?", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "3", 
          "text": "I have the following code: String example = \"<!--\u00a7FILES_SECTION\u00a7\\n\" + \"Example line one\\n\" + \"Example line two\\n\" + \"\u00a7FILES_SECTION\u00a7-->\"; String myPattern = \".*?FILES_SECTION.*?\\n(.*?)\\n.*?FILE...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "How to use Android REGEX with Pattern and Matcher Classes?", 
          "upvotecount": "3"
        }
      ]
    }, 
    "snippet": "First, as arc has said, . won't match to \\n unless you activate Pattern.DOTALL, and \nas Petter M, you should use m.find(), or else it won't match. Then\u00a0...", 
    "htmlSnippet": "First, as arc has said, . won&#39;t <b>match</b> to \\n unless you activate <b>Pattern</b>.DOTALL, and <br>\nas Petter M, you should use m.find(), or else it won&#39;t <b>match</b>. Then&nbsp;...", 
    "link": "http://stackoverflow.com/questions/9585859/how-to-use-android-regex-with-pattern-and-matcher-classes", 
    "cacheId": "I_QqgtzsSIoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Android Java Regex Match - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>Android Java Regex Match</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/12123884/android-java-regex-match", 
    "htmlFormattedUrl": "stackoverflow.com/questions/12123884/<b>android</b>-<b>java</b>-<b>regex</b>-<b>match</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "This should work: String someJson =\"{\\\"to\\\":\\\"broadcast\\\", \\\"type\\\":\\\"50\\\", \\\"payload\\\":[{\\\"name\\\":\\\"John Doe Jr.\\\"},{\\\"name2\\\":\\\"John Doe\\\"}]}\"; Pattern p = Pattern.compile(\".*?payload\\\":(.*)}\");...", 
          "upvotecount": "1"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I'm trying to pull out the strings: [{\"name\":\"John Doe Jr.\"},{\"name2\":\"John Doe\"}] & {\"name\":\"John Doe\"} from the payload in the JSON strings below: {\"to\":\"broadcast\", \"type\":\"50\",", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Android Java Regex Match", 
          "title": "Android Java Regex Match"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/12123884/android-java-regex-match", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/12123884/android-java-regex-match", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/12123884/android-java-regex-match", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I'm trying to pull out the strings:   [{\"name\":\"John Doe Jr.\"},{\"name2\":\"John Doe\"}] &amp; {\"name\":\"John Doe\"}    from the payload in the JSON strings below:  {\"to\":\"broadcast\", \"type\":\"50\",", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/12123884/android-java-regex-match", 
          "twitter:card": "summary", 
          "twitter:title": "Android Java Regex Match", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "1", 
          "text": "I'm trying to pull out the strings: [{\"name\":\"John Doe Jr.\"},{\"name2\":\"John Doe\"}] & {\"name\":\"John Doe\"} from the payload in the JSON strings below: {\"to\":\"broadcast\", \"type\":\"50\", \"payload\":[{\"nam...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Android Java Regex Match", 
          "upvotecount": "0"
        }
      ]
    }, 
    "snippet": "This should work: String someJson =\"{\\\"to\\\":\\\"broadcast\\\", \\\"type\\\":\\\"50\\\", \\\"payload\\\"\n:[{\\\"name\\\":\\\"John Doe Jr.\\\"},{\\\"name2\\\":\\\"John Doe\\\"}]}\"; Pattern p\u00a0...", 
    "htmlSnippet": "This should work: String someJson =&quot;{\\&quot;to\\&quot;:\\&quot;broadcast\\&quot;, \\&quot;type\\&quot;:\\&quot;50\\&quot;, \\&quot;payload\\&quot;<br>\n:[{\\&quot;name\\&quot;:\\&quot;John Doe Jr.\\&quot;},{\\&quot;name2\\&quot;:\\&quot;John Doe\\&quot;}]}&quot;; <b>Pattern</b> p&nbsp;...", 
    "link": "http://stackoverflow.com/questions/12123884/android-java-regex-match", 
    "cacheId": "Q5yadHD1iLUJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "How to validate email address with regular expression", 
    "displayLink": "www.mkyong.com", 
    "htmlTitle": "How to validate email address with <b>regular expression</b>", 
    "formattedUrl": "www.mkyong.com/regular-expressions/how-to-validate-email-address-with- regular-expression/", 
    "htmlFormattedUrl": "www.mkyong.com/<b>regular-expressions</b>/how-to-validate-email-address-with- <b>regular-expression</b>/", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "239", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcSYyqhYkj6NHAJg9DScFMNyIW2RYPCfNyTrVOfxbxMUMLv-CJY1g1PP_5J5", 
          "height": "204"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.mkyong.com/wp-content/uploads/2009/10/Email_Icon.jpg"
        }
      ]
    }, 
    "snippet": "Oct 31, 2009 ... Android; Java Core ... Email Regular Expression Pattern ... Here's a Java \nexample to show you how to use regex to validate email address.", 
    "htmlSnippet": "Oct 31, 2009 <b>...</b> <b>Android</b>; <b>Java</b> Core ... Email <b>Regular Expression Pattern</b> ... Here&#39;s a <b>Java</b> <br>\n<b>example</b> to show you how to use <b>regex</b> to validate email address.", 
    "link": "http://www.mkyong.com/regular-expressions/how-to-validate-email-address-with-regular-expression/", 
    "cacheId": "0D6F9RglorMJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "java - Problem matching regex pattern in Android - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>java</b> - Problem matching <b>regex pattern</b> in <b>Android</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/.../problem-matching-regex-pattern-in-android", 
    "htmlFormattedUrl": "stackoverflow.com/.../problem-<b>match</b>ing-<b>regex</b>-<b>pattern</b>-in-<b>android</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "Your regexp actually works, it's almost correct Pattern p = Pattern.compile(\"\\\"[r]\\\".:.\\\"[+|-][0-9]+.[0-9][0-9]\\\"\"); Matcher m = p.matcher(raw_string); if (m.find()){ String res = m.toMatchResult()...", 
          "upvotecount": "4"
        }, 
        {
          "text": "The next line should read: if ( m.find() ) { Are you doing that? A few other issues: You're using . to match the spaces surrounding the colon; if that's always supposed to be whitespace, you...", 
          "upvotecount": "4"
        }, 
        {
          "text": "First thing try to escape your dot symbol: ...[0-9]+\\.[0-9][0-9]... because the dot symbol match any character... Second thing: the [+|-]define a range of characters but it's mandatory... try...", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I am trying to search this string: ,\"tt\" : \"ABC\",\"r\" : \"+725.00\",\"a\" : \"55.30\", For: \"r\" : \"725.00\" And here is my current code: Pattern p =", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Problem matching regex pattern in Android", 
          "title": "Problem matching regex pattern in Android"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/3146334/problem-matching-regex-pattern-in-android", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/3146334/problem-matching-regex-pattern-in-android", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/3146334/problem-matching-regex-pattern-in-android", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I am trying to search this string:  ,\"tt\" : \"ABC\",\"r\" : \"+725.00\",\"a\" : \"55.30\",   For:  \"r\" : \"725.00\"   And here is my current code:  Pattern p =", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/3146334/problem-matching-regex-pattern-in-android", 
          "twitter:card": "summary", 
          "twitter:title": "Problem matching regex pattern in Android", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "3", 
          "text": "I am trying to search this string: ,\"tt\" : \"ABC\",\"r\" : \"+725.00\",\"a\" : \"55.30\", For: \"r\" : \"725.00\" And here is my current code: Pattern p = Pattern.compile(\"([r]\\\".:.\\\"[+|-][0-9]+.[0-9][0-9]\\\")\");...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Problem matching regex pattern in Android", 
          "upvotecount": "3"
        }
      ]
    }, 
    "snippet": "First thing try to escape your dot symbol: ... [0-9]+\\.[0-9][0-9] ... because the dot \nsymbol match any character... Second thing: the [+|-] define a range of\u00a0...", 
    "htmlSnippet": "First thing try to escape your dot symbol: ... [0-9]+\\.[0-9][0-9] ... because the dot <br>\nsymbol <b>match</b> any character... Second thing: the [+|-] define a range of&nbsp;...", 
    "link": "http://stackoverflow.com/questions/3146334/problem-matching-regex-pattern-in-android", 
    "cacheId": "8CWj38ZXD08J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "How to extract HTML Links with regular expression", 
    "displayLink": "www.mkyong.com", 
    "htmlTitle": "How to extract HTML Links with <b>regular expression</b>", 
    "formattedUrl": "www.mkyong.com/regular-expressions/how-to-extract-html-links-with- regular-expression/", 
    "htmlFormattedUrl": "www.mkyong.com/<b>regular-expressions</b>/how-to-extract-html-links-with- <b>regular-expression</b>/", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"
        }
      ]
    }, 
    "snippet": "Nov 18, 2009 ... Android; Java Core ... Extract Link From A tag Regular Expression Pattern ... \nHere's a simple Java Link extractor example, to extract the a tag\u00a0...", 
    "htmlSnippet": "Nov 18, 2009 <b>...</b> <b>Android</b>; <b>Java</b> Core ... Extract Link From A tag <b>Regular Expression Pattern</b> ... <br>\nHere&#39;s a simple <b>Java</b> Link extractor <b>example</b>, to extract the a tag&nbsp;...", 
    "link": "http://www.mkyong.com/regular-expressions/how-to-extract-html-links-with-regular-expression/", 
    "cacheId": "1ERD1tn2bO0J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "java - Android regular expression - return matched string - Stack ...", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>java</b> - <b>Android regular expression</b> - return matched string - Stack <b>...</b>", 
    "formattedUrl": "stackoverflow.com/.../android-regular-expression-return-matched-string", 
    "htmlFormattedUrl": "stackoverflow.com/.../<b>android</b>-<b>regular-expression</b>-return-<b>match</b>ed-string", 
    "pagemap": {
      "answer": [
        {
          "text": "you should get capturing group you need. Read this. You'll find answer to your question. Here is a simple example for you. I think you'll understand it. Pattern p = Pattern.compile(\".*?(\\\\d{2}(am|p...", 
          "upvotecount": "13"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "In my Android project I have a regular expression and a string, in which I should have the matched expression. The problem is, I've only found a matches() method, which returns boolean. Is there", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Android regular expression - return matched string", 
          "title": "Android regular expression - return matched string"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/9366742/android-regular-expression-return-matched-string", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/9366742/android-regular-expression-return-matched-string", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/9366742/android-regular-expression-return-matched-string", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "In my Android project I have a regular expression and a string, in which I should have the matched expression. The problem is, I've only found a matches() method, which returns boolean. Is there", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/9366742/android-regular-expression-return-matched-string", 
          "twitter:card": "summary", 
          "twitter:title": "Android regular expression - return matched string", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "1", 
          "text": "In my Android project I have a regular expression and a string, in which I should have the matched expression. The problem is, I've only found a matches() method, which returns boolean. Is...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Android regular expression - return matched string", 
          "upvotecount": "6"
        }
      ]
    }, 
    "snippet": "In my Android project I have a regular expression and a string, ... if there is a time \nin this string (in this example - \"12pm\"), if it is - return it) ?", 
    "htmlSnippet": "In my <b>Android</b> project I have a <b>regular expression</b> and a string, ... if there is a time <br>\nin this string (in this <b>example</b> - &quot;12pm&quot;), if it is - return it) ?", 
    "link": "http://stackoverflow.com/questions/9366742/android-regular-expression-return-matched-string", 
    "cacheId": "5vL1GxR-2DoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "MySQL :: MySQL 5.1 Reference Manual :: 12.5.2 Regular Expressions", 
    "displayLink": "dev.mysql.com", 
    "htmlTitle": "<b>MySQL</b> :: <b>MySQL</b> 5.1 Reference <b>Manual</b> :: 12.5.2 <b>Regular Expressions</b>", 
    "formattedUrl": "https://dev.mysql.com/doc/refman/5.1/en/regexp.html", 
    "htmlFormattedUrl": "https://dev.<b>mysql</b>.com/doc/refman/5.1/en/<b>regexp</b>.html", 
    "snippet": "MySQL uses Henry Spencer's implementation of regular expressions, which is \n..... not the more sophisticated regular expression matching found in Perl or \nPHP's\u00a0...", 
    "htmlSnippet": "<b>MySQL</b> uses Henry Spencer&#39;s implementation of <b>regular expressions</b>, which is <br>\n..... not the more sophisticated <b>regular expression</b> matching found in Perl or <br>\n<b>PHP&#39;s</b>&nbsp;...", 
    "link": "https://dev.mysql.com/doc/refman/5.1/en/regexp.html", 
    "cacheId": "Y0tDn2N0JBcJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Use regular expressions in MySQL SELECT statements | a Tech ...", 
    "displayLink": "www.tech-recipes.com", 
    "htmlTitle": "Use <b>regular expressions</b> in <b>MySQL</b> SELECT statements | a Tech <b>...</b>", 
    "formattedUrl": "www.tech-recipes.com/.../use-regular-expressions-in-mysql-select-statements/", 
    "htmlFormattedUrl": "www.tech-recipes.com/.../use-<b>regular-expressions</b>-in-<b>mysql</b>-select-statements/", 
    "pagemap": {
      "metatags": [
        {
          "pubdate": "20040630", 
          "viewport": "width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"
        }
      ]
    }, 
    "snippet": "Jun 30, 2004 ... The basic syntax to use regular expressions in a MySQL [\u2026] ... How to select from \na column that not have character? like in php\u00a0...", 
    "htmlSnippet": "Jun 30, 2004 <b>...</b> The basic syntax to use <b>regular expressions</b> in a <b>MySQL</b> [\u2026] ... How to select from <br>\na column that not have character? like in <b>php</b>&nbsp;...", 
    "link": "http://www.tech-recipes.com/rx/484/use-regular-expressions-in-mysql-select-statements/", 
    "cacheId": "9tGillZktdgJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "MySQL REGEXP operator - w3resource", 
    "displayLink": "www.w3resource.com", 
    "htmlTitle": "<b>MySQL REGEXP</b> operator - w3resource", 
    "formattedUrl": "www.w3resource.com/mysql/string.../mysql-regexp-function.php", 
    "htmlFormattedUrl": "www.w3resource.com/<b>mysql</b>/string.../<b>mysql</b>-<b>regexp</b>-function.<b>php</b>", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://www.w3resource.com/mysql/string-functions/mysql-regexp-function.php", 
          "og:site_name": "w3resource", 
          "og:type": "tutorial", 
          "og:description": "MySQL REGEXP performs a pattern match of a string expression against a pattern. The pattern is supplied as argument.", 
          "og:title": "MySQL REGEXP operator - w3resource", 
          "og:image": "//www.w3resource.com/includes/mysql-images/mysql.gif", 
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "120", 
          "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcSyvoGC2SkjotfLZSG4ih2TkdZyz01zApBDcDuJ2d4WgD-guKQvljvR", 
          "height": "120"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.w3resource.com/includes/mysql-images/mysql.gif"
        }
      ], 
      "tutorial": [
        {
          "datemodified": "July 03 2015 12:49:44."
        }
      ]
    }, 
    "snippet": "MySQL REGEXP performs a pattern match of a string expression against a \npattern. ... <title>example-regexp-function - php mysql examples | w3resource</\ntitle>\u00a0...", 
    "htmlSnippet": "<b>MySQL REGEXP</b> performs a <b>pattern match</b> of a string expression against a <br>\n<b>pattern</b>. ... &lt;title&gt;<b>example</b>-<b>regexp</b>-function - <b>php mysql examples</b> | w3resource&lt;/<br>\ntitle&gt;&nbsp;...", 
    "link": "http://www.w3resource.com/mysql/string-functions/mysql-regexp-function.php", 
    "cacheId": "CnjRWKG1eTgJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "bash - Print regexp matches in AWK - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>bash</b> - Print <b>regexp</b> matches in <b>AWK</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/5466411/print-regexp-matches-in-awk", 
    "htmlFormattedUrl": "stackoverflow.com/questions/5466411/print-<b>regexp</b>-matches-in-<b>awk</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "Yes, in awk use the match() function and give it the optional array parameter (a in my example). When you do this, the 0-th element will be the part that matched the regex $ echo \"blah foo123bar...", 
          "upvotecount": "23"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "Is there a way to print a regexp match (but only the matching string) with AWK?", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Print regexp matches in AWK", 
          "title": "Print regexp matches in AWK"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/5466411/print-regexp-matches-in-awk", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/5466411/print-regexp-matches-in-awk", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/5466411/print-regexp-matches-in-awk", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "Is there a way to print a regexp match (but only the matching string) with AWK?", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/5466411/print-regexp-matches-in-awk", 
          "twitter:card": "summary", 
          "twitter:title": "Print regexp matches in AWK", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "1", 
          "text": "Is there a way to print a regexp match (but only the matching string) with AWK?", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Print regexp matches in AWK", 
          "upvotecount": "18"
        }
      ]
    }, 
    "snippet": "Is there a way to print a regexp match (but only the matching string) with AWK? \nbash ... 22 \u00b7 How to get match regex pattern using awk from file?", 
    "htmlSnippet": "Is there a way to print a <b>regexp</b> match (but only the matching string) with <b>AWK</b>? <br>\n<b>bash</b> ... 22 &middot; How to get match <b>regex pattern</b> using <b>awk</b> from file?", 
    "link": "http://stackoverflow.com/questions/5466411/print-regexp-matches-in-awk", 
    "cacheId": "q6RZDAJZp8oJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "AWK Language Programming - Regular Expressions", 
    "displayLink": "www.math.utah.edu", 
    "htmlTitle": "<b>AWK</b> Language Programming - <b>Regular Expressions</b>", 
    "formattedUrl": "www.math.utah.edu/docs/info/gawk_5.html", 
    "htmlFormattedUrl": "www.math.utah.edu/docs/info/g<b>awk</b>_5.html", 
    "snippet": "Regular Expressions. A regular expression, or regexp, is a way of describing a \nset of strings. Because regular expressions are such a fundamental part of awk\u00a0...", 
    "htmlSnippet": "<b>Regular Expressions</b>. A <b>regular expression</b>, or <b>regexp</b>, is a way of describing a <br>\nset of strings. Because <b>regular expressions</b> are such a fundamental part of <b>awk</b>&nbsp;...", 
    "link": "http://www.math.utah.edu/docs/info/gawk_5.html", 
    "cacheId": "IyF1Hu-ypaoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "How to get match regex pattern using awk from file? - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "How to get match <b>regex pattern</b> using <b>awk</b> from file? - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/.../how-to-get-match-regex-pattern-using-awk-from-file", 
    "htmlFormattedUrl": "stackoverflow.com/.../how-to-get-match-<b>regex</b>-<b>pattern</b>-using-<b>awk</b>-from-file", 
    "pagemap": {
      "answer": [
        {
          "text": "This is the very basic awk '/pattern/{ print $0 }' file ask awk to search for pattern using //, then print out the line, which by default is called a record, denoted by $0. At least read up...", 
          "upvotecount": "32"
        }, 
        {
          "text": "It sounds like you are trying to emulate GNU's grep -o behaviour. This will do that providing you only want the first match on each line: awk 'match($0, /regex/) { print substr($0, RSTART,...", 
          "upvotecount": "39"
        }, 
        {
          "text": "If you are only interested in the last line of input and you expect to find only one match (for example a part of the summary line of a shell command), you can also try this very compact code,...", 
          "upvotecount": "3"
        }, 
        {
          "text": "If you want to get just the matching part of every line use this as action: { if (match($0,/your regexp/,m)) print m[0] } match(string, regexp [, array]) If array is present, it is cleared,...", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I need to find in file word that matches regex pattern. It must to be using awk... I ONLY want to print word matched with pattern! So if in line, i have: xxx yyy zzz And pattern: /yyy/ I wo...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "How to get match regex pattern using awk from file?", 
          "title": "How to get match regex pattern using awk from file?"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/5536018/how-to-get-match-regex-pattern-using-awk-from-file", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/5536018/how-to-get-match-regex-pattern-using-awk-from-file", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/5536018/how-to-get-match-regex-pattern-using-awk-from-file", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I need to find in file word that matches regex pattern. It must to be using awk...  I ONLY want to print word matched with pattern!  So if in line, i have:  xxx yyy zzz   And pattern:  /yyy/   I wo...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/5536018/how-to-get-match-regex-pattern-using-awk-from-file", 
          "twitter:card": "summary", 
          "twitter:title": "How to get match regex pattern using awk from file?", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "4", 
          "text": "I need to find in file word that matches regex pattern. It must to be using awk... I ONLY want to print word matched with pattern! So if in line, i have: xxx yyy zzz And pattern: /yyy/ I wonna...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "How to get match regex pattern using awk from file?", 
          "upvotecount": "22"
        }
      ]
    }, 
    "snippet": "I need to find in file word that matches regex pattern. It must to be using .... Delete \nmultiple lines from files using sed/awk using regex pattern.", 
    "htmlSnippet": "I need to find in file word that matches <b>regex pattern</b>. It must to be using .... Delete <br>\nmultiple lines from files using <b>sed</b>/<b>awk</b> using <b>regex pattern</b>.", 
    "link": "http://stackoverflow.com/questions/5536018/how-to-get-match-regex-pattern-using-awk-from-file", 
    "cacheId": "0xyBS4XAm0YJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "AWK Regular Expressions", 
    "displayLink": "www.softpanorama.org", 
    "htmlTitle": "<b>AWK Regular Expressions</b>", 
    "formattedUrl": "www.softpanorama.org/Tools/Awk/awk_regular_expressions.shtml", 
    "htmlFormattedUrl": "www.softpanorama.org/Tools/<b>Awk</b>/<b>awk</b>_<b>regular_expressions</b>.shtml", 
    "snippet": "Feb 19, 2014 ... They are also available in bash starting from version 3.0 (see String Operations \nin Shell). They are different from \"basic regular expressions\"\u00a0...", 
    "htmlSnippet": "Feb 19, 2014 <b>...</b> They are also available in <b>bash</b> starting from version 3.0 (see String Operations <br>\nin <b>Shell</b>). They are different from &quot;basic <b>regular expressions</b>&quot;&nbsp;...", 
    "link": "http://www.softpanorama.org/Tools/Awk/awk_regular_expressions.shtml", 
    "cacheId": "F_FT4SSx5jEJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "bash - Print lines where first field has only four characters using ...", 
    "displayLink": "unix.stackexchange.com", 
    "htmlTitle": "<b>bash</b> - Print lines where first field has only four characters using <b>...</b>", 
    "formattedUrl": "unix.stackexchange.com/.../print-lines-where-first-field-has-only-four- characters-using-regex-in-awk", 
    "htmlFormattedUrl": "<b>unix</b>.stackexchange.com/.../print-lines-where-first-field-has-only-four- characters-using-<b>regex</b>-in-<b>awk</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "Fields in awk are per default delimited by \"\", this means $1 doesn't contain a space, so the correct regex for $1 is: awk '$1 ~ /^[a-zA-Z0-9]{4}$/ {print}' file If you want to keep your original...", 
          "upvotecount": "4"
        }, 
        {
          "text": "In AWK, you can use regular expression as a pattern like BEGIN or END you often see in AWK script. A simplified code can be like awk '/^[[:alnum:]]{4}\\>/' This is all you need to meet you needs....", 
          "upvotecount": "3"
        }, 
        {
          "text": "The first field is $1, and its length is length($1), so: awk 'length($1) == 4 {print}' or more succintly awk 'length($1) == 4' What you wrote doesn't work for two reasons. First, you have an...", 
          "upvotecount": "1"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a", 
          "description": "John Goldenrod:(916) 348-4278:250:100:175 Chet Main:(510) 548-5258:50:95:135 Tom Savage:(408) 926-3456:250:168:200 Elizabeth Stachelin:(916) 440-1763:175:75:300 output should contain the lines", 
          "primaryimageofpage": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a", 
          "name": "Print lines where first field has only four characters using regex in awk?", 
          "title": "Print lines where first field has only four characters using regex in awk?"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://unix.stackexchange.com/questions/56530/print-lines-where-first-field-has-only-four-characters-using-regex-in-awk", 
          "twitter:app:url:iphone": "se-zaphod://unix.stackexchange.com/questions/56530/print-lines-where-first-field-has-only-four-characters-using-regex-in-awk", 
          "twitter:app:url:ipad": "se-zaphod://unix.stackexchange.com/questions/56530/print-lines-where-first-field-has-only-four-characters-using-regex-in-awk", 
          "twitter:app:country": "US", 
          "twitter:domain": "unix.stackexchange.com", 
          "twitter:description": "John Goldenrod:(916) 348-4278:250:100:175  Chet Main:(510) 548-5258:50:95:135  Tom Savage:(408) 926-3456:250:168:200  Elizabeth Stachelin:(916) 440-1763:175:75:300   output should contain the lines", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:title": "Print lines where first field has only four characters using regex in awk?", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://unix.stackexchange.com/questions/56530/print-lines-where-first-field-has-only-four-characters-using-regex-in-awk", 
          "twitter:card": "summary", 
          "twitter:site": "@StackUnix", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "3", 
          "text": "John Goldenrod:(916) 348-4278:250:100:175 Chet Main:(510) 548-5258:50:95:135 Tom Savage:(408) 926-3456:250:168:200 Elizabeth Stachelin:(916) 440-1763:175:75:300 output should contain the lines...", 
          "image": "http://cdn.sstatic.net/unix/img/apple-touch-icon.png?v=5cf7fe716a89", 
          "name": "Print lines where first field has only four characters using regex in awk?", 
          "upvotecount": "1"
        }
      ]
    }, 
    "snippet": "Nov 24, 2012 ... In AWK, you can use regular expression as a pattern like BEGIN or END you \noften see in AWK script. A simplified code can be like", 
    "htmlSnippet": "Nov 24, 2012 <b>...</b> In <b>AWK</b>, you can use <b>regular expression</b> as a <b>pattern</b> like BEGIN or END you <br>\noften see in <b>AWK</b> script. A simplified code can be like", 
    "link": "http://unix.stackexchange.com/questions/56530/print-lines-where-first-field-has-only-four-characters-using-regex-in-awk", 
    "cacheId": "U4t8VhGSmr0J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Awk - A Tutorial and Introduction - by Bruce Barnett", 
    "displayLink": "www.grymoire.com", 
    "htmlTitle": "<b>Awk</b> - A <b>Tutorial</b> and Introduction - by Bruce Barnett", 
    "formattedUrl": "www.grymoire.com/Unix/Awk.html", 
    "htmlFormattedUrl": "www.grymoire.com/<b>Unix</b>/<b>Awk</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1", 
          "author": "Bruce Barnett"
        }
      ]
    }, 
    "snippet": "Apr 23, 2015 ... The Grymoire's AWK tutorial. ... This section discusses AWK, another cornerstone \nof UNIX shell programming. ..... Regular Expressions.", 
    "htmlSnippet": "Apr 23, 2015 <b>...</b> The Grymoire&#39;s <b>AWK tutorial</b>. ... This section discusses <b>AWK</b>, another cornerstone <br>\nof <b>UNIX shell</b> programming. ..... <b>Regular Expressions</b>.", 
    "link": "http://www.grymoire.com/Unix/Awk.html", 
    "cacheId": "7nGrjBnBtTUJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Pass shell variable as a /pattern/ to awk - Unix & Linux Stack ...", 
    "displayLink": "unix.stackexchange.com", 
    "htmlTitle": "Pass <b>shell</b> variable as a /<b>pattern</b>/ to <b>awk</b> - <b>Unix</b> &amp; Linux Stack <b>...</b>", 
    "formattedUrl": "unix.stackexchange.com/.../pass-shell-variable-as-a-pattern-to-awk", 
    "htmlFormattedUrl": "<b>unix</b>.stackexchange.com/.../pass-<b>shell</b>-variable-as-a-<b>pattern</b>-to-<b>awk</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "Use awk's ~ operator, and you don't need to provide a literal regex on the right-hand side: function _process () { awk -v l=\"$line\" -v pattern=\"$1\" ' $0 ~ pattern {p=1} END {if(p) print l >>...", 
          "upvotecount": "13"
        }, 
        {
          "text": "awk -v pattern=\"$1\" '$0 ~ pattern' Has an issue in that awk expands the ANSI C escape sequences in $1. So it becomes an issue if $1 contains backslash characters which is common in regular...", 
          "upvotecount": "4"
        }, 
        {
          "text": "Try something like: awk -v l=\"$line\" -v search=\"$pattern\" 'BEGIN {p=0}; { if ( match( $0, search )) {p=1}}; END{ if(p) print l >> \"outfile.txt\" }'", 
          "upvotecount": "3"
        }, 
        {
          "text": "No, but you can simply interpolate the pattern into the double-quoted string you pass to awk: awk -v l=\"$line\" \"BEGIN {p=0}; /$pattern/ {p=1}; END{ if(p) print l >> \\\"outfile.txt\\\" }\" Note...", 
          "upvotecount": "1"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a", 
          "description": "Having the following in one of my shell functions: function _process () { awk -v l=\"$line\" ' BEGIN {p=0} /'\"$1\"'/ {p=1} END{ if(p) print l >> \"outfile.txt\" } ' } , so when called...", 
          "primaryimageofpage": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a", 
          "name": "Pass shell variable as a /pattern/ to awk", 
          "title": "Pass shell variable as a /pattern/ to awk"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://unix.stackexchange.com/questions/120788/pass-shell-variable-as-a-pattern-to-awk", 
          "twitter:app:url:iphone": "se-zaphod://unix.stackexchange.com/questions/120788/pass-shell-variable-as-a-pattern-to-awk", 
          "twitter:app:url:ipad": "se-zaphod://unix.stackexchange.com/questions/120788/pass-shell-variable-as-a-pattern-to-awk", 
          "twitter:app:country": "US", 
          "twitter:domain": "unix.stackexchange.com", 
          "twitter:description": "Having the following in one of my shell functions:  function _process () {   awk -v l=\"$line\" '   BEGIN {p=0}   /'\"$1\"'/ {p=1}   END{ if(p) print l &gt;&gt; \"outfile.txt\" }   ' }   , so when called...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:title": "Pass shell variable as a /pattern/ to awk", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://unix.stackexchange.com/questions/120788/pass-shell-variable-as-a-pattern-to-awk", 
          "twitter:card": "summary", 
          "twitter:site": "@StackUnix", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/unix/img/apple-touch-icon@2.png?v=32fb07f7ce26&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "4", 
          "text": "Having the following in one of my shell functions: function _process () { awk -v l=\"$line\" ' BEGIN {p=0} /'\"$1\"'/ {p=1} END{ if(p) print l >> \"outfile.txt\" } ' } , so when called as _process...", 
          "image": "http://cdn.sstatic.net/unix/img/apple-touch-icon.png?v=5cf7fe716a89", 
          "name": "Pass shell variable as a /pattern/ to awk", 
          "upvotecount": "11"
        }
      ]
    }, 
    "snippet": "Mar 21, 2014 ... It works this way, because shell expands $1 in place of awk pattern! ... Use awk's \n~ operator, and you don't need to provide a literal regex on\u00a0...", 
    "htmlSnippet": "Mar 21, 2014 <b>...</b> It works this way, because <b>shell</b> expands $1 in place of <b>awk pattern</b>! ... Use <b>awk&#39;s</b> <br>\n~ operator, and you don&#39;t need to provide a literal <b>regex</b> on&nbsp;...", 
    "link": "http://unix.stackexchange.com/questions/120788/pass-shell-variable-as-a-pattern-to-awk", 
    "cacheId": "pa4Qu2V45qQJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "A Brief Introduction to Regular Expressions", 
    "displayLink": "tldp.org", 
    "htmlTitle": "A Brief Introduction to <b>Regular Expressions</b>", 
    "formattedUrl": "tldp.org/LDP/abs/html/x17129.html", 
    "htmlFormattedUrl": "tldp.org/LDP/abs/html/x17129.html", 
    "snippet": "Regular Expressions are sets of characters and/or metacharacters that match .... \nGNU versions of sed and awk can use \"+\", # but it needs to be escaped. echo\u00a0...", 
    "htmlSnippet": "<b>Regular Expressions</b> are sets of characters and/or metacharacters that match .... <br>\nGNU versions of <b>sed</b> and <b>awk</b> can use &quot;+&quot;, # but it needs to be escaped. echo&nbsp;...", 
    "link": "http://tldp.org/LDP/abs/html/x17129.html", 
    "cacheId": "Y-sKWAIm0bAJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Common threads: Awk by example, Part 1", 
    "displayLink": "www.ibm.com", 
    "htmlTitle": "Common threads: <b>Awk</b> by example, Part 1", 
    "formattedUrl": "www.ibm.com/developerworks/library/l-awk1/", 
    "htmlFormattedUrl": "www.ibm.com/developerworks/library/l-<b>awk</b>1/", 
    "pagemap": {
      "metatags": [
        {
          "dc.subject": "SWGC0", 
          "ibm.effective": "2000-12-01", 
          "dw.topic": "16", 
          "abstract": "Awk is a very nice language with a very strange name. In this first article of a three-part series, Daniel Robbins will quickly get your awk programming skills up to speed. As the series progresses, more advanced topics will be covered, culminating with an advanced real-world awk application demo.", 
          "dc.rights": "\u00a9 Copyright\u00a0IBM Corporation\u00a02000,\u00a02013", 
          "dc.type": "CT316", 
          "ibm.wtmcategory": "SOFDCLNXZZ", 
          "dc.date": "2013-10-11", 
          "source": "v17 delivery:developerWorks", 
          "dw.contentarea": "2", 
          "owner": "developerWorks Content/Raleigh/IBM", 
          "ibm.country": "ZZ", 
          "security": "Public", 
          "ibm.specialpurpose": "SP001", 
          "dc.language": "en"
        }
      ]
    }, 
    "snippet": "Oct 11, 2013 ... If you're used to programming in bash or python, you may have expected ... Awk \nallows the use of regular expressions to selectively execute an\u00a0...", 
    "htmlSnippet": "Oct 11, 2013 <b>...</b> If you&#39;re used to programming in <b>bash</b> or python, you may have expected ... <b>Awk</b> <br>\nallows the use of <b>regular expressions</b> to selectively execute an&nbsp;...", 
    "link": "http://www.ibm.com/developerworks/library/l-awk1/", 
    "cacheId": "FoaBbqRVUgkJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular expressions", 
    "displayLink": "tldp.org", 
    "htmlTitle": "<b>Regular expressions</b>", 
    "formattedUrl": "tldp.org/LDP/Bash-Beginners-Guide/html/chap_04.html", 
    "htmlFormattedUrl": "tldp.org/LDP/<b>Bash</b>-Beginners-Guide/html/chap_04.html", 
    "snippet": "4.1.1. What are regular expressions? 4.1.2. Regular ... Basic versus extended \nregular expressions. 4.2. Examples ... Pattern matching using Bash features. 4.3.\n1.", 
    "htmlSnippet": "4.1.1. What are <b>regular expressions</b>? 4.1.2. <b>Regular</b> ... Basic versus extended <br>\n<b>regular expressions</b>. 4.2. <b>Examples</b> ... <b>Pattern</b> matching using <b>Bash</b> features. 4.3.<br>\n1.", 
    "link": "http://tldp.org/LDP/Bash-Beginners-Guide/html/chap_04.html", 
    "cacheId": "4WSkKkCKDLAJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Tech Stuff - Regular Expressions - A Gentle User Guide and Tutorial", 
    "displayLink": "www.zytrax.com", 
    "htmlTitle": "Tech Stuff - <b>Regular Expressions</b> - A Gentle User Guide and <b>Tutorial</b>", 
    "formattedUrl": "www.zytrax.com/tech/web/regex.htm", 
    "htmlFormattedUrl": "www.zytrax.com/tech/web/<b>regex</b>.htm", 
    "snippet": "Extended Regular Expressions (EREs) will support Basic Regular Expressions \n...... expression quoting: To avoid shell expansion (in BASH especially) quote all\n\u00a0...", 
    "htmlSnippet": "Extended <b>Regular Expressions</b> (EREs) will support Basic <b>Regular Expressions</b> <br>\n...... expression quoting: To avoid <b>shell</b> expansion (in <b>BASH</b> especially) quote all<br>\n&nbsp;...", 
    "link": "http://www.zytrax.com/tech/web/regex.htm", 
    "cacheId": "llthMlNSj0AJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Using Bash's regular expressions", 
    "displayLink": "www.itworld.com", 
    "htmlTitle": "Using <b>Bash&#39;s regular expressions</b>", 
    "formattedUrl": "www.itworld.com/.../unix-tip-using-bash-s-regular-expressions.html", 
    "htmlFormattedUrl": "www.itworld.com/.../unix-tip-using-<b>bash</b>-s-<b>regular-expressions</b>.html", 
    "pagemap": {
      "blogposting": [
        {
          "articlebody": "Since version 3 (circa 2004), bash has a built-in regular expression comparison operator, represented by =~. A lot of scripting tricks that use grep or sed can now be handled by bash expressions...", 
          "description": "Bash has quietly made scripting on Unix systems a lot easier with its own regular expressions. If you're still leaning on grep and sed commands to get your scripts to do what you need from...", 
          "headline": "Using Bash's regular expressions", 
          "image": "http://core2.staticworld.net/images/article/2014/10/sandra-henry-stocker150x150-100509351-byline.jpg", 
          "datepublished": "2013-05-05T21:37-0700", 
          "keywords": "Operating Systems Open Source Linux"
        }
      ], 
      "breadcrumb": [
        {
          "url": "Home", 
          "title": "Home"
        }
      ], 
      "metatags": [
        {
          "rating": "General", 
          "twitter:image": "http://idge.staticworld.net/itw/ITworld-logo300x300.png", 
          "dc.date.issued": "2013-05-05T21:37-05:00", 
          "fb:app_id": "123026274413041", 
          "parsely-author": "Sandra Henry-Stocker", 
          "parsely-type": "NewsArticle", 
          "twitter:site": "@itworld", 
          "parsely-pub-date": "2013-05-06T04:37:00Z", 
          "og:url": "http://www.itworld.com/article/2693361/unix-tip-using-bash-s-regular-expressions.html", 
          "og:image": "http://idge.staticworld.net/itw/ITworld-logo300x300.png", 
          "parsely-link": "http://www.itworld.com/article/2693361/unix-tip-using-bash-s-regular-expressions.html", 
          "author": "Sandra Henry-Stocker", 
          "parsely-title": "Using Bash's regular expressions", 
          "og:type": "article", 
          "og:title": "Using bash regex", 
          "parsely-tags": "blog: Unix as a Second Language,type: analysis,source: itworld,original", 
          "parsely-section": "Operating Systems", 
          "twitter:url": "http://www.itworld.com/article/2693361/unix-tip-using-bash-s-regular-expressions.html", 
          "viewport": "width=device-width, initial-scale=1.0", 
          "og:site_name": "ITworld", 
          "twitter:card": "summary_large_image", 
          "twitter:description": "Bash has quietly made scripting on Unix systems a lot easier with its own regular expressions. If you're still leaning on grep and sed commands to get your scripts to do what you need from them, maybe it's time to look into what bash regex can do.", 
          "og:description": "Bash has quietly made scripting on Unix systems a lot easier with its own regular expressions. If you're still leaning on grep and sed commands to get your scripts to do what you need from them, maybe it's time to look into what bash regex can do."
        }
      ], 
      "hcard": [
        {
          "fn": "Sandra Henry-Stocker"
        }
      ], 
      "person": [
        {
          "url": "Sandra Henry-Stocker", 
          "image": "http://core2.staticworld.net/images/article/2014/10/sandra-henry-stocker150x150-100509351-byline.jpg", 
          "name": "Sandra Henry-Stocker"
        }
      ], 
      "organization": [
        {
          "name": "ITworld"
        }, 
        {
          "url": "http://www.itworld.com/", 
          "sameas": "https://twitter.com/itworld"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "92", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS-DfAN4pOB0odBgN5K1XZRPOH3FXNNT45CsmENz5DI4gLB7knf0zwYJw", 
          "height": "92"
        }
      ], 
      "cse_image": [
        {
          "src": "http://core2.staticworld.net/images/article/2014/10/sandra-henry-stocker150x150-100509351-byline.jpg"
        }
      ]
    }, 
    "snippet": "May 5, 2013 ... Using Bash's regular expressions ... How to script: A Bash crash course ... Since \nversion 3 (circa 2004), bash has a built-in regular expression\u00a0...", 
    "htmlSnippet": "May 5, 2013 <b>...</b> Using <b>Bash&#39;s regular expressions</b> ... How to <b>script</b>: A <b>Bash</b> crash course ... Since <br>\nversion 3 (circa 2004), <b>bash</b> has a built-in <b>regular expression</b>&nbsp;...", 
    "link": "http://www.itworld.com/article/2693361/unix-tip-using-bash-s-regular-expressions.html", 
    "cacheId": "U0WHDgNH-WkJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions In grep", 
    "displayLink": "www.cyberciti.biz", 
    "htmlTitle": "<b>Regular Expressions</b> In grep", 
    "formattedUrl": "www.cyberciti.biz/faq/grep-regular-expressions/", 
    "htmlFormattedUrl": "www.cyberciti.biz/faq/grep-<b>regular-expressions</b>/", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "article": [
        {
          "articlebody": "How do I use the Grep command with regular expressions on a Linux and Unix-like operating systems? Linux comes with GNU grep, which supports extended regular expressions. GNU grep is the default...", 
          "datepublished": "2010-02-15", 
          "name": "Regular Expressions In grep", 
          "datemodified": "2015-05-12", 
          "author": "Vivek Gite"
        }
      ]
    }, 
    "snippet": "Feb 15, 2010 ... vivek:x:1000:1000:Vivek Gite,,,:/home/vivek:/bin/bash .... How To Use grep \nCommand In Linux / UNIX; Regular Expressions In grep; Search\u00a0...", 
    "htmlSnippet": "Feb 15, 2010 <b>...</b> vivek:x:1000:1000:Vivek Gite,,,:/home/vivek:/bin/<b>bash</b> .... How To Use grep <br>\nCommand In <b>Linux</b> / UNIX; <b>Regular Expressions</b> In grep; Search&nbsp;...", 
    "link": "http://www.cyberciti.biz/faq/grep-regular-expressions/", 
    "cacheId": "8zdN5tSG_NQJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Using Grep & Regular Expressions to Search for Text Patterns in Linux", 
    "displayLink": "www.digitalocean.com", 
    "htmlTitle": "Using Grep &amp; <b>Regular Expressions</b> to Search for Text Patterns in <b>Linux</b>", 
    "formattedUrl": "https://www.digitalocean.com/.../tutorials/using-grep-regular-expressions-to- search-for-text-patterns-in-linux", 
    "htmlFormattedUrl": "https://www.digitalocean.com/.../<b>tutorial</b>s/using-grep-<b>regular-expressions</b>-to- search-for-text-<b>pattern</b>s-in-<b>linux</b>", 
    "pagemap": {
      "metatags": [
        {
          "twitter:creator": "DigitalOcean", 
          "twitter:url": "https://www.digitalocean.com/community/tutorials/using-grep-regular-expressions-to-search-for-text-patterns-in-linux", 
          "og:site_name": "DigitalOcean", 
          "twitter:card": "photo", 
          "csrf-token": "tzd4Ke9s9OSdQ4nWPsb6Yxdc7BbzRnsd80V8CISFBCPS1Qv4cYO3ZBxl5ROqX7Cr5vQYui4CRXou+xwivjHuUw==", 
          "twitter:image": "https://www.digitalocean.com/assets/community/tags/linux-basics-7172af2d00bf7559ab397cbc85e97a5d.png", 
          "twitter:description": "This tutorial will cover how to use regular expressions to explore the power of the &quot;grep&quot; command. Grep is a tool used to search for specified patterns within text input using regular expressions. Regular expressions are a system for descri", 
          "og:type": "article", 
          "og:description": "This tutorial will cover how to use regular expressions to explore the power of the &quot;grep&quot; command. Grep is a tool used to search for specified patterns within text input using regular expressions. Regular expressions are a system for descri", 
          "csrf-param": "authenticity_token", 
          "twitter:title": "Using Grep &amp; Regular Expressions to Search for Text Patterns in Linux | DigitalOcean", 
          "og:title": "Using Grep &amp; Regular Expressions to Search for Text Patterns in Linux | DigitalOcean", 
          "twitter:site": "DigitalOcean", 
          "og:image": "https://www.digitalocean.com/assets/community/tags/linux-basics-7172af2d00bf7559ab397cbc85e97a5d.png", 
          "viewport": "initial-scale=1, maximum-scale=1"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "74", 
          "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcTb9bsGNaKKUlJoyjFB1vBc8RIlCqgpL2G4ZtNffYuV2UXwf27eA2Xu8g", 
          "height": "74"
        }
      ], 
      "cse_image": [
        {
          "src": "https://secure.gravatar.com/avatar/00a4a0dc440018b32653162c337f2fe3?secure=true&d=identicon"
        }
      ]
    }, 
    "snippet": "Jul 22, 2013 ... This tutorial will cover how to use regular expressions to explore the power ... To \nUse Bash History Commands and Expansions on a Linux VPS\u00a0...", 
    "htmlSnippet": "Jul 22, 2013 <b>...</b> This <b>tutorial</b> will cover how to use <b>regular expressions</b> to explore the power ... To <br>\nUse <b>Bash</b> History Commands and Expansions on a <b>Linux</b> VPS&nbsp;...", 
    "link": "https://www.digitalocean.com/community/tutorials/using-grep-regular-expressions-to-search-for-text-patterns-in-linux", 
    "cacheId": "JTWpFHrw7U0J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "regex - shell script. how to extract string using regular expressions ...", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>regex</b> - <b>shell script</b>. how to extract string using <b>regular expressions</b> <b>...</b>", 
    "formattedUrl": "stackoverflow.com/.../shell-script-how-to-extract-string-using-regular- expressions", 
    "htmlFormattedUrl": "stackoverflow.com/.../<b>shell</b>-<b>script</b>-how-to-extract-string-using-<b>regular- expressions</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "Using bash regular expressions: re=\"http://([^/]+)/\" if [[ $name =~ $re ]]; then echo ${BASH_REMATCH[1]}; fi Edit - OP asked for explanation of syntax. Regular expression syntax is a large...", 
          "upvotecount": "20"
        }, 
        {
          "text": "One way would be with sed. For example: echo $name | sed -e 's?http://www\\.??' Normally the sed regular expressions are delimited by `/', but you can use '?' since you're searching for '/'....", 
          "upvotecount": "1"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I am new to shell scripts. I want to send http request using curl and then extract some string using regular expressions. For example hot to extract domain name from http response (the example is for", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "shell script. how to extract string using regular expressions", 
          "title": "shell script. how to extract string using regular expressions"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/19737675/shell-script-how-to-extract-string-using-regular-expressions", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/19737675/shell-script-how-to-extract-string-using-regular-expressions", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/19737675/shell-script-how-to-extract-string-using-regular-expressions", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I am new to shell scripts. I want to send http request using curl and then extract some string using regular expressions. For example hot to extract domain name from http response (the example is for", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/19737675/shell-script-how-to-extract-string-using-regular-expressions", 
          "twitter:card": "summary", 
          "twitter:title": "shell script. how to extract string using regular expressions", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "2", 
          "text": "I am new to shell scripts. I want to send http request using curl and then extract some string using regular expressions. For example hot to extract domain name from http response (the example...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "shell script. how to extract string using regular expressions", 
          "upvotecount": "7"
        }
      ]
    }, 
    "snippet": "shell script. how to extract string using regular expressions ... I am new to shell \nscripts. I want to send http ... Using bash regular expressions:", 
    "htmlSnippet": "<b>shell script</b>. how to extract string using <b>regular expressions</b> ... I am new to <b>shell</b> <br>\nscripts. I want to send http ... Using <b>bash regular expressions</b>:", 
    "link": "http://stackoverflow.com/questions/19737675/shell-script-how-to-extract-string-using-regular-expressions", 
    "cacheId": "l-fG5t3x5bwJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions in Linux Explained with Examples", 
    "displayLink": "www.linuxnix.com", 
    "htmlTitle": "<b>Regular Expressions</b> in <b>Linux</b> Explained with <b>Examples</b>", 
    "formattedUrl": "www.linuxnix.com/2011/07/regular-expressions-linux-i.html", 
    "htmlFormattedUrl": "www.<b>linux</b>nix.com/2011/07/<b>regular-expressions</b>-<b>linux</b>-i.html", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://www.linuxnix.com/2011/07/regular-expressions-linux-i.html", 
          "og:site_name": "The Linux Juggernaut", 
          "twitter:card": "summary", 
          "twitter:image": "http://i1.wp.com/www.linuxnix.com/wp-content/uploads/2011/07/regular-expressions-regex.jpg?resize=515%2C254&w=240", 
          "og:type": "article", 
          "og:description": "Related posts: Grep command with Regular expressions examples -III Grep command with Regular expressions examples -II Regular expressions in Linux -II Linux GREP command with examples 9 linux sort command examples to sort files How To List Only Alphabetical Filename in Linux SED(Stream EDitor ) Explained in detail for Linux/Unix Learn SED with examples Learn(...)", 
          "article:author": "http://www.linuxnix.com/author/surendra", 
          "twitter:site": "@jetpack", 
          "og:title": "Regular Expressions in Linux Explained with Examples", 
          "article:modified_time": "2015-03-16T04:10:33+00:00", 
          "og:image": "http://i1.wp.com/www.linuxnix.com/wp-content/uploads/2011/07/regular-expressions-regex.jpg?fit=300%2C300", 
          "article:published_time": "2011-07-01T06:30:57+00:00", 
          "viewport": "width=device-width,minimum-scale=1,maximum-scale=1"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "240", 
          "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcREmvnIQb0AupwBsiYnv-bDdmSGLzvI5DR7AsNBMhmk2HR2HYUWmRaFew", 
          "height": "117"
        }
      ], 
      "cse_image": [
        {
          "src": "http://i1.wp.com/www.linuxnix.com/wp-content/uploads/2011/07/regular-expressions-regex.jpg?fit=300%2C300"
        }
      ]
    }, 
    "snippet": "Jul 1, 2011 ... Regular expressions (Regexp)is one of the advanced concept we require to write \nefficient shell scripts and for effective system administration.", 
    "htmlSnippet": "Jul 1, 2011 <b>...</b> <b>Regular expressions</b> (<b>Regexp</b>)is one of the advanced concept we require to write <br>\nefficient <b>shell</b> scripts and for effective system administration.", 
    "link": "http://www.linuxnix.com/2011/07/regular-expressions-linux-i.html", 
    "cacheId": "tL9yfZrrYQoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Linux Tutorial - 10. Learn Grep and Regular Expressions", 
    "displayLink": "ryanstutorials.net", 
    "htmlTitle": "<b>Linux Tutorial</b> - 10. Learn Grep and <b>Regular Expressions</b>", 
    "formattedUrl": "ryanstutorials.net/linuxtutorial/grep.php", 
    "htmlFormattedUrl": "ryans<b>tutorial</b>s.net/<b>linuxtutorial</b>/grep.php", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1", 
          "author": "Ryan Chadwick"
        }
      ]
    }, 
    "snippet": "This section of the Linux tutorial teaches the basics of regular expressions and \ngrep on the Linux command line. Examples, tips and practice activities.", 
    "htmlSnippet": "This section of the <b>Linux tutorial</b> teaches the basics of <b>regular expressions</b> and <br>\ngrep on the <b>Linux</b> command line. <b>Examples</b>, tips and practice activities.", 
    "link": "http://ryanstutorials.net/linuxtutorial/grep.php", 
    "cacheId": "wH_t0Yid1DIJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Patterns and pattern matching [Bash Hackers Wiki]", 
    "displayLink": "wiki.bash-hackers.org", 
    "htmlTitle": "Patterns and <b>pattern</b> matching [<b>Bash</b> Hackers Wiki]", 
    "formattedUrl": "wiki.bash-hackers.org/syntax/pattern", 
    "htmlFormattedUrl": "wiki.<b>bash</b>-hackers.org/syntax/<b>pattern</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ]
    }, 
    "snippet": "Apr 26, 2014 ... If you set the shell option extglob , Bash understands some more ... use a regex \ncompiler to emit and cache optimized pattern matching code.", 
    "htmlSnippet": "Apr 26, 2014 <b>...</b> If you set the <b>shell</b> option extglob , <b>Bash</b> understands some more ... use a <b>regex</b> <br>\ncompiler to emit and cache optimized <b>pattern</b> matching code.", 
    "link": "http://wiki.bash-hackers.org/syntax/pattern", 
    "cacheId": "WxmrNNx6YyIJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "BashGuide/Patterns - Greg's Wiki", 
    "displayLink": "mywiki.wooledge.org", 
    "htmlTitle": "<b>BashGuide</b>/Patterns - Greg&#39;s Wiki", 
    "formattedUrl": "mywiki.wooledge.org/BashGuide/Patterns", 
    "htmlFormattedUrl": "mywiki.wooledge.org/<b>Bash</b>Guide/<b>Pattern</b>s", 
    "pagemap": {
      "metatags": [
        {
          "edit_on_doubleclick": "/"
        }
      ]
    }, 
    "snippet": "Jan 7, 2015 ... Pattern matching serves two roles in the shell: selecting filenames within a ... \nSince version 3.0, Bash also supports regular expression patterns.", 
    "htmlSnippet": "Jan 7, 2015 <b>...</b> <b>Pattern</b> matching serves two roles in the <b>shell</b>: selecting filenames within a ... <br>\nSince version 3.0, <b>Bash</b> also supports <b>regular expression</b> patterns.", 
    "link": "http://mywiki.wooledge.org/BashGuide/Patterns", 
    "cacheId": "CfJxBFtUmscJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions in Grep Command with 10 Examples \u2013 Part I", 
    "displayLink": "www.thegeekstuff.com", 
    "htmlTitle": "<b>Regular Expressions</b> in <b>Grep</b> Command with 10 <b>Examples</b> \u2013 Part I", 
    "formattedUrl": "www.thegeekstuff.com/2011/.../regular-expressions-in-grep-command/", 
    "htmlFormattedUrl": "www.thegeekstuff.com/2011/.../<b>regular-expressions</b>-in-<b>grep</b>-command/", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "article": [
        {
          "articlebody": "Regular expressions are used to search and manipulate the text, based on the patterns. Most of the Linux commands and programming languages use regular expression. Grep command is used to search...", 
          "datepublished": "2011-01-04", 
          "name": "Regular Expressions in Grep Command with 10 Examples \u2013 Part I", 
          "datemodified": "2011-01-03", 
          "author": "Sasikala"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "240", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQVGP4jaJxuk_epoHVnRnWml4kSVZmTIPQ3NiS5kKWYnqklABaY20nnE4", 
          "height": "140"
        }
      ], 
      "cse_image": [
        {
          "src": "http://static.thegeekstuff.com/wp-content/uploads/2011/01/regex-in-grep-1-300x176.png"
        }
      ]
    }, 
    "snippet": "Jan 4, 2011 ... Most of the Linux commands and programming languages use regular exp. ... \nYou can also use regular expressions with grep command when\u00a0...", 
    "htmlSnippet": "Jan 4, 2011 <b>...</b> Most of the <b>Linux</b> commands and programming languages use regular exp. ... <br>\nYou can also use <b>regular expressions</b> with <b>grep</b> command when&nbsp;...", 
    "link": "http://www.thegeekstuff.com/2011/01/regular-expressions-in-grep-command/", 
    "cacheId": "FS3quzsI_owJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions in grep", 
    "displayLink": "www.robelle.com", 
    "htmlTitle": "<b>Regular Expressions</b> in <b>grep</b>", 
    "formattedUrl": "www.robelle.com/smugbook/regexpr.html", 
    "htmlFormattedUrl": "www.robelle.com/smugbook/<b>regexp</b>r.html", 
    "snippet": "The grep program is a standard UNIX utility that searches through a set of files for \nan arbitrary text pattern, specified through a regular expression. Also check the\u00a0...", 
    "htmlSnippet": "The <b>grep</b> program is a standard <b>UNIX</b> utility that searches through a set of files for <br>\nan arbitrary text <b>pattern</b>, specified through a <b>regular expression</b>. Also check the&nbsp;...", 
    "link": "http://www.robelle.com/smugbook/regexpr.html", 
    "cacheId": "TMHLRT1WtmwJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Examples using grep", 
    "displayLink": "tldp.org", 
    "htmlTitle": "<b>Examples</b> using <b>grep</b>", 
    "formattedUrl": "tldp.org/LDP/Bash-Beginners-Guide/html/sect_04_02.html", 
    "htmlFormattedUrl": "tldp.org/LDP/<b>Bash</b>-Beginners-Guide/html/sect_04_02.html", 
    "snippet": "grep searches the input files for lines containing a match to a given pattern list. \nWhen it finds a match in a ... cathy ~> grep root /etc/passwd root:x:0:0:root:/root:/\nbin/bash ... Now let's see what else we can do with grep, using regular \nexpressions.", 
    "htmlSnippet": "<b>grep</b> searches the input files for lines containing a <b>match</b> to a given <b>pattern</b> list. <br>\nWhen it finds a <b>match</b> in a ... cathy ~&gt; <b>grep</b> root /etc/passwd root:x:0:0:root:/root:/<br>\nbin/<b>bash</b> ... Now let&#39;s see what else we can do with <b>grep</b>, using <b>regular</b> <br>\n<b>expressions</b>.", 
    "link": "http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_04_02.html", 
    "cacheId": "4K-3NoyPWfgJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Grep tutorial", 
    "displayLink": "www.panix.com", 
    "htmlTitle": "<b>Grep tutorial</b>", 
    "formattedUrl": "www.panix.com/~elflord/unix/grep.html", 
    "htmlFormattedUrl": "www.panix.com/~elflord/<b>unix</b>/<b>grep</b>.html", 
    "snippet": "bash manpage the man page for the bash shell. Warning: ... Extended Regular \nExpression (egrep) Syntax ... This tutorial is based on the GNU version of grep.", 
    "htmlSnippet": "<b>bash</b> manpage the man page for the <b>bash</b> shell. Warning: ... Extended <b>Regular</b> <br>\n<b>Expression</b> (<b>egrep</b>) Syntax ... This <b>tutorial</b> is based on the GNU version of <b>grep</b>.", 
    "link": "http://www.panix.com/~elflord/unix/grep.html", 
    "cacheId": "59b3qcfgia8J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Grep command with Regular expressions examples -II", 
    "displayLink": "www.linuxnix.com", 
    "htmlTitle": "<b>Grep</b> command with <b>Regular expressions examples</b> -II", 
    "formattedUrl": "www.linuxnix.com/.../grep-command-regular-expressions-examples-ii.html", 
    "htmlFormattedUrl": "www.<b>linux</b>nix.com/.../<b>grep</b>-command-<b>regular-expressions</b>-<b>examples</b>-ii.html", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://www.linuxnix.com/2011/08/grep-command-regular-expressions-examples-ii.html", 
          "og:site_name": "The Linux Juggernaut", 
          "twitter:card": "summary", 
          "twitter:image": "http://i1.wp.com/www.linuxnix.com/wp-content/uploads/2011/07/9442491_f718b41e21.jpg?resize=500%2C375&w=240", 
          "og:type": "article", 
          "og:description": "Related posts: Grep command with Regular expressions examples -III Regular Expressions in Linux Explained with Examples Linux GREP command with examples Regular expressions in Linux -II Learn Linux/Unix Find command with 60+ Practical examples Part-II Learn Linux/Unix Find command with 60+ Practical examples Part-I Learn SED with examples How To Search Multiple Files With grep(...)", 
          "article:author": "http://www.linuxnix.com/author/surendra", 
          "twitter:site": "@jetpack", 
          "og:title": "Grep command with Regular expressions examples -II", 
          "article:modified_time": "2011-08-03T11:55:39+00:00", 
          "og:image": "http://i1.wp.com/www.linuxnix.com/wp-content/uploads/2011/07/9442491_f718b41e21.jpg?fit=300%2C300", 
          "article:published_time": "2011-08-03T11:55:39+00:00", 
          "viewport": "width=device-width,minimum-scale=1,maximum-scale=1"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "240", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcStOqz5lc_BQ0CsjaB6qyg4UjT8bLNY-u1ZU_jngYvOiTB-kKKTDetTnmEL", 
          "height": "180"
        }
      ], 
      "cse_image": [
        {
          "src": "http://i1.wp.com/www.linuxnix.com/wp-content/uploads/2011/07/9442491_f718b41e21.jpg?fit=300%2C300"
        }
      ]
    }, 
    "snippet": "Aug 3, 2011 ... Grep command with Regular expressions examples -II. Aug 3 ... Example4: \nSearch for words which are bash, baash, bsh, baaash, baaaaash,", 
    "htmlSnippet": "Aug 3, 2011 <b>...</b> <b>Grep</b> command with <b>Regular expressions examples</b> -II. Aug 3 ... Example4: <br>\nSearch for words which are <b>bash</b>, baash, bsh, baaash, baaaaash,", 
    "link": "http://www.linuxnix.com/2011/08/grep-command-regular-expressions-examples-ii.html", 
    "cacheId": "Np4gACLVY4MJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "grep expressions | Bash | SS64.com", 
    "displayLink": "ss64.com", 
    "htmlTitle": "<b>grep expressions</b> | <b>Bash</b> | SS64.com", 
    "formattedUrl": "ss64.com/bash/grep-regex.html", 
    "htmlFormattedUrl": "ss64.com/<b>bash</b>/<b>grep</b>-<b>regex</b>.html", 
    "snippet": "There are three major variants of `grep', controlled by the following options. -G --\nbasic-regexp Interpret PATTERN as a basic regular expression. This is the\u00a0...", 
    "htmlSnippet": "There are three major variants of `<b>grep</b>&#39;, controlled by the following options. -G --<br>\nbasic-<b>regexp</b> Interpret <b>PATTERN</b> as a basic <b>regular expression</b>. This is the&nbsp;...", 
    "link": "http://ss64.com/bash/grep-regex.html", 
    "cacheId": "W2rOxMNkcC8J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP: PCRE - Manual", 
    "displayLink": "www.php.net", 
    "htmlTitle": "<b>PHP</b>: <b>PCRE</b> - Manual", 
    "formattedUrl": "www.php.net/manual/en/book.pcre.php", 
    "htmlFormattedUrl": "www.<b>php</b>.net/manual/en/book.<b>pcre</b>.<b>php</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "74", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT71D7ZfdLTiPPpj1UJH2ac7IfZAgVNfJNUM0_SHb44eNu20uqjmvYM", 
          "height": "74"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.php.net/images/to-top@2x.png"
        }
      ]
    }, 
    "snippet": "Regex section of the PHP manual. Covers PCRE engine, pattern syntax, PHP \nfunctions, and includes user comments.", 
    "htmlSnippet": "<b>Regex</b> section of the <b>PHP</b> manual. Covers <b>PCRE</b> engine, <b>pattern</b> syntax, <b>PHP</b> <br>\nfunctions, and includes user comments.", 
    "link": "http://www.php.net/manual/en/book.pcre.php", 
    "cacheId": "dul85IRR3YcJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PCRE Regular Expression Pattern Syntax Refference (PHP preg*)", 
    "displayLink": "www.regextester.com", 
    "htmlTitle": "<b>PCRE Regular Expression Pattern</b> Syntax Refference (<b>PHP</b> preg*)", 
    "formattedUrl": "www.regextester.com/pregsyntax.html", 
    "htmlFormattedUrl": "www.<b>regex</b>tester.com/pregsyntax.html", 
    "pagemap": {
      "metatags": [
        {
          "fb:app_id": "527837144019277", 
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "Description. The PCRE library is a set of functions that implement regular \nexpression pattern matching using the same syntax and semantics as Perl 5, with \njust a\u00a0...", 
    "htmlSnippet": "Description. The <b>PCRE</b> library is a set of functions that implement <b>regular</b> <br>\n<b>expression pattern</b> matching using the same syntax and semantics as Perl 5, with <br>\njust a&nbsp;...", 
    "link": "http://www.regextester.com/pregsyntax.html", 
    "cacheId": "ISdLBXptq9oJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP: PCRE regex syntax - Manual", 
    "displayLink": "php.net", 
    "htmlTitle": "<b>PHP</b>: <b>PCRE regex</b> syntax - Manual", 
    "formattedUrl": "php.net/manual/en/reference.pcre.pattern.syntax.php", 
    "htmlFormattedUrl": "<b>php</b>.net/manual/en/reference.<b>pcre</b>.<b>pattern</b>.syntax.<b>php</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "Pay attention that some pcre features such as once-only or recursive patterns are \n... ive never used regex expressions till now and had loads of difficulty trying to\u00a0...", 
    "htmlSnippet": "Pay attention that some <b>pcre</b> features such as once-only or recursive patterns are <br>\n... ive never used <b>regex expressions</b> till now and had loads of difficulty trying to&nbsp;...", 
    "link": "http://php.net/manual/en/reference.pcre.pattern.syntax.php", 
    "cacheId": "HfNFSSXsu4EJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP: Introduction - Manual", 
    "displayLink": "php.net", 
    "htmlTitle": "<b>PHP</b>: Introduction - Manual", 
    "formattedUrl": "php.net/manual/en/intro.pcre.php", 
    "htmlFormattedUrl": "<b>php</b>.net/manual/en/intro.<b>pcre</b>.<b>php</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "PHP also supports regular expressions using a POSIX-extended syntax using ... \nThe PCRE library is a set of functions that implement regular expression pattern\u00a0...", 
    "htmlSnippet": "<b>PHP</b> also supports <b>regular expressions</b> using a POSIX-extended syntax using ... <br>\nThe <b>PCRE</b> library is a set of functions that implement <b>regular expression pattern</b>&nbsp;...", 
    "link": "http://php.net/manual/en/intro.pcre.php", 
    "cacheId": "qf36iTJASsYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP: Func\u021bii PCRE - Manual", 
    "displayLink": "us3.php.net", 
    "htmlTitle": "<b>PHP</b>: Func\u021bii <b>PCRE</b> - Manual", 
    "formattedUrl": "us3.php.net/manual/en/ref.pcre.php", 
    "htmlFormattedUrl": "us3.<b>php</b>.net/manual/en/ref.<b>pcre</b>.<b>php</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "Func\u021bii PCRE. Cuprins. preg_filter \u2014 Perform a regular expression search and \nreplace; preg_grep \u2014 Return array entries that match the pattern\u00a0...", 
    "htmlSnippet": "Func\u021bii <b>PCRE</b>. Cuprins. preg_filter \u2014 Perform a <b>regular expression</b> search and <br>\nreplace; preg_grep \u2014 Return array entries that match the <b>pattern</b>&nbsp;...", 
    "link": "http://us3.php.net/manual/en/ref.pcre.php", 
    "cacheId": "EE8riZNb1XoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PCRE - Perl Compatible Regular Expressions", 
    "displayLink": "www.pcre.org", 
    "htmlTitle": "<b>PCRE</b> - Perl Compatible <b>Regular Expressions</b>", 
    "formattedUrl": "www.pcre.org/", 
    "htmlFormattedUrl": "www.<b>pcre</b>.org/", 
    "pagemap": {
      "metatags": [
        {
          "title": "PCRE - Perl Compatible Regular Expressions"
        }
      ]
    }, 
    "snippet": "Perl-compatible regular expressions library used in projects such as PHP. \nIncludes download, documentation and contact information.", 
    "htmlSnippet": "Perl-compatible <b>regular expressions</b> library used in projects such as <b>PHP</b>. <br>\nIncludes download, documentation and contact information.", 
    "link": "http://www.pcre.org/", 
    "cacheId": "5do9CG1a0HQJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Mastering regular expressions in PHP, Part 1: Perl may be regex ...", 
    "displayLink": "www.ibm.com", 
    "htmlTitle": "Mastering <b>regular expressions</b> in <b>PHP</b>, Part 1: Perl may be <b>regex</b> <b>...</b>", 
    "formattedUrl": "www.ibm.com/developerworks/library/os-php-regex1/", 
    "htmlFormattedUrl": "www.ibm.com/developerworks/library/os-<b>php</b>-<b>regex</b>1/", 
    "pagemap": {
      "metatags": [
        {
          "dc.subject": "TT400", 
          "ibm.effective": "2008-01-01", 
          "dw.topic": "214,54", 
          "abstract": "Pattern matching is such a common chore for software that a special shorthand -- regular expressions -- has evolved to make light work of the task. Learn how to use this shorthand in your code.", 
          "dc.rights": "\u00a9 Copyright\u00a0IBM Corporation\u00a02008", 
          "dc.type": "CT316", 
          "ibm.wtmcategory": "SOFDCOSRZZ", 
          "dc.date": "2008-01-01", 
          "source": "v17 delivery:developerWorks", 
          "dw.contentarea": "7", 
          "owner": "developerWorks Content/Raleigh/IBM", 
          "ibm.country": "ZZ", 
          "security": "Public", 
          "ibm.specialpurpose": "SP001", 
          "dc.language": "en"
        }
      ]
    }, 
    "snippet": "Jan 1, 2008 ... Here's a brief example of applying a regex, drawn from the UNIX ... A PHP PCRE \nregex contains operators to match against specific characters\u00a0...", 
    "htmlSnippet": "Jan 1, 2008 <b>...</b> Here&#39;s a brief <b>example</b> of applying a <b>regex</b>, drawn from the UNIX ... A <b>PHP PCRE</b> <br>\n<b>regex</b> contains operators to match against specific characters&nbsp;...", 
    "link": "http://www.ibm.com/developerworks/library/os-php-regex1/", 
    "cacheId": "WLegQOL2PIcJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Advanced Regular Expressions in Grep Command with 10 Examples", 
    "displayLink": "www.thegeekstuff.com", 
    "htmlTitle": "Advanced <b>Regular Expressions</b> in <b>Grep</b> Command with 10 <b>Examples</b>", 
    "formattedUrl": "www.thegeekstuff.com/.../advanced-regular-expressions-in-grep-command- with-10-examples-\u2013-part-ii/", 
    "htmlFormattedUrl": "www.thegeekstuff.com/.../advanced-<b>regular-expressions</b>-in-<b>grep</b>-command- with-10-<b>examples</b>-\u2013-part-ii/", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "article": [
        {
          "articlebody": "In our previous regular expression part 1 article, we reviewed basic reg-ex with practical examples. But we can do much more with the regular expressions. You can often accomplish complex tasks...", 
          "datepublished": "2011-01-17", 
          "name": "Advanced Regular Expressions in Grep Command with 10 Examples \u2013 Part II", 
          "datemodified": "2011-01-09", 
          "author": "Sasikala"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "240", 
          "src": "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQYMn2eiYBfFqML6nY9Tje79xnSoD7ISLFicWlnV8LxoIIdEUFBiv8KLWw", 
          "height": "140"
        }
      ], 
      "cse_image": [
        {
          "src": "http://static.thegeekstuff.com/wp-content/uploads/2011/12/regex-in-grep-2-300x176.png"
        }
      ]
    }, 
    "snippet": "Jan 17, 2011 ... But we can do much more with the regular expressions. ... starts with single hash \nsymbol, then its a comment in Perl and shell scripting. ... Note: For basic grep \ncommand examples, read 15 Practical Grep Command Examples.", 
    "htmlSnippet": "Jan 17, 2011 <b>...</b> But we can do much more with the <b>regular expressions</b>. ... starts with single hash <br>\nsymbol, then its a comment in Perl and <b>shell</b> scripting. ... Note: For basic <b>grep</b> <br>\ncommand <b>examples</b>, read 15 Practical <b>Grep</b> Command <b>Examples</b>.", 
    "link": "http://www.thegeekstuff.com/2011/01/advanced-regular-expressions-in-grep-command-with-10-examples-%E2%80%93-part-ii/", 
    "cacheId": "RorHicwMLhEJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Advanced Bash Shell Scripting Guide - Regular Expressions", 
    "displayLink": "www.linuxtopia.org", 
    "htmlTitle": "Advanced <b>Bash Shell</b> Scripting Guide - <b>Regular Expressions</b>", 
    "formattedUrl": "www.linuxtopia.org/online_books/advanced_bash.../regexp.html", 
    "htmlFormattedUrl": "www.linuxtopia.org/online_books/advanced_<b>bash</b>.../<b>regexp</b>.html", 
    "snippet": "To fully utilize the power of shell scripting, you need to master Regular \nExpressions. Certain commands and utilities commonly used in scripts, such as \ngrep,\u00a0...", 
    "htmlSnippet": "To fully utilize the power of <b>shell</b> scripting, you need to master <b>Regular</b> <br>\n<b>Expressions</b>. Certain commands and utilities commonly used in scripts, such as <br>\n<b>grep</b>,&nbsp;...", 
    "link": "http://www.linuxtopia.org/online_books/advanced_bash_scripting_guide/regexp.html", 
    "cacheId": "AzKXX9gM4bkJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "URL Rewriting | redirecting URLs with Apache's mod_rewrite", 
    "displayLink": "www.yourhtmlsource.com", 
    "htmlTitle": "URL Rewriting | <b>redirecting</b> URLs with <b>Apache&#39;s mod_rewrite</b>", 
    "formattedUrl": "www.yourhtmlsource.com/sitemanagement/urlrewriting.html", 
    "htmlFormattedUrl": "www.yourhtmlsource.com/sitemanagement/url<b>rewriting</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=780", 
          "copyright": "Ross Shannon 2000\u20132015 and beyond...", 
          "author": "Ross Shannon"
        }
      ]
    }, 
    "snippet": "Beginner's guide to using Apache's mod_rewrite. Includes why redirects are \nnecessary, basic use, and regular expressions.", 
    "htmlSnippet": "Beginner&#39;s guide to using <b>Apache&#39;s mod_rewrite</b>. Includes why <b>redirects</b> are <br>\nnecessary, basic use, and <b>regular expressions</b>.", 
    "link": "http://www.yourhtmlsource.com/sitemanagement/urlrewriting.html", 
    "cacheId": "YtF4PnGlhmkJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "connect-modrewrite", 
    "displayLink": "www.npmjs.com", 
    "htmlTitle": "connect-<b>modrewrite</b>", 
    "formattedUrl": "https://www.npmjs.com/package/connect-modrewrite", 
    "htmlFormattedUrl": "https://www.npmjs.com/package/connect-<b>modrewrite</b>", 
    "pagemap": {
      "website": [
        {
          "url": "https://www.npmjs.com/"
        }
      ], 
      "metatags": [
        {
          "msapplication-config": "/static/images/touch-icons/browserconfig.xml", 
          "twitter:url": "https://www.npmjs.com/package/connect-modrewrite", 
          "twitter:description": "connect-modrewrite adds modrewrite functionality to connect/express server", 
          "msapplication-tilecolor": "#cb3837", 
          "apple-mobile-web-app-capable": "no", 
          "theme-color": "#cb3837", 
          "msapplication-tileimage": "/static/images/touch-icons/mstile-144x144.png", 
          "twitter:title": "npm: connect-modrewrite", 
          "og:image": "https://www.npmjs.com/static/images/touch-icons/open-graph.png", 
          "viewport": "width=device-width,minimum-scale=1.0,initial-scale=1,user-scalable=yes"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "80", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQZxelGJuQZ0CC2ZHMTc82s8wErP3BCK8ymi6P0OB4T0RsZg0PNGdta", 
          "height": "80"
        }
      ], 
      "cse_image": [
        {
          "src": "https://secure.gravatar.com/avatar/97f260bc1a33092fa1ca6ef494160813?size=100&default=retro"
        }
      ], 
      "searchaction": [
        {
          "query-input": "name=q value", 
          "target": "https://www.npmjs.com/search?q={q}"
        }
      ]
    }, 
    "snippet": "connect-modrewrite. connect-modrewrite adds modrewrite functionality to \nconnect/express server ... with numbers). Issue a redirect for request. ... Host [H], [\nH=*] (replace * with a regular expression that match a hostname). Match on host.", 
    "htmlSnippet": "connect-<b>modrewrite</b>. connect-<b>modrewrite</b> adds <b>modrewrite</b> functionality to <br>\nconnect/express server ... with numbers). Issue a <b>redirect</b> for request. ... Host [H], [<br>\nH=*] (<b>replace</b> * with a <b>regular expression</b> that <b>match</b> a hostname). <b>Match</b> on host.", 
    "link": "https://www.npmjs.com/package/connect-modrewrite", 
    "cacheId": "szUS0QRzYWYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP: preg_grep - Manual", 
    "displayLink": "php.net", 
    "htmlTitle": "<b>PHP</b>: preg_grep - <b>Manual</b>", 
    "formattedUrl": "php.net/manual/en/function.preg-grep.php", 
    "htmlFormattedUrl": "<b>php</b>.net/<b>manual</b>/en/function.<b>preg</b>-grep.<b>php</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "preg_grep \u2014 Return array entries that match the pattern ... search and replace; \npreg_last_error() - Returns the error code of the last PCRE regex execution.", 
    "htmlSnippet": "preg_grep \u2014 Return <b>array</b> entries that <b>match</b> the <b>pattern</b> ... search and replace; <br>\npreg_last_error() - Returns the error code of the last PCRE <b>regex</b> execution.", 
    "link": "http://php.net/manual/en/function.preg-grep.php", 
    "cacheId": "ucOd3kl9FxAJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "php - how to search in array with preg_match? - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>php</b> - how to search in <b>array</b> with preg_match? - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/.../how-to-search-in-array-with-preg-match", 
    "htmlFormattedUrl": "stackoverflow.com/.../how-to-search-in-<b>array</b>-with-<b>preg</b>-<b>match</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "In this post I'll provide you with three different methods of doing what you ask for. I actually recommend using the last snippet, since it's easiest to comprehend as well as being quite neat...", 
          "upvotecount": "53"
        }, 
        {
          "text": "Use preg_grep $array = preg_grep( '/(my\\n+string\\n+)/i', array( 'file' , 'my string => name', 'this') );", 
          "upvotecount": "3"
        }, 
        {
          "text": "You can use array_walk to apply your preg_match function to each element of the array. http://us3.php.net/array_walk", 
          "upvotecount": "2"
        }, 
        {
          "text": "$items = array(); foreach ($haystacks as $haystack) { if (preg_match($pattern, $haystack, $matches) $items[] = $matches[1]; }", 
          "upvotecount": "1"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I need search on array with preg_match. Example: <?php if( preg_match( '/(my\\n+string\\n+)/i' , array( 'file' , 'my string => name', 'this') , $match) ) { //Excelent!! $items[] =", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "how to search in array with preg_match?", 
          "title": "how to search in array with preg_match?"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/8627334/how-to-search-in-array-with-preg-match", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/8627334/how-to-search-in-array-with-preg-match", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/8627334/how-to-search-in-array-with-preg-match", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I need search on array with preg_match.  Example:  &lt;?php if( preg_match( '/(my\\n+string\\n+)/i' , array( 'file' , 'my string  =&gt; name', 'this') , $match) ) {     //Excelent!!     $items[] =", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/8627334/how-to-search-in-array-with-preg-match", 
          "twitter:card": "summary", 
          "twitter:title": "how to search in array with preg_match?", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "4", 
          "text": "I need search on array with preg_match. Example: <?php if( preg_match( '/(my\\n+string\\n+)/i' , array( 'file' , 'my string => name', 'this') , $match) ) { //Excelent!! $items[] = $match[1];...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "how to search in array with preg_match?", 
          "upvotecount": "18"
        }
      ]
    }, 
    "snippet": "$items = array(); foreach ($haystacks as $haystack) { if (preg_match($pattern, $\nhaystack, $matches) $items[] = $matches[1]; }\u00a0...", 
    "htmlSnippet": "$items = <b>array</b>(); foreach ($haystacks as $haystack) { if (preg_match($<b>pattern</b>, $<br>\nhaystack, $matches) $items[] = $matches[1]; }&nbsp;...", 
    "link": "http://stackoverflow.com/questions/8627334/how-to-search-in-array-with-preg-match", 
    "cacheId": "HkaFNojGPDMJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "How do you perform a preg_match where the pattern is an array, in ...", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "How do you perform a preg_match where the <b>pattern</b> is an <b>array</b>, in <b>...</b>", 
    "formattedUrl": "stackoverflow.com/.../how-do-you-perform-a-preg-match-where-the-pattern- is-an-array-in-php", 
    "htmlFormattedUrl": "stackoverflow.com/.../how-do-you-perform-a-<b>preg</b>-<b>match</b>-where-the-<b>pattern</b>- is-an-<b>array</b>-in-<b>php</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "First of all, if you literally are only doing dozens every minute, then I wouldn't worry terribly about the performance in this case. These matches are pretty quick, and I don't think you're...", 
          "upvotecount": "11"
        }, 
        {
          "text": "// assuming you have something like this $patterns = array('a','b','\\w'); // converts the array into a regex friendly or list $patterns_flattened = implode('|', $patterns); if ( preg_match('/'....", 
          "upvotecount": "5"
        }, 
        {
          "text": "If you're merely searching for the presence of a string in another string, use strpos as it is faster. Otherwise, you could just iterate over the array of patterns, calling preg_match each time.", 
          "upvotecount": "1"
        }, 
        {
          "text": "What about doing a str_replace() on the HTML you get using your array and then checking if the original HTML is equal to the original? This would be very fast: $sites = array( 'you_tube' =>...", 
          "upvotecount": "1"
        }, 
        {
          "text": "If your patterns don't contain many whitespaces, another option would be to eschew the arrays and use the /x modifier. Now your list of regular expressions would look like this: $regex = \"/...", 
          "upvotecount": "1"
        }, 
        {
          "text": "If you have a bunch of patterns, what you can do is concatenate them in a single regular expression and match that. No need for a loop.", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I have an array full of patterns that I need matched. Any way to do that, other than a for() loop? Im trying to do it in the least CPU intensive way, since I will be doing dozens of these every mi...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "How do you perform a preg_match where the pattern is an array, in php?", 
          "title": "How do you perform a preg_match where the pattern is an array, in php?"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/683702/how-do-you-perform-a-preg-match-where-the-pattern-is-an-array-in-php", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/683702/how-do-you-perform-a-preg-match-where-the-pattern-is-an-array-in-php", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/683702/how-do-you-perform-a-preg-match-where-the-pattern-is-an-array-in-php", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I have an array full of patterns that I need matched. Any way to do that, other than a for() loop? Im trying to do it in the least CPU intensive way, since I will be doing  dozens of these every mi...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/683702/how-do-you-perform-a-preg-match-where-the-pattern-is-an-array-in-php", 
          "twitter:card": "summary", 
          "twitter:title": "How do you perform a preg_match where the pattern is an array, in php?", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "6", 
          "text": "I have an array full of patterns that I need matched. Any way to do that, other than a for() loop? Im trying to do it in the least CPU intensive way, since I will be doing dozens of these every...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "How do you perform a preg_match where the pattern is an array, in php?", 
          "upvotecount": "3"
        }
      ]
    }, 
    "snippet": "I have an array full of patterns that I need matched. Any way to do that, ... First of \nall, if you literally are only doing dozens every minute, then I\u00a0...", 
    "htmlSnippet": "I have an <b>array</b> full of patterns that I need matched. Any way to do that, ... First of <br>\nall, if you literally are only doing dozens every minute, then I&nbsp;...", 
    "link": "http://stackoverflow.com/questions/683702/how-do-you-perform-a-preg-match-where-the-pattern-is-an-array-in-php", 
    "cacheId": "LvwT34SAqnMJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP: preg_filter - Manual", 
    "displayLink": "php.net", 
    "htmlTitle": "<b>PHP</b>: preg_filter - <b>Manual</b>", 
    "formattedUrl": "php.net/manual/en/function.preg-filter.php", 
    "htmlFormattedUrl": "<b>php</b>.net/<b>manual</b>/en/function.<b>preg</b>-filter.<b>php</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "(PHP 5 >= 5.3.0). preg_filter \u2014 Perform a regular expression search and replace \n... Returns an array if the subject parameter is an array, or a string otherwise.", 
    "htmlSnippet": "(<b>PHP</b> 5 &gt;= 5.3.0). preg_filter \u2014 Perform a <b>regular expression</b> search and replace <br>\n... Returns an <b>array</b> if the subject parameter is an <b>array</b>, or a string otherwise.", 
    "link": "http://php.net/manual/en/function.preg-filter.php", 
    "cacheId": "lmYNWUpmTx0J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "How to get pattern matching in php array using RegEx - Stack ...", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "How to get <b>pattern</b> matching in <b>php array</b> using <b>RegEx</b> - Stack <b>...</b>", 
    "formattedUrl": "stackoverflow.com/.../how-to-get-pattern-matching-in-php-array-using-regex", 
    "htmlFormattedUrl": "stackoverflow.com/.../how-to-get-<b>pattern</b>-<b>match</b>ing-in-<b>php</b>-<b>array</b>-using-<b>regex</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "This works: $valuesArray = array('www.example.com/','www.example.com','www.demo.example.com/','www.example.com/blog','www.demo.com'); $matchArray = array('*.example.com/*','www.demo.com');...", 
          "upvotecount": "1"
        }, 
        {
          "text": "/\\w+(\\.demo)?\\.example\\.com\\/\\w*|www\\.demo\\.com/ regexr link", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I have following set of an array array('www.example.com/','www.example.com','www.demo.example.com/','www.example.com/blog','www.demo.com'); and I would like to get all element which matching fol...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "How to get pattern matching in php array using RegEx", 
          "title": "How to get pattern matching in php array using RegEx"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/9578042/how-to-get-pattern-matching-in-php-array-using-regex", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/9578042/how-to-get-pattern-matching-in-php-array-using-regex", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/9578042/how-to-get-pattern-matching-in-php-array-using-regex", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I have following set of an array  array('www.example.com/','www.example.com','www.demo.example.com/','www.example.com/blog','www.demo.com');   and I would like to get all element which matching fol...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/9578042/how-to-get-pattern-matching-in-php-array-using-regex", 
          "twitter:card": "summary", 
          "twitter:title": "How to get pattern matching in php array using RegEx", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "2", 
          "text": "I have following set of an array array('www.example.com/','www.example.com','www.demo.example.com/','www.example.com/blog','www.demo.com'); and I would like to get all element which matching...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "How to get pattern matching in php array using RegEx", 
          "upvotecount": "0"
        }
      ]
    }, 
    "snippet": "This works: $valuesArray = array('www.example.com/','www.example.com','www.\ndemo.example.com/','www.example.com/blog','www.demo.com');\u00a0...", 
    "htmlSnippet": "This works: $valuesArray = <b>array</b>(&#39;www.<b>example</b>.com/&#39;,&#39;www.<b>example</b>.com&#39;,&#39;www.<br>\ndemo.<b>example</b>.com/&#39;,&#39;www.<b>example</b>.com/blog&#39;,&#39;www.demo.com&#39;);&nbsp;...", 
    "link": "http://stackoverflow.com/questions/9578042/how-to-get-pattern-matching-in-php-array-using-regex", 
    "cacheId": "O6cs88huYMIJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "13. Regular Expressions \u2014 A Modern Introduction to Programming ...", 
    "displayLink": "www.openbookproject.net", 
    "htmlTitle": "13. <b>Regular Expressions</b> \u2014 A Modern Introduction to Programming <b>...</b>", 
    "formattedUrl": "www.openbookproject.net/books/mi2pwjs/ch13.html", 
    "htmlFormattedUrl": "www.openbookproject.net/books/mi2pwjs/ch13.<b>html</b>", 
    "pagemap": {
      "cse_thumbnail": [
        {
          "width": "223", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQC89dAiwgHMDYh887yRXsT9yW6ohQDoNMOxrh-GIV297dOFCGM849i3vI", 
          "height": "226"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.openbookproject.net/books/mi2pwjs/_images/xkcd_regular_expressions.png"
        }
      ]
    }, 
    "snippet": "... in a string, for example the characters that had to be escaped in HTML output. \nRegular expressions are a language for describing patterns in strings. ... It is not \na very readable language \u2015 big regular expressions tend to be ..... index \u00b7 next |; \nprevious |; A Modern Introduction to Programming with JavaScript and jQuery \u00bb.", 
    "htmlSnippet": "... in a string, for <b>example</b> the characters that had to be escaped in <b>HTML</b> output. <br>\n<b>Regular expressions</b> are a language for describing patterns in strings. ... It is not <br>\na very readable language \u2015 big <b>regular expressions</b> tend to be ..... index &middot; next |; <br>\nprevious |; A Modern Introduction to Programming with JavaScript and <b>jQuery</b> \u00bb.", 
    "link": "http://www.openbookproject.net/books/mi2pwjs/ch13.html", 
    "cacheId": "OKS_YrJ5TDcJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions (RegEx) and jQuery", 
    "displayLink": "www.learnjquery.org", 
    "htmlTitle": "<b>Regular Expressions</b> (<b>RegEx</b>) and <b>jQuery</b>", 
    "formattedUrl": "www.learnjquery.org/.../Tutorial-8-regular-expressions-regex.html", 
    "htmlFormattedUrl": "www.learn<b>jquery</b>.org/.../<b>Tutorial</b>-8-<b>regular-expressions</b>-<b>regex</b>.<b>html</b>", 
    "pagemap": {
      "metatags": [
        {
          "og:image": "http://www.learnjquery.org/Images/tutorial-article.png", 
          "og:url": "http://www.learnjquery.org/newsletter/Tutorial-8-regular-expressions-regex.html", 
          "og:type": "article", 
          "og:title": "Regular Expressions (RegEx) and jQuery", 
          "fb:admins": "gregsometimes7"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.learnjquery.org/Images/tutorial-article.png"
        }
      ]
    }, 
    "snippet": "Regular Expressions (regexp or regex) are used to match characters or words \nwithin strings of text. This basic tutorial shows how regular expressions work\u00a0...", 
    "htmlSnippet": "<b>Regular Expressions</b> (<b>regexp</b> or <b>regex</b>) are used to <b>match</b> characters or words <br>\nwithin strings of text. This basic <b>tutorial</b> shows how <b>regular expressions</b> work&nbsp;...", 
    "link": "http://www.learnjquery.org/newsletter/Tutorial-8-regular-expressions-regex.html", 
    "cacheId": "SkloDThBJf8J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "DataTables example - Search API (regular expressions)", 
    "displayLink": "datatables.net", 
    "htmlTitle": "DataTables <b>example</b> - Search API (<b>regular expressions</b>)", 
    "formattedUrl": "https://datatables.net/examples/api/regex.html", 
    "htmlFormattedUrl": "https://datatables.net/<b>examples</b>/api/<b>regex</b>.<b>html</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width,initial-scale=1"
        }
      ]
    }, 
    "snippet": "Each search (global or column) can be marked as a regular expression (allowing \nyou to create very complex interactions) ... This example allows you to \"play\" with \nthe various searching options that DataTables provides. ... Javascript; HTML; \nCSS; Ajax; Server-side script; Comments ... //cdn.datatables.net/1.10.7/css/jquery.", 
    "htmlSnippet": "Each search (global or column) can be marked as a <b>regular expression</b> (allowing <br>\nyou to create very complex interactions) ... This <b>example</b> allows you to &quot;play&quot; with <br>\nthe various searching options that DataTables provides. ... Javascript; <b>HTML</b>; <br>\nCSS; Ajax; Server-side script; Comments ... //cdn.datatables.net/1.10.7/css/<b>jquery</b>.", 
    "link": "https://datatables.net/examples/api/regex.html", 
    "cacheId": "tyh6rQc2p7oJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Unix Sed Tutorial: Advanced Sed Substitution Examples", 
    "displayLink": "www.thegeekstuff.com", 
    "htmlTitle": "Unix <b>Sed Tutorial</b>: Advanced <b>Sed</b> Substitution <b>Examples</b>", 
    "formattedUrl": "www.thegeekstuff.com/.../unix-sed-tutorial-advanced-sed-substitution- examples/", 
    "htmlFormattedUrl": "www.thegeekstuff.com/.../unix-<b>sed</b>-<b>tutorial</b>-advanced-<b>sed</b>-substitution- <b>examples</b>/", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "article": [
        {
          "articlebody": "This article is part of the on-going Unix Sed Tips and Tricks series. In our previous sed articles we learned \u2014 sed printing, sed deletion, sed substitute , sed file write, and sed multiple...", 
          "name": "Unix Sed Tutorial: Advanced Sed Substitution Examples", 
          "author": "Sasikala", 
          "datepublished": "2009-10-26", 
          "keywords": "Tagged as: Linux Sed Command, Sed Examples, Sed Tips and Tricks, Unix Sed Substitution", 
          "datemodified": "2013-03-18"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "240", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcSd426lGnpJm807rmqbfI8zQYBlwxnrSlJYJqqSkc5DbCPHLL9o6YiU_Z98", 
          "height": "180"
        }
      ], 
      "cse_image": [
        {
          "src": "http://static.thegeekstuff.com/wp-content/uploads/2009/10/unix-sed-tutorial-advanced-substitute-operation-300x225.png"
        }
      ]
    }, 
    "snippet": "Oct 26, 2009 ... Linux Sed Examples - Advanced Find and Replace Operation ... The precise part \nof an input line on which the Regular Expression matches is\u00a0...", 
    "htmlSnippet": "Oct 26, 2009 <b>...</b> <b>Linux Sed Examples</b> - Advanced Find and Replace Operation ... The precise part <br>\nof an input line on which the <b>Regular Expression</b> matches is&nbsp;...", 
    "link": "http://www.thegeekstuff.com/2009/10/unix-sed-tutorial-advanced-sed-substitution-examples/", 
    "cacheId": "uWnZ7J3kDE8J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP: preg_split - Manual", 
    "displayLink": "php.net", 
    "htmlTitle": "<b>PHP</b>: preg_split - <b>Manual</b>", 
    "formattedUrl": "php.net/preg_split", 
    "htmlFormattedUrl": "<b>php</b>.net/<b>preg</b>_split", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "If you don't need the power of regular expressions, you can choose faster (albeit \n.... solution, you can use the following code as a search expression parser:", 
    "htmlSnippet": "If you don&#39;t need the power of <b>regular expressions</b>, you can choose faster (albeit <br>\n.... solution, you can use the following code as a search expression <b>parser</b>:", 
    "link": "http://php.net/preg_split", 
    "cacheId": "qOnVw3GQeWsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "regex - A parser for regular expressions in PHP? - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>regex</b> - A <b>parser</b> for <b>regular expressions</b> in <b>PHP</b>? - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/.../a-parser-for-regular-expressions-in-php", 
    "htmlFormattedUrl": "stackoverflow.com/.../a-<b>parser</b>-for-<b>regular-expressions</b>-in-<b>php</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "I'm the creator of Debuggex, whose requirements are very similar to yours: optimize for the amount of information that can be shown. Below is a heavily modified (for readablity) snippet from...", 
          "upvotecount": "16"
        }, 
        {
          "text": "The perl module YAPE::Regex::Explain module can probably be ported to PHP pretty easy. Here is an example of its output C:\\>perl -e \"use YAPE::Regex::Explain;print YAPE::Regex::Explain->new(qr/['-]...", 
          "upvotecount": "8"
        }, 
        {
          "text": "What you need is a grammar and a way to generate a parser for it. The easiest approach to producing a parser is to code a recursive descent directly in your target language (e.g., in PHP),...", 
          "upvotecount": "3"
        }, 
        {
          "text": "You may be interested in a project I did last summer. It is a Javascript program which provides dynamic syntax highlighting of PCRE compatible regular expressions: See: Dynamic (?:Regex Highlightin...", 
          "upvotecount": "2"
        }, 
        {
          "text": "Well, you can take a look at the implementation of the regex functions in php. As php is an open source project, all the sources and documentation is available to public.", 
          "upvotecount": "1"
        }, 
        {
          "text": "I would try to translate a ActionScript 1/2 regular expression library to PHP. Earlier versions of Flash didn't have native regex support, so there're a few libraries written in AS out there....", 
          "upvotecount": "1"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I need to parse regular expressions into their components in PHP. I have no problem creating the regular expressions or executing them, but I want to display information about the regular expression", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "A parser for regular expressions in PHP?", 
          "title": "A parser for regular expressions in PHP?"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/4594135/a-parser-for-regular-expressions-in-php", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/4594135/a-parser-for-regular-expressions-in-php", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/4594135/a-parser-for-regular-expressions-in-php", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I need to parse regular expressions into their components in PHP. I have no problem creating the regular expressions or executing them, but I want to display information about the regular expression", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/4594135/a-parser-for-regular-expressions-in-php", 
          "twitter:card": "summary", 
          "twitter:title": "A parser for regular expressions in PHP?", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "6", 
          "text": "I need to parse regular expressions into their components in PHP. I have no problem creating the regular expressions or executing them, but I want to display information about the regular expressio...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "A parser for regular expressions in PHP?", 
          "upvotecount": "21"
        }
      ]
    }, 
    "snippet": "Jan 4, 2011 ... I need to parse regular expressions into their components in PHP. I have no \nproblem creating the regular expressions or executing them, but I\u00a0...", 
    "htmlSnippet": "Jan 4, 2011 <b>...</b> I need to <b>parse regular expressions</b> into their components in <b>PHP</b>. I have no <br>\nproblem creating the <b>regular expressions</b> or executing them, but I&nbsp;...", 
    "link": "http://stackoverflow.com/questions/4594135/a-parser-for-regular-expressions-in-php", 
    "cacheId": "EKOPNONKVd4J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Do not try using regular expressions for parsing - Kore Nordmann ...", 
    "displayLink": "kore-nordmann.de", 
    "htmlTitle": "Do not try using <b>regular expressions</b> for <b>parsing</b> - Kore Nordmann <b>...</b>", 
    "formattedUrl": "kore-nordmann.de/blog/do_NOT_parse_using_regexp.html", 
    "htmlFormattedUrl": "kore-nordmann.de/blog/do_NOT_<b>parse</b>_using_<b>regexp</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "language": "en", 
          "author": "Kore Nordmann", 
          "dc.rights": "CC by-sa", 
          "dc.date": "Sat, 14 Feb 2009 20:55:45 +0100", 
          "dc.creator": "Kore Nordmann", 
          "date": "Sat, 14 Feb 2009 20:55:45 +0100", 
          "dc.title": "Do not try using regular expressions for parsing"
        }
      ]
    }, 
    "snippet": "Jul 27, 2007 ... Parsing recursive structures with regular expressions ... try to help others using \nPHP, where I hang around for some years now, and had some\u00a0...", 
    "htmlSnippet": "Jul 27, 2007 <b>...</b> <b>Parsing</b> recursive structures with <b>regular expressions</b> ... try to help others using <br>\n<b>PHP</b>, where I hang around for some years now, and had some&nbsp;...", 
    "link": "http://kore-nordmann.de/blog/do_NOT_parse_using_regexp.html", 
    "cacheId": "CfJiYDsrhy8J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Advanced Regular Expression Tips and Techniques - Tuts+ Code ...", 
    "displayLink": "code.tutsplus.com", 
    "htmlTitle": "Advanced <b>Regular Expression</b> Tips and Techniques - Tuts+ Code <b>...</b>", 
    "formattedUrl": "code.tutsplus.com/tutorials/advanced-regular-expression-tips-and-techniques --net-11011", 
    "htmlFormattedUrl": "code.tutsplus.com/<b>tutorials</b>/advanced-<b>regular-expression</b>-tips-and-techniques --net-11011", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://code.tutsplus.com/tutorials/advanced-regular-expression-tips-and-techniques--net-11011", 
          "og:site_name": "Code Tuts+", 
          "csrf-token": "dS4KvdnxkYwcr1fq4D9PbBs0E9Zpfhi5bGKarKkJe1cLl4ym9UPgQICX39QsGOl59e9SnCLr7cKVdZSAOGNIAg==", 
          "og:type": "article", 
          "og:description": "Twice a month, we revisit some of our readers\u2019 favorite posts from throughout the history of Nettuts+.&#13; Regular Expressions are the Swiss Army knife for searching through information for certain patterns. They have a wide arsenal of tools, some of which often go undiscovered or underutilized. Today I will show you some advanced tips for working with regular expressions. | Difficulty: Advanced; Tags: PHP, Web Development", 
          "csrf-param": "authenticity_token", 
          "et.category": "PHP", 
          "og:title": "Advanced Regular Expression Tips and Techniques - Tuts+ Code Tutorial", 
          "fb:app_id": "1494084460809023", 
          "og:image": "https://s3.amazonaws.com/nettuts/639_regex/preview.jpg", 
          "viewport": "initial-scale=1"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "160", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcRt-59q2wx09fE1LkthNep5FDbVuKHn5E59Mh8OI3uXEr-PGzMwE9-ROXk", 
          "height": "160"
        }
      ], 
      "cse_image": [
        {
          "src": "https://s3.amazonaws.com/nettuts/639_regex/preview.jpg"
        }
      ]
    }, 
    "snippet": "Jan 27, 2011 ... Regular Expressions are the Swiss Army knife for searching through ... Difficulty: \nAdvanced; Tags: PHP, Web Development. ... If you call preg_replace() or \nstr_replace() for each pattern, the string will be parsed over and over\u00a0...", 
    "htmlSnippet": "Jan 27, 2011 <b>...</b> <b>Regular Expressions</b> are the Swiss Army knife for searching through ... Difficulty: <br>\nAdvanced; Tags: <b>PHP</b>, Web Development. ... If you call preg_replace() or <br>\nstr_replace() for each <b>pattern</b>, the string will be <b>parsed</b> over and over&nbsp;...", 
    "link": "http://code.tutsplus.com/tutorials/advanced-regular-expression-tips-and-techniques--net-11011", 
    "cacheId": "rC19x-OqpN0J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "apache - RedirectMatch and Regex Tomfoolery - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>apache</b> - <b>RedirectMatch</b> and <b>Regex</b> Tomfoolery - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/.../redirectmatch-and-regex-tomfoolery", 
    "htmlFormattedUrl": "stackoverflow.com/questions/.../<b>redirectmatch</b>-and-<b>regex</b>-tomfoolery", 
    "pagemap": {
      "answer": [
        {
          "text": "Try this: RedirectMatch permanent /library/(?!.*\\.pdf) http://www.externalsite.com/", 
          "upvotecount": "4"
        }, 
        {
          "text": "You probably want to match the whole path rather than a substring: RedirectMatch permanent ^/library/(?!.*\\.pdf)$ ...", 
          "upvotecount": "2"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I'm trying to redirect all requests for /library/ to an external URL except when .pdf files are requested. e.g. www.mysite.com/library/section should redrect to www.externalsite.com but", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "RedirectMatch and Regex Tomfoolery", 
          "title": "RedirectMatch and Regex Tomfoolery"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/756216/redirectmatch-and-regex-tomfoolery", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/756216/redirectmatch-and-regex-tomfoolery", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/756216/redirectmatch-and-regex-tomfoolery", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I'm trying to redirect all requests for /library/ to an external URL except when .pdf files are requested. e.g. www.mysite.com/library/section should redrect to www.externalsite.com but", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/756216/redirectmatch-and-regex-tomfoolery", 
          "twitter:card": "summary", 
          "twitter:title": "RedirectMatch and Regex Tomfoolery", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "2", 
          "text": "I'm trying to redirect all requests for /library/ to an external URL except when .pdf files are requested. e.g. www.mysite.com/library/section should redrect to www.externalsite.com but www.mysite....", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "RedirectMatch and Regex Tomfoolery", 
          "upvotecount": "2"
        }
      ]
    }, 
    "snippet": "RedirectMatch and Regex Tomfoolery .... Apache mod_alias RedirectMatch \neverything except specific pattern \u00b7 2 \u00b7 Unable to validate htaccess\u00a0...", 
    "htmlSnippet": "<b>RedirectMatch</b> and <b>Regex</b> Tomfoolery .... <b>Apache</b> mod_alias <b>RedirectMatch</b> <br>\neverything except specific <b>pattern</b> &middot; 2 &middot; Unable to validate <b>htaccess</b>&nbsp;...", 
    "link": "http://stackoverflow.com/questions/756216/redirectmatch-and-regex-tomfoolery", 
    "cacheId": "yyWOo9JEp4QJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Mod_Rewrite Basic Examples", 
    "displayLink": "www.askapache.com", 
    "htmlTitle": "<b>Mod_Rewrite</b> Basic <b>Examples</b>", 
    "formattedUrl": "www.askapache.com/htaccess/mod_rewrite-basic-examples.html", 
    "htmlFormattedUrl": "www.ask<b>apache</b>.com/<b>htaccess</b>/<b>mod_rewrite</b>-basic-<b>examples</b>.html", 
    "pagemap": {
      "Breadcrumb": [
        {
          "url": "Home"
        }
      ], 
      "metatags": [
        {
          "twitter:creator": "@askapache", 
          "twitter:domain": "AskApache", 
          "og:locale": "en_US", 
          "dc.publisher": "AskApache Web Development", 
          "dc.date.issued": "2006-11-07T06:49:56+00:00", 
          "twitter:site": "@askapache", 
          "article:publisher": "http://www.facebook.com/htaccess.AskApache", 
          "og:type": "article", 
          "fb:admins": "100005107449774", 
          "dc.author": "Charles Torvalds", 
          "dc.language": "en", 
          "og:title": "Mod_Rewrite Basic Examples", 
          "twitter:title": "Mod_Rewrite Basic Examples", 
          "article:section": "Htaccess", 
          "dc.format": "text/html", 
          "article:modified_time": "2013-04-26T20:57:33+00:00", 
          "article:author": "https://www.facebook.com/htaccess.AskApache", 
          "og:image": "http://www.askapache.com/avatar.png", 
          "article:published_time": "2006-11-07T06:49:56+00:00", 
          "viewport": "width=device-width, initial-scale=.75, minimum-scale=.15, maximum-scale=2.6", 
          "dc.title": "Mod_Rewrite Basic Examples", 
          "og:updated_time": "2013-04-26T20:57:33+00:00", 
          "og:site_name": "AskApache", 
          "twitter:card": "summary_large_image", 
          "twitter:description": "mod_rewrite is very useful in many situations. Yet some behaviors were not so obvious when I started to mess with it. After many testings, I understand it much better, now. Having said that, I do not pretend to know it perfectly. I also make mistakes.", 
          "og:description": "mod_rewrite is very useful in many situations. Yet some behaviors were not so obvious when I started to mess with it. After many testings, I understand it much better, now. Having said that, I do not pretend to know it perfectly. I also make mistakes.", 
          "dc.date": "2015-06-16", 
          "twitter:image:src": "http://www.askapache.com/avatar.png"
        }
      ], 
      "person": [
        {
          "name": "Charles Torvalds"
        }
      ], 
      "organization": [
        {
          "name": "AskApache Web Development"
        }
      ], 
      "article": [
        {
          "url": "Mod_Rewrite Basic Examples", 
          "articlebody": "mod_rewrite is very useful in many situations. Yet some behaviors were not so obvious when I started to mess with it. After many tests, I understand it much better, now. Having said that, I...", 
          "image": "http://www.askapache.com/t/img/askapache_favicon_128-01.png", 
          "name": "Mod_Rewrite Basic Examples", 
          "datepublished": "2006-11-07T06:49:56+00:00"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "224", 
          "src": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRLSvOMdla_RGY_sqmqWoj8v_DSZzXPJ8uRBnDZWPZL7sixgMH7Si617Zc", 
          "height": "217"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.askapache.com/avatar.png"
        }
      ]
    }, 
    "snippet": "Nov 7, 2006 ... Home \u00bb Htaccess \u00bb Mod_Rewrite Basic Examples ... For the details of REGEX, \nexpressions, substitutions and options, you should read Apache\u00a0...", 
    "htmlSnippet": "Nov 7, 2006 <b>...</b> Home \u00bb <b>Htaccess</b> \u00bb <b>Mod_Rewrite</b> Basic <b>Examples</b> ... For the details of <b>REGEX</b>, <br>\n<b>expressions</b>, substitutions and options, you should read <b>Apache</b>&nbsp;...", 
    "link": "http://www.askapache.com/htaccess/mod_rewrite-basic-examples.html", 
    "cacheId": "Rv0gpHe7TtIJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regex.Replace Method (String, String) (System.Text ...", 
    "displayLink": "msdn.microsoft.com", 
    "htmlTitle": "<b>Regex</b>.<b>Replace</b> Method (String, String) (System.Text <b>...</b>", 
    "formattedUrl": "https://msdn.microsoft.com/en-us/.../xwewhkd1(v=vs.110).aspx", 
    "htmlFormattedUrl": "https://msdn.microsoft.com/en-us/.../xwewhkd1(v=vs.110).aspx", 
    "pagemap": {
      "metatags": [
        {
          "search.mshattr.abstract": "In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.", 
          "search.container": "System.Text.RegularExpressions", 
          "search.mshattr.locale": "en-us", 
          "search.mscategory": "ms310241", 
          "search.mshattr.topictype": "kbSyntax", 
          "search.microsoft.help.tocparenttopicversion": "110", 
          "search.mshattr.apitype": "Managed", 
          "search.mshattr.progmodel": "managed", 
          "search.mshattr.apiname": "System.Text.RegularExpressions.Regex.Replace", 
          "search.mshattr.apilocation": "System.Text.RegularExpressions.dll", 
          "search.mshattr.codelang": "kbLangVB", 
          "search.language": "en-us", 
          "search.mshattr.devlang": "VB", 
          "search.mscategoryv": "ms310241MSDN10", 
          "search.dcsext.title": "Replace Method (String, String)", 
          "search.guid": "a3cf2a1f-9627-aafa-8777-db5ad3aaa794", 
          "search.dcsext.productfamily": "LIB_DG", 
          "search.mshkeyworda": "M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)", 
          "search.description": "In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.", 
          "search.mshattr.targetos": "Windows", 
          "search.dcsext.product": "NDP_CLR", 
          "search.mshattr.assetid": "M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)", 
          "search.file": "a3cf2a1f-9627-aafa-8777-db5ad3aaa794", 
          "search.mshattr.technology": "kbNetFramewk", 
          "search.microsoft.help.id": "M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)", 
          "search.microsoft.help.contenttype": "Reference", 
          "search.mshattr.assemblyversion": "4.0.10.0", 
          "search.mshattr.revisionnumber": "216", 
          "search.mshattr.docset": "XNA", 
          "search.mshattr.technologyvers": "netframework20"
        }
      ]
    }, 
    "snippet": "In a specified input string, replaces all strings that match a regular expression \npattern with a specified replacement string.", 
    "htmlSnippet": "In a specified input string, replaces all strings that match a <b>regular expression</b> <br>\n<b>pattern</b> with a specified <b>replacement</b> string.", 
    "link": "https://msdn.microsoft.com/en-us/library/xwewhkd1(v=vs.110).aspx", 
    "cacheId": "Mu31RDgPg8UJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "regex - Regular expression replace in C# - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>regex</b> - <b>Regular expression replace</b> in <b>C#</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/.../regular-expression-replace-in-c-sharp", 
    "htmlFormattedUrl": "stackoverflow.com/questions/.../<b>regular-expression</b>-<b>replace</b>-in-c-sharp", 
    "pagemap": {
      "answer": [
        {
          "text": "You can do it this with two replace's //let stw be \"John Smith $100,000.00 M\" sb_trim = Regex.Replace(stw, @\"\\s+\\$|\\s+(?=\\w+$)\", \",\"); //sb_trim becomes \"John Smith,100,000.00,M\" sb_trim =...", 
          "upvotecount": "8"
        }, 
        {
          "text": "Try this:: sb_trim = Regex.Replace(stw, @\"(\\D+)\\s+\\$([\\d,]+)\\.\\d+\\s+(.)\", m => string.Format( \"{0},{1},{2}\", m.Groups[1].Value, m.Groups[2].Value.Replace(\",\", string.Empty), m.Groups[3].Value));...", 
          "upvotecount": "6"
        }, 
        {
          "text": "Add the following 2 lines var regex = new Regex(Regex.Escape(\",\")); sb_trim = regex.Replace(sb_trim, \" \", 1); If sb_trim= John,Smith,100000,M the above code will return \"John Smith,100000,M\"", 
          "upvotecount": "1"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I'm fairly new to using regular expressions, and, based on a few tutorials I've read, I'm unable to get this step in my Regex.Replace formatted properly. Here's the scenario I'm working on... When I", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Regular expression replace in C#", 
          "title": "Regular expression replace in C#"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/16117043/regular-expression-replace-in-c-sharp", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/16117043/regular-expression-replace-in-c-sharp", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/16117043/regular-expression-replace-in-c-sharp", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I'm fairly new to using regular expressions, and, based on a few tutorials I've read, I'm unable to get this step in my Regex.Replace formatted properly.  Here's the scenario I'm working on... When I", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/16117043/regular-expression-replace-in-c-sharp", 
          "twitter:card": "summary", 
          "twitter:title": "Regular expression replace in C#", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "3", 
          "text": "I'm fairly new to using regular expressions, and, based on a few tutorials I've read, I'm unable to get this step in my Regex.Replace formatted properly. Here's the scenario I'm working on......", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Regular expression replace in C#", 
          "upvotecount": "7"
        }
      ]
    }, 
    "snippet": "Is using the Replace option an ideal solution for this scenario? Before the regular \nexpression formatting example. FirstName LastName Salary\u00a0...", 
    "htmlSnippet": "Is using the <b>Replace</b> option an ideal solution for this scenario? Before the <b>regular</b> <br>\n<b>expression</b> formatting <b>example</b>. FirstName LastName Salary&nbsp;...", 
    "link": "http://stackoverflow.com/questions/16117043/regular-expression-replace-in-c-sharp", 
    "cacheId": "ApZXH_2zCSsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Substitutions in Regular Expressions", 
    "displayLink": "msdn.microsoft.com", 
    "htmlTitle": "Substitutions in <b>Regular Expressions</b>", 
    "formattedUrl": "https://msdn.microsoft.com/en-us/library/ewy2t5e0(v=vs.110).aspx", 
    "htmlFormattedUrl": "https://msdn.microsoft.com/en-us/library/ewy2t5e0(v=vs.110).aspx", 
    "pagemap": {
      "metatags": [
        {
          "search.mshattr.abstract": "Substitutions are language elements that are recognized only within replacement patterns. They use a regular expression pattern to define all or part of the text that is to replace matched text in the input string. The replacement pattern can consist ...", 
          "search.mshattr.locale": "en-us", 
          "search.mshattr.preferredsitename": "MSDN", 
          "search.mscategory": "ms310241", 
          "search.mshattr.topictype": "kbRef", 
          "search.mshattr.preferredlib": "/library", 
          "search.mshattr.codelang": "kbLangVB", 
          "search.language": "en-us", 
          "search.dcsext.productfamily": "LIB_DG", 
          "search.mshattr.communitycontent": "0", 
          "search.dcsext.title": "Substitutions in Regular Expressions", 
          "search.mshattr.shippedin": "vs.80", 
          "search.mshkeyworda": "d1f52431-1c7d-4dc6-8792-6b988256892e", 
          "search.system.keywords": ".NET Framework regular expressions, substitutions", 
          "search.mshkeywordk": ".NET Framework regular expressions, substitutions", 
          "search.description": "Substitutions are language elements that are recognized only within replacement patterns. They use a regular expression pattern to define all or part of the text that is to replace matched text in the input string.", 
          "search.mshattr.assetid": "d1f52431-1c7d-4dc6-8792-6b988256892e", 
          "search.dcsext.product": "NDP_CLR", 
          "search.mshattr.technology": "ManagedCode", 
          "search.microsoft.help.id": "d1f52431-1c7d-4dc6-8792-6b988256892e", 
          "search.microsoft.help.contenttype": "Reference", 
          "search.mshattr.revisionnumber": "16", 
          "search.microsoft.help.keywords": ".NET Framework regular expressions, substitutions", 
          "search.mshattr.docset": "NETFramework", 
          "search.mshattr.catalog container": "System_Default_Catalog", 
          "search.mshattr.content set container": "System_Default_Content_Set", 
          "search.mscategoryv": "ms310241MSDN10"
        }
      ]
    }, 
    "snippet": "Substitutions are language elements that are recognized only within replacement \npatterns. They use a regular expression pattern to define all or part of the text\u00a0...", 
    "htmlSnippet": "Substitutions are language elements that are recognized only within <b>replacement</b> <br>\npatterns. They use a <b>regular expression pattern</b> to define all or part of the text&nbsp;...", 
    "link": "https://msdn.microsoft.com/en-us/library/ewy2t5e0(v=vs.110).aspx", 
    "cacheId": "AZSy08S1_dQJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regex.Replace Method (String, String, String) (System.Text ...", 
    "displayLink": "msdn.microsoft.com", 
    "htmlTitle": "<b>Regex</b>.<b>Replace</b> Method (String, String, String) (System.Text <b>...</b>", 
    "formattedUrl": "https://msdn.microsoft.com/en-us/library/e7f5w83z(v=vs.110).aspx", 
    "htmlFormattedUrl": "https://msdn.microsoft.com/en-us/library/e7f5w83z(v=vs.110).aspx", 
    "pagemap": {
      "metatags": [
        {
          "search.mshattr.abstract": "In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.", 
          "search.container": "System.Text.RegularExpressions", 
          "search.mshattr.locale": "en-us", 
          "search.mscategory": "ms310241", 
          "search.mshattr.topictype": "kbSyntax", 
          "search.microsoft.help.tocparenttopicversion": "110", 
          "search.mshattr.apitype": "Managed", 
          "search.mshattr.progmodel": "managed", 
          "search.mshattr.apiname": "System.Text.RegularExpressions.Regex.Replace", 
          "search.mshattr.apilocation": "System.Text.RegularExpressions.dll", 
          "search.mshattr.codelang": "kbLangVB", 
          "search.language": "en-us", 
          "search.mshattr.devlang": "VB", 
          "search.mscategoryv": "ms310241MSDN10", 
          "search.dcsext.title": "Replace Method (String, String, String)", 
          "search.guid": "ff965182-3091-e9bc-da49-8fc2710c6083", 
          "search.dcsext.productfamily": "LIB_DG", 
          "search.mshkeyworda": "M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)", 
          "search.description": "In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.", 
          "search.mshattr.targetos": "Windows", 
          "search.dcsext.product": "NDP_CLR", 
          "search.mshattr.assetid": "M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)", 
          "search.file": "ff965182-3091-e9bc-da49-8fc2710c6083", 
          "search.mshattr.technology": "kbNetFramewk", 
          "search.microsoft.help.id": "M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)", 
          "search.microsoft.help.contenttype": "Reference", 
          "search.mshattr.assemblyversion": "4.0.10.0", 
          "search.mshattr.revisionnumber": "216", 
          "search.mshattr.docset": "XNA", 
          "search.mshattr.technologyvers": "netframework20"
        }
      ]
    }, 
    "snippet": "VB. Copy. public static string Replace( string input, string pattern, string \nreplacement ) ... The replacement string, \" \", replaces them with a single space \ncharacter. C#. VB ... string pattern = \"\\\\s+\"; string replacement = \" \"; string result = \nRegex.", 
    "htmlSnippet": "VB. Copy. public static string <b>Replace</b>( string input, string <b>pattern</b>, string <br>\n<b>replacement</b> ) ... The <b>replacement</b> string, &quot; &quot;, replaces them with a single space <br>\ncharacter. <b>C#</b>. VB ... string <b>pattern</b> = &quot;\\\\s+&quot;; string <b>replacement</b> = &quot; &quot;; string result = <br>\n<b>Regex</b>.", 
    "link": "https://msdn.microsoft.com/en-us/library/e7f5w83z(v=vs.110).aspx", 
    "cacheId": "PaZzx2a0ZKcJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "c# - Replace only some groups with Regex - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>c#</b> - <b>Replace</b> only some groups with <b>Regex</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/.../replace-only-some-groups-with-regex", 
    "htmlFormattedUrl": "stackoverflow.com/questions/.../<b>replace</b>-only-some-groups-with-<b>regex</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "A good idea could be to encapsulate everything inside groups, no matter if need to identify them or not. That way you can use them in your replacement string. For example: var pattern = @\"(-)(\\d+)(...", 
          "upvotecount": "88"
        }, 
        {
          "text": "You can do this using lookahead and lookbehind: var pattern = @\"(?<=-)\\d+(?=-)\"; var replaced = Regex.Replace(text, pattern, \"AA\");", 
          "upvotecount": "6"
        }, 
        {
          "text": "If you don't want to change your pattern you can use the Group Index and Length properties of a matched group. var text = \"example-123-example\"; var pattern = @\"-(\\d+)-\"; var regex = new RegEx(patt...", 
          "upvotecount": "6"
        }, 
        {
          "text": "I also had need for this and I created the following extension method for it: public static class RegexExtensions { public static string ReplaceGroup( this Regex regex, string input, string...", 
          "upvotecount": "2"
        }, 
        {
          "text": "Here is another nice clean option that does not require changing your pattern. var text = \"example-123-example\"; var pattern = @\"-(\\d+)-\"; var replaced = Regex.Replace(text, pattern, (_match)...", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "Let's suppose I have the following regex: -(\\d+)- and I want to replace, using C#, the Group 1 (\\d+) with AA, to obtain: -AA- Now I'm replacing it using: var text = \"example-123-example\"; var", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Replace only some groups with Regex", 
          "title": "Replace only some groups with Regex"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/6005609/replace-only-some-groups-with-regex", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/6005609/replace-only-some-groups-with-regex", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/6005609/replace-only-some-groups-with-regex", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "Let's suppose I have the following regex:  -(\\d+)-   and I want to replace, using C#, the Group 1 (\\d+) with AA, to obtain:  -AA-   Now I'm replacing it using:  var text = \"example-123-example\"; var", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/6005609/replace-only-some-groups-with-regex", 
          "twitter:card": "summary", 
          "twitter:title": "Replace only some groups with Regex", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "5", 
          "text": "Let's suppose I have the following regex: -(\\d+)- and I want to replace, using C#, the Group 1 (\\d+) with AA, to obtain: -AA- Now I'm replacing it using: var text = \"example-123-example\"; var...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Replace only some groups with Regex", 
          "upvotecount": "54"
        }
      ]
    }, 
    "snippet": "and I want to replace, using C#, the Group 1 (\\d+) with AA , to obtain: ... This \nworks only when your regex pattern matches the entire input string.", 
    "htmlSnippet": "and I want to <b>replace</b>, using <b>C#</b>, the Group 1 (\\d+) with AA , to obtain: ... This <br>\nworks only when your <b>regex pattern</b> matches the entire input string.", 
    "link": "http://stackoverflow.com/questions/6005609/replace-only-some-groups-with-regex", 
    "cacheId": "VlxpfqvvhNwJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Pattern (Java Platform SE 7 )", 
    "displayLink": "docs.oracle.com", 
    "htmlTitle": "<b>Pattern</b> (<b>Java</b> Platform SE 7 )", 
    "formattedUrl": "docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html", 
    "htmlFormattedUrl": "docs.oracle.com/<b>java</b>se/7/docs/api/<b>java</b>/util/<b>regex</b>/<b>Pattern</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "date": "2014-09-26"
        }
      ]
    }, 
    "snippet": "The resulting pattern can then be used to create a Matcher object that can match \n.... represent regular expressions to protect them from interpretation by the Java\u00a0...", 
    "htmlSnippet": "The resulting <b>pattern</b> can then be used to create a <b>Matcher</b> object that can <b>match</b> <br>\n.... represent <b>regular expressions</b> to protect them from interpretation by the <b>Java</b>&nbsp;...", 
    "link": "http://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html", 
    "cacheId": "HBYGYHu4TnMJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "8 Regular Expressions You Should Know - Tuts+ Code Tutorial", 
    "displayLink": "code.tutsplus.com", 
    "htmlTitle": "8 <b>Regular Expressions</b> You Should Know - Tuts+ Code <b>Tutorial</b>", 
    "formattedUrl": "code.tutsplus.com/tutorials/8-regular-expressions-you-should-know--net- 6149", 
    "htmlFormattedUrl": "code.tutsplus.com/<b>tutorials</b>/8-<b>regular-expressions</b>-you-should-know--net- 6149", 
    "pagemap": {
      "metatags": [
        {
          "og:url": "http://code.tutsplus.com/tutorials/8-regular-expressions-you-should-know--net-6149", 
          "og:site_name": "Code Tuts+", 
          "csrf-token": "lWNV2p9puTjF35+VYCvLLJJ9PAtiG7zOzjtgQWHVZIPkqdvEZb4oUj9UEdN277cY4pHlDl+WOWBPfPenTp3Zhw==", 
          "og:type": "article", 
          "og:description": "Regular expressions are a language of their own. When you learn a new programming language, they're this little sub-language that makes no sense at first glance. Many times you have to read another tutorial, article, or book just to understand the &quot;simple&quot; pattern described. Today, we'll review eight regular expressions that you should know for your next coding project. | Difficulty: Intermediate; Tags: Web Development, Regular Expressions", 
          "csrf-param": "authenticity_token", 
          "et.category": "Web Development", 
          "og:title": "8 Regular Expressions You Should Know - Tuts+ Code Tutorial", 
          "fb:app_id": "1494084460809023", 
          "og:image": "https://cdn.tutsplus.com/net/uploads/legacy/404_regularExpressions/images/200x200.jpg", 
          "viewport": "initial-scale=1"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "160", 
          "src": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcTiBe07v5Uou231vWj_tphu7UFYQbZFQvJ5jTGBc4XM-jpHu8-F-ASy3ScZ", 
          "height": "160"
        }
      ], 
      "cse_image": [
        {
          "src": "https://cdn.tutsplus.com/net/uploads/legacy/404_regularExpressions/images/200x200.jpg"
        }
      ]
    }, 
    "snippet": "Aug 10, 2009 ... Many times you have to read another tutorial, article, or book just to understand \nthe \"simple\" ... You will be using this regex if you ever have to work with \nmod_rewrite and pretty URL's. .... Build faster with pre-coded PHP scripts.", 
    "htmlSnippet": "Aug 10, 2009 <b>...</b> Many times you have to read another <b>tutorial</b>, article, or book just to understand <br>\nthe &quot;simple&quot; ... You will be using this <b>regex</b> if you ever have to work with <br>\nmod_rewrite and pretty <b>URL&#39;s</b>. .... Build faster with pre-coded <b>PHP</b> scripts.", 
    "link": "http://code.tutsplus.com/tutorials/8-regular-expressions-you-should-know--net-6149", 
    "cacheId": "O6FMcVCC_C4J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "In search of the perfect URL validation regex", 
    "displayLink": "mathiasbynens.be", 
    "htmlTitle": "In search of the perfect <b>URL</b> validation <b>regex</b>", 
    "formattedUrl": "https://mathiasbynens.be/demo/url-regex", 
    "htmlFormattedUrl": "https://mathiasbynens.be/demo/<b>url</b>-<b>regex</b>", 
    "snippet": "To clarify, I'm looking for a decent regular expression to validate URLs that were \nentered ... Assume that this regex will be used for a public URL shortener written \nin PHP, so URLs like ... https://www.example.com/foo/?bar=baz&inga=42&quux\u00a0...", 
    "htmlSnippet": "To clarify, I&#39;m looking for a decent <b>regular expression</b> to validate <b>URLs</b> that were <br>\nentered ... Assume that this <b>regex</b> will be used for a public <b>URL</b> shortener written <br>\nin <b>PHP</b>, so <b>URLs</b> like ... https://www.<b>example</b>.com/foo/?bar=baz&amp;inga=42&amp;quux&nbsp;...", 
    "link": "https://mathiasbynens.be/demo/url-regex", 
    "cacheId": "ve8UHGAJKMsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "regex - match url pattern in php using regular expression - Stack ...", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>regex</b> - match <b>url</b> pattern in <b>php</b> using <b>regular expression</b> - Stack <b>...</b>", 
    "formattedUrl": "stackoverflow.com/.../match-url-pattern-in-php-using-regular-expression", 
    "htmlFormattedUrl": "stackoverflow.com/.../match-<b>url</b>-pattern-in-<b>php</b>-using-<b>regular-expression</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "I'd use a different regex to be honest. Like this one that Gruber posted in 2009: \\b(([\\w-]+://?|www[.])[^\\s()<>]+(?:\\([\\w\\d]+\\)|([^[:punct:]\\s]|/))) or this updated version that Gruber posted...", 
          "upvotecount": "9"
        }, 
        {
          "text": "A complete working example using Nev Stokes given link: public function clickableUrls($html){ return $result = preg_replace( '%\\b(([\\w-]+://?|www[.])[^\\s()<>]+(?:\\([\\w\\d]+\\)|([^[:punct:]\\s]|/)))%s'...", 
          "upvotecount": "10"
        }, 
        {
          "text": "I looked around and didn't see any that were exactly what I needed. I found this one that was close, so i modified it as follows: ^((([hH][tT][tT][pP][sS]?)\\:\\/\\/)?([\\w\\\\-]+(\\[\\w\\.\\&%\\$\\-]+)*)?((([...", 
          "upvotecount": "2"
        }, 
        {
          "text": "I just checked this post (after 2 years) might be you got the answer but for those who are beginners, you can use regular expression to strip every type of URL or Query String (https|http|ftp)\\:\\/\\...", 
          "upvotecount": "1"
        }, 
        {
          "text": "If you want to make that one work you need to make the \"https?//\" part optional, since you seem to have a fairly good grasp of regexps I won't show you, an excerise for the reader :) But I...", 
          "upvotecount": "0"
        }, 
        {
          "text": "use this pattern . $regex = \"(https?\\:\\/\\/|ftp\\:\\/\\/|www\\.|[a-z0-9-]+)+([a-z0-9-]+)\\.+([a-z]{2,4})((\\/|\\.)+([a-z0-9-_.\\/]*)$|$)\"; hope that helpful .", 
          "upvotecount": "0"
        }, 
        {
          "text": "My two cents (five years later!): preg_match(\"/^((https|http|ftp)\\:\\/\\/)?([a-z0-9A-Z]+\\.[a-z0-9A-Z]+\\.[a-z0-9A-Z]+\\.[a-zA-Z]{2,4}|[a-z0-9A-Z]+\\.[a-z0-9A-Z]+\\.[a-zA-Z]{2,4}|[a-z0-9A-Z]+\\.[a-zA-Z]{2,...", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I want to match a url link in wall post and replace this link with anchor tag, for this I use the regular expression below. I would like the match 4 types of url: http://example.com", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "match url pattern in php using regular expression", 
          "title": "match url pattern in php using regular expression"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/3904482/match-url-pattern-in-php-using-regular-expression", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/3904482/match-url-pattern-in-php-using-regular-expression", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/3904482/match-url-pattern-in-php-using-regular-expression", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I want to match a url link in wall post and replace this link with anchor tag, for this I use the regular expression below.  I would like the match 4 types of url:   http://example.com", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/3904482/match-url-pattern-in-php-using-regular-expression", 
          "twitter:card": "summary", 
          "twitter:title": "match url pattern in php using regular expression", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "7", 
          "text": "I want to match a url link in wall post and replace this link with anchor tag, for this I use the regular expression below. I would like the match 4 types of url: http://example.com https://example...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "match url pattern in php using regular expression", 
          "upvotecount": "5"
        }
      ]
    }, 
    "snippet": "match url pattern in php using regular expression ... 4 types of url: http://example.\ncom; https://example.com; www.example.com; example.com.", 
    "htmlSnippet": "match <b>url</b> pattern in <b>php</b> using <b>regular expression</b> ... 4 types of <b>url</b>: http://<b>example</b>.<br>\ncom; https://<b>example</b>.com; www.<b>example</b>.com; <b>example</b>.com.", 
    "link": "http://stackoverflow.com/questions/3904482/match-url-pattern-in-php-using-regular-expression", 
    "cacheId": "Sf0Bzn1Nzn8J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Learning to Use Regular Expressions", 
    "displayLink": "gnosis.cx", 
    "htmlTitle": "Learning to Use <b>Regular Expressions</b>", 
    "formattedUrl": "gnosis.cx/publish/programming/regular_expressions.html", 
    "htmlFormattedUrl": "gnosis.cx/publish/programming/<b>regular_expressions</b>.html", 
    "pagemap": {
      "cse_thumbnail": [
        {
          "width": "255", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcT_ORccRCZSu1SIG9chHJ7R1pTrxjgGgNFY-V0ZesLRDMyHkU5sumWBne8", 
          "height": "198"
        }
      ], 
      "cse_image": [
        {
          "src": "http://gnosis.cx/publish/programming/regex_logo.png"
        }
      ]
    }, 
    "snippet": "Anyway, this tutorial was first published by IBM developerWorks. ... For purposes \nof presenting examples in this tutorial, regular expressions described will be ..... \nidentify URLs within a text file [^=\"] # do not match URLs in IMG tags like: # <img\u00a0...", 
    "htmlSnippet": "Anyway, this <b>tutorial</b> was first published by IBM developerWorks. ... For purposes <br>\nof presenting <b>examples</b> in this <b>tutorial</b>, <b>regular expressions</b> described will be ..... <br>\nidentify <b>URLs</b> within a text file [^=&quot;] # do not match <b>URLs</b> in IMG tags like: # &lt;img&nbsp;...", 
    "link": "http://gnosis.cx/publish/programming/regular_expressions.html", 
    "cacheId": "pq9dMuEBjGgJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions in C++ with Boost.Regex - O'Reilly Media", 
    "displayLink": "www.onlamp.com", 
    "htmlTitle": "<b>Regular Expressions</b> in <b>C++</b> with <b>Boost</b>.<b>Regex</b> - O&#39;Reilly Media", 
    "formattedUrl": "www.onlamp.com/pub/a/onlamp/2006/04/06/boostregex.html?...", 
    "htmlFormattedUrl": "www.onlamp.com/pub/a/onlamp/2006/04/06/<b>boostregex</b>.html?...", 
    "pagemap": {
      "metatags": [
        {
          "twitter:site": "@OReillyMedia", 
          "twitter:card": "summary", 
          "author": "Ryan Stephens", 
          "search_date": "2006-04-06", 
          "site": "O'Reilly Media Inc.", 
          "twitter:title": "Regular Expressions in C++ with Boost.Regex", 
          "pagename": "Regular Expressions in C++ with Boost.Regex", 
          "date": "Apr. 06, 2006", 
          "twitter:url": "http://www.onlamp.com/pub/a/onlamp/2006/04/06/boostregex.html"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "288", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcSCghfPZOP2_KOqleaEDueKrGBHmlEVNnCSSKMNdRJTVGiQTke1ctAIvfvW", 
          "height": "175"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.onlamp.com/onlamp/2006/04/06/graphics/figure1.gif"
        }
      ]
    }, 
    "snippet": "Apr 6, 2006 ... Regular Expressions in C++ with Boost.Regex Pages: 1, 2, 3, 4. Parsing. Not only \ndoes regex_match confirm or deny whether a string satisfies\u00a0...", 
    "htmlSnippet": "Apr 6, 2006 <b>...</b> <b>Regular Expressions</b> in <b>C++</b> with <b>Boost</b>.<b>Regex</b> Pages: 1, 2, 3, 4. Parsing. Not only <br>\ndoes <b>regex_match</b> confirm or deny whether a string satisfies&nbsp;...", 
    "link": "http://www.onlamp.com/pub/a/onlamp/2006/04/06/boostregex.html?page=3", 
    "cacheId": "7DBf0ufavUwJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Chapter 8. Boost.Regex", 
    "displayLink": "theboostcpplibraries.com", 
    "htmlTitle": "Chapter 8. <b>Boost</b>.<b>Regex</b>", 
    "formattedUrl": "theboostcpplibraries.com/boost.regex", 
    "htmlFormattedUrl": "the<b>boost</b>cpplibraries.com/<b>boost</b>.<b>regex</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ]
    }, 
    "snippet": "Boost.Regex allows you to use regular expressions in C++. As the library is part \nof the standard library since C++11, you don't depend on Boost.Regex if your\u00a0...", 
    "htmlSnippet": "<b>Boost</b>.<b>Regex</b> allows you to use <b>regular expressions</b> in <b>C++</b>. As the library is part <br>\nof the standard library since C++11, you don&#39;t depend on <b>Boost</b>.<b>Regex</b> if your&nbsp;...", 
    "link": "http://theboostcpplibraries.com/boost.regex", 
    "cacheId": "MVp3VsWjSLEJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Boost.Regex: Examples - 1.34.0", 
    "displayLink": "www.boost.org", 
    "htmlTitle": "<b>Boost</b>.<b>Regex</b>: <b>Examples</b> - 1.34.0", 
    "formattedUrl": "www.boost.org/doc/libs/1_34_0/libs/regex/doc/examples.html", 
    "htmlFormattedUrl": "www.<b>boost</b>.org/doc/libs/1_34_0/libs/<b>regex</b>/doc/<b>examples</b>.html", 
    "snippet": "...one of the most highly regarded and expertly designed C++ library projects in \nthe ... Verifies that \"bad\" regular expressions don't cause the matcher to go into\u00a0...", 
    "htmlSnippet": "...one of the most highly regarded and expertly designed <b>C++</b> library projects in <br>\nthe ... Verifies that &quot;bad&quot; <b>regular expressions</b> don&#39;t cause the matcher to go into&nbsp;...", 
    "link": "http://www.boost.org/doc/libs/1_34_0/libs/regex/doc/examples.html", 
    "cacheId": "6WU81N48FZoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "C++ Code Snippet - Using the Boost.Regex Library - panthema.net", 
    "displayLink": "panthema.net", 
    "htmlTitle": "<b>C++</b> Code Snippet - Using the <b>Boost</b>.<b>Regex</b> Library - panthema.net", 
    "formattedUrl": "https://panthema.net/2007/0314-BoostRegex.html", 
    "htmlFormattedUrl": "https://panthema.net/2007/0314-<b>BoostRegex</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "initial-scale=1"
        }
      ]
    }, 
    "snippet": "Mar 14, 2007 ... This code snippet shows by example how to use the Boost.Regex library. ... \nRegex it is easier and more elegant to use in C++ programs.", 
    "htmlSnippet": "Mar 14, 2007 <b>...</b> This code snippet shows by <b>example</b> how to use the <b>Boost</b>.<b>Regex</b> library. ... <br>\n<b>Regex</b> it is easier and more elegant to use in <b>C++</b> programs.", 
    "link": "https://panthema.net/2007/0314-BoostRegex.html", 
    "cacheId": "YmNKwWgQijYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "C++ Regular Expressions with Boost Regex - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>C++ Regular Expressions</b> with <b>Boost Regex</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/.../c-regular-expressions-with-boost-regex", 
    "htmlFormattedUrl": "stackoverflow.com/questions/.../c-<b>regular-expressions</b>-with-<b>boost</b>-<b>regex</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "Perhaps you're looking for something like this. It uses regex_iterator to get all matches of the current pattern. See reference. #include <boost/regex.hpp> #include <iostream> #include <string>...", 
          "upvotecount": "14"
        }, 
        {
          "text": "The offered solution is quite good, thanks for it. Though I found a slight mistake in the pattern itself. For example, something like 49.000.00.01 would be taken as a valid IPv4 address and...", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I am trying to take a string in C++ and find all IP addresses contained inside, and put them into a new vector string. I've read a lot of documentation on regex, but I just can't seem to understa...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "C++ Regular Expressions with Boost Regex", 
          "title": "C++ Regular Expressions with Boost Regex"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/5804453/c-regular-expressions-with-boost-regex", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/5804453/c-regular-expressions-with-boost-regex", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/5804453/c-regular-expressions-with-boost-regex", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I am trying to take a string in C++ and find all IP addresses contained inside, and put them into a new vector string.   I've read a lot of documentation on regex, but I just can't seem to understa...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/5804453/c-regular-expressions-with-boost-regex", 
          "twitter:card": "summary", 
          "twitter:title": "C++ Regular Expressions with Boost Regex", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "2", 
          "text": "I am trying to take a string in C++ and find all IP addresses contained inside, and put them into a new vector string. I've read a lot of documentation on regex, but I just can't seem to understand...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "C++ Regular Expressions with Boost Regex", 
          "upvotecount": "7"
        }
      ]
    }, 
    "snippet": "Perhaps you're looking for something like this. It uses regex_iterator to get all \nmatches of the current pattern. See reference. #include\u00a0...", 
    "htmlSnippet": "Perhaps you&#39;re looking for something like this. It uses <b>regex_iterator</b> to get all <br>\nmatches of the current <b>pattern</b>. See reference. #include&nbsp;...", 
    "link": "http://stackoverflow.com/questions/5804453/c-regular-expressions-with-boost-regex", 
    "cacheId": "Zc2XSbVYR20J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Boost.Regex: Introduction", 
    "displayLink": "cs.brown.edu", 
    "htmlTitle": "<b>Boost</b>.<b>Regex</b>: Introduction", 
    "formattedUrl": "cs.brown.edu/~jwicks/boost/libs/regex/doc/introduction.html", 
    "htmlFormattedUrl": "cs.brown.edu/~jwicks/<b>boost</b>/libs/<b>regex</b>/doc/introduction.html", 
    "pagemap": {
      "cse_thumbnail": [
        {
          "width": "221", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcTPJAei_pjc5yqkUhR6X7xww-WBrFngronwL_xVS-O6xMr1XvWBI2er_PA", 
          "height": "68"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cs.brown.edu/~jwicks/boost/boost.png"
        }
      ]
    }, 
    "snippet": "Traditionally C++ users have been limited to the POSIX C API's for manipulating \nregular expressions, and while regex++ does provide these API's, they do not\u00a0...", 
    "htmlSnippet": "Traditionally <b>C++</b> users have been limited to the POSIX C API&#39;s for manipulating <br>\n<b>regular expressions</b>, and while regex++ does provide these API&#39;s, they do not&nbsp;...", 
    "link": "http://cs.brown.edu/~jwicks/boost/libs/regex/doc/introduction.html", 
    "cacheId": "Bpibzwle_9IJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "c++ - Put first boost::regex match into a string - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>c++</b> - Put first <b>boost</b>::<b>regex</b> match into a string - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/.../put-first-boostregex-match-into-a-string", 
    "htmlFormattedUrl": "stackoverflow.com/.../put-first-<b>boostregex</b>-match-into-a-string", 
    "pagemap": {
      "answer": [
        {
          "text": "I think what you're missing is that boost::regex is the regular expression, but it doesn't do the parsing against a given input. You need to actually use it as a parameter to boost::regex_search...", 
          "upvotecount": "1"
        }, 
        {
          "text": "You can do something like this: static const regex e(\"<(From )?([A-Za-z0-9_]+)>(.*?)\"); string chat_input(\"<Darker> Hello\"); smatch mr; if (regex_search(begin(chat_input), end(chat_input),...", 
          "upvotecount": "3"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "Somehow, I've failed to find out, how to put only the first occurrence or regular expression to string. I can create a regex object: static const boost::regex e(\"<(From", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Put first boost::regex match into a string", 
          "title": "Put first boost::regex match into a string"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/15557981/put-first-boostregex-match-into-a-string", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/15557981/put-first-boostregex-match-into-a-string", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/15557981/put-first-boostregex-match-into-a-string", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "Somehow, I've failed to find out, how to put only the first occurrence or regular expression to string. I can create a regex object:    static const boost::regex e(\"&lt;(From", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/15557981/put-first-boostregex-match-into-a-string", 
          "twitter:card": "summary", 
          "twitter:title": "Put first boost::regex match into a string", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "2", 
          "text": "This question already has an answer here: Get last match with Boost::Regex 1 answer Somehow, I've failed to find out, how to put only the first occurrence or regular expression to string. I...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Put first boost::regex match into a string [duplicate]", 
          "upvotecount": "1"
        }
      ]
    }, 
    "snippet": "Get last match with Boost::Regex 1 answer. Somehow, I've failed ... Can you \ninclude an example string? .... C++ concatenate string and int \u00b7 356.", 
    "htmlSnippet": "Get last match with <b>Boost</b>::<b>Regex</b> 1 answer. Somehow, I&#39;ve failed ... Can you <br>\ninclude an <b>example</b> string? .... <b>C++</b> concatenate string and int &middot; 356.", 
    "link": "http://stackoverflow.com/questions/15557981/put-first-boostregex-match-into-a-string", 
    "cacheId": "sJPmGDqE1wMJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Programming Regular Expressions in C++ | Searching and ...", 
    "displayLink": "www.informit.com", 
    "htmlTitle": "Programming <b>Regular Expressions</b> in <b>C++</b> | Searching and <b>...</b>", 
    "formattedUrl": "www.informit.com/articles/article.aspx?p=517609&seqNum=3", 
    "htmlFormattedUrl": "www.informit.com/articles/article.aspx?p=517609&amp;seqNum=3", 
    "pagemap": {
      "metatags": [
        {
          "wt.ad": "Home > Articles > Programming > C/C++", 
          "dcsext.w_ptgarctlpg": "3_Programming Regular Expressions in C++", 
          "wt.si_p": "Article", 
          "publisheddate": "Jul 28, 2006", 
          "dcsext.w_ptgarctlnm": "Searching and Matching with Regular Expressions in C++", 
          "pagetype": "Articles and Sample Chapters", 
          "wt.si_n": "Site_Funnel", 
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ], 
      "corporation": [
        {
          "name": "Informit"
        }
      ], 
      "postaladdress": [
        {
          "addresslocality": "Indianapolis", 
          "addressregion": "Indiana", 
          "streetaddress": "800 East 96th Street", 
          "postalcode": "46240"
        }
      ]
    }, 
    "snippet": "Jul 28, 2006 ... With a bit of regular expression knowledge, we can write some code to try out \nsome of these examples. The library I use here is the Boost\u00a0...", 
    "htmlSnippet": "Jul 28, 2006 <b>...</b> With a bit of <b>regular expression</b> knowledge, we can write some code to try out <br>\nsome of these <b>examples</b>. The library I use here is the <b>Boost</b>&nbsp;...", 
    "link": "http://www.informit.com/articles/article.aspx?p=517609&seqNum=3", 
    "cacheId": "CCmpqBzje-IJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "c++ - compiling simple code with boost::regex - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>c++</b> - compiling simple code with <b>boost</b>::<b>regex</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/.../compiling-simple-code-with-boostregex", 
    "htmlFormattedUrl": "stackoverflow.com/.../compiling-simple-code-with-<b>boostregex</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "Perhaps you don't have the boost binaries, the code compiles here with -lboost_regex. Also, curly brackets are for repeating patterns. For example \\d{3} means three digits so you may need to...", 
          "upvotecount": "2"
        }, 
        {
          "text": "Download the boost libraries then only -lboost_regex will work if you are using ubuntu then type this in terminal it will install all the boost libraries. 'sudo apt-get install libboost-all-dev'...", 
          "upvotecount": "2"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I'm having trouble compiling the following code: #include <iostream> #include <string> #include <boost/regex.hpp> using namespace std; int main() { string s; boost::regex", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "compiling simple code with boost::regex", 
          "title": "compiling simple code with boost::regex"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/11489849/compiling-simple-code-with-boostregex", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/11489849/compiling-simple-code-with-boostregex", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/11489849/compiling-simple-code-with-boostregex", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I'm having trouble compiling the following code:  #include &lt;iostream&gt; #include &lt;string&gt; #include &lt;boost/regex.hpp&gt;  using namespace std;  int main() {   string s;   boost::regex", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/11489849/compiling-simple-code-with-boostregex", 
          "twitter:card": "summary", 
          "twitter:title": "compiling simple code with boost::regex", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "2", 
          "text": "I'm having trouble compiling the following code: #include <iostream> #include <string> #include <boost/regex.hpp> using namespace std; int main() { string s; boost::regex re(\"^{(APPLE|ORANGE),(\\\\d*...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "compiling simple code with boost::regex", 
          "upvotecount": "1"
        }
      ]
    }, 
    "snippet": "#include <iostream> #include <string> #include <boost/regex.hpp> using .... For \nexample \\d{3} means three digits so you may need to change\u00a0...", 
    "htmlSnippet": "#include &lt;iostream&gt; #include &lt;string&gt; #include &lt;<b>boost</b>/<b>regex</b>.hpp&gt; using .... For <br>\n<b>example</b> \\d{3} means three digits so you may need to change&nbsp;...", 
    "link": "http://stackoverflow.com/questions/11489849/compiling-simple-code-with-boostregex", 
    "cacheId": "8fJUqZQUMYIJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "std::regex C++11 Standard Library Regular Expressions", 
    "displayLink": "www.regular-expressions.info", 
    "htmlTitle": "std::<b>regex</b> C++11 Standard Library <b>Regular Expressions</b>", 
    "formattedUrl": "www.regular-expressions.info/stdregex.html", 
    "htmlFormattedUrl": "www.<b>regular-expressions</b>.info/std<b>regex</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width", 
          "author": "Jan Goyvaerts"
        }
      ]
    }, 
    "snippet": "Easily use the power of regular expressions in your C++ applications with ... and \nC++11 defines pretty much the same operations and classes as boost::regex,\u00a0...", 
    "htmlSnippet": "Easily use the power of <b>regular expressions</b> in your <b>C++</b> applications with ... and <br>\nC++11 defines pretty much the same operations and classes as <b>boost</b>::<b>regex</b>,&nbsp;...", 
    "link": "http://www.regular-expressions.info/stdregex.html", 
    "cacheId": "pqVZxMd_INQJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "URL dispatcher | Django documentation | Django", 
    "displayLink": "docs.djangoproject.com", 
    "htmlTitle": "URL dispatcher | <b>Django</b> documentation | <b>Django</b>", 
    "formattedUrl": "https://docs.djangoproject.com/en/stable/topics/http/urls/", 
    "htmlFormattedUrl": "https://docs.<b>django</b>project.com/en/stable/topics/http/urls/", 
    "pagemap": {
      "metatags": [
        {
          "msapplication-tilecolor": "#113228", 
          "copyright": "Django Software Foundation", 
          "viewport": "width=device-width, initial-scale=1", 
          "msapplication-tileimage": "/s/img/icon-tile.b01ac0ef9f67.png"
        }
      ]
    }, 
    "snippet": "from django.conf.urls import url from . import views urlpatterns ... The 'r' in front of \neach regular expression string is optional but recommended. It tells Python that a \nstring is \u201craw\u201d \u2013 that nothing in the string should be\u00a0...", 
    "htmlSnippet": "from <b>django</b>.conf.urls import url from . import views urlpatterns ... The &#39;r&#39; in front of <br>\neach <b>regular expression</b> string is optional but recommended. It tells <b>Python</b> that a <br>\nstring is \u201craw\u201d \u2013 that nothing in the string should be&nbsp;...", 
    "link": "https://docs.djangoproject.com/en/stable/topics/http/urls/", 
    "cacheId": "tRauQexmywEJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "regex - Using Python Regular Expression in Django - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>regex</b> - Using <b>Python Regular Expression</b> in <b>Django</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/.../using-python-regular-expression-in-django", 
    "htmlFormattedUrl": "stackoverflow.com/.../using-<b>python</b>-<b>regular-expression</b>-in-<b>django</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "You need to wrap the group name in parentheses. The syntax for named groups is (?P<name>regex), not ?P<name>regex. Also, if you don't want to require a trailing slash, you should make it optional....", 
          "upvotecount": "16"
        }, 
        {
          "text": "It should look more like r'^org/(?P<company_name>\\w+)' >>> r = re.compile(r'^org/(?P<company_name>\\w+)') >>> r.match('org/companyA').groups() ('companyA',)", 
          "upvotecount": "1"
        }, 
        {
          "text": "Your regex isn't valid. It should probably look like r'^org/(?P<company_name>\\w+)/$'", 
          "upvotecount": "1"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I have an web address: http://www.example.com/org/companyA I want to be able to pass CompanyA to a view using regular expressions. This is what I have:", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Using Python Regular Expression in Django", 
          "title": "Using Python Regular Expression in Django"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/1619554/using-python-regular-expression-in-django", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/1619554/using-python-regular-expression-in-django", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/1619554/using-python-regular-expression-in-django", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I have an web address:  http://www.example.com/org/companyA  I want to be able to pass CompanyA to a view using regular expressions.    This is what I have:", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/1619554/using-python-regular-expression-in-django", 
          "twitter:card": "summary", 
          "twitter:title": "Using Python Regular Expression in Django", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "3", 
          "text": "I have an web address: http://www.example.com/org/companyA I want to be able to pass CompanyA to a view using regular expressions. This is what I have: (r'^org/?P<company_name>\\w+/$',\"orgman.views....", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Using Python Regular Expression in Django", 
          "upvotecount": "6"
        }
      ]
    }, 
    "snippet": "I have an web address: http://www.example.com/org/companyA. I want to be able \nto pass CompanyA to a view using regular expressions.", 
    "htmlSnippet": "I have an web address: http://www.<b>example</b>.com/org/companyA. I want to be able <br>\nto pass CompanyA to a view using <b>regular expressions</b>.", 
    "link": "http://stackoverflow.com/questions/1619554/using-python-regular-expression-in-django", 
    "cacheId": "5OmkFhdgJtMJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Chapter 3: Views and URLconfs", 
    "displayLink": "www.djangobook.com", 
    "htmlTitle": "Chapter 3: Views and URLconfs", 
    "formattedUrl": "www.djangobook.com/en/2.0/chapter03.html", 
    "htmlFormattedUrl": "www.<b>django</b>book.com/en/2.0/chapter03.html", 
    "pagemap": {
      "cse_thumbnail": [
        {
          "width": "266", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcR48_Od7QedolaYv82S_2gjpH-Ewyu1fRwxQChUQhRMkUrh_sm-_dUUpLY", 
          "height": "189"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.djangobook.com/en/2.0/_images/404.png"
        }
      ]
    }, 
    "snippet": "Dec 13, 2008 ... In order for a Python function to be a Django view, it must do these two .... The \nfirst argument is a pattern-matching string (a regular expression;\u00a0...", 
    "htmlSnippet": "Dec 13, 2008 <b>...</b> In order for a <b>Python</b> function to be a <b>Django</b> view, it must do these two .... The <br>\nfirst argument is a <b>pattern</b>-matching string (a <b>regular expression</b>;&nbsp;...", 
    "link": "http://www.djangobook.com/en/2.0/chapter03.html", 
    "cacheId": "eb1TTTUjU0YJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "python - what does this django regex mean? `?P` - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>python</b> - what does this <b>django regex</b> mean? `?P` - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/.../what-does-this-django-regex-mean-p", 
    "htmlFormattedUrl": "stackoverflow.com/questions/.../what-does-this-<b>django</b>-<b>regex</b>-mean-p", 
    "pagemap": {
      "answer": [
        {
          "text": "(?P<name>regex) - Round brackets group the regex between them. They capture the text matched by the regex inside them that can be referenced by the name between the sharp brackets. The name...", 
          "upvotecount": "8"
        }, 
        {
          "text": "In django, named capturing groups are passed to your view as keyword arguments. Unnamed capturing groups (just a parenthesis) are passed to your view as arguments. The ?P is a named capturing...", 
          "upvotecount": "18"
        }, 
        {
          "text": "(?P<category_slug>) creates a match group named category_slug. The regex itself matches a string starting with category/ and then a mix of alphanumeric characters, the dash - and the underscore...", 
          "upvotecount": "6"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I have the following regex in my urls.py and I'd like to know what it means. Specifically the (?P<category_slug> portion of the regex. r'^category/(?P<category_slug>[-\\w]+)/$", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "what does this django regex mean? `?P`", 
          "title": "what does this django regex mean? `?P`"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/7988942/what-does-this-django-regex-mean-p", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/7988942/what-does-this-django-regex-mean-p", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/7988942/what-does-this-django-regex-mean-p", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I have the following regex in my urls.py and I'd like  to know what it means. Specifically the (?P&lt;category_slug&gt; portion of the regex.  r'^category/(?P&lt;category_slug&gt;[-\\w]+)/$", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/7988942/what-does-this-django-regex-mean-p", 
          "twitter:card": "summary", 
          "twitter:title": "what does this django regex mean? `?P`", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "3", 
          "text": "I have the following regex in my urls.py and I'd like to know what it means. Specifically the (?P<category_slug> portion of the regex. r'^category/(?P<category_slug>[-\\w]+)/$", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "what does this django regex mean? `?P`", 
          "upvotecount": "13"
        }
      ]
    }, 
    "snippet": "P<category_slug>) creates a match group named category_slug . The regex itself \nmatches a string starting with category/ and then a mix of\u00a0...", 
    "htmlSnippet": "P&lt;category_slug&gt;) creates a <b>match</b> group named category_slug . The <b>regex</b> itself <br>\nmatches a string starting with category/ and then a mix of&nbsp;...", 
    "link": "http://stackoverflow.com/questions/7988942/what-does-this-django-regex-mean-p", 
    "cacheId": "meKRTXrM5OsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Introduction to Python Regular Expressions | Python Central", 
    "displayLink": "www.pythoncentral.io", 
    "htmlTitle": "Introduction to <b>Python Regular Expressions</b> | <b>Python</b> Central", 
    "formattedUrl": "www.pythoncentral.io/introduction-to-python-regular-expressions/", 
    "htmlFormattedUrl": "www.<b>python</b>central.io/introduction-to-<b>python</b>-<b>regular-expressions</b>/", 
    "pagemap": {
      "metatags": [
        {
          "og:updated_time": "2013-12-12T01:16:26+00:00", 
          "og:url": "http://www.pythoncentral.io/introduction-to-python-regular-expressions/", 
          "article:section": "Uncategorized", 
          "og:type": "article", 
          "twitter:domain": "Python Central", 
          "og:site_name": "Python Central", 
          "twitter:image:src": "http://www.pythoncentral.io/wp-content/themes/pythoncentral/assets/images/python-central.gif", 
          "twitter:card": "summary", 
          "twitter:description": "An introduction to Python regular expressions. What they are, and how the re module and regular expressions can save you time while developing in Python.", 
          "og:locale": "en_US", 
          "og:description": "An introduction to Python regular expressions. What they are, and how the re module and regular expressions can save you time while developing in Python.", 
          "og:image": "http://www.pythoncentral.io/wp-content/themes/pythoncentral/assets/images/python-central.gif", 
          "twitter:creator": "@PythonCentral", 
          "og:title": "Introduction to Python Regular Expressions | Python Central", 
          "twitter:title": "Introduction to Python Regular Expressions | Python Central", 
          "article:publisher": "https://www.facebook.com/PythonCentral", 
          "article:modified_time": "2013-12-12T01:16:26+00:00", 
          "article:published_time": "2012-06-05T00:03:16+00:00", 
          "twitter:site": "@PythonCentral", 
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ], 
      "article": [
        {
          "articlebody": "Searching within a string for another string is pretty easy in Python: 123 >>> str = 'Hello, world'>>> print(str.find('wor'))7 This is fine if we know exactly what we're looking for, but what...", 
          "name": "Introduction to Python Regular Expressions", 
          "datemodified": "Last Updated:", 
          "datepublished": "Published: Tuesday 5th June 2012"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.pythoncentral.io/wp-content/themes/pythoncentral/assets/images/python-central.gif"
        }
      ]
    }, 
    "snippet": "Jun 5, 2012 ... An introduction to Python regular expressions. What they are, and how the re \nmodule and regular expressions can save you time while\u00a0...", 
    "htmlSnippet": "Jun 5, 2012 <b>...</b> An introduction to <b>Python regular expressions</b>. What they are, and how the re <br>\nmodule and <b>regular expressions</b> can save you time while&nbsp;...", 
    "link": "http://www.pythoncentral.io/introduction-to-python-regular-expressions/", 
    "cacheId": "vEhZdKgIG5kJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Use URL Patterns and Views in Django - Webmonkey", 
    "displayLink": "www.webmonkey.com", 
    "htmlTitle": "Use URL Patterns and Views in <b>Django</b> - Webmonkey", 
    "formattedUrl": "www.webmonkey.com/.../use_url_patterns_and_views_in_django/", 
    "htmlFormattedUrl": "www.webmonkey.com/.../use_url_<b>pattern</b>s_and_views_in_<b>django</b>/", 
    "pagemap": {
      "metatags": [
        {
          "msapplication-tilecolor": "#cb0004", 
          "application-name": "WIRED: Webmonkey", 
          "fb:admins": "648235154,789168297,688620285,650984415", 
          "og:locale": "en_US", 
          "og:url": "http://www.webmonkey.com/2010/02/use_url_patterns_and_views_in_django/", 
          "og:image": "http://www.webmonkey.com/mediawiki/images/Django_flowchart.png", 
          "author": "Webmonkey Staff", 
          "section": "Blog", 
          "og:type": "article", 
          "apple-itunes-app": "app-id=373903654", 
          "subsection": "Webmonkey", 
          "og:title": "Use URL Patterns and Views in Django - Webmonkey", 
          "article:tag": "django", 
          "article:section": "Frameworks", 
          "article:modified_time": "2010-03-05T13:04:18+00:00", 
          "msapplication-tooltip": "Read in-depth coverage of current and future trends in technology, and how they are shaping business, entertainment, communications, science, politics, and culture at Wired.com.", 
          "expirydate": "2060-12-31", 
          "msapplication-tileimage": "http://www.wired.com/images/home/wired-ie-favicon.png", 
          "fb:page_id": "19440638720", 
          "article:published_time": "2010-02-15T20:45:47+00:00", 
          "viewport": "width=device-width", 
          "og:updated_time": "2010-03-05T13:04:18+00:00", 
          "og:site_name": "Webmonkey", 
          "parsely-page": "{\"title\": \"Use URL Patterns and Views in Django\",                         \"link\": \"http://www.webmonkey.com/2010/02/use_url_patterns_and_views_in_django/\",                         \"image_url\": \"\",                         \"type\": \"post\",                         \"post_id\": \"Webmonkey-925\",                         \"pub_date\": \"2010-02-16 01:45:47\",                         \"section\": \"Webmonkey\",                         \"author\": \"Webmonkey Staff\",                         \"tags\": [\"django\",\"python\",\"tutorial\",\"wiki\"]                        }", 
          "title": "Use URL Patterns and Views in Django", 
          "og:description": "Last time around, we installed Django and started building a blog application. We got Django\u2019s built-in admin system up and running and explored some third-party libraries like the django-tagging project. So far we have some cool administrative tools, but no website for the rest of the world to see. This time around, we\u2019ll work on \u2026", 
          "displaydate": "2010-02-15"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.webmonkey.com/mediawiki/images/Django_flowchart.png"
        }
      ]
    }, 
    "snippet": "Feb 15, 2010 ... 3) If a match is found, Django moves on to the view that's associated with the \nURL. .... In that scheme, we would write our regular expressions and then ... Let's \nstart with info_dict , which is just a Python dictionary that holds two\u00a0...", 
    "htmlSnippet": "Feb 15, 2010 <b>...</b> 3) If a <b>match</b> is found, <b>Django</b> moves on to the view that&#39;s associated with the <br>\nURL. .... In that scheme, we would write our <b>regular expressions</b> and then ... Let&#39;s <br>\nstart with info_dict , which is just a <b>Python</b> dictionary that holds two&nbsp;...", 
    "link": "http://www.webmonkey.com/2010/02/use_url_patterns_and_views_in_django/", 
    "cacheId": "iruXBFDHQ-IJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Python Regular Expression Testing Tool :: DjangoSites.org ...", 
    "displayLink": "www.djangosites.org", 
    "htmlTitle": "<b>Python Regular Expression</b> Testing Tool :: <b>DjangoSites</b>.org <b>...</b>", 
    "formattedUrl": "https://www.djangosites.org/s/www-pythonregex-com/", 
    "htmlFormattedUrl": "https://www.<b>djangos</b>ites.org/s/www-<b>pythonregex</b>-com/", 
    "pagemap": {
      "metatags": [
        {
          "server": "do"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "259", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQgpt0UBxdX4DoHVlPj--vHrVvaWDgrUrhnnT9ZdLIvNWzeI48z6zF7QCtK", 
          "height": "194"
        }
      ], 
      "cse_image": [
        {
          "src": "https://www.djangosites.org/media/screenshots-large/1568.jpg"
        }
      ]
    }, 
    "snippet": "May 29, 2008 ... Python Regular Expression Testing Tool. Does what it says - an easy to use tool \nto test Python regular expressions. Built using Django running\u00a0...", 
    "htmlSnippet": "May 29, 2008 <b>...</b> <b>Python Regular Expression</b> Testing Tool. Does what it says - an easy to use tool <br>\nto test <b>Python regular expressions</b>. Built using <b>Django</b> running&nbsp;...", 
    "link": "https://www.djangosites.org/s/www-pythonregex-com/", 
    "cacheId": "42bqPwURW2oJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular expressions for Django Urls", 
    "displayLink": "www.webforefront.com", 
    "htmlTitle": "<b>Regular expressions</b> for <b>Django</b> Urls", 
    "formattedUrl": "www.webforefront.com/django/regexpdjangourls.html", 
    "htmlFormattedUrl": "www.webforefront.com/<b>django</b>/<b>regexpdjango</b>urls.html", 
    "snippet": "Django urls need to follow a certain order to work correctly. Broad url match \nregular expressions need to be declared before specific regular expressions,\u00a0...", 
    "htmlSnippet": "<b>Django</b> urls need to follow a certain order to work correctly. Broad url <b>match</b> <br>\n<b>regular expressions</b> need to be declared before specific <b>regular expressions</b>,&nbsp;...", 
    "link": "http://www.webforefront.com/django/regexpdjangourls.html", 
    "cacheId": "do6OTN--SZoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Python 3 Programming Tutorial - Regular Expressions / Regex with re", 
    "displayLink": "www.youtube.com", 
    "htmlTitle": "<b>Python</b> 3 Programming <b>Tutorial</b> - <b>Regular Expressions</b> / <b>Regex</b> with re", 
    "formattedUrl": "www.youtube.com/watch?v=sZyAn2TW7GY", 
    "htmlFormattedUrl": "www.youtube.com/watch?v=sZyAn2TW7GY", 
    "pagemap": {
      "videoobject": [
        {
          "isfamilyfriendly": "True", 
          "name": "Python 3 Programming Tutorial - Regular Expressions / Regex with re", 
          "unlisted": "False", 
          "url": "http://www.youtube.com/watch?v=sZyAn2TW7GY", 
          "datepublished": "2014-07-20", 
          "regionsallowed": "AD,AE,AF,AG,AI,AL,AM,AO,AQ,AR,AS,AT,AU,AW,AX,AZ,BA,BB,BD,BE,BF,BG,BH,BI,BJ,BL,BM,BN,BO,BQ,BR,BS,BT,BV,BW,BY,BZ,CA,CC,CD,CF,CG,CH,CI,CK,CL,CM,CN,CO,CR,CU,CV,CW,CX,CY,CZ,DE,DJ,DK,DM,DO,DZ,EC,EE,EG,EH...", 
          "channelid": "UCfzlCWGWYyIQ0aLC5w48gBQ", 
          "videoid": "sZyAn2TW7GY", 
          "paid": "False", 
          "height": "720", 
          "playertype": "HTML5 Flash", 
          "width": "1280", 
          "interactioncount": "11143", 
          "duration": "PT20M4S", 
          "embedurl": "https://www.youtube.com/embed/sZyAn2TW7GY", 
          "thumbnailurl": "http://i.ytimg.com/vi/sZyAn2TW7GY/maxresdefault.jpg", 
          "genre": "Howto & Style", 
          "description": "Regular expressions are used to sift through text-based data to find things. Regular expressions express a pattern of data that is to be located. Regex is it..."
        }
      ], 
      "metatags": [
        {
          "al:web:url": "http://www.youtube.com/watch?v=sZyAn2TW7GY&feature=applinks", 
          "twitter:site": "@youtube", 
          "fb:app_id": "87741124305", 
          "og:video:url": "https://www.youtube.com/embed/sZyAn2TW7GY", 
          "og:url": "http://www.youtube.com/watch?v=sZyAn2TW7GY", 
          "twitter:url": "http://www.youtube.com/watch?v=sZyAn2TW7GY", 
          "al:ios:app_store_id": "544007664", 
          "title": "Python 3 Programming Tutorial - Regular Expressions / Regex with re", 
          "og:video:type": "text/html", 
          "og:type": "video", 
          "al:android:package": "com.google.android.youtube", 
          "og:title": "Python 3 Programming Tutorial - Regular Expressions / Regex with re", 
          "twitter:title": "Python 3 Programming Tutorial - Regular Expressions / Regex with re", 
          "al:ios:url": "vnd.youtube://www.youtube.com/watch?v=sZyAn2TW7GY&feature=applinks", 
          "og:video:secure_url": "https://www.youtube.com/embed/sZyAn2TW7GY", 
          "al:ios:app_name": "YouTube", 
          "og:video:height": "720", 
          "al:android:app_name": "YouTube", 
          "og:image": "http://i.ytimg.com/vi/sZyAn2TW7GY/maxresdefault.jpg", 
          "og:site_name": "YouTube", 
          "twitter:card": "player", 
          "og:description": "Regular expressions are used to sift through text-based data to find things. Regular expressions express a pattern of data that is to be located. Regex is it...", 
          "og:video:tag": "Python (Programming Language)", 
          "al:android:url": "vnd.youtube://www.youtube.com/watch?v=sZyAn2TW7GY&feature=applinks", 
          "og:video:width": "1280"
        }
      ], 
      "imageobject": [
        {
          "url": "http://i.ytimg.com/vi/sZyAn2TW7GY/maxresdefault.jpg", 
          "width": "1280", 
          "height": "720"
        }
      ], 
      "person": [
        {
          "url": "http://www.youtube.com/user/sentdex"
        }, 
        {
          "url": "https://plus.google.com/100203003539995118690"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "286", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRbo9ELmRDaTnvwae317dHBrOfBR2xmLsvrIZBbmzokf2XBoGxs0faf1i4", 
          "height": "176"
        }
      ], 
      "cse_image": [
        {
          "src": "http://i.ytimg.com/vi/sZyAn2TW7GY/maxresdefault.jpg"
        }
      ]
    }, 
    "snippet": "Jul 20, 2014 ... In Python 3, the module to use regular expressions is re, and it must be .... it \nbetter for future projects, understand more about regex and Django,\u00a0...", 
    "htmlSnippet": "Jul 20, 2014 <b>...</b> In <b>Python</b> 3, the module to use <b>regular expressions</b> is re, and it must be .... it <br>\nbetter for future projects, understand more about <b>regex</b> and <b>Django</b>,&nbsp;...", 
    "link": "http://www.youtube.com/watch?v=sZyAn2TW7GY", 
    "cacheId": "dBXsk16TYRQJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Using C# regular expressions to remove HTML tags - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "Using <b>C# regular expressions</b> to remove <b>HTML</b> tags - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/.../using-c-sharp-regular-expressions-to-remove-html-tags", 
    "htmlFormattedUrl": "stackoverflow.com/.../using-c-sharp-<b>regular-expressions</b>-to-remove-<b>html</b>-tags", 
    "pagemap": {
      "answer": [
        {
          "text": "As often stated before, you should not use regular expressions to process XML or HTML documents. They do not perform very well with HTML and XML documents, because there is no way to express...", 
          "upvotecount": "111"
        }, 
        {
          "text": "The correct answer is don't do that, use the HTML Agility Pack. Edited to add: To shamelessly steal from the comment below by jesse, and to avoid being accused of inadequately answering the...", 
          "upvotecount": "70"
        }, 
        {
          "text": "The question is too broad to be answered definitively. Are you talking about removing all tags from a real-world HTML document, like a web page? If so, you would have to: remove the <!DOCTYPE...", 
          "upvotecount": "32"
        }, 
        {
          "text": "Regex regex = new Regex(@\"</?\\w+((\\s+\\w+(\\s*=\\s*(?:\"\".*?\"\"|'.*?'|[^'\"\">\\s]+))?)+\\s*|\\s*)/?>\", RegexOptions.Singleline); Source", 
          "upvotecount": "22"
        }, 
        {
          "text": "@JasonTrue is correct, that stripping HTML tags should not be done via regular expressions. It's quite simple to strip HTML tags using HtmlAgilityPack: public string StripTags(string input)...", 
          "upvotecount": "11"
        }, 
        {
          "text": "I would like to echo Jason's response though sometimes you need to naively parse some Html and pull out the text content. I needed to do this with some Html which had been created by a rich...", 
          "upvotecount": "8"
        }, 
        {
          "text": "use this.. @\"(?></?\\w+)(?>(?:[^>'\"\"]+|'[^']*'|\"\"[^\"\"]*\"\")*)>\"", 
          "upvotecount": "2"
        }, 
        {
          "text": "try regular expression method at this URL: http://www.dotnetperls.com/remove-html-tags /// <summary> /// Remove HTML from string with Regex. /// </summary> public static string StripTagsRegex(strin...", 
          "upvotecount": "2"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "How do I use C# regular expression to replace/remove all HTML tags, including the angle brackets? Can someone please help me with the code?", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Using C# regular expressions to remove HTML tags", 
          "title": "Using C# regular expressions to remove HTML tags"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/787932/using-c-sharp-regular-expressions-to-remove-html-tags", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/787932/using-c-sharp-regular-expressions-to-remove-html-tags", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/787932/using-c-sharp-regular-expressions-to-remove-html-tags", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "How do I use C# regular expression to replace/remove all HTML tags, including the angle brackets? Can someone please help me with the code?", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/787932/using-c-sharp-regular-expressions-to-remove-html-tags", 
          "twitter:card": "summary", 
          "twitter:title": "Using C# regular expressions to remove HTML tags", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "8", 
          "text": "This question already has an answer here: RegEx match open tags except XHTML self-contained tags 36 answers How do I use C# regular expression to replace/remove all HTML tags, including the...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Using C# regular expressions to remove HTML tags [duplicate]", 
          "upvotecount": "114"
        }
      ]
    }, 
    "snippet": "This question already has an answer here: RegEx match open tags ... As often \nstated before, you should not use regular expressions to process\u00a0...", 
    "htmlSnippet": "This question already has an answer here: <b>RegEx match</b> open tags ... As often <br>\nstated before, you should not use <b>regular expressions</b> to process&nbsp;...", 
    "link": "http://stackoverflow.com/questions/787932/using-c-sharp-regular-expressions-to-remove-html-tags", 
    "cacheId": "2zbzmQI92fsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regex HTML Extraction C# - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>Regex HTML</b> Extraction <b>C#</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/.../regex-html-extraction-c-sharp", 
    "htmlFormattedUrl": "stackoverflow.com/questions/.../<b>regex</b>-<b>html</b>-extraction-c-sharp", 
    "pagemap": {
      "answer": [
        {
          "text": "You should not use regexp to parse HTML. See this post on howto parse html http://stackoverflow.com/questions/56107/what-is-the-best-way-to-parse-html-in-c or you could use HtmlAgilityPack...", 
          "upvotecount": "4"
        }, 
        {
          "text": "\"value\">(.*?)<\\/td> should do it for you. The value you require would be held in the capturing group denoted by the parentheses", 
          "upvotecount": "1"
        }, 
        {
          "text": "Something like this should work: /<td[.]*?>(.+)<\\/td>/ Regarding your code sample, this would probably be more maintainable: MatchCollection valueCollection = Regex.Matches(html, @\"<td[^>]*?>(?<Val...", 
          "upvotecount": "0"
        }, 
        {
          "text": "I'd probably start with a very strict match to avoid accidentally capturing other parts of the document: static void Main(string[] args) { string html = @\"<td class=\"\"c-ob-j1a\"\" property=\"\"c-value\"...", 
          "upvotecount": "0"
        }, 
        {
          "text": "If all you need is to parse the td tag in the formats you presented you might get away with a regex. In general parsing html with regex is not working. You can find many questions here on SO...", 
          "upvotecount": "-1"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I have searched and searched about Regex but I can't seem to find something that will allow me to do this. I need to get the 12.32, 2,300, 4.644 M and 12,444.12 from the following strings in C#: ...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Regex HTML Extraction C#", 
          "title": "Regex HTML Extraction C#"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/1894995/regex-html-extraction-c-sharp", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/1894995/regex-html-extraction-c-sharp", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/1894995/regex-html-extraction-c-sharp", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I have searched and searched about Regex but I can't seem to find something that will allow me to do this.  I need to get the 12.32, 2,300, 4.644 M and 12,444.12 from the following strings in C#:  ...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/1894995/regex-html-extraction-c-sharp", 
          "twitter:card": "summary", 
          "twitter:title": "Regex HTML Extraction C#", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "5", 
          "text": "I have searched and searched about Regex but I can't seem to find something that will allow me to do this. I need to get the 12.32, 2,300, 4.644 M and 12,444.12 from the following strings in...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Regex HTML Extraction C#", 
          "upvotecount": "0"
        }
      ]
    }, 
    "snippet": "Thou shalt not use regular expressions to parse HTML. stackoverflow.com/\nquestions/1732348/\u2026 \u2013 dtb Dec 12 '09 at 23:14\u00a0...", 
    "htmlSnippet": "Thou shalt not use <b>regular expressions</b> to parse <b>HTML</b>. stackoverflow.com/<br>\nquestions/1732348/\u2026 \u2013 dtb Dec 12 &#39;09 at 23:14&nbsp;...", 
    "link": "http://stackoverflow.com/questions/1894995/regex-html-extraction-c-sharp", 
    "cacheId": "jQLBH8ZLLZYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "C# Paragraph HTML Regex", 
    "displayLink": "www.dotnetperls.com", 
    "htmlTitle": "<b>C#</b> Paragraph <b>HTML Regex</b>", 
    "formattedUrl": "www.dotnetperls.com/paragraph-html", 
    "htmlFormattedUrl": "www.dotnetperls.com/paragraph-<b>html</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width,initial-scale=1"
        }
      ]
    }, 
    "snippet": "This C# example program uses Regex to get HTML paragraphs. It requires \nSystem.Text.RegularExpressions.", 
    "htmlSnippet": "This <b>C# example</b> program uses <b>Regex</b> to get <b>HTML</b> paragraphs. It requires <br>\nSystem.Text.RegularExpressions.", 
    "link": "http://www.dotnetperls.com/paragraph-html", 
    "cacheId": "jzTN79cV3n4J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "C# Scraping HTML Links", 
    "displayLink": "www.dotnetperls.com", 
    "htmlTitle": "<b>C#</b> Scraping <b>HTML</b> Links", 
    "formattedUrl": "www.dotnetperls.com/scraping-html", 
    "htmlFormattedUrl": "www.dotnetperls.com/scraping-<b>html</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width,initial-scale=1"
        }
      ]
    }, 
    "snippet": "This C# tutorial implements HTML scraping. It uses regular expressions and \nparses HTML links.", 
    "htmlSnippet": "This <b>C# tutorial</b> implements <b>HTML</b> scraping. It uses <b>regular expressions</b> and <br>\nparses <b>HTML</b> links.", 
    "link": "http://www.dotnetperls.com/scraping-html", 
    "cacheId": "hpOCvIvjz9kJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expression Examples", 
    "displayLink": "msdn.microsoft.com", 
    "htmlTitle": "<b>Regular Expression Examples</b>", 
    "formattedUrl": "https://msdn.microsoft.com/en-us/library/kweb790z(v=vs.110).aspx", 
    "htmlFormattedUrl": "https://msdn.microsoft.com/en-us/library/kweb790z(v=vs.110).aspx", 
    "pagemap": {
      "metatags": [
        {
          "search.mshattr.abstract": "This section contains code examples that illustrate the use of regular expressions in common applications.", 
          "search.mshattr.locale": "en-us", 
          "search.mshattr.preferredsitename": "MSDN", 
          "search.mscategory": "ms310241", 
          "search.mshattr.topictype": "kbOrient", 
          "search.mshattr.preferredlib": "/library", 
          "search.language": "en-us", 
          "search.dcsext.productfamily": "LIB_DG", 
          "search.mshattr.communitycontent": "0", 
          "search.dcsext.title": "Regular Expression Examples", 
          "search.mshattr.shippedin": "vs.80", 
          "search.mshkeyworda": "e9fd53f2-ed56-4b09-b2ea-e9bc9d65e6d6", 
          "search.system.keywords": "regular expressions [.NET Framework]", 
          "search.mshkeywordk": "regular expressions [.NET Framework]", 
          "search.description": "This section contains code examples that illustrate the use of regular expressions in common applications.", 
          "search.mshattr.assetid": "e9fd53f2-ed56-4b09-b2ea-e9bc9d65e6d6", 
          "search.dcsext.product": "NDP_CLR", 
          "search.mshattr.technology": "ManagedCode", 
          "search.microsoft.help.id": "e9fd53f2-ed56-4b09-b2ea-e9bc9d65e6d6", 
          "search.microsoft.help.contenttype": "Concepts", 
          "search.mshattr.revisionnumber": "15", 
          "search.microsoft.help.keywords": "regular expressions [.NET Framework]", 
          "search.tocnodeid": "hh569870", 
          "search.mshattr.docset": "NETFramework", 
          "search.mshattr.catalog container": "System_Default_Catalog", 
          "search.mshattr.content set container": "System_Default_Content_Set", 
          "search.mscategoryv": "ms310241MSDN10"
        }
      ]
    }, 
    "snippet": "Regular Expression Example: Changing Date Formats. Provides an ... For \nexample, \"http://www.contoso.com:8080/letters/readme.html\" returns \"http:8080\".", 
    "htmlSnippet": "<b>Regular Expression Example</b>: Changing Date Formats. Provides an ... For <br>\n<b>example</b>, &quot;http://www.contoso.com:8080/letters/readme.<b>html</b>&quot; returns &quot;http:8080&quot;.", 
    "link": "https://msdn.microsoft.com/en-us/library/kweb790z(v=vs.110).aspx", 
    "cacheId": "JQmH52MtkO4J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expression Example: Scanning for HREFs", 
    "displayLink": "msdn.microsoft.com", 
    "htmlTitle": "<b>Regular Expression Example</b>: Scanning for HREFs", 
    "formattedUrl": "https://msdn.microsoft.com/en-us/library/t9e807fx(v=vs.110).aspx", 
    "htmlFormattedUrl": "https://msdn.microsoft.com/en-us/library/t9e807fx(v=vs.110).aspx", 
    "pagemap": {
      "metatags": [
        {
          "search.mshattr.abstract": "The following example searches an input string and displays all the href=\"\u2026\" values and their locations in the string.", 
          "search.mshattr.locale": "en-us", 
          "search.mshattr.preferredsitename": "MSDN", 
          "search.mscategory": "ms310241", 
          "search.mshattr.topictype": "kbArticle", 
          "search.mshattr.preferredlib": "/library", 
          "search.mshattr.codelang": "kbLangVB", 
          "search.language": "en-us", 
          "search.dcsext.productfamily": "LIB_DG", 
          "search.mshattr.communitycontent": "0", 
          "search.dcsext.title": "Regular Expression Example: Scanning for HREFs", 
          "search.mshattr.shippedin": "vs.80", 
          "search.mshkeyworda": "fae2c15b-7adf-4b15-b118-58eb3906994f", 
          "search.system.keywords": ".NET Framework regular expressions, examples", 
          "search.mshkeywordk": ".NET Framework regular expressions, examples", 
          "search.description": "The following example searches an input string and displays all the href=\"\u2026\" values and their locations in the string.", 
          "search.mshattr.assetid": "fae2c15b-7adf-4b15-b118-58eb3906994f", 
          "search.dcsext.product": "NDP_CLR", 
          "search.mshattr.technology": "ManagedCode", 
          "search.microsoft.help.id": "fae2c15b-7adf-4b15-b118-58eb3906994f", 
          "search.microsoft.help.contenttype": "Concepts", 
          "search.mshattr.revisionnumber": "22", 
          "search.microsoft.help.keywords": ".NET Framework regular expressions, examples", 
          "search.mshattr.docset": "NETFramework", 
          "search.mshattr.catalog container": "System_Default_Catalog", 
          "search.mshattr.content set container": "System_Default_Content_Set", 
          "search.mscategoryv": "ms310241MSDN10"
        }
      ]
    }, 
    "snippet": "The following example searches an input string and displays all the href=\"\u2026 ... \nThis enables the regular expression engine to cache the regular expression and \n... A Match object is then used to iterate through all matches in the string. C#. VB.", 
    "htmlSnippet": "The following <b>example</b> searches an input string and displays all the href=&quot;\u2026 ... <br>\nThis enables the <b>regular expression</b> engine to cache the <b>regular expression</b> and <br>\n... A <b>Match</b> object is then used to iterate through all matches in the string. <b>C#</b>. VB.", 
    "link": "https://msdn.microsoft.com/en-us/library/t9e807fx(v=vs.110).aspx", 
    "cacheId": "EGDvBB1W6TYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "7.6. Case study: Parsing Phone Numbers", 
    "displayLink": "www.diveintopython.net", 
    "htmlTitle": "7.6. Case study: <b>Parsing</b> Phone Numbers", 
    "formattedUrl": "www.diveintopython.net/regular_expressions/phone_numbers.html", 
    "htmlFormattedUrl": "www.diveinto<b>python</b>.net/<b>regular_expressions</b>/phone_numbers.html", 
    "snippet": "I scoured the Web and found many examples of regular expressions that \npurported to do ... Let's work through developing a solution for phone number \nparsing.", 
    "htmlSnippet": "I scoured the Web and found many <b>examples</b> of <b>regular expressions</b> that <br>\npurported to do ... Let&#39;s work through developing a solution for phone number <br>\n<b>parsing</b>.", 
    "link": "http://www.diveintopython.net/regular_expressions/phone_numbers.html", 
    "cacheId": "El2Bd4oNMwsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "regex - Python Regular Expression example - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>regex</b> - <b>Python Regular Expression example</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/.../python-regular-expression-example", 
    "htmlFormattedUrl": "stackoverflow.com/questions/.../<b>python</b>-<b>regular-expression</b>-<b>example</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "import re m = re.search(\"Your number is <b>(\\d+)</b>\", \"xxx Your number is <b>123</b> fdjsk\") if m: print m.groups()[0]", 
          "upvotecount": "27"
        }, 
        {
          "text": "Given s = \"Your number is <b>123</b>\" then: import re m = re.search(r\"\\d+\", s) will work and give you m.group() '123' The regular expression looks for 1 or more consecutive digits in your string....", 
          "upvotecount": "12"
        }, 
        {
          "text": "import re x = 'Your number is <b>123</b>' re.search('(?<=Your number is )<b>(\\d+)</b>',x).group(0) this searches for the number that follows the 'Your number is' string", 
          "upvotecount": "5"
        }, 
        {
          "text": "import re print re.search(r'(\\d+)', 'Your number is <b>123</b>').group(0)", 
          "upvotecount": "3"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I want to write a simple Regular Expression in Python that extracts a number from HTML. The html sample is as follows Your number is <b>123</b> Now how can I extract 123, i.e. conten...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Python Regular Expression example", 
          "title": "Python Regular Expression example"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/11171045/python-regular-expression-example", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/11171045/python-regular-expression-example", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/11171045/python-regular-expression-example", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I want to write a simple Regular Expression in Python that extracts a number from HTML. The html sample is as follows  Your number is &lt;b&gt;123&lt;/b&gt;   Now how can I extract 123, i.e. conten...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/11171045/python-regular-expression-example", 
          "twitter:card": "summary", 
          "twitter:title": "Python Regular Expression example", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "4", 
          "text": "I want to write a simple Regular Expression in Python that extracts a number from HTML. The html sample is as follows Your number is <b>123</b> Now how can I extract 123, i.e. contents of first...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Python Regular Expression example", 
          "upvotecount": "12"
        }
      ]
    }, 
    "snippet": "I want to write a simple Regular Expression in Python that extracts a ... I suggest \nto use lxml to parse HTML \u2013 18bytes Jun 25 '12 at 12:18\u00a0...", 
    "htmlSnippet": "I want to write a <b>simple Regular Expression</b> in <b>Python</b> that extracts a ... I suggest <br>\nto use lxml to <b>parse</b> HTML \u2013 18bytes Jun 25 &#39;12 at 12:18&nbsp;...", 
    "link": "http://stackoverflow.com/questions/11171045/python-regular-expression-example", 
    "cacheId": "0szV9Iy4TL4J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular expressions - Dive Into Python 3", 
    "displayLink": "www.diveintopython3.net", 
    "htmlTitle": "<b>Regular expressions</b> - Dive Into <b>Python</b> 3", 
    "formattedUrl": "www.diveintopython3.net/regular-expressions.html", 
    "htmlFormattedUrl": "www.diveinto<b>python</b>3.net/<b>regular-expressions</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "Regular expressions are a powerful and (mostly) standardized way of searching, \nreplacing, and parsing text with complex patterns of characters. Although the\u00a0...", 
    "htmlSnippet": "<b>Regular expressions</b> are a powerful and (mostly) standardized way of searching, <br>\nreplacing, and <b>parsing</b> text with complex patterns of characters. Although the&nbsp;...", 
    "link": "http://www.diveintopython3.net/regular-expressions.html", 
    "cacheId": "SX0qYhjxNfkJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "python - Writing a parser for regular expressions - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>python</b> - Writing a <b>parser</b> for <b>regular expressions</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/.../writing-a-parser-for-regular-expressions", 
    "htmlFormattedUrl": "stackoverflow.com/.../writing-a-<b>parser</b>-for-<b>regular-expressions</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "Writing an implementation of a regular expression engine is indeed a quite complex task. But if you are interested in how to do it, even if you can't understand enough of the details to actually...", 
          "upvotecount": "28"
        }, 
        {
          "text": "I've already given a +1 to Mark Byers - but as far as I remember the paper doesn't really say that much about how regular expression matching works beyond explaining why one algorithm is bad...", 
          "upvotecount": "14"
        }, 
        {
          "text": "This paper takes an interesting approach. The implementation is given in Haskell, but it's been reimplemented in Python at least once.", 
          "upvotecount": "6"
        }, 
        {
          "text": "There's an interesting (if slightly short) chapter in Beautiful Code by Brian Kernighan, appropriately called \"A Regular Expression Matcher\". In it he discusses a simple matcher that can match...", 
          "upvotecount": "4"
        }, 
        {
          "text": "I do agree that writing a regex engine will improve understanding but have you taken a look at ANTLR??. It generates the parsers automatically for any kind of language. So maybe you can try...", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "Even after years of programming, I'm ashamed to say that I've never really fully grasped regular expressions. In general, when a problem calls for a regex, I can usually (after a bunch of referring...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Writing a parser for regular expressions", 
          "title": "Writing a parser for regular expressions"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/3639574/writing-a-parser-for-regular-expressions", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/3639574/writing-a-parser-for-regular-expressions", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/3639574/writing-a-parser-for-regular-expressions", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "Even after years of programming, I'm ashamed to say that I've never really fully grasped regular expressions. In general, when a problem calls for a regex, I can usually (after a bunch of referring...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/3639574/writing-a-parser-for-regular-expressions", 
          "twitter:card": "summary", 
          "twitter:title": "Writing a parser for regular expressions", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "5", 
          "text": "Even after years of programming, I'm ashamed to say that I've never really fully grasped regular expressions. In general, when a problem calls for a regex, I can usually (after a bunch of referring...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Writing a parser for regular expressions", 
          "upvotecount": "42"
        }
      ]
    }, 
    "snippet": "Even after years of programming, I'm ashamed to say that I've never ... Writing an \nimplementation of a regular expression engine is indeed a quite\u00a0...", 
    "htmlSnippet": "Even after years of programming, I&#39;m ashamed to say that I&#39;ve never ... Writing an <br>\nimplementation of a <b>regular expression</b> engine is indeed a quite&nbsp;...", 
    "link": "http://stackoverflow.com/questions/3639574/writing-a-parser-for-regular-expressions", 
    "cacheId": "aUYGrOWAUWUJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular expression parsing in Python @ Things Of Interest", 
    "displayLink": "qntm.org", 
    "htmlTitle": "<b>Regular expression parsing</b> in <b>Python</b> @ Things Of Interest", 
    "formattedUrl": "qntm.org/lego", 
    "htmlFormattedUrl": "qntm.org/lego", 
    "snippet": "Aug 1, 2010 ... Thank you for reading \"Regular expression parsing in Python\". ... reduce() , a \nmethod for the simplification of regular expressions, and\u00a0...", 
    "htmlSnippet": "Aug 1, 2010 <b>...</b> Thank you for reading &quot;<b>Regular expression parsing</b> in <b>Python</b>&quot;. ... reduce() , a <br>\nmethod for the simplification of <b>regular expressions</b>, and&nbsp;...", 
    "link": "http://qntm.org/lego", 
    "cacheId": "-fmlc_JMtswJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Python Regex to Parse String and Return Tuple - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>Python Regex</b> to <b>Parse</b> String and Return Tuple - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/.../python-regex-to-parse-string-and-return-tuple", 
    "htmlFormattedUrl": "stackoverflow.com/.../<b>python</b>-<b>regex</b>-to-<b>parse</b>-string-and-return-tuple", 
    "pagemap": {
      "answer": [
        {
          "text": "I would use a single regular expression to match the entire line, with the parts I want in named groups ((?P<name>exampl*e)). import re def extract_data2(s): pattern = re.compile(r\"\"\"\\|\\s*...", 
          "upvotecount": "7"
        }, 
        {
          "text": "Using regex: #! /usr/bin/env python import re tests = [ \"| 'TOMATOES_PICKED' | 914 | 1397 |\", \"| 'TOMATOES_FLICKED' | 32914 | 1123 |\", \"| 'TOMATOES_RIGGED' | 14 | 1343 |\", \"| 'TOMATOES_PICKELED'...", 
          "upvotecount": "2"
        }, 
        {
          "text": "Try using split. s= \"| 'TOMATOES_PICKED' | 914 | 1397 |\" print map(lambda x:x.strip(\"' \"),s.split('|'))[1:-1] Split : transform your string into a list of string lambda function : removes spaces...", 
          "upvotecount": "2"
        }, 
        {
          "text": "Not sure that i have correctly understood you but try this: import re print re.findall(r'\\b\\w+\\b', yourtext)", 
          "upvotecount": "1"
        }, 
        {
          "text": "I would have to agree with the other posters that said use the split() method on your strings. If your given string is, >> s = \"| 'TOMATOES_PICKED' | 914 | 1397 |\" You just split the string...", 
          "upvotecount": "1"
        }, 
        {
          "text": "With pyparsing, you can have the parser create a dict-like structure for you, using the first column values as the keys, and the subsequent values as an array of values for that key: >>> from...", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I've been given some strings to work with. Each one represents a data set and consists of the data set's name and the associated statistics. They all have the following form: s= \"| 'TOMATOES_PICKE...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Python Regex to Parse String and Return Tuple", 
          "title": "Python Regex to Parse String and Return Tuple"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/6260777/python-regex-to-parse-string-and-return-tuple", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/6260777/python-regex-to-parse-string-and-return-tuple", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/6260777/python-regex-to-parse-string-and-return-tuple", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I've been given some strings to work with. Each one represents a data set and consists of the data set's name and the associated statistics. They all have the following form:  s= \"| 'TOMATOES_PICKE...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/6260777/python-regex-to-parse-string-and-return-tuple", 
          "twitter:card": "summary", 
          "twitter:title": "Python Regex to Parse String and Return Tuple", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "6", 
          "text": "I've been given some strings to work with. Each one represents a data set and consists of the data set's name and the associated statistics. They all have the following form: s= \"| 'TOMATOES_PICKED...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Python Regex to Parse String and Return Tuple", 
          "upvotecount": "4"
        }
      ]
    }, 
    "snippet": "So I've done a bit of reading on regular expressions and figured out how to return \nthe name. For each of the strings that I'm working with, the\u00a0...", 
    "htmlSnippet": "So I&#39;ve done a bit of reading on <b>regular expressions</b> and figured out how to return <br>\nthe name. For each of the strings that I&#39;m working with, the&nbsp;...", 
    "link": "http://stackoverflow.com/questions/6260777/python-regex-to-parse-string-and-return-tuple", 
    "cacheId": "p0QkjOUNdIgJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Ruby Tutorial: Regexp - NewCircle", 
    "displayLink": "newcircle.com", 
    "htmlTitle": "<b>Ruby Tutorial</b>: <b>Regexp</b> - NewCircle", 
    "formattedUrl": "https://newcircle.com/bookshelf/ruby_tutorial/regexp", 
    "htmlFormattedUrl": "https://newcircle.com/bookshelf/<b>ruby</b>_<b>tutorial</b>/<b>regexp</b>", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ]
    }, 
    "snippet": "regex operators. equal tilde returns the position in the string that matches, or nil if \nno match @@@ ruby >> \"abcde\" =~ /bcd/ => 1. bang tilde returns false if the\u00a0...", 
    "htmlSnippet": "<b>regex</b> operators. equal tilde returns the position in the <b>string</b> that matches, or nil if <br>\nno match @@@ <b>ruby</b> &gt;&gt; &quot;abcde&quot; =~ /bcd/ =&gt; 1. bang tilde returns false if the&nbsp;...", 
    "link": "https://newcircle.com/bookshelf/ruby_tutorial/regexp", 
    "cacheId": "NImlGeeRXKsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular expressions in Ruby", 
    "displayLink": "zetcode.com", 
    "htmlTitle": "<b>Regular expressions</b> in <b>Ruby</b>", 
    "formattedUrl": "zetcode.com/lang/rubytutorial/regex/", 
    "htmlFormattedUrl": "zetcode.com/lang/<b>rubytutorial</b>/<b>regex</b>/", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1", 
          "author": "Jan Bodnar"
        }
      ]
    }, 
    "snippet": "Oct 3, 2014 ... In this part of the Ruby tutorial, we cover regular expressions. ... The =~ operator \nmatches the regular expression against a string, and it returns\u00a0...", 
    "htmlSnippet": "Oct 3, 2014 <b>...</b> In this part of the <b>Ruby tutorial</b>, we cover <b>regular expressions</b>. ... The =~ operator <br>\nmatches the <b>regular expression</b> against a <b>string</b>, and it returns&nbsp;...", 
    "link": "http://zetcode.com/lang/rubytutorial/regex/", 
    "cacheId": "EuCPULjDqdwJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Ruby Regexp Class - Regular Expressions in Ruby", 
    "displayLink": "www.regular-expressions.info", 
    "htmlTitle": "<b>Ruby Regexp</b> Class - <b>Regular Expressions</b> in <b>Ruby</b>", 
    "formattedUrl": "www.regular-expressions.info/ruby.html", 
    "htmlFormattedUrl": "www.<b>regular-expressions</b>.info/<b>ruby</b>.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width", 
          "author": "Jan Goyvaerts"
        }
      ]
    }, 
    "snippet": "Learn how to use regular expressions with Ruby and the Ruby Regexp class. ... \nUse \\A and \\Z to match at the start or the end of the string. Since forward slashes \ndelimit the regular expression, .... Replacement Strings Tutorial \u00b7 Applications and\n\u00a0...", 
    "htmlSnippet": "Learn how to use <b>regular expressions</b> with <b>Ruby</b> and the <b>Ruby Regexp</b> class. ... <br>\nUse \\A and \\Z to match at the start or the end of the <b>string</b>. Since forward slashes <br>\ndelimit the <b>regular expression</b>, .... Replacement <b>Strings Tutorial</b> &middot; Applications and<br>\n&nbsp;...", 
    "link": "http://www.regular-expressions.info/ruby.html", 
    "cacheId": "ufzR9RrYQDQJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Class: Regexp (Ruby 2.2.0)", 
    "displayLink": "ruby-doc.org", 
    "htmlTitle": "Class: <b>Regexp</b> (<b>Ruby</b> 2.2.0)", 
    "formattedUrl": "ruby-doc.org/core-2.2.0/Regexp.html", 
    "htmlFormattedUrl": "<b>ruby</b>-doc.org/core-2.2.0/<b>Regexp</b>.html", 
    "snippet": "When one operand is a regular expression and the other is a string then the ..... \nWhereas in the following example 'and' has been anchored to a non-word\u00a0...", 
    "htmlSnippet": "When one operand is a <b>regular expression</b> and the other is a <b>string</b> then the ..... <br>\nWhereas in the following <b>example</b> &#39;and&#39; has been anchored to a non-word&nbsp;...", 
    "link": "http://ruby-doc.org/core-2.2.0/Regexp.html", 
    "cacheId": "PGTvX49x06IJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regex Tutorial - Lookahead and Lookbehind Zero-Length Assertions", 
    "displayLink": "www.regular-expressions.info", 
    "htmlTitle": "<b>Regex Tutorial</b> - Lookahead and Lookbehind Zero-Length Assertions", 
    "formattedUrl": "www.regular-expressions.info/lookaround.html", 
    "htmlFormattedUrl": "www.<b>regular-expressions</b>.info/lookaround.html", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width", 
          "author": "Jan Goyvaerts"
        }
      ]
    }, 
    "snippet": "They do not consume characters in the string, but only assert whether a match is \npossible or not. ... When explaining character classes, this tutorial explained why \nyou cannot use a negated .... PHP, Delphi, R, and Ruby also allow this.", 
    "htmlSnippet": "They do not consume characters in the <b>string</b>, but only assert whether a match is <br>\npossible or not. ... When explaining character classes, this <b>tutorial</b> explained why <br>\nyou cannot use a negated .... PHP, Delphi, R, and <b>Ruby</b> also allow this.", 
    "link": "http://www.regular-expressions.info/lookaround.html", 
    "cacheId": "ZqjR1n4dRHgJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "javascript - Node.js: Regular Expression To Get \"From: \" and \"To ...", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>javascript</b> - <b>Node</b>.<b>js</b>: <b>Regular Expression</b> To Get &quot;From: &quot; and &quot;To <b>...</b>", 
    "formattedUrl": "stackoverflow.com/.../node-js-regular-expression-to-get-from-and-to", 
    "htmlFormattedUrl": "stackoverflow.com/.../<b>node</b>-<b>js</b>-<b>regular-expression</b>-to-get-from-and-to", 
    "pagemap": {
      "answer": [
        {
          "text": "Try this: Code: //var rePattern = new RegExp(/^Received:(.*)$/); var rePattern = new RegExp(/^Subject:(.*)$/); var arrMatches = strText.match(rePattern); Result: arrMatches[0] -> Subject: test...", 
          "upvotecount": "11"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "Given this text file: Received: from unknown (HELO aws-bacon-delivery-svc-iad-1007.vdc.g.com) ([10.146.157.151]) by na-mm-outgoing-6102-bacon.iad6.g.com with ESMTP; 12 Apr 2011 14:30:47 +0000", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Node.js: Regular Expression To Get \"From: \" and \"To: \"", 
          "title": "Node.js: Regular Expression To Get \"From: \" and \"To: \""
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/5675315/node-js-regular-expression-to-get-from-and-to", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/5675315/node-js-regular-expression-to-get-from-and-to", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/5675315/node-js-regular-expression-to-get-from-and-to", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "Given this text file:  Received: from unknown (HELO aws-bacon-delivery-svc-iad-1007.vdc.g.com) ([10.146.157.151])   by na-mm-outgoing-6102-bacon.iad6.g.com with ESMTP; 12 Apr 2011 14:30:47 +0000", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/5675315/node-js-regular-expression-to-get-from-and-to", 
          "twitter:card": "summary", 
          "twitter:title": "Node.js: Regular Expression To Get \"From: \" and \"To: \"", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "1", 
          "text": "Given this text file: Received: from unknown (HELO aws-bacon-delivery-svc-iad-1007.vdc.g.com) ([10.146.157.151]) by na-mm-outgoing-6102-bacon.iad6.g.com with ESMTP; 12 Apr 2011 14:30:47 +0000...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Node.js: Regular Expression To Get \u201cFrom: \u201d and \u201cTo: \u201d", 
          "upvotecount": "5"
        }
      ]
    }, 
    "snippet": "Node.js: Regular Expression To Get \u201cFrom: \u201d and \u201cTo: \u201d .... Regular expression to \nmatch text that doesn't contain a word? 440 \u00b7 How do you\u00a0...", 
    "htmlSnippet": "<b>Node</b>.<b>js</b>: <b>Regular Expression</b> To Get \u201cFrom: \u201d and \u201cTo: \u201d .... <b>Regular expression</b> to <br>\n<b>match</b> text that doesn&#39;t contain a word? 440 &middot; How do you&nbsp;...", 
    "link": "http://stackoverflow.com/questions/5675315/node-js-regular-expression-to-get-from-and-to", 
    "cacheId": "0rJP7c7wY5UJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "regex", 
    "displayLink": "www.npmjs.com", 
    "htmlTitle": "<b>regex</b>", 
    "formattedUrl": "https://www.npmjs.com/package/regex", 
    "htmlFormattedUrl": "https://www.npmjs.com/package/<b>regex</b>", 
    "pagemap": {
      "website": [
        {
          "url": "https://www.npmjs.com/"
        }
      ], 
      "metatags": [
        {
          "msapplication-config": "/static/images/touch-icons/browserconfig.xml", 
          "twitter:url": "https://www.npmjs.com/package/regex", 
          "twitter:description": "Native RegExp compatible regular expressions for JavaScript. Patterns may be composed of subexpressions and multiple expressions may be combined into a single expression.", 
          "msapplication-tilecolor": "#cb3837", 
          "apple-mobile-web-app-capable": "no", 
          "theme-color": "#cb3837", 
          "msapplication-tileimage": "/static/images/touch-icons/mstile-144x144.png", 
          "twitter:title": "npm: regex", 
          "og:image": "https://www.npmjs.com/static/images/touch-icons/open-graph.png", 
          "viewport": "width=device-width,minimum-scale=1.0,initial-scale=1,user-scalable=yes"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "80", 
          "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS7s5LxO9I0Utlbe1ZX6ygpIyYimqEO5UBtBqJNF8kzffKDkc-eMcyF", 
          "height": "80"
        }
      ], 
      "cse_image": [
        {
          "src": "https://secure.gravatar.com/avatar/cfdbedf79938033cb08dec517f8f3450?size=100&default=retro"
        }
      ], 
      "searchaction": [
        {
          "query-input": "name=q value", 
          "target": "https://www.npmjs.com/search?q={q}"
        }
      ]
    }, 
    "snippet": "Native RegExp compatible regular expressions for JavaScript. ... Regex may be \ninstalled on node.js via the node package manager using the command npm\u00a0...", 
    "htmlSnippet": "Native <b>RegExp</b> compatible <b>regular expressions</b> for <b>JavaScript</b>. ... <b>Regex</b> may be <br>\ninstalled on <b>node</b>.<b>js</b> via the node package manager using the command npm&nbsp;...", 
    "link": "https://www.npmjs.com/package/regex", 
    "cacheId": "X3ZB1wf33LYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "XRegExp: JavaScript Regex", 
    "displayLink": "xregexp.com", 
    "htmlTitle": "XRegExp: <b>JavaScript Regex</b>", 
    "formattedUrl": "xregexp.com/", 
    "htmlFormattedUrl": "x<b>regexp</b>.com/", 
    "pagemap": {
      "cse_thumbnail": [
        {
          "width": "120", 
          "src": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQR1aDU4LXIHOH2fxFvd-YDXcY33FHw3lftrFhxCaeYTHv9fPXV-uFF238", 
          "height": "157"
        }
      ], 
      "cse_image": [
        {
          "src": "http://xregexp.com/assets/regex_cookbook.gif"
        }
      ]
    }, 
    "snippet": "XRegExp is an open source (MIT License) JavaScript library that provides \naugmented and extensible regular ... You can also use it on the server with Node.\njs.", 
    "htmlSnippet": "XRegExp is an open source (MIT License) <b>JavaScript</b> library that provides <br>\naugmented and extensible <b>regular</b> ... You can also use it on the server with <b>Node</b>.<br>\n<b>js</b>.", 
    "link": "http://xregexp.com/", 
    "cacheId": "d1z695tc7kgJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "JavaScript #1: Regular Expressions CheatSheet - Gentlenode", 
    "displayLink": "gentlenode.com", 
    "htmlTitle": "<b>JavaScript</b> #1: <b>Regular Expressions</b> CheatSheet - <b>Gentlenode</b>", 
    "formattedUrl": "https://gentlenode.com/journal/javascript-1-regular-expressions.../15", 
    "htmlFormattedUrl": "https://gentle<b>node</b>.com/journal/<b>javascript</b>-1-<b>regular-expressions</b>.../15", 
    "pagemap": {
      "metatags": [
        {
          "twitter:creator": "@LeCoupa", 
          "og:url": "https://gentlenode.com/journal/javascript-1-regular-expressions-cheatsheet/15", 
          "twitter:url": "https://gentlenode.com/journal/javascript-1-regular-expressions-cheatsheet/15", 
          "og:site_name": "Gentlenode Studio", 
          "twitter:card": "summary", 
          "twitter:image": "https://gentlenode.com/images/main/og-image-2.png", 
          "twitter:description": "Here is a simple cheatsheet for JavaScript regular expressions. Feel free to add a comment below if we missed something useful. You can star or fork the Gist here.  # Cheatsheet for Regular Expressions # Gist: https://gist.github.com/LeCoupa/6bced90d69f992a4d0a3   # SYNTAX:  var pattern =", 
          "og:type": "website", 
          "og:description": "Here is a simple cheatsheet for JavaScript regular expressions. Feel free to add a comment below if we missed something useful. You can star or fork the Gist here.  # Cheatsheet for Regular Expressions # Gist: https://gist.github.com/LeCoupa/6bced90d69f992a4d0a3   # SYNTAX:  var pattern =", 
          "twitter:title": "JavaScript #1: Regular Expressions CheatSheet", 
          "twitter:site": "@gentlenode", 
          "og:title": "JavaScript #1: Regular Expressions CheatSheet", 
          "msvalidate.01": "A079CDDB4DD467D384904F791A5FC965", 
          "og:image": "https://gentlenode.com/images/main/og-image-2.png"
        }
      ], 
      "cse_image": [
        {
          "src": "https://gentlenode.com/images/main/og-image-2.png"
        }
      ]
    }, 
    "snippet": "Here is a simple cheatsheet for JavaScript regular expressions. Feel free to add a \ncomment below if we missed something useful. You can star or fork the Gist\u00a0...", 
    "htmlSnippet": "Here is a simple cheatsheet for <b>JavaScript regular expressions</b>. Feel free to add a <br>\ncomment below if we missed something useful. You can star or fork the Gist&nbsp;...", 
    "link": "https://gentlenode.com/journal/javascript-1-regular-expressions-cheatsheet/15", 
    "cacheId": "dlGEbADxvvkJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expression DoS and Node.js | The ^lift Security Blog", 
    "displayLink": "blog.liftsecurity.io", 
    "htmlTitle": "<b>Regular Expression</b> DoS and <b>Node</b>.<b>js</b> | The ^lift Security Blog", 
    "formattedUrl": "https://blog.liftsecurity.io/.../regular-expression-dos-and-node.js?... nodeweekly...", 
    "htmlFormattedUrl": "https://blog.liftsecurity.io/.../<b>regular-expression</b>-dos-and-<b>node</b>.<b>js</b>?... <b>node</b>weekly...", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1", 
          "author": "^lift Security"
        }
      ]
    }, 
    "snippet": "Nov 3, 2014 ... The attack surface for Node.js in regards to loss of availability is quite ... for eslint \nthat you can use to test your JavaScript regular expressions:", 
    "htmlSnippet": "Nov 3, 2014 <b>...</b> The attack surface for <b>Node</b>.<b>js</b> in regards to loss of availability is quite ... for eslint <br>\nthat you can use to test your <b>JavaScript regular expressions</b>:", 
    "link": "https://blog.liftsecurity.io/2014/11/03/regular-expression-dos-and-node.js?utm_source=nodeweekly&utm_medium=email", 
    "cacheId": "oKHCvcL9E8IJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "RegExp - JavaScript | MDN", 
    "displayLink": "developer.mozilla.org", 
    "htmlTitle": "<b>RegExp</b> - <b>JavaScript</b> | MDN", 
    "formattedUrl": "https://developer.mozilla.org/en-US/docs/.../JavaScript/.../RegExp", 
    "htmlFormattedUrl": "https://developer.mozilla.org/en-US/docs/.../<b>JavaScript</b>/.../<b>RegExp</b>", 
    "pagemap": {
      "metatags": [
        {
          "twitter:creator": "@MozDevNet", 
          "og:url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp", 
          "twitter:url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp", 
          "og:site_name": "Mozilla Developer Network", 
          "twitter:card": "summary", 
          "twitter:image": "https://developer.mozilla.org/media/img/opengraph-logo.png", 
          "twitter:description": "The RegExp constructor creates a regular expression object for matching text with a pattern.", 
          "og:type": "website", 
          "og:description": "The RegExp constructor creates a regular expression object for matching text with a pattern.", 
          "twitter:title": "RegExp", 
          "og:title": "RegExp", 
          "twitter:site": "@MozDevNet", 
          "og:image": "https://developer.mozilla.org/media/img/opengraph-logo.png", 
          "viewport": "width=device-width, initial-scale=1"
        }
      ], 
      "Breadcrumb": [
        {
          "url": "MDN", 
          "title": "MDN"
        }, 
        {
          "url": "Web technology for developers", 
          "title": "Web technology for developers"
        }, 
        {
          "url": "JavaScript", 
          "title": "JavaScript"
        }, 
        {
          "url": "JavaScript reference", 
          "title": "JavaScript reference"
        }, 
        {
          "url": "Standard built-in objects", 
          "title": "Standard built-in objects"
        }
      ], 
      "cse_image": [
        {
          "src": "https://developer.mozilla.org/media/img/opengraph-logo.png"
        }
      ]
    }, 
    "snippet": "Mar 16, 2015 ... ... text with a pattern. For an introduction on what regular expressions are, read \nthe Regular Expressions chapter in the JavaScript Guide.", 
    "htmlSnippet": "Mar 16, 2015 <b>...</b> ... text with a <b>pattern</b>. For an introduction on what <b>regular expressions</b> are, read <br>\nthe <b>Regular Expressions</b> chapter in the <b>JavaScript</b> Guide.", 
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp", 
    "cacheId": "Bg5oyYgaoHwJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP 5 Forms Validate E-mail and URL", 
    "displayLink": "www.w3schools.com", 
    "htmlTitle": "<b>PHP</b> 5 Forms <b>Validate</b> E-mail and URL", 
    "formattedUrl": "www.w3schools.com/php/php_form_url_email.asp", 
    "htmlFormattedUrl": "www.w3schools.com/<b>php</b>/<b>php</b>_form_url_email.asp", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1"
        }
      ]
    }, 
    "snippet": "NET PHP SQL tutorials, references, web building examples. ... check if URL \naddress syntax is valid (this regular expression also allows dashes in the URL)", 
    "htmlSnippet": "NET <b>PHP</b> SQL tutorials, references, web building <b>examples</b>. ... check if URL <br>\naddress syntax is <b>valid</b> (this <b>regular expression</b> also allows dashes in the URL)", 
    "link": "http://www.w3schools.com/php/php_form_url_email.asp", 
    "cacheId": "a0i353D8_6YJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "php - How can I validate regex? - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>php</b> - How can I <b>validate regex</b>? - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/4440626/how-can-i-validate-regex", 
    "htmlFormattedUrl": "stackoverflow.com/questions/4440626/how-can-i-<b>validate</b>-<b>regex</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "// This is valid, both opening ( and closing ) var_dump(preg_match('~Valid(Regular)Expression~', null) === false); // This is invalid, no opening ( for the closing ) var_dump(preg_match('~InvalidRe...", 
          "upvotecount": "57"
        }, 
        {
          "text": "I created a simple function that can be called to checking preg function is_preg_error() { $errors = array( PREG_NO_ERROR => 'Code 0 : No errors', PREG_INTERNAL_ERROR => 'Code 1 : There was...", 
          "upvotecount": "18"
        }, 
        {
          "text": "If you want to dynamically test a regex preg_match(...) === false seems to be your only option. PHP doesn't have a mechanism for compiling regular expressions before they are used. Also you...", 
          "upvotecount": "15"
        }, 
        {
          "text": "You can check to see if it is a syntactically correct regex with this nightmare of a regex, if your engine supports recursion (PHP should). You cannot, however algorithmically tell if it will...", 
          "upvotecount": "4"
        }, 
        {
          "text": "Without actually executing the regex you have no way to be sure if it's be valid. I've recently implemented a similar RegexValidator for Zend Framework. Works just fine. <?php class Nuke_Validate_R...", 
          "upvotecount": "2"
        }, 
        {
          "text": "You can validate your regular expression with a regular expression and up to a certain limit. Checkout this stack overflow answer for more info. Note: a \"recursive regular expression\" is not...", 
          "upvotecount": "1"
        }, 
        {
          "text": "So in summary, for all those coming to this question you can validate regular expressions in PHP with a function like this. preg_match() returns 1 if the pattern matches given subject, 0 if...", 
          "upvotecount": "1"
        }, 
        {
          "text": "I am not sure if it supports PCRE, but there is a Chrome extension over at https://chrome.google.com/webstore/detail/cmmblmkfaijaadfjapjddbeaoffeccib called RegExp Tester. I have not used it...", 
          "upvotecount": "1"
        }, 
        {
          "text": "I'd be inclined to set up a number of unit tests for your regex. This way not only would you be able to ensure that the regex is indeed valid but also effective at matching. I find using TDD...", 
          "upvotecount": "0"
        }, 
        {
          "text": "According to the PCRE reference, there is no such way to test validity of an expression, before it's used. But i think, if someone use an invalid expression, it's a design error in that application...", 
          "upvotecount": "-3"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I'd like to test the validity of a regular expression in PHP, preferably before it's used. Is the only way to do this actually trying a preg_match() and seeing if it returns FALSE? Is there a", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "How can I validate regex?", 
          "title": "How can I validate regex?"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/4440626/how-can-i-validate-regex", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/4440626/how-can-i-validate-regex", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/4440626/how-can-i-validate-regex", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I'd like to test the validity of a regular expression in PHP, preferably before it's used. Is the only way to do this actually trying a preg_match() and seeing if it returns FALSE?  Is there a", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/4440626/how-can-i-validate-regex", 
          "twitter:card": "summary", 
          "twitter:title": "How can I validate regex?", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "10", 
          "text": "I'd like to test the validity of a regular expression in PHP, preferably before it's used. Is the only way to do this actually trying a preg_match() and seeing if it returns FALSE? Is there...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "How can I validate regex?", 
          "upvotecount": "29"
        }
      ]
    }, 
    "snippet": "I'd like to test the validity of a regular expression in PHP, preferably ... // This is \nvalid, both opening ( and closing ) ... I created a simple function that\u00a0...", 
    "htmlSnippet": "I&#39;d like to test the validity of a <b>regular expression</b> in <b>PHP</b>, preferably ... // This is <br>\n<b>valid</b>, both opening ( and closing ) ... I created a simple function that&nbsp;...", 
    "link": "http://stackoverflow.com/questions/4440626/how-can-i-validate-regex", 
    "cacheId": "AkHXTs0UWpkJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Using PHP regex to validate username - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "Using <b>PHP regex</b> to <b>validate</b> username - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/.../using-php-regex-to-validate-username", 
    "htmlFormattedUrl": "stackoverflow.com/questions/.../using-<b>php</b>-<b>regex</b>-to-<b>validate</b>-username", 
    "pagemap": {
      "answer": [
        {
          "text": "The only problem is, you misspelled the last quantifier. {5-31} has to be {5,31} so your regex would be if ( !preg_match('/^[A-Za-z][A-Za-z0-9]{5,31}$/', $joinUser) ) and you can skip the {1},...", 
          "upvotecount": "16"
        }, 
        {
          "text": "Try this: if ( !preg_match('/^[A-Za-z][A-Za-z0-9]{5,31}$/', $joinUser) )", 
          "upvotecount": "2"
        }, 
        {
          "text": "Apparently all you needed to change was 5,31 from 5-31. Working example: if (preg_match('/^[A-Za-z]{1}[A-Za-z0-9]{5,31}$/', \"moo123\")) { echo 'succeeded'; } else { echo 'failed'; }", 
          "upvotecount": "2"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I am trying to validate a username in PHP using regex and everything I submit fails the check. I'm super new at this still. if ( !preg_match('/^[A-Za-z]{1}[A-Za-z0-9]{5-31}$/', $joinUser) ) Rules...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "Using PHP regex to validate username", 
          "title": "Using PHP regex to validate username"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/13392842/using-php-regex-to-validate-username", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/13392842/using-php-regex-to-validate-username", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/13392842/using-php-regex-to-validate-username", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I am trying to validate a username in PHP using regex and everything I submit fails the check. I'm super new at this still.  if ( !preg_match('/^[A-Za-z]{1}[A-Za-z0-9]{5-31}$/', $joinUser) )  Rules...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/13392842/using-php-regex-to-validate-username", 
          "twitter:card": "summary", 
          "twitter:title": "Using PHP regex to validate username", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "3", 
          "text": "I am trying to validate a username in PHP using regex and everything I submit fails the check. I'm super new at this still. if ( !preg_match('/^[A-Za-z]{1}[A-Za-z0-9]{5-31}$/', $joinUser) )...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "Using PHP regex to validate username", 
          "upvotecount": "8"
        }
      ]
    }, 
    "snippet": "The only problem is, you misspelled the last quantifier. {5-31} has to be {5,31}. so \nyour regex would be if ( !preg_match('/^[A-Za-z][A-Za-z0-9]{5,31}$/',\u00a0...", 
    "htmlSnippet": "The only problem is, you misspelled the last quantifier. {5-31} has to be {5,31}. so <br>\nyour <b>regex</b> would be if ( !preg_match(&#39;/^[A-Za-z][A-Za-z0-9]{5,31}$/&#39;,&nbsp;...", 
    "link": "http://stackoverflow.com/questions/13392842/using-php-regex-to-validate-username", 
    "cacheId": "58QwVcFIX_YJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "PHP - Regular Expressions and Patterns - YouTube", 
    "displayLink": "www.youtube.com", 
    "htmlTitle": "<b>PHP</b> - <b>Regular Expressions</b> and Patterns - YouTube", 
    "formattedUrl": "www.youtube.com/watch?v=3o0i1b5TOLA", 
    "htmlFormattedUrl": "www.youtube.com/watch?v=3o0i1b5TOLA", 
    "pagemap": {
      "videoobject": [
        {
          "isfamilyfriendly": "True", 
          "name": "PHP - Regular Expressions and Patterns", 
          "unlisted": "False", 
          "url": "http://www.youtube.com/watch?v=3o0i1b5TOLA", 
          "datepublished": "2012-12-11", 
          "regionsallowed": "AD,AE,AF,AG,AI,AL,AM,AO,AQ,AR,AS,AT,AU,AW,AX,AZ,BA,BB,BD,BE,BF,BG,BH,BI,BJ,BL,BM,BN,BO,BQ,BR,BS,BT,BV,BW,BY,BZ,CA,CC,CD,CF,CG,CH,CI,CK,CL,CM,CN,CO,CR,CU,CV,CW,CX,CY,CZ,DE,DJ,DK,DM,DO,DZ,EC,EE,EG,EH...", 
          "channelid": "UCcSx_mdyL5IhTsY3yIplWuA", 
          "videoid": "3o0i1b5TOLA", 
          "paid": "False", 
          "height": "720", 
          "playertype": "HTML5 Flash", 
          "width": "1280", 
          "interactioncount": "9471", 
          "duration": "PT22M21S", 
          "embedurl": "https://www.youtube.com/embed/3o0i1b5TOLA", 
          "thumbnailurl": "http://i.ytimg.com/vi/3o0i1b5TOLA/maxresdefault.jpg", 
          "genre": "Education", 
          "description": "PHP - Regular Expressions and Patterns"
        }
      ], 
      "metatags": [
        {
          "twitter:app:name:googleplay": "YouTube", 
          "twitter:app:url:ipad": "vnd.youtube://www.youtube.com/watch?v=3o0i1b5TOLA&feature=applinks", 
          "twitter:image": "http://i.ytimg.com/vi/3o0i1b5TOLA/maxresdefault.jpg", 
          "al:web:url": "http://www.youtube.com/watch?v=3o0i1b5TOLA&feature=applinks", 
          "twitter:site": "@youtube", 
          "twitter:app:url:googleplay": "http://www.youtube.com/watch?v=3o0i1b5TOLA", 
          "fb:app_id": "87741124305", 
          "og:video:url": "https://www.youtube.com/embed/3o0i1b5TOLA", 
          "og:url": "http://www.youtube.com/watch?v=3o0i1b5TOLA", 
          "twitter:app:url:iphone": "vnd.youtube://www.youtube.com/watch?v=3o0i1b5TOLA&feature=applinks", 
          "twitter:url": "http://www.youtube.com/watch?v=3o0i1b5TOLA", 
          "al:ios:app_store_id": "544007664", 
          "title": "PHP - Regular Expressions and Patterns", 
          "og:video:type": "text/html", 
          "og:type": "video", 
          "al:android:package": "com.google.android.youtube", 
          "twitter:player:width": "1280", 
          "og:title": "PHP - Regular Expressions and Patterns", 
          "twitter:title": "PHP - Regular Expressions and Patterns", 
          "al:ios:url": "vnd.youtube://www.youtube.com/watch?v=3o0i1b5TOLA&feature=applinks", 
          "twitter:player": "https://www.youtube.com/embed/3o0i1b5TOLA", 
          "twitter:app:name:iphone": "YouTube", 
          "og:video:secure_url": "https://www.youtube.com/embed/3o0i1b5TOLA", 
          "twitter:app:name:ipad": "YouTube", 
          "twitter:app:id:ipad": "544007664", 
          "al:ios:app_name": "YouTube", 
          "og:video:height": "720", 
          "al:android:app_name": "YouTube", 
          "twitter:app:id:googleplay": "com.google.android.youtube", 
          "og:image": "http://i.ytimg.com/vi/3o0i1b5TOLA/maxresdefault.jpg", 
          "twitter:app:id:iphone": "544007664", 
          "og:site_name": "YouTube", 
          "twitter:card": "player", 
          "twitter:description": "PHP - Regular Expressions and Patterns", 
          "og:description": "PHP - Regular Expressions and Patterns", 
          "og:video:tag": "PHP", 
          "al:android:url": "vnd.youtube://www.youtube.com/watch?v=3o0i1b5TOLA&feature=applinks", 
          "og:video:width": "1280", 
          "twitter:player:height": "720"
        }
      ], 
      "imageobject": [
        {
          "url": "http://i.ytimg.com/vi/3o0i1b5TOLA/maxresdefault.jpg", 
          "width": "1280", 
          "height": "720"
        }
      ], 
      "person": [
        {
          "url": "http://www.youtube.com/user/cgermany77"
        }, 
        {
          "url": "https://plus.google.com/110452989009393426728"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "300", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcS8Xya_A3-vlOO9Oloa9BaGadtmrEbh7bE96lBPBWnXLp8zZLcrAvfUk1g", 
          "height": "168"
        }
      ], 
      "cse_image": [
        {
          "src": "http://i.ytimg.com/vi/3o0i1b5TOLA/maxresdefault.jpg"
        }
      ]
    }, 
    "snippet": "Dec 11, 2012 ... PHP - Regular Expressions and Patterns. ... the most pedagogical regex \npresentation that I've found on Youtube, and the examples are nice.", 
    "htmlSnippet": "Dec 11, 2012 <b>...</b> <b>PHP</b> - <b>Regular Expressions</b> and Patterns. ... the most pedagogical <b>regex</b> <br>\npresentation that I&#39;ve found on Youtube, and the <b>examples</b> are nice.", 
    "link": "http://www.youtube.com/watch?v=3o0i1b5TOLA", 
    "cacheId": "B0sLk_3s5ScJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Validate Email Addresses With PHP preg_match() and a Regex ...", 
    "displayLink": "www.developphp.com", 
    "htmlTitle": "<b>Validate</b> Email Addresses With <b>PHP</b> preg_match() and a <b>Regex</b> <b>...</b>", 
    "formattedUrl": "https://www.developphp.com/page.php?id=224", 
    "htmlFormattedUrl": "https://www.develop<b>php</b>.com/page.<b>php</b>?id=224", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width, initial-scale=1", 
          "author": "Adam Khoury"
        }
      ]
    }, 
    "snippet": "Validate Email Addresses With PHP preg_match() and a Regex - Working ... any \nregexp that works as there are many email validation regexp examples online.", 
    "htmlSnippet": "<b>Validate</b> Email Addresses With <b>PHP</b> preg_match() and a <b>Regex</b> - Working ... any <br>\nregexp that works as there are many email <b>validation</b> regexp <b>examples</b> online.", 
    "link": "https://www.developphp.com/page.php?id=224", 
    "cacheId": "m_mfba9ImKYJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Using Regular Expressions in PHP", 
    "displayLink": "www.sitepoint.com", 
    "htmlTitle": "Using <b>Regular Expressions</b> in <b>PHP</b>", 
    "formattedUrl": "www.sitepoint.com/regular-expressions-php/", 
    "htmlFormattedUrl": "www.sitepoint.com/<b>regular-expressions</b>-<b>php</b>/", 
    "pagemap": {
      "metatags": [
        {
          "twitter:creator": "@sitepointdotcom", 
          "og:url": "http://www.sitepoint.com/regular-expressions-php/", 
          "article:section": "Programming", 
          "og:type": "article", 
          "twitter:domain": "SitePoint", 
          "og:site_name": "SitePoint", 
          "fb:admins": "121300382", 
          "article:published_time": "2002-12-23T00:00:00+00:00", 
          "twitter:description": "Are you getting stuck on PHP's regular expressions? Look no further than James' down-and-dirty how-to, which tells you all the basics you need to know, and shows how to put them to good use!", 
          "og:locale": "en_US", 
          "og:description": "Are you getting stuck on PHP's regular expressions? Look no further than James' down-and-dirty how-to, which tells you all the basics you need to know, and shows how to put them to good use!", 
          "twitter:site": "@sitepointdotcom", 
          "og:title": "Using Regular Expressions in PHP", 
          "twitter:card": "summary", 
          "twitter:title": "Using Regular Expressions in PHP", 
          "article:publisher": "https://www.facebook.com/sitepoint", 
          "wp-parsely_version": "1.7", 
          "og:image": "http://www.sitepoint.com/wp-content/themes/sitepoint/assets/images/icon.programming.png", 
          "twitter:account_id": "15743570", 
          "viewport": "width=device-width, initial-scale=1.0"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.sitepoint.com/wp-content/themes/sitepoint/assets/images/icon.programming.png"
        }
      ]
    }, 
    "snippet": "Dec 23, 2002 ... There are a few common uses for regular expressions. Perhaps the most useful \nis form validation. For example, you could use regular\u00a0...", 
    "htmlSnippet": "Dec 23, 2002 <b>...</b> There are a few common uses for <b>regular expressions</b>. Perhaps the most useful <br>\nis form <b>validation</b>. For example, you could use <b>regular</b>&nbsp;...", 
    "link": "http://www.sitepoint.com/regular-expressions-php/", 
    "cacheId": "MRWaDoCoB20J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "html - RegEx in PHP - as an example, replace <B> tags with <I ...", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "html - <b>RegEx</b> in <b>PHP</b> - as an <b>example</b>, <b>replace</b> &lt;B&gt; tags with &lt;I <b>...</b>", 
    "formattedUrl": "stackoverflow.com/.../regex-in-php-as-an-example-replace-b-tags-with-i", 
    "htmlFormattedUrl": "stackoverflow.com/.../<b>regex</b>-in-<b>php</b>-as-an-<b>example</b>-<b>replace</b>-b-tags-with-i", 
    "pagemap": {
      "answer": [
        {
          "text": "Here is the very simple example: $regex = '~ <b> #match opening <b> tag (.*?) #match anything in between </b> #match closing </b> tag ~six'; preg_replace($regex, '<i>$1</i>', $input); In this...", 
          "upvotecount": "2"
        }, 
        {
          "text": "I would suggest you to look at some tutorial Videos, since reading them obviously didn't help, I could imagine that answering how to replace <B> with <I> wouldn't help neither. Here is video...", 
          "upvotecount": "-1"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I know next to nothing about RegEx, even after reading a few tutorials :\\ I basically just want to know how to replace tags with tags - so how do you match the tag and how do you state that you w...", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "RegEx in PHP - as an example, replace <B> tags with <I>", 
          "title": "RegEx in PHP - as an example, replace <B> tags with <I>"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/8256907/regex-in-php-as-an-example-replace-b-tags-with-i", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/8256907/regex-in-php-as-an-example-replace-b-tags-with-i", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/8256907/regex-in-php-as-an-example-replace-b-tags-with-i", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I know next to nothing about RegEx, even after reading a few tutorials :\\ I basically just want to know how to replace  tags with  tags - so how do you match the tag and how do you state that you w...", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/8256907/regex-in-php-as-an-example-replace-b-tags-with-i", 
          "twitter:card": "summary", 
          "twitter:title": "RegEx in PHP - as an example, replace <B> tags with <I>", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "2", 
          "text": "I know next to nothing about RegEx, even after reading a few tutorials :\\ I basically just want to know how to replace tags with tags - so how do you match the tag and how do you state that...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "RegEx in PHP - as an example, replace <B> tags with <I>", 
          "upvotecount": "1"
        }
      ]
    }, 
    "snippet": "Here is the very simple example: $regex = '~ <b> #match opening <b> tag (.*?) #\nmatch anything in between </b> #match closing </b> tag ~six';\u00a0...", 
    "htmlSnippet": "Here is the very simple <b>example</b>: $<b>regex</b> = &#39;~ &lt;b&gt; #match opening &lt;b&gt; tag (.*?) #<br>\nmatch anything in between &lt;/b&gt; #match closing &lt;/b&gt; tag ~six&#39;;&nbsp;...", 
    "link": "http://stackoverflow.com/questions/8256907/regex-in-php-as-an-example-replace-b-tags-with-i", 
    "cacheId": "U2QQczuHcSsJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "java - parse String with Regex - Stack Overflow", 
    "displayLink": "stackoverflow.com", 
    "htmlTitle": "<b>java</b> - <b>parse</b> String with <b>Regex</b> - Stack Overflow", 
    "formattedUrl": "stackoverflow.com/questions/7113603/parse-string-with-regex", 
    "htmlFormattedUrl": "stackoverflow.com/questions/7113603/<b>parse</b>-string-with-<b>regex</b>", 
    "pagemap": {
      "answer": [
        {
          "text": "Alternative 1: pattern.matcher(ISBN.replace(\"-\", \"\")) Alternative 2: Something like Pattern.compile(\"(\\\\d-?){13}\") Demo of second alternative: String ISBN = \"ISBN: 123-456-789-112-3, ISBN:...", 
          "upvotecount": "6"
        }, 
        {
          "text": "Try this: Pattern.compile(\"\\\\d(-?\\\\d){12}\")", 
          "upvotecount": "5"
        }, 
        {
          "text": "Use this pattern: Pattern.compile(\"(?:\\\\d-?){13}\") and strip all dashes from the found isbn number", 
          "upvotecount": "3"
        }, 
        {
          "text": "Do it in one step with a pattern recognizing everything, and optional dashes between digits. No need to fiddle with ISBN offset + substrings. ISBN(\\d(-?\\d){12}) If you want the raw number,...", 
          "upvotecount": "2"
        }, 
        {
          "text": "You can strip out the dashes with string manipulation, or you could use this: \"\\\\b(?:\\\\d-?){13}\\\\b\" It has the added bonus of making sure the string doesn't start or end with -.", 
          "upvotecount": "1"
        }, 
        {
          "text": "Try stripping the dashes out, and regex the new string", 
          "upvotecount": "0"
        }, 
        {
          "text": "If you're going to be calling the method a lot, the best thing you can do is not compile the Pattern inside it. Otherwise, each time you call the method you'll spend more time creating the...", 
          "upvotecount": "0"
        }
      ], 
      "qapage": [
        {
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "description": "I have an extremely long string that I want to parse for a numeric value that occurs after the substring \"ISBN\". However, this grouping of 13 digits can be arranged differently via the \"-\" character.", 
          "primaryimageofpage": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "name": "parse String with Regex", 
          "title": "parse String with Regex"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a"
        }
      ], 
      "metatags": [
        {
          "og:url": "http://stackoverflow.com/questions/7113603/parse-string-with-regex", 
          "twitter:app:url:iphone": "se-zaphod://stackoverflow.com/questions/7113603/parse-string-with-regex", 
          "twitter:app:url:ipad": "se-zaphod://stackoverflow.com/questions/7113603/parse-string-with-regex", 
          "twitter:app:country": "US", 
          "twitter:domain": "stackoverflow.com", 
          "twitter:description": "I have an extremely long string that I want to parse for a numeric value that occurs after the substring \"ISBN\". However, this grouping of 13 digits can be arranged differently via the \"-\" character.", 
          "og:type": "website", 
          "twitter:app:name:iphone": "Stack Exchange iOS", 
          "twitter:app:name:ipad": "Stack Exchange iOS", 
          "twitter:app:id:ipad": "871299723", 
          "twitter:app:name:googleplay": "Stack Exchange Android", 
          "twitter:app:url:googleplay": "http://stackoverflow.com/questions/7113603/parse-string-with-regex", 
          "twitter:card": "summary", 
          "twitter:title": "parse String with Regex", 
          "twitter:app:id:googleplay": "com.stackexchange.marvin", 
          "og:image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a", 
          "twitter:app:id:iphone": "871299723"
        }
      ], 
      "question": [
        {
          "answercount": "7", 
          "text": "I have an extremely long string that I want to parse for a numeric value that occurs after the substring \"ISBN\". However, this grouping of 13 digits can be arranged differently via the \"-\"...", 
          "image": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69", 
          "name": "parse String with Regex", 
          "upvotecount": "3"
        }
      ]
    }, 
    "snippet": "I have an extremely long string that I want to parse for a numeric ... Essentially, I \nwant to use a regex pattern matcher on the potential ISBN to\u00a0...", 
    "htmlSnippet": "I have an extremely long string that I want to <b>parse</b> for a numeric ... Essentially, I <br>\nwant to use a <b>regex pattern</b> matcher on the potential ISBN to&nbsp;...", 
    "link": "http://stackoverflow.com/questions/7113603/parse-string-with-regex", 
    "cacheId": "s7Xh6W1Uns0J"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Parsing regular expressions with recursive descent", 
    "displayLink": "matt.might.net", 
    "htmlTitle": "<b>Parsing regular expressions</b> with recursive descent", 
    "formattedUrl": "matt.might.net/articles/parsing-regex-with-recursive-descent/", 
    "htmlFormattedUrl": "matt.might.net/articles/<b>parsing</b>-<b>regex</b>-with-recursive-descent/", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=480, initial-scale=1"
        }
      ]
    }, 
    "snippet": "Alternatively, one could match regular expressions with derivatives. ... In order to \nparse, we need a context-free grammar for regular expressions. .... regular \nexpressions and NFAs in Java \u00b7 Parsing M-Expressions in Scala with \ncombinators\u00a0...", 
    "htmlSnippet": "Alternatively, one could <b>match regular expressions</b> with derivatives. ... In order to <br>\n<b>parse</b>, we need a context-free grammar for <b>regular expressions</b>. .... <b>regular</b> <br>\n<b>expressions</b> and NFAs in <b>Java</b> &middot; <b>Parsing</b> M-<b>Expressions</b> in Scala with <br>\ncombinators&nbsp;...", 
    "link": "http://matt.might.net/articles/parsing-regex-with-recursive-descent/", 
    "cacheId": "JQzSenLKcqoJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Regular Expressions", 
    "displayLink": "introcs.cs.princeton.edu", 
    "htmlTitle": "<b>Regular Expressions</b>", 
    "formattedUrl": "introcs.cs.princeton.edu/java/72regular/", 
    "htmlFormattedUrl": "introcs.cs.princeton.edu/<b>java</b>/72regular/", 
    "pagemap": {
      "metatags": [
        {
          "msvalidate.01": "D4B7F6DF793EFF34DE96F611C2A367A5", 
          "title": "Regular Expressions. Introduction to Programming in Java by Sedgewick and Wayne", 
          "author": "Robert Sedgewick and Kevin Wayne"
        }
      ]
    }, 
    "snippet": "Oct 23, 2012 ... There are five basic operations for creating regular expressions, and the table \nbelow .... We use a Java regular expression to parse each line.", 
    "htmlSnippet": "Oct 23, 2012 <b>...</b> There are five basic operations for creating <b>regular expressions</b>, and the table <br>\nbelow .... We use a <b>Java regular expression</b> to <b>parse</b> each line.", 
    "link": "http://introcs.cs.princeton.edu/java/72regular/", 
    "cacheId": "2HJdLzik-1YJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Writing own regular expression parser - CodeProject", 
    "displayLink": "www.codeproject.com", 
    "htmlTitle": "Writing own <b>regular expression parser</b> - CodeProject", 
    "formattedUrl": "www.codeproject.com/.../Writing-own-regular-expression-parser", 
    "htmlFormattedUrl": "www.codeproject.com/.../Writing-own-<b>regular-expression</b>-<b>parser</b>", 
    "pagemap": {
      "aggregaterating": [
        {
          "ratingvalue": "4.91", 
          "ratingcount": "129", 
          "worstrating": "1", 
          "bestrating": "5"
        }
      ], 
      "metatags": [
        {
          "rating": "General", 
          "viewport": "width=device-width, initial-scale=1.0", 
          "google-translate-customization": "d908bb7ce7aff658-4c2f3a504525c916-g629383f736781a8a-13", 
          "application-name": "CodeProject", 
          "author": "Amer Gerzic"
        }
      ], 
      "person": [
        {
          "name": "Amer Gerzic"
        }
      ], 
      "article": [
        {
          "articlebody": "Download source files - 8.48 Kb Download demo project - 22.9 Kb Introduction Have you ever wondered how regular expressions work in detail? If the answer is yes then this article is right for...", 
          "name": "Writing own regular expression parser", 
          "url": "Permalink", 
          "datepublished": "2003-11-10", 
          "articlesection": "Algorithms & Recipes", 
          "datemodified": "2003-11-15 00:00:00"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "369", 
          "src": "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcRBrpMT-36HNJVBdMZodaNIm7W5_hmkct6wzo4Im0N8XGLiCgkVicEa0yHn", 
          "height": "137"
        }
      ], 
      "cse_image": [
        {
          "src": "http://www.codeproject.com/KB/recipes/OwnRegExpressionsParser/RegExDemo.jpg"
        }
      ], 
      "hreviewaggregate": [
        {
          "votes": "129"
        }
      ]
    }, 
    "snippet": "Nov 9, 2003 ... Regular expressions are part of MS .NET library or Java SDK (if you write code in \nJava). As you can see, regular expressions are available in\u00a0...", 
    "htmlSnippet": "Nov 9, 2003 <b>...</b> <b>Regular expressions</b> are part of MS .NET library or <b>Java</b> SDK (if you write code in <br>\n<b>Java</b>). As you can see, <b>regular expressions</b> are available in&nbsp;...", 
    "link": "http://www.codeproject.com/Articles/5412/Writing-own-regular-expression-parser", 
    "cacheId": "Nul2YzENG3wJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Writing a Parser in Java: The Tokenizer | Cogito Learning", 
    "displayLink": "cogitolearning.co.uk", 
    "htmlTitle": "Writing a <b>Parser</b> in <b>Java</b>: The Tokenizer | Cogito Learning", 
    "formattedUrl": "cogitolearning.co.uk/?p=525", 
    "htmlFormattedUrl": "cogitolearning.co.uk/?p=525", 
    "pagemap": {
      "metatags": [
        {
          "viewport": "width=device-width"
        }
      ], 
      "cse_thumbnail": [
        {
          "width": "225", 
          "src": "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQYnHXFbm6wiqD44AS3Sb3GNbv_6_HvDH_dtlADa_AqZQSsX6fBEyX1T_A", 
          "height": "225"
        }
      ], 
      "cse_image": [
        {
          "src": "http://cogitolearning.co.uk/wp-content/uploads/2013/10/tewter512.png"
        }
      ], 
      "hcard": [
        {
          "photo": "http://1.gravatar.com/avatar/9d0dff1a49143af5f0a317e9c7746670?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G", 
          "nickname": "roshan", 
          "fn": "roshan"
        }, 
        {
          "url": "http://www.cogitolearning.co.uk/", 
          "photo": "http://1.gravatar.com/avatar/faae426ef8baa2c4ad0d063cc60d9d00?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G", 
          "url_text": "cogitolearning", 
          "nickname": "cogitolearning", 
          "fn": "cogitolearning"
        }, 
        {
          "photo": "http://0.gravatar.com/avatar/ceb52ea504f2e08c347e90bb50dd22ec?s=44&d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G", 
          "fn": "__init__"
        }, 
        {
          "photo": "http://0.gravatar.com/avatar/ceb52ea504f2e08c347e90bb50dd22ec?s=44&d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G", 
          "fn": "__init__"
        }, 
        {
          "photo": "http://1.gravatar.com/avatar/b6ded996c84e6a948185823615c5c7cd?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G", 
          "nickname": "Roberto", 
          "fn": "Roberto"
        }, 
        {
          "photo": "http://1.gravatar.com/avatar/da8c4a5f60b3858aaa4fd6f662a2483c?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G", 
          "nickname": "Mikail", 
          "fn": "Mikail"
        }, 
        {
          "photo": "http://1.gravatar.com/avatar/70136f8472fcccaa4f8f071c4a10372f?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G", 
          "nickname": "Luricos", 
          "fn": "Luricos"
        }, 
        {
          "photo": "http://1.gravatar.com/avatar/789338b72f8a140c583ce6155f3face2?s=44&d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&r=G", 
          "nickname": "Bibi", 
          "fn": "Bibi"
        }
      ]
    }, 
    "snippet": "Apr 8, 2013 ... import java.util.regex.Pattern; public class Tokenizer { private class TokenInfo { \npublic final Pattern regex; public final int token; public\u00a0...", 
    "htmlSnippet": "Apr 8, 2013 <b>...</b> import <b>java</b>.util.<b>regex</b>.<b>Pattern</b>; public class Tokenizer { private class TokenInfo { <br>\npublic final <b>Pattern regex</b>; public final int token; public&nbsp;...", 
    "link": "http://cogitolearning.co.uk/?p=525", 
    "cacheId": "2w8rthZRm7QJ"
  }, 
  {
    "kind": "customsearch#result", 
    "title": "Java Practices -> Parse text", 
    "displayLink": "www.javapractices.com", 
    "htmlTitle": "<b>Java</b> Practices -&gt; <b>Parse</b> text", 
    "formattedUrl": "www.javapractices.com/topic/TopicAction.do?Id=87", 
    "htmlFormattedUrl": "www.<b>java</b>practices.com/topic/TopicAction.do?Id=87", 
    "snippet": "Parse text. There are various ways of parsing text. The usual tools are: .... This \nexample demonstrates use of regular expressions, by parsing a fully-qualified\u00a0...", 
    "htmlSnippet": "<b>Parse</b> text. There are various ways of <b>parsing</b> text. The usual tools are: .... This <br>\n<b>example</b> demonstrates use of <b>regular expressions</b>, by <b>parsing</b> a fully-qualified&nbsp;...", 
    "link": "http://www.javapractices.com/topic/TopicAction.do?Id=87", 
    "cacheId": "s5UQaGcHi_gJ"
  }
]