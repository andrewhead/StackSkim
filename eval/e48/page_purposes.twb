<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='classes' inline='true' name='textscan.42224.345866956000' version='8.3'>
      <connection class='textscan' directory='/Users/andrew/Adventures/design/code/research/eval/e48' filename='classes.csv'>
        <relation name='classes_with_tags#csv' table='[classes_with_tags#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='|'>
            <column datatype='string' name='Link' ordinal='0' />
            <column datatype='string' name='Purpose' ordinal='1' />
            <column datatype='string' name='F3' ordinal='2' />
            <column datatype='string' name='F4' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Link]</local-name>
            <parent-name>[classes_with_tags#csv]</parent-name>
            <remote-alias>Link</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purpose</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Purpose]</local-name>
            <parent-name>[classes_with_tags#csv]</parent-name>
            <remote-alias>Purpose</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[classes_with_tags#csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[classes_with_tags#csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[classes_with_tags#csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[classes_with_tags#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;|&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[F2]' role='dimension' type='nominal'>
      </column>
      <column caption='Tag1' datatype='string' name='[F3]' role='dimension' type='nominal'>
      </column>
      <column caption='Tag2' datatype='string' name='[F4]' role='dimension' type='nominal'>
      </column>
      <column caption='Tag3' datatype='string' name='[F5]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Purpose]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[Purpose]' derivation='None' name='[none:Purpose:nk]' pivot='key' type='nominal' />
      <group name='[Tag1, Tag3, Tag2 (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[F3]' />
          <groupfilter function='level-members' level='[F5]' />
          <groupfilter function='level-members' level='[F4]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Purpose:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Cheatsheet&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;End use, no lesson&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tool&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Library&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Introduction and task&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Introduction&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;No Regex&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;End use, lesson&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='tag_purposes' inline='true' name='textscan.42224.373263113400' version='8.3'>
      <connection class='textscan' directory='/Users/andrew/Adventures/design/code/research/eval/e48' filename='tag_purposes.csv'>
        <relation name='tag_purposes#csv' table='[tag_purposes#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='en_US' separator='|'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[tag_purposes#csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[tag_purposes#csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[tag_purposes#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;|&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Tag' datatype='string' name='[F1]' role='dimension' type='nominal'>
      </column>
      <column caption='Purpose' datatype='string' name='[F2]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Purpose (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[F2]'>
          <bin value='&quot;Cheatsheet&quot;'>
            <value>&quot;Cheatsheet&quot;</value>
            <value>&quot;Introduction&quot;</value>
            <value>&quot;Introduction and task&quot;</value>
            <value>&quot;Library&quot;</value>
            <value>&quot;No Regex&quot;</value>
            <value>&quot;Tool&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;Cheatsheet&quot;' value='Not End Use' />
        </aliases>
      </column>
      <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:F2:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Cheatsheet&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;End use, no lesson&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tool&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Library&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Introduction and task&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Introduction&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;No Regex&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;End use, lesson&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Purpose (group)]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Cheatsheet&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;End use, no lesson&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tool&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Library&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Introduction and task&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Introduction&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;No Regex&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;End use, lesson&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Counts of Page Purposes'>
      <table>
        <view>
          <datasources>
            <datasource caption='classes' name='textscan.42224.345866956000' />
          </datasources>
          <datasource-dependencies datasource='textscan.42224.345866956000'>
            <column datatype='string' name='[Purpose]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Purpose]' derivation='Count' name='[cnt:Purpose:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purpose]' derivation='None' name='[none:Purpose:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[textscan.42224.345866956000].[none:Purpose:nk]' direction='DESC' using='[textscan.42224.345866956000].[cnt:Purpose:qk]'>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.42224.345866956000].[cnt:Purpose:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42224.345866956000].[cnt:Purpose:qk]</rows>
        <cols>[textscan.42224.345866956000].[none:Purpose:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Purpose of Tags: End User and Other'>
      <table>
        <view>
          <datasources>
            <datasource caption='tag_purposes' name='textscan.42224.373263113400' />
          </datasources>
          <datasource-dependencies datasource='textscan.42224.373263113400'>
            <column caption='Tag' datatype='string' name='[F1]' role='dimension' type='nominal'>
            </column>
            <column caption='Purpose' datatype='string' name='[F2]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Purpose (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[F2]'>
                <bin value='&quot;Cheatsheet&quot;'>
                  <value>&quot;Cheatsheet&quot;</value>
                  <value>&quot;Introduction&quot;</value>
                  <value>&quot;Introduction and task&quot;</value>
                  <value>&quot;Library&quot;</value>
                  <value>&quot;No Regex&quot;</value>
                  <value>&quot;Tool&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;Cheatsheet&quot;' value='Not End Use' />
              </aliases>
            </column>
            <column-instance column='[F2]' derivation='Count' name='[cnt:F2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[F2]' derivation='Count' name='[pcto:cnt:F2:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <sort class='manual' column='[textscan.42224.373263113400].[Purpose (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;No Regex&quot;</bucket>
              <bucket>&quot;Tool&quot;</bucket>
              <bucket>&quot;Library&quot;</bucket>
              <bucket>&quot;Introduction&quot;</bucket>
              <bucket>&quot;Introduction and task&quot;</bucket>
              <bucket>&quot;End use, lesson&quot;</bucket>
              <bucket>&quot;End use, no lesson&quot;</bucket>
              <bucket>&quot;Cheatsheet&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.42224.373263113400].[none:F1:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:F1:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;android&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;apache&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;arrays&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;asp.net&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;boost&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;c++&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;django&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;mysql&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;node.js&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;pattern-matching&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;preg-match-all&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;preg-replace&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;regex&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;ruby&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;ruby-on-rails&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;shell&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;split&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;url&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[textscan.42224.373263113400].[none:F1:nk]' direction='DESC' using='[textscan.42224.373263113400].[cnt:F2:qk]'>
          </sort>
          <slices>
            <column>[textscan.42224.373263113400].[none:F1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.42224.373263113400].[pcto:cnt:F2:qk:5]' value='p0%' />
            <format attr='font-size' field='[textscan.42224.373263113400].[pcto:cnt:F2:qk:5]' value='6' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42224.373263113400].[Purpose (group)]' />
              <text column='[textscan.42224.373263113400].[pcto:cnt:F2:qk:5]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42224.373263113400].[pcto:cnt:F2:qk:5]</rows>
        <cols>[textscan.42224.373263113400].[none:F1:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Purposes for One Column of Tags'>
      <table>
        <view>
          <datasources>
            <datasource caption='classes' name='textscan.42224.345866956000' />
          </datasources>
          <datasource-dependencies datasource='textscan.42224.345866956000'>
            <column caption='Tag1' datatype='string' name='[F3]' role='dimension' type='nominal'>
            </column>
            <column caption='Tag2' datatype='string' name='[F4]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Purpose]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Purpose]' derivation='Count' name='[cnt:Purpose:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F3]' derivation='None' name='[none:F3:nk]' pivot='key' type='nominal' />
            <column-instance column='[F4]' derivation='None' name='[none:F4:nk]' pivot='key' type='nominal' />
            <column-instance column='[Purpose]' derivation='None' name='[none:Purpose:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.42224.345866956000].[none:Purpose:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;No Regex&quot;</bucket>
              <bucket>&quot;Tool&quot;</bucket>
              <bucket>&quot;Cheatsheet&quot;</bucket>
              <bucket>&quot;Library&quot;</bucket>
              <bucket>&quot;Introduction&quot;</bucket>
              <bucket>&quot;Introduction and task&quot;</bucket>
              <bucket>&quot;End use, lesson&quot;</bucket>
              <bucket>&quot;End use, no lesson&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42224.345866956000].[none:Purpose:nk]' />
              <lod column='[textscan.42224.345866956000].[none:F4:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42224.345866956000].[cnt:Purpose:qk]</rows>
        <cols>[textscan.42224.345866956000].[none:F3:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Purposes of Tags'>
      <table>
        <view>
          <datasources>
            <datasource caption='tag_purposes' name='textscan.42224.373263113400' />
          </datasources>
          <datasource-dependencies datasource='textscan.42224.373263113400'>
            <column caption='Tag' datatype='string' name='[F1]' role='dimension' type='nominal'>
            </column>
            <column caption='Purpose' datatype='string' name='[F2]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[F2]' derivation='Count' name='[cnt:F2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
            <column-instance column='[F2]' derivation='Count' name='[pcto:cnt:F2:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42224.373263113400].[none:F1:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:F1:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;android&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;apache&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;arrays&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;asp.net&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;boost&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;c++&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;django&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;mysql&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;node.js&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;pattern-matching&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;preg-match-all&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;preg-replace&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;regex&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;ruby&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;ruby-on-rails&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;shell&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;split&quot;' />
                <groupfilter function='member' level='[none:F1:nk]' member='&quot;url&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[textscan.42224.373263113400].[none:F1:nk]' direction='DESC' using='[textscan.42224.373263113400].[cnt:F2:qk]'>
          </sort>
          <sort class='manual' column='[textscan.42224.373263113400].[none:F2:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;No Regex&quot;</bucket>
              <bucket>&quot;Tool&quot;</bucket>
              <bucket>&quot;Cheatsheet&quot;</bucket>
              <bucket>&quot;Library&quot;</bucket>
              <bucket>&quot;Introduction&quot;</bucket>
              <bucket>&quot;Introduction and task&quot;</bucket>
              <bucket>&quot;End use, lesson&quot;</bucket>
              <bucket>&quot;End use, no lesson&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.42224.373263113400].[none:F1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.42224.373263113400].[pcto:cnt:F2:qk:5]' value='p0%' />
            <format attr='font-size' field='[textscan.42224.373263113400].[pcto:cnt:F2:qk:5]' value='6' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42224.373263113400].[none:F2:nk]' />
              <text column='[textscan.42224.373263113400].[pcto:cnt:F2:qk:5]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42224.373263113400].[cnt:F2:qk]</rows>
        <cols>[textscan.42224.373263113400].[none:F1:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Counts of Page Purposes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42224.345866956000].[none:Purpose:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Purposes for One Column of Tags'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42224.345866956000].[none:Purpose:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42224.345866956000].[none:F4:nk]</field>
          <field>[textscan.42224.345866956000].[none:F5:nk]</field>
          <field>[textscan.42224.345866956000].[none:Purpose:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Purposes of Tags'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42224.373263113400].[none:F2:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight field='[textscan.42224.373263113400].[none:F2:nk]'>
        <color-one-way>
          <field>[textscan.42224.373263113400].[cnt:F2:qk]</field>
          <field>[textscan.42224.373263113400].[none:F1:nk]</field>
          <field>[textscan.42224.373263113400].[none:F2:nk]</field>
        </color-one-way>
        <bucket-selection>
          <bucket>&quot;Cheatsheet&quot;</bucket>
          <bucket>&quot;Introduction&quot;</bucket>
          <bucket>&quot;Introduction and task&quot;</bucket>
          <bucket>&quot;Library&quot;</bucket>
          <bucket>&quot;No Regex&quot;</bucket>
          <bucket>&quot;Tool&quot;</bucket>
        </bucket-selection>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Purpose of Tags: End User and Other'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42224.373263113400].[Purpose (group)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42224.373263113400].[Purpose (group)]</field>
          <field>[textscan.42224.373263113400].[cnt:F2:qk]</field>
          <field>[textscan.42224.373263113400].[none:F1:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Counts of Page Purposes' width='384'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Purposes for One Column of Tags' width='384'>
      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
      AIiINOr/AxkPf31xgzbyAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Purposes of Tags' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Purpose of Tags: End User and Other' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOzdd3RcVZ7o++85p7JKpZyDZQXnIAewccKGNiaa4G5iNzTQuWem33vzz3vr
      3rfWzH1r1np35k3P3Lkzt4emm44kAw0NNA0NBieMc8Q5KNlWlkoqqeIJ7w+B27RtSaZKKpXq
      91mLbqqo+p2fpKr9O3ufffZWLMuyEEIIkXbUZCcghBAiOaQACCFEmpICIIQQaUoKgBBCpCkp
      AEIIkaakAAghRJqyJTsBIcTYiITDGKY59EBRcbtcKEpycxITixQAISYli63vvcWnJ0/S5o8y
      Y8Y0HnzkUdyaBYqKqihYloVlWaiqDASkK0VuBBNi8mr+9BO2nOzjGxtu58CO99m6/xShwTBP
      Pv0NXn7+N1gWZBbX8dTD65OdqkgCKf1CpAkLB9VTq4gE2tn18XYq56ziqW88RF93T7JTE0ki
      BUCItGCybfNWyipryPFlYHc66ezooKuzk5iZ7NxEskgBEGIS8+YWUVtVASisXL2C3R9vobhq
      BhVTpuHVu/lo+27sTnuy0xRJItcAhEhDga4L/PSXL+G0qyxefRdL509LdkoiCaQACJGmTMPA
      BGyaluxURJJIARBCiDQ1Ye4DMAyDvr4+HA5HslMRQoi0MGEKAIDL5cLj8SQ7DSGESAsyC0gI
      IdKUFAAhhEhTUgCEECJNSQEQQog0JQVACCHSlBQAIYRIU1IAhBAiTUkBEEKINCUFQAgh0pQU
      ACGESFPxFwDLwvxs42nLsjAMk89XlzNNE9McemQYxqUNqg3DQNagE0KI5Ip7LaCGY/vZ19DN
      hjtv5Y2Xf0NLZz/zlqyhviqLX7/4OyzVzjee+DqvvfA8psvHNx95gFde/T0PP/owNiURP4IQ
      QogvI64C0HfxHK+98wEZRdUM9LbS2At/9Z0n+befPEegwcfydQ9g7z7Olo93EXPmk0GAXds+
      pHLWAmyqtP5CCJFMcRWArNJqvvPkI7z8zi6ioQDZ+fnYnS7smkL/YIh5+fnYlVyO94SYXuxB
      t2dz+HQD02Im2/dEWHHDfDo6OrAsC8uy8Pl8Q4EH2mH/b+P7yRRg5d9e+XxPA3z6u/hiOzyw
      9PtXPt9+FE6+G1/sjHxY9MSVz5/fA+e2xhc7pxLmfu3K5xu2QMve+GLPuAMKZ135/M6fQDQY
      X+y5GyCn6oqnnz38bHxxgQfqHiDPnffFJ6ODsPM/447Nku+C0/uFp3rCPbx26rW4Qz8992lU
      5S9GcP3NcPiV+ALbXXDTD694+lR7gPePtccVOsfj4NEllVf+hwv74exHccUmuxzmPXTl843b
      oXlXfLELpsHMe658/tSfoO1IfLFL66H21iufP/oGdJ+NL/aCxyCz+AtPRfQIvz7260uPE7Yc
      tMOTSX93N7FIBN2wyMrMoKenB1tPL57MPG5ds5IdH7zFzLnTaWruI3jmY266YT6FhYXA0HWB
      SCQyFCzQBh/+tzgzUq5RAM7GH9tbePUC0HY4/thFs69eAJo/iT929eqrF4DTH8COf4svdnb5
      1QvAtn+Gwc74YpctuGoB+LcDceYMrCpfdZUCEEzA54+hL+BfFIDuUHdC8n5qzlNDJzmX62mI
      P2937lULwInWfv7pvZNxha4t9F69ALTsij/vKSuuXgDOfjj0GYzH7PuvXgBOvAX7f33l89fj
      xm9fvQAcfglO/jG+2DVrrigAYSP8hc9f3BeBNZuDvNxsvNnFlPkM/td/Pkv90jUsX7mazW9v
      5IPdJ1m+eDZ6NMTpCwGWLVpAqLsZuzdXpiAJIUQSxd0DyMgu5oG7h6rMhkefxDRNtM/2GP3R
      //6/gaKgKgqWZfLoow9it9v57ve/C6rtihOYieLzGUqKMlEzFEKI+CX0JFxRlEuNP4Cqqqif
      NaKKomK32wGw2R3YtIl3/h+KDTX8H5wz+N1xHcOUqapCiMlrQm0JmWzn+032XjQJ6xY5bgXp
      AAghJrOJdxqeRCZgAbnu1Gz5tzXpHGk3kp2GECJFSA/gMlEdnBrcWK6R71Ym7DWKv7StScfj
      UDjUbpDnVplbpI38JiFE2pMewGXCBswtUvnFgRjPH4klO51Rq85R+bTdINulUF8sf1IhxOhI
      a3GZJr/JxqM6d0+zEdLBSJFrwDtaDPojFnfV2clwpEq/RQiRbDIEdJn7Ztho8lvYNVhbbUuZ
      5SpKMxWWVdjJcSvkpOj1CyHE+JMCcBmbqlCTm3oN6KcdJk19Fp2DMZaUaywtlz+rEGJk0lJM
      AtPzVVZX2TBMi95wioxbCSGSTgrAJLC6aujPqKkK+Z7U68EIIZJDLgKLpDAtC9OyONdr8sKR
      GC19ZrJTEiLtSA9AJEXMgDdP6tg1cNsgRa63CzGppF0BuGiz8ZHPO/ILh+H2eHkgQfmkK00F
      mwpRY6gATMCloYSY9NKuADTY7fy/eblxxch3Z0sBiJNhQmfQojpH5dapGhFZwUKIcSfnXSIp
      7BpkORU6gxb//EmUsJ7sjIRIP1IARFJEDRiMWRRnKKypsnG8S7oAQoy3lC0ALX0mW5t0TEvm
      vacipwYrKzVWV2k4bbC4RBawE9d2uN3gsKx0m3Apdw2g0W/SGjC5ELDoClosKNbIdCY7q7H3
      utfLc2UlccWoz8/j/0lQPvEyLNh4VCfLNTT9J9ulUO6TqUDii3Zf0Ml2KWxvNsh0wDxZ6Tah
      Uq4AlGYqHGqzMExYWq6R4Uh2RuOjT1VpdNjjilFsmzhfHk2BlVM0FpZoeOxX7m8uBMC0PI23
      TsYoylBYXDpxPr+TRcoNAe2+YHCs06Q6RyXLpRCVXmFKUhSFVVNseB1De0bL/sviav5wSqe5
      z2LVFI1IqizPm0JSrgdQmaXylWqFxaWqNBpCTHJ1eSorp2jkexQKMlLufHXCS7kCcLLL5Fin
      we4LCnOLVJZXaGhyG6kQk9K+iwaKAnZ1aKe+uYWJHwZq6DXJcEBhChWYqGFxrNNkXpGKGseJ
      cMoVgDyPwoOz7eR7FBr9JtIpFGLyqspWWVerEYpB+2Biv+17LxrU5qq8djxGsVfh6/Mm/gXF
      vvDQ+lkdgxYt/SYuG8zI//JFMeUKQIVP4dOOoYXD7BpMzUlyQhOA2+YmpIe4a+pd9EX72H5h
      e7JTEiIhanNVtjQOXehL9GZHdbkqfzqrU+JVuKMuvgkW4yXLpRAxLPzhobvop+fF12tJaJ/H
      skxi+p9v6TQMA8Mcaqz1WJSYPvSHjEajWF9y/r7TprC1SSffo5CbQhu3j6Upvimsq1qH1+Fl
      MDaY7HSESBgLiwNtBvkeBZ8zsd/210/EaPSb3FFn40xPaqxG2z5gsr3ZQFOh3KfQNhBfryhh
      PQAjFuaXP3uGkKFSO+8mbqjJ5VcvvQGoPP7k47zywgvg8vLkY19j4ytv8OjXH8X2Jf6ePqfC
      f1nlTJntGseDU3NiU2w0B5pxamlwU4RIG9PyNP5miTom3/e11TY2N+o0+i0WlqTG+H9BhsL8
      Io2YaeF1KJRkTpAeQH/3eULOYn7w3W/x6d5tbNvyEbfe8xC3L5/D1h17MFx5OJUYOza/T239
      0rj+oNL4f5FhGQzGBtnfvp9drbuSnY4QCTVW3/f3z+lMy9PQTfjlwdiYHCPR+sJwqtukPFPl
      7VM6Tf74ei4J6wG4vTn0NB7jtd8ZnGvppCjTQXZODnYzi1hHiPrqfGJqEUePn6EqtI9NgV5u
      Xb6Yjo4OLMvCsix8Pl+i0kkrtdm19Ef60U0dSy6LCzEqtbkqh9oNYiZUZaXGSaXHDg4Ndl80
      CMYsMuMcFktYD0Czu1l161dYsGAB1eXF5OVk0tnRSXtHJ96sTFbc8hW0cB9z62fSHc3g5P49
      GEBhYSFFRUUUFBQkKpW0oykaJ3tP8tD0h1hVvirZ6QiREhSGZtXcN92GQ0uNAgBgWpDpVLij
      1kYgEt8JX+IKgGajteEEf3zvA1bddgfLb76VnZve4OMjLaxYPAs9GqKpK8KS+npC3Q04swpS
      7zbkCWrbhW1cGLjACydeYOv5rclOZ8KwqTZqsmqSnYaYoI52mjy1wMHLR2McSpGF5vxhi2yX
      QlWWwq8PxfCHJ8hFYNXm4OEnvoUFl25M+OFf/w0wdNu/ZVk8+sjX0DSNb3/v+yiKKjN4EqQj
      2JHsFCYUr91LcUYxRZ4iijOKiZkxmgPNyU5LTDB3T7MRiFp8e6GDA22pUQAKMxSqc1QWlao4
      bQolmfG1ogm9D0BRvjgt8/KlGhRFQdOGblj4/P+FGAsDsQG8di9eh5fmQLM0/uKqSi+bQbOi
      MjVuiVIUhRvKhtrP+uL421EZhRkn/rCFYVr89nCUZ/dFk53OpFbgLmB2/mxiZozuUDe5rvi2
      ABViskqNsjcJ9IYsPmwY6mYulGVtx1RvpJdj3ceIGlF0U6cn3JPslISYkKQAjJPOoEVf2GJm
      gUrHgAmkRxHoU1VMNb6OpheF67lRP9eVi0tzsax0GRcCF4gYEdqD7XHlIMRkJAVgnGTYIcOh
      MKdQw+tIn8vf68tL6AnHd3fyM24ny67j9cFYkOrsaloHW9EtnaAejOv4QkxWUgDGye4LBgNR
      i1DMIsOO7GUwhiJGhLAepifUQ1N/E27NTYBAstMSYsKRAjBOnDaFtTU2PjhnYFPha7Ovb/VB
      y8jECJXHlYMZTY+b7XKcOfgjfvqifdxdczd/OPcHOkIyVVaIvyQFYJwsLdc40m5w/0wb5/uv
      /+aNWN8Cgo1/FVcOEVt+XO9PFR2hDjpDnRzuPEzMjNEb7k12SkJMSFIAxsneiwbVOSr/a08U
      l02hNnfibz6Ryg53Hgbg065Pk5yJEBOX3AcwTuYUqkQNi0fn2umPc/0OIYRIBOkBjJNZBX+e
      9vl/rpA1+4UQySc9ACGESFNSAIQQIk1JARBCiDQlBUAIIdKUFAAhhEhTUgCEECJNTchpoKcd
      dr5XURpXDEVR+SBB+YixY1NtzMqbxbHuY+imnux0RBL8LtPLf8T5fZ9flM+PE5RPOpmQBUBH
      ocMWX2qKbDg5oTk0B3Pz5qKqKmXeMiJ6hJO9J5OdlkiCoBL/9703ziXH05X81kRSRI0og/og
      ea482gbbOO0/neyUhEg7UgBEUrg0F2sq1mBTbZzxn6HAnR4rlQoxkUgBEEkRNsJsOb+Fgx0H
      KfeW0xGU5ZrF5GJZFkfaDToGzWSnck1SAERS2FU7S4qXcHf13eS4cpiROyPZKQmREJZl8XGz
      TnfI4p3TOtuajWSndE1SAERS6KZOc6CZn3/6c2JmjM5QZ7JTEiIhFEWhLk/lowaDyiyV26on
      5FwbIMEFwDJNIpEony92rOsxdGOo+kUjYSLRGADhcAjLkiWR0905/znKveVcCFxgIDqQ7HSE
      SAjLsth4VOdUj8n9M22c7Z24Q0AJK02mEeNXz/wHQVOjpLaelbOK+cVLvwfL4omnn+SV518E
      l4envvEgL2/8PY8//hiazNRMaxumbWBP2x6iRpTucDdhI5zslISIm6IorJ9uY1uzzuF2k4Ul
      E3egJXEFQI/Q6Q9x77138PaH+7H1nOSODV/H0XOcbZ/sxXTl4FGDbN/0HrOXrERTpfVPZxYW
      P973YyzLwiJ1eoOGaaEqcKjd5GinyT3TbPicE/+zbJgWmqqwpUmnLWCxYZYNm3wHx8w7p3Vu
      nqIR0uH5wzGeqJ+YOwAmrAAYhk44OsjOXXtQnW5CkQC+LB/2mBejVeOmOZVEUTh4+AQlA1vp
      aqvhjjXL6OzoGGoELAufz5eodEQKMK2J2zW+lp6QxeZGA4cGbhspc7thg9/iYJuOTQWPPXXy
      jtdmj5sdeTlxxZjpzeD+63zP9HyVbc0GUcNiYYk28hv+wiuZXk7HmfeTNhslI7wmYQVg0N9O
      VtkMHvv6A/zjj/8Db00xrRda0bpb8eVM4Ybl8/jw7VepXzSbc00B2o8ewlyzjMLCQgAMwyAS
      iSQqHSHGhP2zcUvDAocGSoq0pE4NYgbYVXCk0djrYaeTF32ZccVY53ZfdwFwqFDkVTjSbn2p
      HuJWj5vNceZ9r6aNWAASNjiVXTiVCp/JMz99jiUr1rDq1rUc+viP7DvbzYrFM9GjQdoCCovn
      zSPcdRZPbolMQRIppz9iMRizqMpWuaPWhuP6T+6SojNoETEsFpRorK7SUqZwpSqPQ+FklwlY
      lHgnbkuXsB6AanNw/4PfAIYuggB85/s/vPTYsuw88vAGFEXhW9/7/tDziTq4EOOkMEPBsOBE
      l8n2Zp0f3jAxx3b/UmWWwr5W+KhBR1HgG/PsyU5pUltQrFGXq/LeGZ08z8Rt6RI6QVX5i9OK
      yx9f69+FSCXn+y3KMhW8DgVVUekOWRRmTPzP86luk1n5KjYNDreb6CbYU6T3kqq8DoUNsyZ2
      oZ24dygIMQFNyVLIsGsEY+C2WeRP4LO7yy0o1vCHLdoHLdZUadgm7qiEGEdSAIS4Dv0Ri7/b
      HKEqRyUcs5iR7yQjBUaBmvtM/mlHlKIMhSnZKlOzVbkPR8h1WCGuR55H5X/c4SLXpbCu1kaG
      IzVa0en5Gv+41onXOZS33IcjQHoAQlw3l03hu4tT4LT/L+S6Vf6vFc5kpyEmEOkBiFHxhy2C
      sdS5Y1cIMTIpAGJYxzoNdNPip/ui/O54LNnpCCESSIaAxLBy3QqvHtMp96ncOlXmDQoxmUgP
      QAxrW7NBf8RiabnGOX/qrd0jhLg2KQBX4VAdeO3eZKcxIcwuUMlyKmTYYUmZ9ACEmEykAFym
      JKMEl+bijql3cF/tfaiK/HoOt5s4NNjRYvDaMT3Z6QghEkiuAVymJ9zDqvJVRI0on7R+kpLL
      FSeazzm0BLJhgsd+/XPHY331REOBuHKwYllXfT7qvyGuuACW4Y47hhCpSgrAZWblzcJj83Ci
      5wQF7gLO+c+l1GYlY6Hcp1KZBb87rnP/jOsfAoq0301kMBpXDma08OqxWzfEFRfAjGXHHUOI
      VCVjHJdp7G/EwqKxv5EDHQfSvvEH2NJosL3Z4EdLHOy5aCQ7HSFEAkkBuEx1VjUZ9gxum3Ib
      66rWoSly0fO2Go1MB3QFLRZ9iZ2NhBATlxSAy4T1MGf9ZznWfYz6gvpkpzMhTM/XeGyeg5pc
      lfnFUgCEmEzkGsBlmvqbKPAUUOAu4PUzr2NY1zfk0aNqNDnjWyPG5XAwM64IItW5bW4KPYU0
      9TclOxUxyUkBuEy2M5uHpz9Mf7SfM/4zfNr16XVdB9jucfFfSovjymFaTh6vxRVBpKrijGIU
      FOoL6sl0ZtIT7iEQjW8GlRDDkSGgy5wfOM+/7v9XesI97G3bKxeBxbhqG2yjNrsWE5MjnUek
      8RdjLuUKgMfmQVM0VpWv4sFpD+K2JXYed0gP8eKJF+kOdyc0rhAjmZc/jxJvCa0DrWiqhktz
      JTslMcml3BCQQ3OwtHQpbs3N2b6zhPVwslMSIiFaAi1kObM41XuKsCGfazH2Uq4HkO3MxmPz
      cHHwIpmOTBxa6m3MIcTV1OXUMb9gPqvKV5Hjykl2OpOewtCd7avLV7OwcGGSs7k+Zd4y7px6
      J5mOzLjipFwPYDA2iGEZXBi4wIGOA8lOR4iEiRgRXjv9GrqpMy9/Hjsu7iBmyh4MY6W+sB5V
      UfE6vARiqXG9xWPzcFPpTeimTsSI4NScBPjyuadcD6A4o5iGvgYemfEIj8x4RG7WEpNGX6QP
      gHVV68hx5kjjP8b6o/2UecsYjA0yEB1Idjqj8vlnwm1zEzNjhPRQXPES1gPQYxHOnWvEAlS7
      k+opFTSeOYXlyKBmaiVnT3yKYc9kWnUlZ8+cZmpN3ZfamFpVVG6puIV97fso85ZhV+0YhixR
      IFJfoaeQqVlTOdV7ijxXHpn2zJQ5M01FlZmVaIrG9gvbsampMRjitrnJcmZxIXCB3W27cWrx
      7fGcsJ/a1KM0nDtHZ2sDx1pjPHTLHHYcb0Ppb2XgtrvY/OEunLYoWXffzvY9R6mprftSxznW
      fYx8dz6ne0/TFepCN2WJYjE5HOw4SH+0n5AeIqSHpPEfY+f6znFj8Y2sr1nPgY4DnOs7l+yU
      RhSIBghEA1T6Ksn35PNuw7txxUvYEJDDncm629fh7+nj208/wZmTp1m77i7u+soKjp9oQg8F
      iOommz7YxOpbb8a0hubYh8NhQqEQkUhkVMeZVzAPf8TP7VNvZ07eHFw2mSonJoeoGeVEzwma
      +ps40nUk2elMeouLFvPm2Td5p+EdFhctTnY6o5LlzMKm2njt9Gv4w34qfZVxxUvoNYCulpMY
      vilUFWeDqqBqGqqmotq9fO+73+S+dSsJqx7e/O1z/ORnz2MB0WiUaDQ66gJw1n8Wn8PHSyde
      IseVc93LNQghBMDmls3cU3MP66rWsePijmSnMyr+iJ/ecC9frfsqDs1BS6AlrngJLQCnjn3K
      /IWLUIDK8jJ27tjOlh17mFpdTkamjx07dnPzikVkFNZihQOYgM/nIysrC5/PN6pj+CN+Pmr5
      iIgR4dkjz8Z9EUQIkZ6WlS7DoTpoG2xjScmSZKczKpn2TObkz8Hr8BLWw1RnVccVL6EFoGrG
      AuZOnwLAwlW3UV3gZuq8ZSyaOQUjFqFm1mKqq2qoK/Nw48rVyPwdIUSyxMwYW89vxaE5KPRc
      fdOhicawDAaiA2w8uZFV5auwrPiWq0nope/SqtpL/67ZHCxdufrP/9Hh5sYbhpZYXnXLbYk8
      rBBCXLd3G99FUzTOD5znk4ufJDudUQnqQV459QqGZfCPe/4x7n3LU+4+ACFE+qnIrKAisyLh
      cT+/hphK91x8nrOFFfc10NSY/CqESEszc2fSFepieelyQnoo7oue4oukByCEmLAa+hpYWLSQ
      vmgfH1/8ONnpTDpSAIQQE9atlbdS7i1n58WdFLgLkp3OpCNDQEKICWvL+S1UZVVRnlnOxYGL
      yU5n0pEegBBiwlpRtoI5eXPIcmZxW5XMHkw06QEIISass31n0U2dvkifrPw7BqQACCEmLMM0
      WFy0GE3R6Ax1JjudSUcKgBBiwqrLqeNQ5yH8ET83l9+c7HQmnVEXgM9vOVaU61/DXwghvozN
      LZsvbX7yUctHyU5n0hmxAIRCIV5//XXcbjeKorB+/XpUVa4dCyHGXsSIEDGGVgoejA0mOZvJ
      Z8SW/MSJEyxfvhxN03A6nUSj0fHISwghxBgbsQBMmTKFTZs2cfjwYTo7O3E4HOORlxBCiDE2
      4hBQdnY2d999NxcvXsRut8s1ACGEmCRGLAAnTpygv7+fAwcOkJOTQ01NDS6XbMMohBCpbsQh
      IFVVOXPmDNXV1cRiMTRNbsYQQojJYMQewLRp09B1HV3XmTlzJjab3DoghBCTwYg9gPb2dg4c
      OEAwGOTdd9/FMGQTdiGEmAxGPJ3v6Ohg6dKl1NXV0d3dja7r0gsQQohJYMQewMyZM9m9ezc/
      //nP8Xq9OJ3O8chLCCHEGBuxAFiWhc1mQ1EUuQNYCCEmkRFb9KNHj7Jo0SK++c1v4vf7iUQi
      45HXpKMwdP/E0pKlrKlYk+RshBBilDeCvfHGG9TV1XHo0CFM02TlypXk5+ePR36TRm12LWXe
      MmyqjZAeSnY6QggxcgHQNI277rqLoqIiVq5cCYDX6x3zxCabkB7C6/AyEBu4tLiVEEIk04hD
      QNFolM2bN3Pw4EGOHDmCz+e75iwgf3c7n3yyk27/AJZpcPTwAY6eOIMFHDu0j8PHz2BZFseP
      HkU3rUT/LBNaUUYRmqJxsOMgR7qOJDsdIYQYuQdQWlrKqlWrgOH3AoiFB/jpMz9n+arlvLTx
      dyyfVcTexgCKv5lQdC3bPz6CWwuT67HYc/QcM2bNStxPkQIybBl0BDvoj/ZjWmay0xFCiJEL
      QCAQ4MiRI+i6Tnt7O3V1dVd9XX/PBToDg+zde4DZN9zMmdM7WbP2UZz+E2w7eRE90E3I4+LD
      TZtZfc9XMU0LTVMIBoNYloVlWZN6lpHX4aUz1MnXpn2NrlAXm5o3JTslIUSaG7EAFBUVsWHD
      BgDefPPNa64HZJkGmUVVfO+7D/Ov//6fVBX4UFQFFFAdGfz1j35A5/kzvL/rKK8+9yyqN58f
      /fApTNPEsixM05zUBeBU7yn6In3sadtDhj0j2ekIkRYinV8hcKIyrhghe9lVn/+vsad4JXxL
      XLG/Hqvm/77aMc8/RuDErXHFNm4tHfE1IxaAtrY2Nm3ahGVZ+Hy+a+4HkJlTgjbQyeEjh0Fz
      U11VwZYtH6L0NjFnzf04nE42b9vJ6ltW88FmG6Hedkz+fEHZMIxJPcW0zFvG3Py56JaOU3Xy
      6ulXk52SEGlABcseXwjr6gtgxtCIEN/+KDGusbimpcWfNyMv3T9sAQgEAmzevJmysjJWr149
      7DUAZ0Y233n6Gxw/08TTT3+TXK8L+4F9WM7p1E+vwIiFmbNwGVUV1cytuYArt/5aP/qkNBAb
      oCfcQ8yMsb5mfbLTEUKI4QvAli1bWLZsGbt27aKvr4/s7OxhXq1QUFJBQUnFpWfqFy/584Ec
      burnzwZg6YrVcSWdiva170NVVEzL5EzvmWSnI4QQw08DHRwcpLS0lOLiYgKBwHjlNGl9PvtH
      t/QkZyKEECP0AHJycvjlL395aSaQ2+3miSeeGPNNYcxoAYPn/jquGKpsXSmEEMMatgCsXbsW
      y/riDVvjsSewZdoxI1e/8j7qGNL+CyHEsIYdAhoYGLi0Cujn/8im8EIIMTkM2wN4//330XWd
      rKwscnNzURSFhQsXTur5+kJEFHjXG/+9GusUBVcC8hmtTk1jR5x5O1we7khQPmLiG7YA3H77
      7ezevRuXy4Xb7ZYN4UVaGFBV/mtBXtxxlqnquBaAcw573HlnObOkAKSRYQuAx+Nh8eLFbNy4
      EUVRcLvdTJ8+fbxyE0IIMYZGHMs5ffo0t9xyC08++SQ+n29S360rhBDpZMSlIKqqqti4cSP5
      +fmEw2HZE1gIISaJEQtATk4OTz75JMFgEJ/PJxeAhRBikhjVpvB2u/3SMhB/eW4XfKAAACAA
      SURBVF+AEEKI1DRsD6Cvr48dO3bgdrvJzs7m4MGDPPbYY9jt8a5SJ4QQItmG7QE4HA5cLhcO
      hwNFUVi5cuU1t4MUQgiRWoZtzd1uN/Pnz+f111/HZrOhaRpVVVVyP4AQQkwCI57ONzU1cfPN
      N1NbWzse+QghhBgnIxaAgoICXnrpJYqLi9E0jQcffFB6AEIIMQmMWAB8Ph+33jq0N6WiKLIY
      nBBCTBKjmtRvWRa6rrN7925M0xzrnIQQQoyDEXsADoeDgoICLMvC4XBgGEZKzwQyIkWEL26I
      K0b4s43shRAilY3YkgeDQU6fPk00GmXp0qU4HI7xyGvMWLEsYn03xBVDN2Q5DCH+UoZDw2FT
      6Q3Gkp2KGKURh4AcDgeNjY10dnZy4MABuRNYCPEFFbluHDaVe+vL+Oqi8mSnI67DiD2Az1cD
      raqq4o9//CPRaBSXazxXORdCTGSd/RGW1+QRihnsa+pNdjriOoxqNdCXX36ZnJwcYrFYyg8B
      CSES64apuRRmutjf3Eu+V4ZHU8mwBcCyLPr7+/nWt77F8ePHKS8vH3Y1UMs0+XyASFVV9FgM
      FBWbTSMSDoFqw+mwEwqFcLlcMqVUiEngRGuAIp+LqGGyp7En2emI6zDsNYCdO3dy7tw5bDYb
      +fn5bNy4EcMwrv5iy+JX//mv/M9//w9e/f0mOppO8eN/+R/8+J//mbbOTn76zLP89LlfERzs
      56WXX8OUSwlCTAozSzIJhGNMyfXw0A0VyU5HXIdhC8CFCxdYuXIlACUlJRQXFxONRq/6WjMW
      4kJXHzXVNSxbtpCdH2/lzg1f595bbmT7zn1YzhxcmsG2D//EnKUr0VQ5+xdiMugNxsjNcJDt
      caDLmV1KGXYIqK6ujnfeeYdly5bR3d1Ne3v7NXcE0w2d6TPmMrWyiJ/97BdMK/aQ6fNhj2Vg
      tKosnz+ViAUHDh+nOLCZjgs13HnrCjo7OrAsC8uy8Pl8Y/JDiuF9kOHhk7ycuGLc53QyN0H5
      iNTS3BNkQWU2JVl2djVc/xCQEawh3HpfXDlE7VVxvT9dDVsA5s+fj9PpZPPmzWRnZ/PYY49d
      8xqAHg2juLOomzYNh/Ih2b5MLl68iNbVSlZuFYtumsumt15hwaI5nG3sp/P4EcxbV1BYWAiA
      YRiy33CSHHY62ejLjCvGAptNCkCaWl6bxx+PtNEbjPLYkkoOtviv6/1GuJiYf2lcOeg5uXG9
      P12NOAtoxowZzJgxY8RALm82arCNn/7sV9x8253Mr8nnhZdeBbuXRx67Az0apDOo8cDceRzb
      92s8+WWjW4dCCDGhbTnZyZoZhWS67DINNMUMWwBisRix2Bfv6nO73VedvaNqDu5/6BtfeO47
      3//hZY/sPPzQ0BIM3/re979kukKIiaYi14PHoRGOGRT6XHCxP9kpiVEatgCcOnWKY8eOXXqs
      qir33XefLActhLikpTdIbaGXbae7MOQicEoZdhRm9uzZ3HnnnaiqSjgcpr9fKrsQ4osGIwZv
      H26lLxRjIKInOx1xHUYchj958iTTp0/H4/FQXFwsawEJIcQkMWIByMvLo7W1lVAoxPnz59F1
      qfBCCDEZjDgLyOv1Ul9fj8Ph4ODBg9jt9vHISwghxBgbtgC0tbXxwgsv4HK58Hq9WJbFihUr
      xis3IYQQY2jYAlBcXMwPfvAD9u/fT0tLCwsWLBh2Mbh0Z+k+9IG6uGIYrsoEZSOEEMMbcQio
      ubmZWCzGnXfeyRtvvEFVVZUsCX0N+mAtoZan44oRjsV3R64QQozWqE7nDcNA13UURZElnIUQ
      YpIYtgAEAgFqa2vJyMjgo48+YsWKFSm9IbwQQog/G7Y1f+edd3jggQdYsmTJeOUjhBBinIx4
      Ov+b3/zm0oVfTdN49NFHZSmICSrDoWEBweg1Nu0RQojLjFgAHnrooS8M+8gsoImnpiCDxq4g
      X1tcQShm8PKelmSnJIRIAcMWgAULFuB2u6XRn+A6AxHumldMbzD6pTbkEEKkp2Fb9mnTpknj
      nwJumJqL227j8Pk+KnLcyU5HCJEiRrwIPGXKFDIzM8nJGdoy0Ov1ylTQCeZCbwjdsGjqDtLQ
      NZjsdIQQKWLYAjB79mzeeecd3G43Pp8PVVW555575CLwBLNqWgGGaXHRH+J0x0Cy0xFCpIhh
      x3emTJnC008/TUFBAX19fRQVFcmQ0ATUPRDhV580ku91csuMwmSnI4RIESPOAjp16hTl5eXc
      fvvtvP7660QiEVwu13jkJkZpf7Ofm+sK8LpsnO8JJTsdMQzLdKAHqxIQSYZhRfxGLACZmZns
      3bsXu93OwMCA3Ak8Ad1QlQtYNHQNUlvoZV+zbMw9UVmxXEJN30tAJCkAIn4jtuaVlZUYhkF7
      ezvr16+XAjABfXSyg9mlPsqy3RxrlW07hRCjM2JrrigK1dXVVFdXj0c+4kvoDETYfLIz2WkI
      IVLMqK7oWpbFuXPnaGxslD2BhRBikhi2B9DT00NWVhatra2cPXuWSCRCZmYmeXl545WfEEKI
      MTJsDyAYDPLee+/R0dFBJBLBbreTlZU1bEDDMDBME4BYNEIsNrSJfDg4SCgcAWBwcABTehJC
      CJFUw/YAcnJyyM3NJRqNYlkWU6dOHfY+AMs0+MW//3dm3fogU90RfvXqH8GI8fWnnuTVF19G
      cbh4+vGHePnVt/nmE4/JRAYhhEiiYXsAW7dupaSkhNbWVu666y50XWdw8NpLDezd8kfO90Qx
      TJPdO3dwz9ceZ8O6ZXyy+yA4fLhsFls3vcfCFavRVGn9hRAimYbtAdTX17Nnzx5mzZqFoijM
      mjXrmq/1tzXy4YFGli+cSTgUJhrT8WZmYI96MFD5yrK5hGIx9hw4RqD/PRrPVnPf7Wvo7OjA
      siwsy8Ln8yX8BxRCCPEZ00HowkOXHg5bAEpKSli/fv2o4oaDUUoLsjhw5DiOLoNZuVm0tJxH
      7WwhN7+OOQvm8N4bL7PohrmcOtdL75kTmKyhsHBo6QLDMIhEInH8ZEIIIYZjWRp6/4JLjxN2
      V1dx9TS+UT2NM5/ux/CVUJHt4OWXXwWnjwdXz0SPBhkwPdwyew4n9v+WrJKq0c1BFZOaw6Yy
      rzyLwy19RA0zobE9Do3ZpT72NfViypwDIa6Q8Nt6a+csvPTvT377u1841IYHhnoTT3zrO4k+
      rEgxTpvKwsocLCwqcj0MhHVOtAUSEjvTZWNGcSYuu0ZZtpuO/ghNPcGExBZiMpGTcJEUEd0k
      EI5R5HNxsTexy1gHwjqGaZHjcXCua5DmXmn8hbgaKQAiKVx2la/MKkJVFE60Bcj3OhIWuzDT
      ydLqPGKGSXNPkBxP4mILMZlIARBJEdFN/nC4lcbuoRVM2/sTNwHAH4zx3tE2ugYilGS56BmM
      Jiy2EJOJFACRFA5NZXapjxurcrFrKnNKEzcFONfroDzHw+KqXIp9Lspln2QhrkoKgEgK3bDw
      OGz4QzFcdpW2/nDCYveHYpTluLnoD2HTFOkBCHENsri/SApNVSjOcvHC7mba+hLX+AO47Rq5
      Hgd/PNJKbzCW0NhCTCbSAxBJoShwwR9iQUU231xWRbEvcduM2m0qZzsHWDWtgCdumkK2256w
      2EJMJtIDEEkRM0y2nerkYoLP/gH8g1H2NPbQNSBDP0IMRwqASArTYkwaf4CwbhKWxl+IEckQ
      kBBCpCkpAEIIkaakAAghRJqSAiCEEGlKCoAQQqQpKQBCCJGmpAAIIUSakgIghBBpSgqAEEKk
      KSkAQgiRpqQACCFEmpICIIQQaUoKgBBCpCkpAEKItGRTFRQF7l9Qxi0zChMe26YqPLS4guU1
      eQmLqymgALNLfdxXX0ppVnz7aMhy0EKItDS3PItcjwNVIeG70i2uysFt19BNk/ZAJGFxHTaN
      1dMLUBWFiG7iD8W3411CewCmoTMYDF16HI2EiUZ1AIID/QwGh37J/f39mJYV17HqCr2snVWE
      qsQVRgiRphTA57ZzwR/C49ASG1tRyBqD2KoytJ1qOGYQjhlxx05YD0CPDPKvP/4XMrOzyCqf
      y/JpOfzm9T9BLMxjTz3Fqy9uRHE4+NYTD/Pya+/w1JNf/1LHKct2U12Qgduu4bSpOG0aoZiR
      qB9DCJEmHDaNmGGyt7EX3YzvhPSK2JpK1DDZea4noXHNz2I3BYIcudAXd7zE9QBUjQ2PPM4N
      8+fQ293Fvj27uP/hb/LQXTeza+8RFEcmbrvC5g/eY8nqr6ApX+7UvTcYpTDTiaoqdA5EiOjS
      +IvxoylDZ1zzC+Zzd/XdZDuzk5zR6Hye97LSZdxTfc+lx+nMtCx8LjtfW1zOkqm5CY1tWRbZ
      bgeP3FjB/PKshMXVDROnXWNuWRaP3zQFlz2+v2PCCoDN7mJKWT4d3b0MBPxEdAO3x4Pb48ZU
      Mlj/lSXctPQGzneHOfzRm2x88z0soKOjg/b2djo7O0d1nLpCL5qq0NQ1yJELfagyBiTGkdfu
      Ze2UtRR5ihiMDTIYG0x2SqNSnFHM2ilryXRk0hXqwrTMZKeUdCVZLvY29bC/yc/U/IyExi70
      udjV0M2h833UFHgTFtfjsGFaFtvPdNEXilHsc8YVL2EFYLC3lV+99AduXrOayICfnKxsmhqb
      OHO2kfzCXGpnzeHiuVPcuGQeVtZUeloaMIHCwkKKioooKCgY1XGOtwYIxQwKMp2snl6IbiS2
      6ybEcDRVQ1VUgnoQ0zJxavF9AceLpmjYVTv+sB+7Zkf5kj3wyeSjEx2UZbu5fU4xH57oSGjs
      zSc7qMrP4NYZhWxKYOy+UIzD5/2srMsHoLE7GFe8hBUAT1YhVQVOfvXbV7j7/vtZddsdtBz7
      hOaAyopFM9CjQXRHHvWz5qANnie/svZLHXzhlBwGIwZT8jKwLAuvUyYyifHlUB1cHLjIlvNb
      GIgNJDudUdFUDU3RONt3lm3nt0kPAFg7q5jcDCfbTndy87TRnYCO1q0ziyjxufjoRAerpycu
      drbHTk2Bl0yXjZhhMSXPE1e8hLWeiqqx5vb1rLnsua9/8+nLHmWw/p7bAXj0iae+9HEOtfhZ
      M6OAjkAYBYXBiP6lYwlxvXwOH5W+SrZf3J7sVK5LsaeYTEcmg7FBLKTXDHCuc4DV0wuozHXz
      ybnuhMZu7g6ysi6fbI+DbWdGN7w9GoMRHbdDoyzbTUQ32XIqvimmKXf6PLvMx4Xe0GfDPyaa
      qiT8Cr4Q1+LUnOxq3cVNJTeRYc/gD+f+QFCPrxs+Hhyagz1te7i96nZ0S+cP5/6Q9r2AAy1+
      Drb4QYE4Z6Vf4ZNz3exs6AaLhJbbmGHxyt7zvLbvPIlo9lKuAOiGxZoZhRxs8VOVl4FNkwIg
      xk9nqJPeSC+BaADDMlKi8Qdo6GugO9xNhiODjmBH2jf+n7Mu/c8YxB7DZilRTV7KFYCDLf5L
      8193nO0mqifug5zpshGMGtw+p5i8DAe/3dmUsF+0mBzy3fnkOHOoya4hYkToDHXSF4l/PvZY
      m5o1lUpfJU7NyczcmWw8uRHDkinU6S4l1wIyTAvDtBLa+AM4bSpfmVmIXVU41OKXxl9coSfc
      Q3V2Na2DrUSNKGE9sUsIjJULAxeYmjWVnnAPg7FB6QEIIAV7AGOpMNNFpsvOmY4B8jOdqEri
      ulpicugKdfHiiReTncZ1O+M/wxn/GQAOdBxIcjZiopACcJn+cIxwzOBc5wAHW2R2kRBickvJ
      IaCx4rCplGa7efjGSr61cipyq8zQtEdVUXlkxiOsnbI22emINJPltqEo8ODicjYsLEt2OpOO
      9AAuk+W2s6exh65AhFtmFqKMwfSwVFOUUcQi7yIC0QAne04mOx2RZnI8DpZW5xEzTI5e7E92
      OpOO9AAu09ITpLFrkLnlWXx6oV/G/4F8Vz4+h4/G/kZyXYldMEuIkeR7nfhcdhq6guR7U2PZ
      jVQiPYDLLKzMwbQsOgMRphdlcqC5N+2LQFAP0h/t51jXMUxk5ogYX8GoQSCsc7y1n0iCZ/0J
      6QF8wZZTnTR2B2nrC7O3qWdMGn+HpuKypc6vvTKzkpZAC7U5tayvWZ/sdESamZqfQXNPkIpc
      D48uqUx2OpOO9AAuE9FNznSMzeJeZdluOgJhNiwqw66p/PqTpjE5TqK1DrYyJ38ONtVG22Bb
      stMRaaa5J8icsixUBfzB+LY/FFdKnVPRFBcIx1g7q4hg1GDb6a5kpzNqMTPG8e7j5Lpy6Y/I
      RTgxvmyqwu6GbvK9Tvrj3P9WXEkKwDiZXZqF12njRGuAsmxXstMZtfqCem4qvYnfHPsNtTm1
      yU5HpJl55dncPL2QF3c3U5kb39LH4koyBDROWvtCeF02GroGOdkeSHY6o/b7s79nes50sp3Z
      7Gzdmex0RJr53YHzzCzx4XZo7GpI7JLNQgrAuLmpJp8st42m7kFOtafGJiIA/oifXW27kp2G
      SFOBsM7uhsRurC7+TIaAxkkgHOOF3c3keZ3cMac42ekIIYQUgPGyq6EHn8sOwKHzE3/5YDH+
      tM/26V00JYd760tx2eXrKcaWDAGNk3yvk0durCASM9lxtouL/lCyUxITTH6mg0VTcjBMi8GI
      jpHudyGKMSenGOPkeGs///L+KboHo+ySMU1xFZYFqqIQNUxMy0JVZDlCMbakBzCOeoMx/nPL
      2WSnISYoj0PDYVP59MIgzT1B2bpdjDnpAQgxQXQNRPE4NG6cmstjS6bIcuRizEkBEGKCqCnI
      4HhrgKMX+xmI6GQ4pYMuxpZ8woSYIA6d76Ms201vMIrC0Bx4IcZSwgqAZVk0nz3JmeaLzJm/
      kILsDPbv2Y3l9LGofg4Hd3+M7sjhhvqZHDp4kDnzF2BTpZMrxOcqctx8Z1UNwahO1DA51TFA
      VJZAFmMoYQUgHOji+Vfe4p471vCz537B2sXTONllofTuR7d09hxswK0epdCncvRcO/MXSOMv
      xOVaekP8ckcD62YXs+10lzT+YswlrAA4vbn86Ec/xN/agN3horGxmeXrHsPpL2TriU70vg6C
      GR42f7SVW+75KrGYjsNuY2BgAMuyME0Tu92eqHSESElnOwd5dtu5tN+KVIyPhF0EVlWNtoYT
      /OLlt3j8G1/HpmlYWJiWiebM4Ef/x9/w1XXLULy5vPLL5/ifP3kOE1BVFVVV0TQtUakIkdJi
      hoUuN4GJcZCwAjDQfYF//vefMXP2HE6dPM7Umql88Kd3eGfTdqZNq0JVVT7YspNbViwiI78C
      zRha29vj8ZCRkYHb7U5UKkIIIUYhYUNANqeX7//g+wDYXW6m1SwmI/solvMmpteWocfC3LDs
      FsrLqlha34kre5nMQRVCiCRKWAFwebOYO3fuF56bNvvPj212F7Nm1gFQv2hJog4rhBDiS5KT
      cCGESFNSAIQQIk1JARBCiDQlBUAIIdKUFAAhhEhTUgCEECJNSQEQQog0JQVACCHSlBQAIYRI
      U1IAhBAiTUkBEEKINCUFQAgh0pQUACGESFNSAIQQIk1JARBCiDQlBUAIIdKUFAAhhEhTUgCE
      ECJNSQEQQog0JQVACCHSlBQAIYRIU1IAhBAiTUkBEEKINCUFQAgh0lSCC4DFicMHCMVMjFiE
      7Zs3se2TPRimyc6tH7Jt1wFMy2TPrl3oppXYQwshhLgutsSFstjyh9+x8Z0P+W//379xZMef
      uDDoQunexyeawsGTbbjVs5Rm2zjb1sdiVUncoYUQQly3hPYAaucvYeHsWgCamlu44YYlLF+6
      kJYLvViBTsI6bN7yMUsWzWUwGAagv7+fvr4++vv7E5mKEEKIESSwACiUlZejfXZmb7PZME0T
      wzDQHBn84Ec/5J7Vi3BkF/D6Sy/xzLO/wgQcDself4QQQoyfhF8Etj4b2p82fRrvvvN73vzT
      NmbNqkZVYNPWPdy6cjEuXz6qqQPgcrlwu924XK5EpyKEEGIYCbwGMOSeDQ+T5VTJvWEV3ryz
      WI4MqiqKMWIRVt6yjpLiCtYsm4fTVyhTkIQQIokSXgDyC4s/+zeFKTV1l57X7E5qa6oAmDln
      fqIPK4QQ4jrJSbgQQqQpKQBCCJGmpAAIIUSakgIghBBpSgqAEEKkKSkAQgiRpqQACCFEmpIC
      IIQQaUoKgBBCpCkpAEIIkaakAAghRJqSAiCEEGlKCoAQQqQpKQBCCJGmpAAIIUSakgIghBBp
      SgqAEEKkKSkAQgiRpqQACCFEmpICIIQQaWrMCoAeCfKnd97ivU1biBkGH/3pHd7f8gmmabB9
      2zZ00xqrQwshhBgF21gF3rPlPYK2AtS2k3y828nx8wHcykXOFLho7YuiqcpYHVoIIcQojFkP
      4PyFVubPm8/iRfNoaxtAG+wiZmps2bqT+tk19PoDY3VoIYQQozBmBcBms6HrOrFYDM3p4ds/
      /B63LZ1NRkExf3jjbX7xy99ijtXBhRBCjGjMCsDsOXN4+42N/O6PW5g3tw4sk/e372ftqhvQ
      nB4US64BCCFEMo3ZNYC6+pt4tKgSy+6muCAPQ4+y7s715OeXcM+6Fdi9eTIFSQghkmjMCoCi
      KBSVll96rNkcVFaUAlBVM+3S836/H8uysCyLWCxGJBJBjYW4e4YvvuMDvb29VzzvJhx37Eyn
      7aqxc22xuGMX+1xXjV3qNuKOXVPguGrsSnsl6wrXxRU7y8y6auy1NV4GonpcsV1m+Kqx4/19
      ACjRQXp7jS88F4qF4v59AIQDYXojX8zbisT/+QPw+3tRlS9OpHBEHHHn7ba7r/q7ztLi/2wX
      eJ1XjV3siv+zPTXv6rGrvPF/TuYUXP37PiNXjTt2XbZ61dj1RXZcVnyx1ViQ3t4vjrSEol/8
      XSuWldyxmGg0eqkA6LqO3W5P+DFCoRAOhwNN0xIee3BwEI/Hg6IkflZTIBAgMzMz4XHHMrZl
      WQSDQTIyMhIe2zAMotEobrc74bFjsRimaeJ0OhMeOxKJoKqqfLYvk4qf7VSNHYvFMAwDl8t1
      xX8bsx7AaDkcDmDoyz1WX8DBwUFsNtulYyVSf38/drt9TL6Afr9/TH4fYxnbMAwMwxizhtSy
      rDHLe6w+f9FoFFVVxyR2MBhE07QxiR0IBOSzPQlim6Z5ze+kDMMLIUSaSvoQ0Ocsy8I0zVGd
      bcRiMU6ePIndbqe2tnbE90SjUWw2G6o6cr1rbm6moqKCcHho3Lm0tHTY10ciERwOx6i6ya2t
      rbS0tGCaJlOnTqWoqGjY14fD4at22/6SZVns3bsXwxgay3Y6ncyePXvYHs9oY+u6TltbG+Xl
      5XR0dOByufD5rj02aVkW0Wh0VGcykUiETz/99NLrFy5cOOzrTdNE1/VR9eQsy6KhoQGn00lu
      bu6Iw0af9wBGM0wTjUYxDIOzZ89SVVWF1+sd9vWxWAxFUbDZRu5wf/53MU0Tv99Pbm7uiLlo
      mjaq7000GuXMmTMUFhaSk5Mz4ntG89nWdZ3BwUE6OzvJysrCZrORk5MzYi6j/fwBnD9/npKS
      klH3RK7nexMIBAgGg+i6TnZ29oh/y9HGDofDHDp0iM+b18zMTGbMmDHszzCa2MePH8fv9196
      nJGRwbx584Z9z3Cf7aQPAX1OUZRR/YEty+LFF1+kt7eXaDTK9OnTWb9+/bDvGe3Qz2uvvcb7
      779PXV0dwWCQ2tpaHnnkkWHfM9oum2VZ/OQnP6G6uhqbzUZubu6IBWC0XxCAt99+m+rqao4f
      P05paSlnz57lq1/9alyxI5EIzzzzDCdPnqSmpoaLFy/yxBNPMHfu3Gu+R1GUUf9Otm7dyoED
      BygrK8Pr9Y5YAFRVHfXfcseOHWzatInq6mr8fj9/9Vd/NezrR9uIArz11ltomsYnn3zC9OnT
      eeqpp4Z9/fWM/W/cuJHa2lp27NjBtGnTEvbZBnj++edpbGxkxowZ5Ofns3bt2mFfP5q/YyAQ
      4Ne//jUnTpwgLy+P2tpa7rzzTgoLC4d93/V8tl977TW6u7tZsmQJN910Ezk5OcMWpdHGjkQi
      /MM//AMDAwPYbDb+9m//dsQCMNrY0WiUN998k+nTp3P48GFKSkrw+/0sX748rthtbW0cOHCA
      SCRCXl4eg4ODIxaA4T7bE6YAXA/TNNmwYQOBQICDBw8SDAbxeDxxx12zZg2qqlJVVYXT6aSm
      piYB2Q6dJTU0NJCXl8eiRYtwuVwUFBQkJDYMFReHw8H69eux2+3k5eXR0NAQd1yn08m9997L
      vn37mDdvHqZpUltbm4CMh+Tl5VFXV8esWbMSfn3m4sWLLFiwgIGBAQYHBxMau7+/n76+Plat
      WkVTU1NCYlqWRWtrK/PmzeOZZ55hxYoVwzYWXyZ+b28v06dPx+v10tXVlbC4LpeLnJwcpk6d
      imEY9PT0jFgArsfjjz/Ojh07eP3113n33XdZv379iMVrNHRdp6SkBJ/PR35+Pr29vVRWViYg
      46HrjhUVFaxfv56enh5mzJhBd3d33HHXrFlDd3c31dXVVFRU8Oyzz8YVT/u7v/u7v4s7q3Gk
      KApHjhzhrbfeYv/+/XR2dnL69GmWLFkSd2y3282JEyd47733OHjwIJWVlQlpqIPBIBs3bgSg
      oaGB06dPj6oHcD38fj+vvvoqqqpSXl7OrFmzEpK7x+Ph7bffZs2aNTz33HPMmTMnIcUWoKur
      i0OHDnH27Fna29upr69PSFyA8vJyduzYQWdnJ/fcc09CC25ubi7d3d3MmDGD6urqhMQ2TZPn
      n3+eY8eOkZ2dTX9/P4ZhJKzgKopCQUEBe/fuZWBggHvvvTchf0en00lFRQUHDhxA0zTa29sp
      LS2loqIiAVkP+ad/+idycnJ44oknuOOOOzh69CizZs2KO67NZiMWi1FTU8Pu3btZs2ZNwmaY
      ud1ujh8/zltvvUV5eTlZWVnU19cnZJZPdnY2r776Kh9//DHr1q2jvLx85DddQ0r2ANavX8+c
      OXMwDIOCgoKEfdg+Hzf++7//e5qamhL2QfN6vfzoRz/i1KlTuN1utmzZlcZhlQAAEaVJREFU
      QnV1dQIy/rPKykosy0JRFGpra0e8djFaoVAIt9v9/7d3bkFR1n0c/zy77LIHd2HZJRYNdjkI
      qCgZinmMSJPEkbRpLMcOTtrxwi6aZrroNHXVjTZNU1PNW2ljWg0WaaZSTqbEQoIUKJighLvC
      QuCyCiwu+7wXvLtvOe+kxX8FXp/PjKM3fvc38Ozz/53/qFQqMjMz8Xg8WK1WIdrZ2dk0Nzdz
      /vx5br/9diGaYXp6esjIyMBsNtPZ2Snk9xhmYGCA3NxcysrKWLp0qRBNtVrNU089xeeff04w
      GKSgoEDoS7ShoYGvvvqKwsJCent7OXjw4FXTm9eCSqUiKSmJZcuWkZaWRnV1tdCftSzLaDQa
      1qxZg0qlQpZl7r33XiHagUCAqqoqbrvtNp588klhjg2M/FymTp1KfHw8kiQxb968v6yd/R0s
      FgsZGRkkJyeP+rs44bqAZFnm448/5ujRo9TX1+N2u6+puHstSJJEKBTipZde4o033qCqqopt
      27YJ0ZZlmd27d1NeXs7g4CBHjx4VohvW/uSTT9Bqteh0OqFteyaTCZvNxmuvvcb58+eZOnWq
      MO3KykoCgQBLlixh+/btwnQBfvzxR5xOJ3l5eVRWVgrVPnr0KL/++isOh4Pjx48L1V62bBla
      rZZXX32VXbt2CdO9dOkSPp+P5uZmfv/9d+bOnStMG+DQoUPEx8djsVg4cuSIMF1Jkujs7OS5
      557jhRdeoKGhQdhcgk6nY/369bS0tPDss88KS+cBeL1eDh48SGxsLDqdTugsxYEDB5Akia6u
      LsrKykalNaEiAFmWcbvd6HQ6br31VqxW61WLNn9He2BggHXr1hEIBICRApso/TBnz55lwYIF
      QoeZJEkiKSkJnU6HVqu9pm6Tv6Odn5+P0WgkOztbaK4+FApFPiP8b1HMmDGDDz/8EI1GQ3Z2
      tlDtpKQkKioqKC4uFpLX/SO7du3C5XJRWlrKHXfcIURzeHgYn89HYWFhxF7RdRGTycSOHTvw
      eDyUlJQI1X7++edxu90kJSVhs9mE6V6+fJmysjK8Xi+lpaXY7XZh2kajEZPJhMFgQK1WC3NS
      YSQF5HK5GBoaGnXUMqFqAKFQiB07duDz+WhtbaWhoQFZloUUa4PBINu2baO5uZlDhw5RW1uL
      yWRi2rRpAiwfecmlp6eTm5uL1WolKytL6NCHx+OJFCeTk5OJi4sTotvf389HH31EIBCgu7sb
      vV4v7Es4efJkTp06xYkTJ1i9erWw1BJAYmIidrsdp9NJTk4O8fHxwrTT0tIwGo2kpKSQn58v
      9PeYmZmJRqOhvLycoaEh8vLyhOgODAxw6dKlSAtoUlKSsGdEkiTy8vLQaDTMnTuX6dOnC/V4
      33vvPaqrq7l06RJGo1HY8xdOLy1ZsoTExERiY2OFOTiXL1+mo6Mj8p1MT0//W51Pf0VqaiqT
      Jk3CbDazatWqUelOqAggnCft7Oxk//79kQdOBDExMWzcuJEdO3bw8ssvo1KphD7Esiyzfft2
      WltbUavVPPjgg8yfP3/Uut3d3TQ0NNDX18fly5cBIn+LQJIkhoeHuXDhApcuXRIaAfj9fvx+
      P5IkUVVVJTS99M0331BRUYHBYCAxMZFnnnlGmPa+fftobGwkIyODH374gY0bNwrT/uqrr/D7
      /Tz99NPk5uYK0VSpVOTm5rJ//37Wrl1LXFyc8IlTvV5/1Tbef0J4tUhWVhaJiYmcP39eWEQX
      DAb59NNP6e/vR6PRsHnzZiER/+nTpzl//jx9fX2RyFZkhHv8+PHIO9DtdvPoo4/+Y60JdQDA
      yAOxa9cu8vLy6O/vp7y8nIceemjUuuGXfUdHB2+//Tbx8fHk5eUJ88BgxPaioiKcTid+v5gL
      cYxGIxkZGfh8PtLS0gCEetIajYaFCxfi9/tJTU2NfIYIampqsNvtEa9XJBcuXGDVqlV0d3fj
      8XiEazscDoLBIP39/UK1b7nlFlwuF3V1dfT09HDXXXcJ0ZUkifj4eN58801iYmK44447hLRS
      RhtJkli0aBEVFRX09/fz8MMPC9MOBoPY7Xbi4uKwWq34fD4hujabDb1ej8ViIRQKIcuy0AJz
      c3MzWq2WgoICurq6RqU14YrAMPKCCwQCDAwMMDg4SGNjoxBdSZJYvnw5c+bMwel0Cn2RSpLE
      zJkzycnJoaysTFiXjl6vZ8qUKdTX12M2m7Hb7cJCTRgZaKmqqmLmzJnY7XZh0UVlZSVnzpyh
      vr6e2tpaTpw4IUQ3zNKlS0lMTGRwcFB4DWDVqlUEAgF8Pp+wjhQYcRC+/fZbBgcHsdvtkVqU
      KOLj41mxYgXPPvssd955p1DtaOL1esnOziY+Pl5ozcVgMJCfn09BQQGnT58W1nUVHx+P1Wql
      sbGRY8eO8cknnwiNAGbPnk1dXR2pqamjnluYUDUAGHmRdnd3c+7cOQKBAGq1moGBAXJycoTo
      V1RUkJmZGXmhJicnC9GFkWLckSNHmDp1KvPmzRNarHW5XBw7doyffvqJ5ORkYX3vwWCQmpoa
      jh8/Tm1tLRkZGUJyxwMDA8TGxuJwOEhISECtVguLLsrLy3G5XLS1tTE0NIRWqxXamnjy5En0
      en2kX9/hcAjTbmpqIj09nerqatRqtdC0SlxcHHV1dfzrX/9Cp9MJHeqLJgMDA5jNZjweD5Mn
      TxbybHs8Hn7++WdaW1v57bff0Ol0tLS0EBcXJ6Re1NnZyZkzZ/jll1+YP38+er1emENps9ko
      KioiJSWFnJycUaWqJ1wKCKCoqCgquuEuo9LSUubOnUtjYyOzZ88Wpv3pp59SWlpKU1MThw8f
      FhLeh3fGOJ1Oli1bRnNzszAvvaurKzKgFd4zJKorKiYmhtraWoxGI0lJSZFBHBHk5eWRmZnJ
      4OAgw8PDQiM5gGPHjlFSUoLBYOD9999nyZIlQnQlSWLdunXASKFPVJQYZvfu3TQ1NVFSUiK8
      DTSaXLhwgaGhIQYGBvB6vUIaM0wmEw6HA5PJFPHO3W43VVVVOJ3OUetbLBZOnTpFfn4+Z86c
      Yfny0d8vcSUiapQT8gCIFuGBjddee42YmBgee+wxIbpDQ0PU1tai0Wjw+Xz09fWRlZV19f94
      DYRrIjU1NTQ0NKDRaFi/fr0Q7bB++I9IEhMTsVqt6PV6TCZT5MUnAofDwYkTJ9i5cyeSJDF/
      /nyhg3d5eXls3bqVUCgkLEcfJlxkF/V8/JE1a9bw7bffsmfPHmJjY7n77ruFf0Y0COfRc3Nz
      hUz8w8gBYDKZ/pT2ueWWW4Slai5evMisWbNYvXo1w8PDQqN9kYxPq8aQadOmMWPGDKqrq4W1
      mwWDQU6fPk1qairt7e0YDAZhnrRareaJJ56gsLAQq9VKU1OTsH0mFy9e5OuvvyYUCkW8jby8
      vKtuqLwWTCYTU6dOpaqqirS0NOHpiMbGRjZt2kRqaipvvfWWUO0ZM2aQkJBAIBBgypQpQrWj
      yd69e/H5fNx///0UFBSMtTnXTENDQySaq6qqIj8/P2oetaghSq1Wy/fff09bWxuxsbGsXbtW
      eCQqgglXA4gmsizz7rvv0tHRQUtLCz6fT0htQaPRMGvWrD/9Ef0wvP/++zQ1NdHW1obBYBCS
      PtDr9dx88820tbVx77330tnZKawGACP7epKSkvjiiy/YtWsXfX19TJs2TciX0OPxsG3bNo4c
      OYLX6+Wnn35i4cKFQgZyPvvss8gg3759+yZMOsVms9Hd3U1KSgoJCQlCmwWihSzL1NTU8MAD
      DxAIBMjKymLOnDnj3naVSkV6ejrp6elMmTKFm266KSoXUo0WJQK4ArVaTUNDA7fffrvwFr9o
      Eb5Loa2tjaKiIoLB0d3BG0an05GcnIzX6+XkyZO43W6hMwYNDQ3s2LEDp9PJ6tWr+e677/B6
      vUK86gULFpCamopKpcJkMhETEyN0RUZPTw9arVb4BHO0CK8iMZvN/P7777S0tLB27dqxNuua
      6OrqwuVycfr0adLT04UO9UWLoaEhtm/fTm9vL5Ik8corrwjfKiCCcXMhzHihtbWVzs5O4uLi
      SE5OvqbLLcYaWZapq6uLbDfMzc0VOujT2tpKXV0dWVlZ5ObmChuQ6+7u5uzZswSDQWbMmIEk
      Sej1eiEv6traWj777DNycnK4fPmy0GEtv9/P119/TTAYpLi4eFyG9lciyzLvvPMOvb29aDQa
      pk+fLnxlQ7Twer38/PPP2O12pk+fLnStQrRwu91UVFQQCoWwWCwUFBQIL+qLQIkA/oAsy7hc
      LqqrqwFYvnw5xcXFY2zV1ZEkKSpTmDDSunrw4EE8Hg9+vx+HwyFsq2FLSwsVFRXcfPPNHDp0
      iOeff16ILsCpU6dYtmwZfr+fkydPCtOFEbvPnDmDLMvs27dPaNE9muTn50fuzojW8yKSzs5O
      Dh8+TFNTUyQaV6vVFBUVRa0TUBQ2mw2tVovFYuHgwYPCt92KQjkArqC9vZ2FCxeSlpaG1+sd
      a3PGnIsXLxIMBsnKysJisdDS0iKsNXZ4eJgFCxYwbdo0du7cSW9vL3FxcUI8vMLCQj744AP8
      fj+rV68WYO1/cblcpKWlRe4FmCgcOXKERYsWkZCQQF9fn5BifjSx2WysXLmS4uLiSBdab28v
      v/zyyxhbdnW0Wi0ZGRk0NjayZs2acZu2Gv+x1HVEkiTS0tJISUlh27ZtwvelTEQmTZqESqXi
      8OHDuFwuYbekwcgswP79+3nzzTfp7Oxky5YtwlZkVFZWcs899/Dqq68yZ84cIZphUlNTsVqt
      fP/99/T09AjVjhaSJJGSksIPP/xAeXm58KgoGqjV6kibsNlsxmw243A4WLly5VibdlW6urrY
      v38/M2fO5PDhw7jd7rE26X+iRABXYDabSUxM5PXXXx+XVfvrTX9/PwkJCWzdupXY2Fih+deC
      goKotSMaDAa2bNmC1WrF6XTy+OOPC9OeMmUKTqeTWbNmCVtDcj2477772L17NxkZGVe9R1Zh
      dOh0OoxGY6S1NDxtLHKdtQiUA+AK7HY7X375JRcuXGDt2rVCVwhMRNRqNS6Xi46ODvR6PatW
      rRK6Nz1aFBYWRratiuz+OXDgADt37sRoNKJWq8nKyhI2wXw9EL2bXuF/I0kSFouFuro6EhIS
      OHHiBBaLRTkAxjvhDpfxOrl3vdFqtWzYsCGSgxVxp+n1QKfTRaVXfOnSpaSkpEQu3zEajcI/
      QzTDw8ORjhSNRkN7eztarTYq08YKI5hMJjZs2DDWZlwV5S13BefOnaOkpASn0ynUc5yoxMTE
      MHPmzLE2Y9ygUqlobm7G5XKh1+vJzs6eEP30oVCImpoasrOz6e7uRqPRKAeAgnIAXElfXx/v
      vfceMOLtRWPkXGFiIssygUCAoaEhNm3ahN1unxBOglqtpri4mMbGRubMmYPH4+HcuXNjbZbC
      OEA5AP6ALMu0t7czd+5c0tLSRn3ZgsL/F+Fhqvb2diorKyNrph955JGxNu2qSJJEcXExn3/+
      OQaDgQceeGCsTVIYBygHwB+QJAmHw4HT6WTnzp0TZlJS4fqgUqn+dLXk4ODghHISzGYzKpUK
      rVY77nfpKFwflHaA/xAKhTh58mTkHtbS0lLi4uLo6uoSvgpZ4f+DixcvToihJPjv2vCSkhLS
      09P55ptvxtokhXGAEgH8h1AoxNmzZ5FlOeLVBQIB9uzZw4svvjjG1imMR2w2GytWrBhrM64Z
      lUpFV1cXPT09SgSgACjL4P6SUChER0cHycnJwhagKSiMFV1dXezdu5dJkyaxcuVK5RBQUCKA
      v0KlUo3LDX4KCv+E+vp63G43sixjs9koLCwca5MUxhjlAFBQuAGQZZn6+nrWr19PbGzshBhg
      U4g+ygGgoHCDYLVaeeuttzAajSxevHjcr1RWiD7KAaCgcIPg8/nYvHkzWq0Wg8Ew1uYojAOU
      A0BB4QZAkiQkSeKNN97AYDCwePFi7rzzzrE2S2GMUbqAFBRuEHw+X+S+aL1er0QBCsoBoKCg
      oHCjokwCKygoKNygKAeAgoKCwg2KcgAoKCgo3KD8G7HPfabtlJfWAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
