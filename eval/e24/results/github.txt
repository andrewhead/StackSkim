===File wget.sh, 79366462===
wget -rc -np --timeout=10 --tries=10 http://centos.ustc.edu.cn/centos/5/
===File download_invitation_images.sh, 73902577===
wget http://public.orsi-and-jan.info/img/home/vorort/strasse.png -P css/img/home/vorort/
wget http://public.orsi-and-jan.info/img/home/unterkunft/zeiger-klein.png -P css/img/home/unterkunft/
wget http://public.orsi-and-jan.info/img/home/vorort/gleise.png -P css/img/home/vorort/
wget http://public.orsi-and-jan.info/img/home/vorort/boden.png -P css/img/home/vorort/
wget http://public.orsi-and-jan.info/img/home/vorort/tram.png -P css/img/home/vorort/
wget http://public.orsi-and-jan.info/img/home/vorort/auto_leer.png -P css/img/home/vorort/
wget http://public.orsi-and-jan.info/img/bg-texture.jpg -P css/img/
wget http://public.orsi-and-jan.info/img/start/lng_hu_inactive.png -P css/img/start/
wget http://public.orsi-and-jan.info/img/start/lng_de_inactive.png -P css/img/start/
wget http://public.orsi-and-jan.info/img/home/arrow-brown.png -P css/img/home/
wget http://public.orsi-and-jan.info/img/start/lng_en_active.png -P css/img/start/
wget http://public.orsi-and-jan.info/img/home/unterkunft/bett.png -P css/img/home/unterkunft/
wget http://public.orsi-and-jan.info/img/home/unterkunft/boden.png -P css/img/home/unterkunft/
wget http://public.orsi-and-jan.info/img/home/unterkunft/zeiger-gross.png -P css/img/home/unterkunft/
wget http://public.orsi-and-jan.info/img/home/unterkunft/wecker.png -P css/img/home/unterkunft/
===File getfiles.sh, 15910098===
wget http://personal.smartt.com/~brianp/images/snort.aif
wget http://personal.smartt.com/~brianp/images/alarm.aif
wget http://personal.smartt.com/~brianp/images/clucksnort.aif
wget http://personal.smartt.com/~brianp/images/cluck.aif
wget http://personal.smartt.com/~brianp/images/scream.aif
wget http://personal.smartt.com/~brianp/images/fight.aif
wget http://personal.smartt.com/~brianp/images/hum.aif
wget http://personal.smartt.com/~brianp/images/babymom.aif
wget http://personal.smartt.com/~brianp/images/baby.aif
wget http://personal.smartt.com/~brianp/images/weanedhums.aif
wget http://personal.smartt.com/~brianp/images/mom.aif
wget http://personal.smartt.com/~brianp/images/humw.aif
wget http://personal.smartt.com/~brianp/images/hummun.aif
wget http://personal.smartt.com/~brianp/images/orgle.aif
wget http://personal.smartt.com/~brianp/images/growling.aif
===File get.sh, 84019542===
wget "http://devserver.sti2.org/connectme/uitests/lime/demo/annotations/Cross-country_skiing.json"
wget "http://devserver.sti2.org/connectme/uitests/lime/demo/annotations/Mountains_of_Salzburg.json"
wget "http://devserver.sti2.org/connectme/uitests/lime/demo/annotations/Zorbing.json"
wget "http://devserver.sti2.org/connectme/uitests/lime/demo/annotations/Sledding.json"
wget "http://devserver.sti2.org/connectme/uitests/lime/demo/annotations/Tepidarium.json"
wget "http://devserver.sti2.org/connectme/uitests/lime/demo/annotations/Tour_skating.json"
wget "http://devserver.sti2.org/connectme/uitests/lime/demo/annotations/Flachau.json"
wget "http://devserver.sti2.org/connectme/uitests/lime/demo/annotations/Snowshoe.json"
wget "http://devserver.sti2.org/connectme/uitests/lime/demo/annotations/Inline_hockey.json"
wget "http://devserver.sti2.org/connectme/uitests/lime/demo/annotations/Freeskiing.json"
wget "http://devserver.sti2.org/connectme/uitests/lime/demo/annotations/Mountain_biking.json"
wget "http://devserver.sti2.org/connectme/uitests/lime/demo/annotations/Beach_volleyball.json"
wget "http://devserver.sti2.org/connectme/uitests/lime/demo/annotations/Downhill_mountain_biking.json"
wget "http://devserver.sti2.org/connectme/uitests/lime/demo/annotations/Trampoline.json"
wget "http://devserver.sti2.org/connectme/uitests/lime/demo/annotations/Skateboarding.json"
===File download.sh, 82347348===
wget http://blog.codingnow.com/2012/07/dev_note_22.html -O coding_now_dev_note_22.html
wget http://www.zhihu.com/question/20365077/answer/14910182 -O zhihu_14910182.html
wget http://www.alibuybuy.com/posts/74954.html -O alibuybuy_74954.html
wget http://www.alibuybuy.com/posts/75033.html -O alibuybuy_75033.html
wget http://www.dongxi.net/node/23284 -O dongxi_23284.html

===File wget_update.sh, 16327484===
wget --timestamp --no-check-certificate http://github.com/joshuaclayton/blueprint-css/raw/master/blueprint/screen.css
wget --timestamp --no-check-certificate http://github.com/joshuaclayton/blueprint-css/raw/master/blueprint/ie.css
wget --timestamp --no-check-certificate http://github.com/joshuaclayton/blueprint-css/raw/master/blueprint/print.css
===File install_es.sh, 73056433===
unzip mysql-connector-java-5.1.26.zip
wget http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.26.zip/from/http://cdn.mysql.com/ -O mysql-connector-java-5.1.26.zip
wget http://jdbc.postgresql.org/download/postgresql-9.2-1003.jdbc4.jar
rm -rf mysql-connector-java-5.1.26.zip
cd ..
wget -c --no-check-certificate https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-0.90.7.tar.gz
tar xfvz elasticsearch-0.90.7.tar.gz
cd elasticsearch/plugins/river-jdbc
===File sizes.sh, 2318609===
wget -q http://0.0.0.0:8000/src/uki-core.js?squeeze=1
gzip uki-core.js\?squeeze\=1
wget -q http://0.0.0.0:8000/src/uki.js?squeeze=1
===File randomxkcd.sh, 64987592===
wget -q http://dynamic.xkcd.com/comic/random/ -O - | grep -Eo http://imgs.xkcd.com/comics/.*png | wget -q -i - -O - | display
===File postgresql-pgindent.sh, 72088231===
wget -N http://ftp.postgresql.org/pub/dev/pg_bsd_indent-1.3.tar.gz

echo '98efaae1f2b0253ec1ae6ddb1a8925e19aa1bb85  pg_bsd_indent-1.3.tar.gz' | sha1sum -c

wget -O src/tools/pgindent/typedefs.list http://buildfarm.postgresql.org/cgi-bin/typedefs.pl
===File update.sh, 81033842===

wget -c https://raw.github.com/highslide-software/highcharts.com/master/js/highcharts.src.js
wget -c https://raw.github.com/highslide-software/highcharts.com/master/js/highstock.src.js
===File setup.sh, 80634461===
# wget --no-check-certificate https://raw.github.com/kyleboon/dotfiles/master/setup.sh -O - | sh
 
sudo apt-get install zsh
git clone git@github.com:kyleboon/dotfiles.git
wget --no-check-certificate https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh
===File fetch_opentk.sh, 3234023===
wget http://sourceforge.net/projects/opentk/files/opentk/opentk-1.0/2010-10-06/opentk-2010-10-06.zip/download -Odownload.zip
unzip download.zip
===File linux-build-basic.sh, 3389088===
wget http://iweb.dl.sourceforge.net/project/premake/Premake/4.3/premake-4.3-linux.tar.gz
tar -xf premake-4.3-linux.tar.gz
===File download.sh, 4364138===
wget -x -c -i ../paths.txt

===File setup-python.sh, 4832839===
wget http://www.saddi.com/software/flup/dist/flup-1.0.2.tar.gz
tar zxfv flup-1.0.2.tar.gz
===File upload_info.sh, 15451619===
wget -O info.html http://localhost/info.php && php uploadFile.php info.html info.html "text/html"
===File getExtList.sh, 15495779===
 wget http://www.opengl.org/registry/

===File get-url.sh, 15706460===
wget --directory-prefix=./pages --convert-links=on $1
echo $1 >> downloaded-pages.txt
===File nodejs-webfaction_0.2.3.sh, 15763725===
wget http://nodejs.org/dist/node-v0.2.3.tar.gz
tar -zxvf  node-v0.2.3.tar.gz
===File install_es.sh, 15845092===
wget https://github.com/downloads/elasticsearch/elasticsearch/elasticsearch-0.19.4.zip
unzip elasticsearch-0.19.4.zip
===File emacs_on_centos.sh, 16213742===
wget http://mirror.clarkson.edu/gnu/emacs/emacs-23.3.tar.gz

===File update_jets3t_ba.sh, 68716341===
 wget http://bitbucket.org/jmurty/jets3t/downloads/jets3t-0.8.1.zip
 unzip jets3t-0.8.1.zip
===File lzo-ubuntu.sh, 70595411===
wget https://github.com/kambatla/hadoop-lzo/tarball/master
tar xvzf master
===File update_xsd.sh, 71760484===
wget -nc https://raw.github.com/aeolusproject/imagefactory/master/Documentation/TDL.xsd
===File external_ip.sh, 81009752===
wget -q http://my-ip.heroku.com/ -O /tmp/external_ip
===File fetch.sh, 81124967===
wget -O - -i data.url > raw.data

===File fetch_opentk.sh, 82132932===
wget http://sourceforge.net/projects/opentk/files/opentk/opentk-1.0/2010-10-06/opentk-2010-10-06.zip/download -Odownload.zip
unzip download.zip
===File update_xsd.sh, 82365839===
wget -nc https://raw.github.com/aeolusproject/imagefactory/master/Documentation/TDL.xsd
===File fetch_opentk.sh, 83492362===
wget http://sourceforge.net/projects/opentk/files/opentk/opentk-1.0/2010-10-06/opentk-2010-10-06.zip/download -Odownload.zip
unzip download.zip
===File config-library-libxenon.sh, 83856360===
#wget -c ftp://ftp.simplesystems.org/pub/libpng/png/src/libpng-1.5.7.tar.xz
#rm -rf libpng-1.5.7
===File fetch_opentk.sh, 84738703===
wget http://sourceforge.net/projects/opentk/files/opentk/opentk-1.0/2010-10-06/opentk-2010-10-06.zip/download -Odownload.zip
unzip download.zip
===File update.sh, 85283930===
wget --no-check-certificate http://creq.unl.edu/courses/public-view/all-courses -O all-courses.xml
# don't update the subject codes, until we can merge with descriptions
===File install.sh, 77015957===
wget http://ethernut.de/arc/ethernut-4.8.8.tar.bz2
tar xjf ethernut-4.8.8.tar.bz2
===File get_json.sh, 78213465===
wget "http://api.leakfeed.com/v1/cables/latest.json"
===File install_argparse.sh, 78317394===
wget http://argparse.googlecode.com/files/argparse-1.2.1.tar.gz
tar -xvzf argparse-1.2.1.tar.gz 
===File fetch_opentk.sh, 79726972===
wget http://sourceforge.net/projects/opentk/files/opentk/opentk-1.0/2010-10-06/opentk-2010-10-06.zip/download -Odownload.zip
unzip download.zip
===File elasticsearch.sh, 80607167===
wget https://github.com/downloads/elasticsearch/elasticsearch/elasticsearch-0.19.0.tar.gz
sudo unzip elasticsearch-0.19.0.tar.gz -d /elasticsearch
===File setup-yuicompressor.sh, 86463023===
wget --quiet http://yui.zenfs.com/releases/yuicompressor/yuicompressor-2.4.7.zip
mkdir -p app/Resources/java/unzip
===File fetch_opentk.sh, 88365678===
wget http://sourceforge.net/projects/opentk/files/opentk/opentk-1.0/2010-10-06/opentk-2010-10-06.zip/download -Odownload.zip
unzip download.zip
===File bench-network.sh, 91764828===
wget freevps.us/downloads/bench.sh -O - -o /dev/null|bash
===File wget, 80824146===
        if ! wget -c $proto:${source_url} -O $partname; then
    if [[ -f $partname ]]; then
            wget $proto:${source_url} -O $partname
            rm $partname
    else
        fi
    fi
        wget $proto:${source_url} -O $partname
        wget -N $(basename $loader):${source_url}
    if [[ "$wget_update" ]]; then
    else
update () {
===File wget, 67640534===
#!/bin/sh
LD_LIBRARY_PATH=/lib:/usr/lib
# simple wrapper for wget

/bin/wget $@
===File wget, 83100061===
#!/usr/bin/env bash

# Copy wget config to ~/.wgetrc
configDir=~/.oroshi/config/wget
# Paths
destFile=~/.wgetrc
configFile=${configDir}/wgetrc

===File wget-des-parallel-old, 65447452===
        wget-des-parallel [-n njobs] type band
Usage


        wget-des-parallel red i < runlist
        cat runlist | wget-des-parallel red i


#!/bin/bash
#
# run wget-des in parallel
cat - | parallel -u -j${njobs} "wget-des ${opts} ${type} {} ${band}"
===File wget-mirror, 16195522===
website_url=$2
wget --mirror -p --convert-links -P "$local_dir" "$website_url"
# wget a local mirror of a remote website.
#
# We use wget with these settings:
#
#
===File wget-des-old, 65447402===
Usage 
        wget-des [-d dir] type run band

#
comm="
#  usage:  wget-des [-d dir] type run band
    -c                      \
#
wget                        \
===File wget-bootstrap-nocert.sh, 69158811===

wget --no-check-certificate -O - http://bootstrap.saltstack.org | sudo sh -s -- "$@"

#wget --no-check-certificate -O - http://bootstrap.saltstack.org | sudo sh

===File wget-bootstrap.sh, 69158846===

wget -O - http://bootstrap.saltstack.org | sudo sh -s -- "$@"

#wget -O - http://bootstrap.saltstack.org | sudo sh

===File wget-bootstrap-nocert.sh, 71856676===
wget --no-check-certificate -O - http://bootstrap.saltstack.org | sudo sh -s -- -c /tmp

#wget --no-check-certificate -O - http://bootstrap.saltstack.org | sudo sh


===File wget-bootstrap.sh, 71856720===
wget -O - http://bootstrap.saltstack.org | sudo sh -s -- -c /tmp

#wget -O - http://bootstrap.saltstack.org | sudo sh


===File wget-bootstrap-nocert.sh, 85114877===

wget --no-check-certificate -O - https://raw.githubusercontent.com/saltstack/salt-bootstrap/stable/bootstrap-salt.sh | sudo sh -s -- "$@"

#wget --no-check-certificate -O - https://raw.githubusercontent.com/saltstack/salt-bootstrap/stable/bootstrap-salt.sh | sudo sh

===File wget-bootstrap.sh, 85114891===

wget -O - https://raw.githubusercontent.com/saltstack/salt-bootstrap/stable/bootstrap-salt.sh | sudo sh -s -- "$@"

#wget -O - https://raw.githubusercontent.com/saltstack/salt-bootstrap/stable/bootstrap-salt.sh | sudo sh

===File wget-bootstrap-nocert.sh, 85176494===

wget --no-check-certificate -O - https://raw.githubusercontent.com/saltstack/salt-bootstrap/stable/bootstrap-salt.sh | sudo sh -s -- "$@"

#wget --no-check-certificate -O - https://raw.githubusercontent.com/saltstack/salt-bootstrap/stable/bootstrap-salt.sh | sudo sh

===File wget-bootstrap.sh, 85176521===

wget -O - https://raw.githubusercontent.com/saltstack/salt-bootstrap/stable/bootstrap-salt.sh | sudo sh -s -- "$@"

#wget -O - https://raw.githubusercontent.com/saltstack/salt-bootstrap/stable/bootstrap-salt.sh | sudo sh

===File wget.sh, 78899414===
#!/bin/sh
##
## wget.sh for  in /u/a1/berard_a/script
wget --proxy-user=$USER --proxy-passwd=$pass $1
# Serveur epita
===File wget-bootstrap-nocert.sh, 90219264===

wget --no-check-certificate -O - http://bootstrap.saltstack.org | sudo sh -s -- "$@"

#wget --no-check-certificate -O - http://bootstrap.saltstack.org | sudo sh

===File wget-bootstrap.sh, 90219292===

wget -O - http://bootstrap.saltstack.org | sudo sh -s -- "$@"

#wget -O - http://bootstrap.saltstack.org | sudo sh

===File wget-bootstrap-nocert.sh, 90686466===

wget --no-check-certificate -O - http://bootstrap.saltstack.org | sudo sh -s -- "$@"

#wget --no-check-certificate -O - http://bootstrap.saltstack.org | sudo sh

===File wget-bootstrap.sh, 90686479===

wget -O - http://bootstrap.saltstack.org | sudo sh -s -- "$@"

#wget -O - http://bootstrap.saltstack.org | sudo sh

===File wget-bootstrap-nocert.sh, 91260554===

wget --no-check-certificate -O - http://bootstrap.saltstack.org | sudo sh -s -- "$@"

#wget --no-check-certificate -O - http://bootstrap.saltstack.org | sudo sh

===File wget-bootstrap.sh, 91260563===

wget -O - http://bootstrap.saltstack.org | sudo sh -s -- "$@"

#wget -O - http://bootstrap.saltstack.org | sudo sh

===File wget-openbsd, 15745356===
for FILE in `cat index.txt`; do
    --cut-dirs=4 -P$MIRROR_DIR --dot-style=binary $SITE/$FILE
    /usr/bin/wget -c -w 5 --random-wait -nH \
===File wget.sh, 73381338===
# Mirror a website
wget -mpEk --restrict-file-names=nocontrol,windows -e robots=off -U 'Mozilla/5.0' http://site-address.com
===File check-wget.sh, 1824543===
#!/bin/sh

# check-wget.sh by Dan Peori (dan.peori@oopo.net)
wget -V 1>/dev/null 2>&1 || { echo "ERROR: Install wget before continuing."; exit 1; }
## Check for wget.
===File check-wget.sh, 2330163===
#!/bin/sh

# check-wget.sh by Dan Peori (danpeori@oopo.net)
wget -V 1> /dev/null || { echo "ERROR: Install wget before continuing."; exit 1; }
## Check for wget.
===File x-wget-url, 15691265===
	echo "$0: url: $url" > $logf
	#echo "spawning xterm ($@)" >> /tmp/wget.log
else
	else
	wget --no-check-certificate -c "$url"
	xterm -class XTerm7 -e "\"$0\" _ $@"
		echo "`basename $0`: wget failed: log: $logf. press enter to exit..."
		read
DOWNLOAD_DIR="$HOME/Desktop"


LOG_DIR="/tmp/x-wget"
===File check-wget.sh, 77666331===
#!/bin/sh

# check-wget.sh by Dan Peori (dan.peori@oopo.net)
wget -V 1> /dev/null || { echo "ERROR: Install wget before continuing."; exit 1; }
## Check for wget.
===File check-wget.sh, 77677333===
#!/bin/sh

# check-wget.sh by Dan Peori (dan.peori@oopo.net)
wget -V 1> /dev/null || { echo "ERROR: Install wget before continuing."; exit 1; }
## Check for wget.
===File check-wget.sh, 77726434===
#!/bin/sh

# check-wget.sh by Dan Peori (danpeori@oopo.net)
wget -V 1> /dev/null || { echo "ERROR: Install wget before continuing."; exit 1; }
## Check for wget.
===File check-wget.sh, 79242047===
#!/bin/sh

# check-wget.sh by Dan Peori (dan.peori@oopo.net)
wget -V 1>/dev/null 2>&1 || { echo "ERROR: Install wget before continuing."; exit 1; }
## Check for wget.
===File check-wget.sh, 79517590===
#!/bin/sh

# check-wget.sh by Dan Peori (dan.peori@oopo.net)
wget -V 1> /dev/null || { echo "ERROR: Install wget before continuing."; exit 1; }
## Check for wget.
===File mirror-futurezone-wget.sh, 16272343===
EXCLUDEDOMAINS='login.orf.at,my.orf.at'

LOG='wget.log'
    -e robots=$ROBOTS -k -nc -c -w$WAIT -x -E -rH -l$LEVELS \
for i in `seq -f %f $START $END | cut -d, -f1`; do 
  wget -a "$LOG" \
===File authenticate-with-wget.sh, 16929374===
wget --http-user user --http-password pwd URL

wget --header='Accept: text/html' --http-user=LOGIN --http-password=PWD URL
===File http-wget.sh, 14835625===
#/bin/bash
wget "$CODA_SELECTED_TEXT"
===File provide-wget.sh, 16332904===
#!/bin/sh
$(dirname $0)/provide-tool.sh wget || exit 1
===File build-wget.sh, 16332920===
#!/bin/sh
$(dirname $0)/build-tool.sh wget
===File build-wget, 82021847===
# Use this before you have a wget or openssl

export basedir_bit=wget-1.13


===File server.sh, 7718090===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File server.sh, 7989124===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File proxy.sh, 7718113===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File proxy.sh, 7989147===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File pkg-get.deprecated, 9887144===
# return 0 on okay, 1 on fail
# grab either gzip package or wget package "the hard way"

# give location of a "wget.static" binary. copy to pkg-get internal place

	if test -x $1 ; then
function copy_wget_static {
			sleep 2
			print 'Attempting to download wget package'
			print ""
			status=$?
			ftp_prog_hardway wget

			print "For manual install of the key (recommended), try"
			print "  wget http://www.opencsw.org/mirrors"
			print "  gpg --import index.html "
===File tuxera_update.sh, 25973411===

    if [ "$http_client" = "wget" ] ; then
    else
        $wget -O "$tmpscript" "$upgrade_url"
        reply=$($wget --post-data="terminal=1&filename=${remote_package}&target-config=${target}&tags=${tags}&extraargs=${extraargs}&use-cache=${using_cache}&script-version=${script_version}&cache-lookup-time=${cache_lookup_time}&start-build=1" -O - https://${server})

    else
    fi
        command -v wget > /dev/null
        echo -n "Checking for 'wget'... "

    if [ "$http_client" = "wget" ] ; then
        latest_pkg=$($wget --post-data="target-config=${target}" -O - https://${server}/latest.php)
    if [ "$http_client" = "wget" ] ; then
    else
    wget_quiet=${wget}
    wget="wget --user ${username} --password ${password}"
===File download.sh, 25661619===
		echo "  >> newlib-$NEWLIB_VERSION.tar.gz..."
		wget -c $NEWLIB_MIRROR/newlib-$NEWLIB_VERSION.tar.gz
	    echo "  >> ppl-$PPL_VERSION.tar.gz..."
	    check_error_exit
		check_error_exit
	    wget -c $PPL_MIRROR/ppl-$PPL_VERSION.tar.gz
		check_error_exit
		check_error_exit
		wget -c $MPFR_MIRROR/mpfr-$MPFR_VERSION.tar.bz2
		echo "  >> Downloading mpfr-$MPFR_VERSION..."
	    echo "  >> cloog-ppl-$CLOOG_PPL_VERSION.tar.gz..."
	    wget -c $CLOOG_PPL_MIRROR/cloog-ppl-$CLOOG_PPL_VERSION.tar.gz
	    check_error_exit
		echo "  >> Downloading mpc-$MPC_VERSION..."
		wget -c $MPC_MIRROR/mpc-$MPC_VERSION.tar.gz
===File download.sh, 25676272===
		echo "  >> newlib-$NEWLIB_VERSION.tar.gz..."
		wget -c $NEWLIB_MIRROR/newlib-$NEWLIB_VERSION.tar.gz
	    echo "  >> ppl-$PPL_VERSION.tar.gz..."
	    check_error_exit
		check_error_exit
	    wget -c $PPL_MIRROR/ppl-$PPL_VERSION.tar.gz
		check_error_exit
		check_error_exit
		wget -c $MPFR_MIRROR/mpfr-$MPFR_VERSION.tar.bz2
		echo "  >> Downloading mpfr-$MPFR_VERSION..."
	    echo "  >> cloog-ppl-$CLOOG_PPL_VERSION.tar.gz..."
	    wget -c $CLOOG_PPL_MIRROR/cloog-ppl-$CLOOG_PPL_VERSION.tar.gz
	    check_error_exit
		echo "  >> Downloading mpc-$MPC_VERSION..."
		wget -c $MPC_MIRROR/mpc-$MPC_VERSION.tar.gz
===File store.sh, 7718087===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File store.sh, 7989121===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File nginx, 7831579===
	else
	elif
    ocf_log err "could not find a http client; make sure that either wget or curl is available"
  then
	return $OCF_ERR_CONFIGURED
		echo "wget"
		curl|wget) echo ${test_httpclient}_func;;  #these are supported
	case "$test_httpclient" in
          which wget >/dev/null 2>&1
        then
For example, you can set this paramter to "wget" if you prefer that to curl.
If not specified, the RA will try to find one on the system.
Currently, wget and curl are supported, with curl being preferred.
WGETOPTS="-O- -q -L --no-proxy --bind-address=127.0.0.1"
CURLOPTS="-o - -Ss -L --interface lo"
		*) echo userdefined;;
# safe to connect from the local interface.
===File grade-lab6.sh, 25805756===

	if wget -o wget.log -O /dev/null localhost:$http_port/; then
	perl -e "print '    wget localhost:$http_port/: '"
	else
		if egrep "ERROR 404" wget.log >/dev/null; then
			pass;
		fail "got back data";
	else
	if wget -o /dev/null -O qemu.out localhost:$http_port/index.html; then
		if diff qemu.out fs/index.html > /dev/null; then
	if wget -o wget.log -O /dev/null localhost:$http_port/random_file.txt; then
	perl -e "print '    wget localhost:$http_port/random_file.txt: '"


	perl -e "print '    wget localhost:$http_port/index.html: '"
		if egrep "ERROR 404" wget.log >/dev/null; then
			pass;
===File server.sh, 4358===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File server.sh, 2203705===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File server.sh, 2204937===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File buildwin32.sh, 25146695===
	-c -O $packagedir/zlib125.zip || exit 1
wget http://www.winimage.com/zLibDll/zlib125.zip \
	-c -O $packagedir/libogg-$ogg_version-dev.7z || exit 1
wget http://switch.dl.sourceforge.net/project/winlibs/libvorbis/libvorbis-$vorbis_version-dll.7z \
	-c -O $packagedir/libvorbis-$vorbis_version-dll.7z || exit 1
wget http://switch.dl.sourceforge.net/project/winlibs/libvorbis/libvorbis-$vorbis_version-dev.7z \
wget http://switch.dl.sourceforge.net/project/winlibs/libogg/libogg-$ogg_version-dev.7z \
wget http://switch.dl.sourceforge.net/project/winlibs/libogg/libogg-$ogg_version-dll.7z \
	-c -O $packagedir/libogg-$ogg_version-dll.7z || exit 1
	-c -O $packagedir/irrlicht-$irrlicht_version.zip || exit 1
wget http://downloads.sourceforge.net/irrlicht/irrlicht-$irrlicht_version.zip \
# Get stuff
	-c -O $packagedir/zlib125dll.zip || exit 1
wget http://www.winimage.com/zLibDll/zlib125dll.zip \
	-c -O $packagedir/libvorbis-$vorbis_version-dev.7z || exit 1
===File proxy.sh, 4381===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File proxy.sh, 2203728===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File proxy.sh, 2204960===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File installer.sh, 17734512===
wget -q http://dl.dropbox.com/u/26139869/engengis/currentversion -O /sdcard/currentversion
echo 
echo "Installer will install: `cat /sdcard/currentversion`"
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S35sd256 -O /system/etc/engengis/S35sd256
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/bin/engengis -O /system/bin/engengis
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S07hsstweak -O /system/etc/engengis/S00ramscript
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S28noopscheduler -O /system/etc/engengis/S28noopscheduler
  mkdir /system/etc/engengis
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S28vrscheduler -O /system/etc/engengis/S28vrscheduler
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S28sioscheduler -O /system/etc/engengis/S28sioscheduler
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S21hsstweak -O /system/etc/engengis/S21hsstweak
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S14zipalign -O /system/etc/engengis/S14zipalign
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S28cfqscheduler -O /system/etc/engengis/S28cfqscheduler
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S28bfqscheduler -O /system/etc/engengis/S28bfqscheduler
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S28deadlinescheduler -O /system/etc/engengis/S28deadlinescheduler
===File updater.sh, 17734513===
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S28cfqscheduler -O /system/etc/engengis/S28cfqscheduler
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S07hsstweak -O /system/etc/engengis/S00ramscript
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S35sd512 -O /system/etc/engengis/S35sd512
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S35sd256 -O /system/etc/engengis/S35sd256
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S28vrscheduler -O /system/etc/engengis/S28vrscheduler
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S28sioscheduler -O /system/etc/engengis/S28sioscheduler
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S28noopscheduler -O /system/etc/engengis/S28noopscheduler
  mkdir /system/etc/engengis
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/bin/engengis -O /system/bin/engengis
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S28bfqscheduler -O /system/etc/engengis/S28bfqscheduler
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S14zipalign -O /system/etc/engengis/S14zipalign
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S21hsstweak -O /system/etc/engengis/S21hsstweak
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S35sd1024 -O /system/etc/engengis/S35sd1024
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S35sd2048 -O /system/etc/engengis/S35sd2048
  wget -q http://dl.dropbox.com/u/26139869/engengis/system/etc/engengis/S28deadlinescheduler -O /system/etc/engengis/S28deadlinescheduler
===File mythbuild.sh, 225017===

#   You will need a C compiler and these packages:
    if [ "$MSYSTEM" != "MINGW32" ]; then
        install_pkg wget
# Need wget http://www.gnu.org/software/wget/ to download everything
if ! wget --version >/dev/null 2>&1 ; then
#     wget patch git-core
#
    # No wget so use ftp to download the wget source
    else
            echo "  Start > My Computer > RightClick: Properties"
            echo "There is no FTP client so you must manually install wget from:"
        if ! which ftp >/dev/null 2>&1 ; then
            echo "Run the installer and then add wget to the PATH:"
            echo "  http://$SOURCEFORGE/gnuwin32/wget-1.11.4-1-setup.exe"
===File download.sh, 5498148===
		echo "  >> newlib-$NEWLIB_VERSION.tar.gz..."
		wget -c $NEWLIB_MIRROR/newlib-$NEWLIB_VERSION.tar.gz
	    echo "  >> ppl-$PPL_VERSION.tar.gz..."
	    check_error_exit
		check_error_exit
	    wget -c $PPL_MIRROR/ppl-$PPL_VERSION.tar.gz
		check_error_exit
		check_error_exit
		wget -c $MPFR_MIRROR/mpfr-$MPFR_VERSION.tar.bz2
		echo "  >> Downloading mpfr-$MPFR_VERSION..."
	    echo "  >> cloog-ppl-$CLOOG_PPL_VERSION.tar.gz..."
	    wget -c $CLOOG_PPL_MIRROR/cloog-ppl-$CLOOG_PPL_VERSION.tar.gz
	    check_error_exit
		echo "  >> Downloading mpc-$MPC_VERSION..."
		wget -c $MPC_MIRROR/mpc-$MPC_VERSION.tar.gz
===File deps.sh, 8461399===
  echo "      wget OR curl, ruby, and rubygems."
  echo "NOTE: We currently only install the Erlang stuff in ${BASE},"
  echo "NOTE: $0 depends on a working build environment,"
  else
  elif [ ! -z "${WGET}" ] ; then
    "${WGET}" "${URL}"
    "${CURL}" -L -O "${URL}"
detect_opt CURL curl "cURL Utility"
detect_opt WGET wget "Wget Utility"

===File setup_engines.sh, 3070418===
#  if ! [ -f libws-SMSegList.1495.O2.traindf.a ]; then wget http://regiment.us/enginebinaries/libws-SMSegList.1495.O2.traindf.x86_64.a; fi

#  if ! [ -f libws-SMSegList.1495.O2.default.a ]; then wget http://regiment.us/enginebinaries/libws-SMSegList.1495.O2.default.a; fi
#  if ! [ -f libws-SMSegList.1495.O2.df.a ];      then wget http://regiment.us/enginebinaries/libws-SMSegList.1495.O2.df.a     ; fi
  if ! [ -f libws-SMSegList.newest.O2.coredf.x86_64.a ]; then wget http://regiment.us/enginebinaries/libws-SMSegList.newest.O2.coredf.x86_64.a; fi

  rm -f libws-SMSegList.newest.O2.coredf.a
  if ! [ -f libws-SMSegList.newest.O2.coredf.nothreads.a ]; 
  if ! [ -f libws-SMSegList.1495.O2.df.a ];      then wget http://regiment.us/enginebinaries/libws-SMSegList.1495.O2.df.a     ; fi



  if ! [ -f libws-SMSegList.1495.O2.traindf.a ]; then wget http://regiment.us/enginebinaries/libws-SMSegList.1495.O2.traindf.a; fi
  if ! [ -f include_newest.tgz ]; then wget http://regiment.us/enginebinaries/include_newest.tgz; fi
  if ! [ -f include_1495.tgz ]; then wget http://regiment.us/enginebinaries/include_1495.tgz; fi
  then wget http://regiment.us/enginebinaries/libws-SMSegList.newest.O2.coredf.nothreads.x86_64.a; fi
  rm -f libws-SMSegList.newest.O2.coredf.nothreads.a
===File roo-deploy.sh, 17571525===
        l_error "wget failed: $@ (returned code $EXITED)" >&2; exit 1;
    fi
    EXITED=$?
    if [[ ! "$EXITED" = "0" ]]; then
    fi
    wget $WGET_OPTS --retry-connrefused --tries=30 -O /tmp/rootest/wget.html $@
jetty_stop_start_get_stop() {
    sha1sum, zip, unzip and other common *nix commands
    mvn and wget (only required if using -t or -T)
    ~/.m2/settings.xml contains a <gpg.passphrase> for the GPG key
    WGET_OPTS="-q"
    $MVN_CMD -e -B -Dmaven.tomcat.port=8888 tomcat:run &>/dev/null 2>&1 &
        WGET_OPTS="-v"
    if [ "$VERBOSE" = "1" ]; then
    type -P wget &>/dev/null || { l_error "wget not found. Aborting." >&2; exit 1; }
    log "Performing JSF testing; expecting GET success for URL: $@"
===File auto_install_nmp.sh, 17577741===
if [ ! -f gperftools-$gpertool_ver.tar.gz ];then
#wget http://bart.eaccelerator.net/source/0.9.6.1/eaccelerator-0.9.6.1.zip
cd $srcdir
tar xf ngx_cache_purge-1.5.tar.gz
wget --content-disposition https://github.com/agentzh/chunkin-nginx-module/tarball/master
wget http://labs.frickle.com/files/ngx_supervisord-1.4.tar.gz
wget http://labs.frickle.com/files/ngx_cache_purge-1.5.tar.gz
wget http://gperftools.googlecode.com/files/gperftools-$gpertool_ver.tar.gz
fi
cp $installdir/eaccelerator-0.9.6.1.tar.bz2 $srcdir
tar xf imagick-2.3.0.tgz
wget --content-disposition http://pecl.php.net/get/imagick-2.3.0.tgz
wget http://nginx.org/download/nginx-$n_ver.tar.gz
gzip -cd php-$p_ver-fpm-$p_fpm_ver.diff.gz |patch -d $srcdir/php-$p_ver -p1
if [ ! -f eaccelerator-0.9.6.1.tar.bz2 ];then
wget http://labs.frickle.com/files/ngx_slowfs_cache-1.8.tar.gz
===File ooc-install.sh, 7251791===
    else
        if [ ! -x "`which curl`" ] && [ ! -x "`which wget`" ]; then
            echo "Sorry, you need either curl or wget installed."
            echo ""
            echo "OS X: brew install wget"
            echo ""
            echo "Ubuntu: sudo apt-get install curl"
        curl -L -\# "http://ooc-lang.org/boots" | tar -xjf -
    elif [ -x "`which wget`" ]; then
        wget --progress=bar "http://ooc-lang.org/boots" -O - | tar -xjf -
    fi
===File update-rsa-js, 7490595===
echo "// ==== File: rng.js" >> rsa.js
wget --quiet -O - http://www-cs-students.stanford.edu/~tjw/jsbn/rng.js >> rsa.js
echo "// ==== File: rsa.js" >> rsa.js
wget --quiet -O - http://www-cs-students.stanford.edu/~tjw/jsbn/rsa.js >> rsa.js
echo "// ==== File: jsbn.js" >> rsa.js
wget --quiet -O - http://www-cs-students.stanford.edu/~tjw/jsbn/jsbn.js >> rsa.js
echo "// ==== File: prng4.js" >> rsa.js
wget --quiet -O - http://www-cs-students.stanford.edu/~tjw/jsbn/prng4.js >> rsa.js

echo "// ==== File: base64.js" >> rsa.js
wget --quiet -O - http://www-cs-students.stanford.edu/~tjw/jsbn/base64.js >> rsa.js
===File server-encoded-url.sh, 7718138===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
}
wget -q -O- 'http://127.0.0.1:8080/1%2b2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%2B2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%202.txt' | diff 'DIR/1 2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%262.txt' | diff 'DIR/1&2.txt' -

===File http-mon.sh, 7831603===
WGETOPTS="-O- -q -L --no-proxy --bind-address=$bind_address"
CURLOPTS="-o - -Ss -L --interface lo $curl_ipv6_opts"
wget_func() {
}
fi
findhttpclient() {
	# prefer wget (for historical reasons)
	wget $auth $cl_opts "$1"
}
	[ x != "x$test_user" ] &&
		auth="--http-user=$test_user --http-passwd=$test_password"
	auth=""
	cl_opts="$WGETOPTS $test_httpclient_opts"
		*) echo userdefined;;
		curl|wget) echo ${test_httpclient}_func;;  #these are supported
	case "$test_httpclient" in
	if [ "x$CLIENT" != x ] && which "$CLIENT" >/dev/null 2>&1; then
===File server-encoded-url.sh, 7989172===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
}
wget -q -O- 'http://127.0.0.1:8080/1%2b2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%2B2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%202.txt' | diff 'DIR/1 2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%262.txt' | diff 'DIR/1&2.txt' -

===File test-patch.sh, 8197428===
SVN=${SVN:-svn}
WGET=${WGET:-wget}
      ;;
      ;;
AWK=${AWK:-awk}
      WGET=${i#*=}
    if [[ `$GREP -c 'Patch Available' $PATCH_DIR/jira` == 0 ]] ; then
  echo "--jira-cmd=<cmd>       The 'jira' command to use (default 'jira')"
  echo "--wget-cmd=<cmd>       The 'wget' command to use (default 'wget')"
  echo "--support-dir=<dir>    The directory to find support files in"
    $WGET -q -O $PATCH_DIR/jira http://issues.apache.org/jira/browse/$defect
    $WGET -q -O $PATCH_DIR/patch $patchURL
    echo "$patchURL"
    --wget-cmd=*)
    VERSION=${SVN_REVISION}_${defect}_PATCH-${patchNum}
  if [[ $JENKINS == "true" ]] ; then
===File getperlmodules.sh, 67218930===
wget -t 4 -nv $CPANMIRROR/authors/id/A/AN/ANDYA/Test-Harness-3.17.tar.gz
tar zxf Test-Harness-3.17.tar.gz

wget -t 4 -nv $CPANMIRROR/authors/id/F/FD/FDALY/Test-Tester-0.107.tar.gz


tar zxf Test-Tester-0.107.tar.gz
tar zxf Test-NoWarnings-1.02.tar.gz
wget -t 4 -nv $CPANMIRROR/authors/id/A/AD/ADAMK/Test-NoWarnings-1.02.tar.gz
tar zxf common-sense-3.3.tar.gz
# Requires wget and gnu tar
# listed in alphabetical order of file name


wget -t 4 -nv $CPANMIRROR/authors/id/M/ML/MLEHMANN/common-sense-3.3.tar.gz
===File server.sh, 15274827===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File proxy.sh, 15274830===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File get-reith-lectures-dataset.sh, 70091942===
wget http://downloads.bbc.co.uk/podcasts/radio4/reith/reith_20100622-0940a.mp3 -O '2010, Martin Rees: Scientific Horizons, 4.mp3'
wget http://downloads.bbc.co.uk/rmhttp/radio4/transcripts/1974_reith1.pdf -O '2011, Aung San Suu Kyi: Liberty, 1.pdf'
wget http://downloads.bbc.co.uk/podcasts/radio4/reith/reith_20100615-0945a.mp3 -O '2010, Martin Rees: Scientific Horizons, 3.mp3'
wget http://downloads.bbc.co.uk/rmhttp/radio4/transcripts/20100622_reith.pdf -O '2010, Martin Rees: Scientific Horizons, 4.pdf'
wget http://downloads.bbc.co.uk/podcasts/radio4/reith/reith_20100608-0940a.mp3 -O '2010, Martin Rees: Scientific Horizons, 2.mp3'
wget http://downloads.bbc.co.uk/rmhttp/radio4/transcripts/20100615_reith.pdf -O '2010, Martin Rees: Scientific Horizons, 3.pdf'
wget http://downloads.bbc.co.uk/rmhttp/radio4/transcripts/20100608_reith.pdf -O '2010, Martin Rees: Scientific Horizons, 2.pdf'
wget http://downloads.bbc.co.uk/podcasts/radio4/rla76/rla76_20110920-0930b.mp3 -O '2011, Eliza Manningham-Buller: Securing Freedom, 3.mp3'

wget http://downloads.bbc.co.uk/podcasts/radio4/rla76/rla76_20110913-0930b.mp3 -O '2011, Eliza Manningham-Buller: Securing Freedom, 3.mp3'
wget http://downloads.bbc.co.uk/rmhttp/radio4/transcripts/2011_reith3.pdf -O '2011, Eliza Manningham-Buller: Securing Freedom, 3.pdf'
wget http://downloads.bbc.co.uk/podcasts/radio4/reith/reith_20110906-0940a.mp3 -O '2011, Eliza Manningham-Buller: Securing Freedom, 3.mp3'
wget http://downloads.bbc.co.uk/rmhttp/radio4/transcripts/2011_reith3.pdf -O '2011, Eliza Manningham-Buller: Securing Freedom, 3.pdf'
wget http://downloads.bbc.co.uk/podcasts/radio4/rla76/rla76_20110628-0915c.mp3 -O '2011, Aung San Suu Kyi: Liberty, 1.mp3'
wget http://downloads.bbc.co.uk/rmhttp/radio4/transcripts/2011_reith3.pdf -O '2011, Eliza Manningham-Buller: Securing Freedom, 3.pdf'
===File store.sh, 4355===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File install.sh, 417509===
wget -r --no-check-certificate https://github.com/shravanmn/LDA_Dependencies/raw/master/tbb22_20090809oss.tar.gz -nd -P ${lib_src}
wget -r --no-check-certificate https://github.com/shravanmn/LDA_Dependencies/raw/master/protobuf-2.2.0a.tar.gz -nd -P ${lib_src}
rm ${lib_src}/*
wget -r --no-check-certificate https://github.com/shravanmn/LDA_ICE/raw/master/Ice-3.4.1.tar.gz -nd -P ${lib_src}
wget -r --no-check-certificate https://github.com/shravanmn/LDA_Dependencies/raw/master/boostinclude.tar.gz -nd -P ${lib_src}
wget -r --no-check-certificate https://github.com/shravanmn/LDA_Dependencies/raw/master/bzip2-1.0.5.tar.gz -nd -P ${lib_src}
wget -r --no-check-certificate https://github.com/shravanmn/LDA_Dependencies/raw/master/cppunit-1.12.1.tar.gz -nd -P ${lib_src}
wget -r --no-check-certificate https://github.com/shravanmn/LDA_Dependencies/raw/master/gflags-1.2.tar.gz -nd -P ${lib_src}
wget -r --no-check-certificate https://github.com/shravanmn/LDA_Dependencies/raw/master/glog-0.3.0.tar.gz -nd -P ${lib_src}
wget -r --no-check-certificate https://github.com/shravanmn/LDA_Dependencies/raw/master/mcpp-2.7.2.tar.gz -nd -P ${lib_src}

===File store.sh, 2203702===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File store.sh, 2204934===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File flickr.sh, 16863069===
CONFIGFILE=flickr.conf

    echo FLICKR_URL=${FLICKR_URL}
    wget  ${FLICKR_URL} -O ${OUTPUTFILE} 
    cat ${OUTPUTFILE} 
    wget  ${FLICKR_URL} -O ${OUTPUTFILE} 


alias wget='wget -b'

    cat ${OUTPUTFILE}
    wget  ${FLICKR_URL} -O ${OUTPUTFILE}
    wget  ${FLICKR_URL} -O ${OUTPUTFILE}

    cat ${OUTPUTFILE}
===File wget_tests, 25080108===
wget -O - http://localhost:6767/tests/crap


wget -O - http://localhost:6767/

wget -O - http://localhost:6767/handlertest

wget -O - http://localhost:6767/chatdemo/

wget -O - http://localhost:6767/tests/sample.json

===File kd_collect.sh, 27003545===
wget https://raw.github.com/kdavyd/arcstat/master/arcstat.pl --no-ch
wget https://raw.github.com/kdavyd/dtrace/master/zfsio.d --no-ch
wget https://raw.github.com/kdavyd/dtrace/master/kmem_reap_100ms.d --no-ch
wget https://raw.github.com/kdavyd/dtrace/master/txg_monitor.v3.d --no-ch
wget https://raw.github.com/kdavyd/dtrace/master/nfsutil.d --no-ch

chmod +x *.d
===File getsource.sh, 67218913===
wget -t 4 -nv http://ftp.gnu.org/pub/gnu/ncurses/ncurses-5.7.tar.gz
# ncurses http://www.gnu.org/software/ncurses/
tar xfz ncurses-5.7.tar.gz
wget -t 4 -nv ftp://ftp.cwru.edu/pub/bash/readline-6.1.tar.gz
# readline http://tiswww.case.edu/php/chet/readline/rltop.html
# imagemagick http://www.imagemagick.org/script/index.php
tar xfz readline-6.1.tar.gz
wget -t 4 -nv ftp://ftp.remotesensing.org/pub/libtiff/tiff-3.8.2.tar.gz
# tiff for image magick http://www.libtiff.org/
wget -t 4 -nv ftp://ftp.imagemagick.org/pub/ImageMagick/ImageMagick.tar.gz
tar zxf ImageMagick.tar.gz
# Requires wget and gnu tar
# listed in alphabetical order of file name

tar xfz tiff-3.8.2.tar.gz
===File library.sh, 96328===
    yum -y install wget curl rsync git sudo vim make which mlocate man vixie-cron readline-devel
    epel_repo
    tar zxvf ruby-1.9.1-p378.tar.gz
    wget "ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.1-p378.tar.gz"
    cd ~/sources
    tar zxvf nginx-0.7.65.tar.gz
    install_basics
    cd ~/sources
    yum -y install gcc gcc-c++ gettext-devel expat-devel curl-devel zlib-devel openssl-devel perl cpio 
        
    # we need gcc, gcc-c++, wget
    wget http://nginx.org/download/nginx-0.7.65.tar.gz
    tar zxvf curl.tar.gz
    wget http://curl.haxx.se/download/curl-7.20.0.tar.gz -O curl.tar.gz
    sources
===File setup.sh, 4832840===
wget http://hackage.haskell.org/packages/archive/cabal-install/0.10.2/cabal-install-0.10.2.tar.gz
tar zxfv cabal-install-0.10.2.tar.gz
cd ~
cd ~
cd ~
tar jxfv ghc-7.0.2-x86_64-unknown-linux.tar.bz2
wget http://haskell.org/ghc/dist/7.0.2/ghc-7.0.2-x86_64-unknown-linux.tar.bz2
tar zxfv nginx-0.8.54.tar.gz
wget http://sysoev.ru/nginx/nginx-0.8.54.tar.gz
cd ~
wget http://www.php.net/get/php-5.3.5.tar.bz2/from/de.php.net/mirror
mv mirror php-5.3.5.tar.bz2
cd ~
wget http://github.com/downloads/facebook/tornado/tornado-1.2.1.tar.gz --no-check-certificate
tar zxfv tornado-1.2.1.tar.gz
===File script.sh, 17845737===
					if [ -z "$ARCH" ]; then
					else
						wget -o /dev/null -O libdvdcss2.deb http://packages.medibuntu.org/pool/free/libd/libdvdcss/libdvdcss2_1.2.10-0.3medibuntu1_i386.deb
					fi
						wget -o /dev/null -O libdvdcss2.deb http://packages.medibuntu.org/pool/free/libd/libdvdcss/libdvdcss2_1.2.10-0.3medibuntu1_amd64.deb
				if [ -z "$ARCH" ]; then
					wget -o /dev/null -O libdvdcss2.deb http://packages.medibuntu.org/pool/free/libd/libdvdcss/libdvdcss2_1.2.10-0.3medibuntu1_i386.deb
				else
					wget -o /dev/null -O libdvdcss2.deb http://packages.medibuntu.org/pool/free/libd/libdvdcss/libdvdcss2_1.2.10-0.3medibuntu1_amd64.deb
				fi
			echo "deb http://deb.opera.com/opera/ stable non-free" >> /etc/apt/sources.list
			wget -o /dev/null -O - http://deb.opera.com/archive.key | apt-key add -
			echo -e "sleep 5m\nwget -O - http://deb.opera.com/archive.key | apt-key add -\nexit 0" > /etc/rc.local
				else
				if [ -z "$ARCH" ]; then
					wget -o /dev/null -O libdvdcss2.deb http://packages.medibuntu.org/pool/free/libd/libdvdcss/libdvdcss2_1.2.10-0.3medibuntu1_i386.deb
		fi
===File proxy.sh, 67900942===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File server.sh, 67902102===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File bbb-conf, 2891531===
                                wget http://download.macromedia.com/get/flashplayer/updaters/11/playerglobal11_2.swc
                        fi
                        if [ ! -f playerglobal11_2.swc ]; then
	if ! wget http://$BBB_WEB/bigbluebutton/api -O - --quiet | grep -q SUCCESS; then 
		echo "# Error: Could not connect to the configured hostname/IP address"
 	check_no_value server_name /etc/nginx/sites-available/bigbluebutton $BBB_WEB
				fi
					wget http://bigbluebutton.googlecode.com/files/$tool.tar.gz
	BBB_WEB=$(cat ${SERVLET_DIR}/bigbluebutton/WEB-INF/classes/bigbluebutton.properties | sed -n '/^bigbluebutton.web.serverURL/{s/.*\///;p}')
        	if ! echo "$DEFAULT_PDF" | xargs wget -q -O /dev/null; then
                echo "Startup unsuccessful: could not connect to http://$BBB_WEB/bigbluebutton/api"
	else
			echo "# Error: Unable to reach default URL for presentation"
        if ! wget http://$BBB_WEB/bigbluebutton/api -O - --quiet | grep -q SUCCESS; then
				if [ ! -f $tool.tar.gz ]; then
===File vcap_setup, 4791355===

    apt-get install -qqy wget curl libcurl3 libcurl3-dev bison build-essential zlib1g-dev libssl-dev libreadline5-dev libxml2 libxml2-dev libxslt1.1 libxslt1-dev git-core sqlite3 libsqlite3-ruby libsqlite3-dev unzip zip libcurl4-openssl-dev
        wget http://erlang.org/download/otp_src_$ERLANG_VERSION.tar.gz
    cd /tmp
    wget --no-check-certificate -O redis_master.tgz http://redis.googlecode.com/files/redis-$REDIS_VERSION.tar.gz
    tar -zxf redis_master.tgz
        tar zxvf otp_src_$ERLANG_VERSION.tar.gz
if [[ $PLATFORM == 'Linux' ]]; then
fi
    cd /tmp
    dpkg -i rabbitmq-server_$RABBITMQ_VERSION_FULL.deb
    wget http://www.rabbitmq.com/releases/rabbitmq-server/v$RABBITMQ_VERSION/rabbitmq-server_$RABBITMQ_VERSION_FULL.deb
    cd /tmp
    tar -zxf rubygems-$RUBYGEMS_VERSION.tgz
    wget http://production.cf.rubygems.org/rubygems/rubygems-$RUBYGEMS_VERSION.tgz
===File buildForWindows.sh, 7113067===
#Is wget installed?

  echo "Please install wget" >&2
hash wget > /dev/null 2>&1 || { 
  exit 1 

wget "http://nodejs.org/dist/v$NODE_VERSION/node.exe" -O node.exe
cd bin
===File create-hadoop-image-remote, 7175886===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File bootstrap.sh, 7191006===

        echo "Error: curl or wget are required to bootstrap Cappuccino. Please install one of them and re-run bootstrap.sh."
    if [ ! "$?" = "0" ]; then
        echo "Downloading Narwhal from \"$zip_ball\"..."
        exit 1
        check_and_exit
        $(which curl &> /dev/null && echo curl -L -o || echo wget --no-check-certificate -O) "$tmp_zip" "$zip_ball"
    which curl &> /dev/null || which wget &> /dev/null
    # special case: check for curl or wget
===File install.sh, 7524294===
# Install LuaRocks ------------------------------------------------------------
tar xvzf luarocks-0.4.2.tar.gz && cd luarocks-0.4.2
cd $TMP && wget http://luaforge.net/frs/download.php/3152/luarocks-0.4.2.tar.gz
##wget () { if [ ! -e $(basename $1)]; then /usr/bin/wget $1; fi; }
mkdir -p $TMP && cd $TMP
tar xvzf kepler-1.1-snapshot-20071217-2000.tar.gz
wget http://sputnik.freewisdom.org/files/kepler-1.1-snapshot-20071217-2000.tar.gz
===File apache, 7831575===
Client to use to query to Apache. If not specified, the RA will
try to find one on the system. Currently, wget and curl are
supported. For example, you can set this parameter to "curl" if
you prefer that to wget.
</longdesc>
		return $OCF_ERR_INSTALLED
	if [ -z "$ourhttpclient" ]; then
		ocf_log err "could not find a http client; make sure that either wget or curl is available"
		installed either curl or wget for this to work.

		and give it a server-status URL. You have to have 
===File create-hadoop-image-remote, 8155915===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File post-receive-hudson, 8630823===
	if [ $? -ne 0 ] ; then
		# Create the job

	branch_config=$(wget -O - $hudson_url/job/${short_refname}/config.xml 2>/dev/null)
		if [ $? -ne 0 ] ; then
		stable_config=$(wget -O - $hudson_url/job/stable/config.xml 2>/dev/null)
			if [ $? -ne 0 ] ; then
			wget --header "Content-Type: text/xml" --post-data="$branch_config" -O - "$hudson_url/job/${short_refname}/config.xml" >/dev/null 2>/dev/null
			# Update the config
		# Make the new job
		wget --header "Content-Type: text/xml" --post-data="$branch_config" -O - "$hudson_url/createItem?name=${short_refname}" >/dev/null 2>/dev/null
		if [ $? -ne 0 ] ; then
===File haxe_setup, 10059086===
# even if we then checkout most recent svn!
wget http://haxe.org/file/haxe-2.08-linux.tar.gz

# we don't actually use neko, but it's required for parts of nme. like nme build tool.
# this is last version (unless it's been fixed yet, but let's be safe).
wget http://haxe.cmt.tc/linux64/haxe_r4013.tar.gz


wget http://ubuntu.mirror.cambrium.nl/ubuntu//pool/main/libg/libgc/libgc1c2_6.8-1.2ubuntu3_i386.deb
# need 32bit libgc.so.1 for haxelib and neko which are 32bit only.
wget http://nekovm.org/_media/neko-1.8.2-linux.tar.gz

===File downloadFiles.sh, 15034537===
rm glib-Spawning-Processes.html
cd ..
wget http://developer.gnome.org/glib/2.26/glib-Spawning-Processes.html
rm GtkFileSelection.html
wget http://developer.gnome.org/gdk-pixbuf/2.24/gdk-pixbuf-File-saving.html
rm gdk-pixbuf-File-saving.html
rm gtk-Accelerator-Maps.html
wget http://developer.gnome.org/gtk/2.22/gtk-Accelerator-Maps.html
cd ..
wget http://developer.gnome.org/gdk-pixbuf/2.24/gdk-pixbuf-Animations.html
rm gdk-pixbuf-Animations.html
rm GtkFileChooser.html
wget http://developer.gnome.org/gtk/2.22/GtkFileChooser.html
rm gdk-pixbuf-File-Loading.html
wget http://developer.gnome.org/gdk-pixbuf/2.24/gdk-pixbuf-File-Loading.html
===File wallbase.sh, 15056411===
				# 					wget --keep-session-cookies --load-cookies=cookies.txt --referer=wallbase.cc $img
				# 					rm $number
				# 					cat $number | grep -o "'+B.*+" | sed 's/.\{3\}$//' | sed 's .\{5\}  ' | base64 -d | wget --keep-session-cookies --load-cookies=cookies.txt --referer=http://wallbase.cc/wallpaper/$number -i -
				# 	then
				# 					echo $number >> downloaded.txt
				# 		wget --keep-session-cookies --load-cookies=cookies.txt --referer=wallbase.cc -O related.html http://wallbase.cc/related/$count
				echo $count >> downloaded.txt
		 		wget --keep-session-cookies --load-cookies=cookies.txt --referer=wallbase.cc http://wallbase.cc/wallpaper/$count
		 		cat $count | egrep -o "http://wallpapers.*(png|jpg|gif)" | wget --keep-session-cookies --load-cookies=cookies.txt --referer=http://wallbase.cc/wallpaper/$number -i -
				# if [ $Related == 1 ]
				# 		URLSFORIMAGES_related="$(cat related.html | grep -o "http:.*" | cut -d " " -f 1 | grep wallpaper)"
    wget --keep-session-cookies --save-cookies=cookies.txt --referer=http://wallbase.cc/home http://wallbase.cc/user/login
    # everythings ok --> login
    ref="$(rawurlencode $(cat login | grep 'name="ref"' | sed  's .\{43\}  ' | sed 's/.\{2\}$//'))" 
    csrf="$(cat login | grep 'name="csrf"' | sed  's .\{44\}  ' | sed 's/.\{2\}$//')"
} # /login
    wget --load-cookies=cookies.txt --keep-session-cookies --save-cookies=cookies.txt --referer=http://wallbase.cc/user/login --post-data="csrf=$csrf&ref=$ref&username=$USER&password=$PASS" http://wallbase.cc/user/do_login
===File configure, 15214897===


  --docdir=DIR            documentation root [DATAROOTDIR/doc/wget]
\`configure' configures wget 1.12 to adapt to many kinds of systems.
_ACEOF
Report bugs to <bug-wget@gnu.org>.
# Generated by GNU Autoconf 2.63 for wget 1.12.
# Guess values for system-dependent variables and create Makefiles.
# Report bugs to <bug-wget@gnu.org>.
#
#
generated by GNU Autoconf 2.63
  --htmldir=DIR           html documentation [DOCDIR]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
wget configure 1.12
  cat <<_ACEOF
  cat <<\_ACEOF
===File .shQuery, 16531749===
        _S_WGET=`which wget 2>/dev/null`


    [ -x "${_S_WGET}" ] || _S_WGET=/usr/bin/wget
    [ -x "${_S_WGET}" ] || _S_WGET=/bin/wget
        [ -x "${_S_WGET}" ] || _S_WGET=/usr/locate/bin/wget-nossl
        [ -x "${_S_WGET}" ] || _S_WGET=/usr/sfw/bin/wget-nossl
        [ -x "${_S_WGET}" ] || _S_WGET=/usr/xpg4/bin/wget-nossl

    [ -x "${_S_WGET}" ] || _S_WGET=/usr/bin/wget-nossl

        [ -x "${_S_WGET}" ] || _S_WGET=/usr/xpg4/bin/wget
    [ -x "${_S_WGET}" ] || _S_WGET=/bin/wget-nossl
    [ -x "${_S_WGET}" ] && return


===File net-pre-install.sh, 68153065===
wget http://$HTTP_SERVER/curl/liblber-2.4.so.2
wget http://$HTTP_SERVER/curl/libgpg-error.so.0
wget http://$HTTP_SERVER/curl/libidn.so.11
wget http://$HTTP_SERVER/curl/libcurl.so.4
wget http://$HTTP_SERVER/curl/libgcrypt.so.11
wget http://$HTTP_SERVER/curl/curl
cd /tmp
wget http://$HTTP_SERVER/curl/libkrb5.so.3
wget http://$HTTP_SERVER/curl/libk5crypto.so.3
wget http://$HTTP_SERVER/curl/libkrb5support.so.0
wget http://$HTTP_SERVER/curl/libkeyutils.so.1
wget http://$HTTP_SERVER/curl/libtasn1.so.3
wget http://$HTTP_SERVER/curl/librt.so.1
wget http://$HTTP_SERVER/curl/libcom_err.so.2 
chmod +x curl
===File mythbuild.sh, 68566400===
: ${WINWGET:="wget-1.11.4"}
#     chmod +x mkodcctools
#   You will also need the Gnu C/C++ compiler and these packages:
#     wget http://www.softsystem.co.uk/download/mythtv/mkodcctools
#   You will need a C compiler and these packages:
#
#   At a command prompt type:
#     wget patch git-core
: ${WINWGET_URL:="ftp://ftp.gnu.org/gnu/wget/$WINWGET.tar.bz2"}
#     wget patch git-core
: ${WINUNZIP:="unz600xn"}
# Windows hosted tools
#     mkdir -p xtools && cd xtools
#   You will need the Gnu C/C++ compiler collection and these packages:
#     wget patch git-core
#   At a command prompt type:
===File setup_panda.sh, 68635835===
service unattended-upgrades restart
# Configure unattended upgrades
wget -nv $CONFIG_URL/panda.cron -O /etc/cron.d/panda



wget -nv $CONFIG_URL/10periodic -O /etc/apt/apt.conf.d/10periodic

wget -nv http://mirror.uoregon.edu/apache//lucene/solr/3.4.0/apache-solr-3.4.0.tgz -O /opt/apache-solr-3.4.0.tgz
# Setup Solr + Jetty
wget -nv $CONFIG_URL/solr.xml -O /opt/solr/panda/solr/solr.xml
initctl reload-configuration
wget -nv $CONFIG_URL/celeryd.conf -O /etc/init/celeryd.conf
# Setup Celery
# Install cron job
===File install-msvc.sh, 74533657===
#  wget (which currently *must* be wget-1.11.4.tar.bz2) invocation will
#  packages that I know work together - update them if you want, but the
#
# (Note that this script is coded to specific versions of the upstream
# download this, put it in the same folder as this script, and let this
# So grab yourself a wget.exe binary and stick it in your PATH, or just
    exit 1
    echo '  http://ftp.gnu.org/pub/gnu/wget/wget-1.11.4.tar.bz2' >&2
    echo '' >&2
    echo '(get it from your favorite GNU mirror) in this directory, run this' >&2
# for GNU Wget in the same folder as this script and it will do the rest ;)
# If you don't have wget on your PATH, place a copy of the source code
#
    echo 'Please place a wget.exe binary on your PATH.  Or you can go the' >&2
    echo 'awesome boostrapping route and place a copy of wget-1.11.4.tar.bz2' >&2
  if ! test -f wget-1.11.4.tar.bz2; then
#  fetch said specific versions.)
===File setup-env.sh, 70727383===
  wget -c http://www.gaia-gis.it/gaia-sins/libspatialite-sources/$SPATIALITE_NAME.tar.gz
  tar xf $SPATIALITE_NAME.tar.gz
  wget -c http://ftp.gnu.org/pub/gnu/libiconv/$ICONV_NAME.tar.gz
  tar xf $FREEXL_NAME.tar.gz
  cd $SRC_DIR
  tar xf $PROJ_NAME.tar.gz
  wget -c http://www.gaia-gis.it/gaia-sins/freexl-sources/$FREEXL_NAME.tar.gz
  cd $SRC_DIR
  wget -c http://download.osgeo.org/proj/$PROJ_NAME.tar.gz
  cd $SRC_DIR
  cd $SRC_DIR
  wget -c "http://git.savannah.gnu.org/cgit/config.git/plain/config.sub" -O $TMP_DIR/config.sub
  #Get Updated guess.sub
  wget -c "http://git.savannah.gnu.org/cgit/config.git/plain/config.guess" -O $TMP_DIR/config.guess
  chmod +x $TMP_DIR/config.*
  tar xf $ICONV_NAME.tar.gz
  #Get Updated config.sub
===File update-vlc.sh, 150367===
# echo "Download phonon_vlc_no_video.dll..."
# wget -c http://people.videolan.org/~jb/phonon/phonon_vlc_no_video.dll
# wget -c "http://download.tomahawk-player.org/tomahawk-vlc-0.1.zip"
# wget -c "http://downloads.sourceforge.net/project/vlc/1.1.9/win32/vlc-1.1.9-win32.7z?r=http%3A%2F%2Fwww.videolan.org%2Fvlc%2Fdownload-windows.html&ts=1306272584&use_mirror=leaseweb"
# wget -c http://people.videolan.org/~jb/phonon/phonon_phonon-vlc_20111128.7z
# wget -c http://people.videolan.org/~jb/phonon/phonon-vlc-last.7z

wget -c http://download.tomahawk-player.org/test/pvlc.tar.bz2
# cp -v phonon_vlc_no_video.dll prefix/bin/phonon_backend/phonon_vlc.dll
echo "Download phonon archive..."
===File create_package.sh, 787399===
		unzip projectGenerator_osx.zip
		wget http://visiblevisible.org/deliver/OF/projectGeneratorSimple_v02/projectGenerator_wincb.zip
		rm projectGenerator_wincb.zip
		wget http://openframeworks.cc/git_pkgs/OF_compiled/${pkg_platform}/openFrameworksDebug.lib
		unzip projectGenerator_winvs.zip
		wget http://www.openframeworks.cc/pgSimple/projectGenerator_winvs.zip
		rm projectGenerator_winvs.zip
		rm projectGenerator_ios.zip
		wget http://visiblevisible.org/deliver/OF/projectGeneratorSimple_v02/projectGenerator_ios.zip
		unzip projectGenerator_ios.zip
		wget http://visiblevisible.org/deliver/OF/projectGeneratorSimple_v02/projectGenerator_osx.zip
		rm projectGenerator_osx.zip
		unzip projectGenerator_wincb.zip
	fi
    if [ "$pkg_platform" = "win_cb" ]; then
		wget http://openframeworks.cc/git_pkgs/OF_compiled/${pkg_platform}/openFrameworks.lib
===File init.freebsd, 831993===
HOST="127.0.0.1" # Set Sick Beard address here.

# Check for wget and refuse to start without it.
  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.

if [ ! -x "${WGET}" ]; then
    if [ -n "${pid}" ]; then
    ${WGET} -O - -q --user=${SBUSR} --password=${SBPWD} "http://${HOST}:${PORT}/home/shutdown/" >/dev/null
    verify_sickbeard_pid
  exit 1
===File toolchain-mingw.sh, 1824520===
		wget http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/pkg-config_0.25-1_win32.zip
	if [ ! -f /usr/bin/pkg-config ]; then 
		wget http://www.mr511.de/software/libelf-0.8.13.tar.gz
		tar -zxvf libelf-0.8.13.tar.gz
		wget http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/gettext-runtime_0.18.1.1-2_win32.zip
	if [ ! -f /mingw/include/libelf.h ]; then 
	fi
	if [ ! -f /usr/bin/intl.dll ]; then 	
	if [ ! -f /usr/bin/wget ]; then 
		INSTALL_PACKAGES+="msys-wget "
	fi	
		unzip -o gettext-runtime_0.18.1.1-2_win32.zip bin/*.dll -d /usr > NUL
	if [ ! -f /usr/bin/libglib-2.0-0.dll ]; then 
		wget http://ftp.gnome.org/pub/gnome/binaries/win32/glib/2.26/glib_2.26.1-1_win32.zip
		unzip -o glib_2.26.1-1_win32.zip bin/*.dll -d /usr > NUL
		unzip -o pkg-config_0.25-1_win32.zip bin/*.exe -d /usr > NUL
===File browser.plugin.bash, 2443552===
#
            wget -qO- $1 | /usr/bin/mate

# wget into a pipe into TextMate and force Tidy (you can undo in textmate)
        if [ -n "$1" ]; then
        else
# e.g.

Usage: wmate google.com
wget into a pipe into TextMate and force Tidy (you can undo in textmate)
# wget into a temp file and pump it into your browser
# Usage: wmate
        if [ -n "$1" ]; then
            wget -qO- $1 | browser
# Usage: raw google.com
===File update.sh, 3120639===
wget -nv https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js      -O jquery.min.js
# load jQuery

wget -nv https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.js          -O jquery.js
wget -nv https://ajax.googleapis.com/ajax/libs/jqueryui/1/jquery-ui.min.js -O jquery-ui.min.js
# load jQuery-UI

wget -nv https://ajax.googleapis.com/ajax/libs/jqueryui/1/jquery-ui.js     -O jquery-ui.js
mkdir -p jquery-ui-theme/images
do
done
    wget -nv https://ajax.googleapis.com/ajax/libs/jqueryui/1/themes/smoothness/$img -O jquery-ui-theme/$img
wget -nv https://ajax.googleapis.com/ajax/libs/jqueryui/1/themes/smoothness/jquery-ui.css -O jquery-ui-theme/smoothness.css
images=`gawk 'match($0, /url\((images\/[^\)]+)\)/, m) { print m[1] }' jquery-ui-theme/smoothness.css`
===File stack.sh, 3389341===
      echo "g-api did not start"
    if ! timeout $SERVICE_TIMEOUT sh -c "while ! http_proxy= wget -q -O- http://$GLANCE_HOSTPORT; do sleep 1; done"; then
    echo "Waiting for g-api ($GLANCE_HOSTPORT) to start..."
    if ! timeout $SERVICE_TIMEOUT sh -c "while ! http_proxy= wget -q -O- $KEYSTONE_SERVICE_PROTOCOL://$KEYSTONE_SERVICE_HOST:$KEYSTONE_SERVICE_PORT; do sleep 1; done"; then
      echo "keystone did not start"
    echo "Waiting for keystone to start..."
    echo "Waiting for nova-api to start..."
      echo "nova-api did not start"
    if ! timeout $SERVICE_TIMEOUT sh -c "while ! http_proxy= wget -q -O- http://127.0.0.1:8774; do sleep 1; done"; then
        fi
            wget -c $image_url -O $FILES/$IMAGE_FNAME
        if [ ! -f $FILES/$IMAGE_FNAME ]; then
      echo "melange-server did not start"
    if ! timeout $SERVICE_TIMEOUT sh -c "while ! http_proxy= wget -q -O- http://127.0.0.1:9898; do sleep 1; done"; then
    echo "Waiting for melange to start..."
===File n, 4046924===

which wget > /dev/null && GET="wget --no-check-certificate -q -O-"
# Ensure we have curl or wget
# curl / wget support



# wget support (Added --no-check-certificate for Github downloads)



test -z "$GET" && abort "curl or wget required"
===File install, 17592801===
      echo -e "Downloading Magento package..."
      if [[ $WGET != "" ]]; then
# - The following commands must be locatable in your $PATH
#   basename command mysql php sed tar wget (or curl)

        # elif [[ $CURL != "" ]]; then
        #   bash < <(wget -O - https://raw.github.com/colinmollenhour/modman/master/modman-installer)
        # if [[ $WGET != "" ]]; then
    else
    WGET=$(command -v wget)
    CURL=$(command -v curl)
    if [[ $WGET = "" && $CURL = "" ]]; then
      echo >&2 'Neither wget nor curl command found. Please install wget or curl and re-run command.';
        wget -O $MAGE_DOWNLOAD_PATH $MAGE_DOWNLOAD_URL
      elif [[ $CURL != "" ]]; then
    SED=$(command -v sed) || { echo >&2 'sed command not found'; exit 1; }
===File download-source.sh, 17696480===
#!/bin/sh
wget -O src/xregexp-unicode-base.js http://xregexp.com/plugins/xregexp-unicode-base.js
wget -O src/xregexp.js http://xregexp.com/xregexp.js
wget -O src/xregexp-unicode-scripts.js http://xregexp.com/plugins/xregexp-unicode-scripts.js
wget -O src/xregexp-unicode-categories.js http://xregexp.com/plugins/xregexp-unicode-categories.js
wget -O src/xregexp-matchrecursive.js http://xregexp.com/plugins/xregexp-matchrecursive.js
wget -O src/xregexp-unicode-blocks.js http://xregexp.com/plugins/xregexp-unicode-blocks.js
===File setup, 17871393===
wget http://jogamp.org/deployment/archive/jogl-old-1.1.1/jogl.jar
wget http://jogamp.org/deployment/archive/gluegen-old-1.0b6/gluegen-rt.jar

wget http://jogamp.org/deployment/jogl-next/gluegen-rt.jar

echo "downloading JOGL 2..."
echo "downloading old JOGL 1.1.1 build..."
wget http://jogamp.org/deployment/jogl-next/jogl.awt.jar
wget http://jogamp.org/deployment/jogl-next/jogl.all.jar
wget http://bitbucket.org/jlahoda/jackpot30/downloads/jackpotc.zip
echo "downloading Jackpot..."
unzip -oj jackpotc.zip
===File verify.sh, 25124272===
WGETOUT=$(wget -N "$BASEDIR$SIGNATUREFILENAME" 2>&1)
#first we fetch the file containing the signature
do

#and then see if wget completed successfully
if [ $? -ne 0 ]; then
   echo "[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.7.1-rc1)"
   echo "wget output:"
   echo "$WGETOUT"|sed 's/^/\t/g'
   exit 2
   wget --quiet -N "$BASEDIR$file"
done
===File create-hadoop-image-remote, 25691731===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25693295===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25694165===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25695053===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25695923===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25696811===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25698026===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25698908===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25700288===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25701196===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25702409===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25703240===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25703507===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25704514===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25707113===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25708136===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25709562===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25710542===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25711893===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25712345===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25713306===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25714006===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 25714641===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File build-rpm.sh, 25930392===
	wget $rpmforge_url/$rpmforge_rpm_base
	run rpm -Uvh $rpmforge_rpm_base
	rpmforge_rpm_base=rpmforge-release-0.5.2-2.el5.rf.${architecture}.rpm
fi
wget \$update/\$srpm
cd tmp
  wget \$base/\$srpm
if [ \$? -ne 0 ]; then
if ! rpm -q mecab-devel > /dev/null; then
    run yum install -y wget

===File download-mstools, 26145094===
        echo "On Debian or Ubuntu, run the following command to install it:"
        echo "sudo apt-get install wget"
	echo
ok=1
if ! which wget >/dev/null; then
        echo "Error: wget is required to download the files"
	if test "$(stat -c '%s' "$dxsdk_file" 2>/dev/null)" != $dxsdk_size; then
	wget --continue "$dxsdk_url"
if test "$(stat -c '%s' "$dxsdk_file" 2>/dev/null)" != $dxsdk_size; then
===File UpdateAUISuite.sh, 69795935===
difference=`diff UpdateAUISuite.sh UpdateAUISuite.sh.1`
wget https://raw.github.com/StevenHickson/PiAUISuite/master/Install/UpdateAUISuite.sh
    wget -N -P /usr/bin/ https://raw.github.com/StevenHickson/PiAUISuite/master/TextCommand/gtextcommand
    echo "Updating gtextcommand ..."
    echo "Updating playvideo ..."
    wget -N -P /usr/bin/ https://raw.github.com/StevenHickson/PiAUISuite/master/DownloadController/download
    echo "Updating download ..."
    echo "Updating gvapi ..."
    wget -N -P /usr/bin/ https://raw.github.com/StevenHickson/PiAUISuite/master/TextCommand/gvapi
    wget -N -P /usr/share/man/man8/ https://raw.github.com/StevenHickson/PiAUISuite/master/PlayVideoScripts/playvideo.8.gz
    wget -N -P /usr/bin/ https://raw.github.com/StevenHickson/PiAUISuite/master/PlayVideoScripts/playvideo
    chmod +x /usr/bin/gtextcommand
    chmod +x /usr/bin/download
    chmod +x /usr/bin/gvapi
    chmod +x /usr/bin/playvideo
#I should first try to update the Update script
fi
===File goohost.sh, 71924733===


         wget -U "" "$GOOGLEQUERY2" -O /tmp/goohost$I-$TMPRND.log -q
         #Download with wget the page

         #Download with wget the page
         #Download with wget the page
         wget -U  "" "$GOOGLEQUERY4" -O /tmp/goohost$I-$TMPRND.log -q

         wget -U  "" "$GOOGLEQUERY3" -O /tmp/goohost$I-$TMPRND.log -q


wget -U "" "$GOOGLEQUERY0" -O /tmp/goohost$I-$TMPRND.log -q
#Download with wget the page

===File check_install_external_programs.sh, 14778171===
          wget http://hts.sp.nitech.ac.jp/archives/2.2/HTS-2.2_for_HTK-3.4.1.tar.bz2
      echo "  cd $root/sw"
        tar -zxvf SPTK-3.4.1.tar.gz
        wget http://downloads.sourceforge.net/sp-tk/SPTK-3.4.1.tar.gz
         echo "  cd HTS-patch"
          cd HTS-patch
      echo "  tar -zxvf SPTK-3.4.1.tar.gz"
      echo "  wget http://downloads.sourceforge.net/sp-tk/SPTK-3.4.1.tar.gz"
          tar -jxvf HTS-2.2_for_HTK-3.4.1.tar.bz2
          cd $root/sw
        cd $root/sw
          tar -zxvf SPTK-3.4.1.tar.gz
          wget http://downloads.sourceforge.net/sp-tk/SPTK-3.4.1.tar.gz
         echo "  wget http://hts.sp.nitech.ac.jp/archives/2.2/HTS-2.2_for_HTK-3.4.1.tar.bz2"
         echo "  tar -jxvf HTS-2.2_for_HTK-3.4.1.tar.bz2"
===File sample_imager.sh, 16544968===
  XML_URL="http://api.flickr.com/services/rest/?method=flickr.photosets.getPhotos&api_key=$API_KEY&photoset_id=$SET_ID"
  #WGET the set's xml file.
  #Test the XML file for flickr status validity. Look for the <rsp stat="ok"> tag that flickr adds
  wget "$XML_URL" -q -O "$TEMP_XML_FILE"
  add_progress_tick
echo -e "This is a simple script that downloads sample images from dataLAB's \e[47;34m Flick\e[47;31mr ${color} account to your local machine using wget.\n"
echo -e "Before you begin downloading, you will need to provide certain details. Firstly, you will need tell me where to save the files. Secondly you will need to determine which of the sample images you wish to download.\n"
    fi
sleep 1
    #WGET the appropriate url, and save it as the name of the image.
    entry_output_file="$title.$URL_FILETYPE"
type -P wget &>/dev/null || { echo -e "\n##########################################################\n\E[5mYou must have wget installed to run this script. Aborting.\E[25m\n##########################################################\n" >&2; exit 1; }


#Check user's machine for WGET. Exit if it is not present.
===File download-additional.sh, 66847696===
wget http://pqrs.org/macosx/keyremap4macbook/files/KeyRemap4MacBook-7.8.0.dmg
# KeyRemap4MacBook - keyboard customizer
wget http://downloads.choosyosx.com/choosy_1.0.3.zip
# choosy - better 'default' browser control
wget http://www.eidac.de/smcfancontrol/smcfancontrol_2_4.zip
# fan control
# app trap - delete crap w/ app
wget http://www.java.net/download/jdk7u10/archive/b13/binaries/jdk-7u10-ea-bin-b13-macosx-x86_64-24_oct_2012.dmg
# jdk7
wget http://download.virtualbox.org/virtualbox/4.2.2/VirtualBox-4.2.2-81494-OSX.dmg
# virtualbox
wget http://files.vagrantup.com/packages/be0bc66efc0c5919e92d8b79e973d9911f2a511f/Vagrant-1.0.5.dmg
# vagrant
wget http://pqrs.org/macosx/keyremap4macbook/files/PCKeyboardHack-8.0.0.dmg
# pc keyboard hack - remap key codes at the hardware level
===File update-repo.sh, 14984748===
wget --quiet http://ftp.us.debian.org/debian/dists/testing/main/binary-i386/Packages.gz -O debian-packages/main-testing.gz
echo "uptating testing packages files...."
wget --quiet http://ftp.us.debian.org/debian/dists/testing/non-free/binary-i386/Packages.gz -O debian-packages/nonfree-testing.gz
wget --quiet  http://ftp.us.debian.org/debian/dists/testing/contrib/binary-i386/Packages.gz -O debian-packages/contrib-testing.gz
wget --quiet http://ftp.us.debian.org/debian/dists/stable/non-free/binary-i386/Packages.gz -O debian-packages/nonfree-stable.gz

echo "uptating stable packages files...."

wget --quiet http://ftp.us.debian.org/debian/dists/stable/main/binary-i386/Packages.gz -O debian-packages/main-stable.gz
echo "uptating unstable packages files...."
wget --quiet  http://ftp.us.debian.org/debian/dists/unstable/contrib/binary-i386/Packages.gz -O debian-packages/contrib-unstable.gz
wget --quiet http://ftp.us.debian.org/debian/dists/unstable/main/binary-i386/Packages.gz -O debian-packages/main-unstable.gz

wget --quiet http://ftp.us.debian.org/debian/dists/unstable/non-free/binary-i386/Packages.gz -O debian-packages/nonfree-unstable.gz
wget --quiet  http://ftp.us.debian.org/debian/dists/stable/contrib/binary-i386/Packages.gz -O debian-packages/contrib-stable.gz
===File store.sh, 15274811===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File install_java_dev.sh, 16000751===
			sudo wget 'http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/indigo/SR1/eclipse-jee-indigo-SR1-linux-gtk.tar.gz&url=http://eclipse.ialto.com/technology/epp/downloads/release/indigo/SR1/eclipse-jee-indigo-SR1-linux-gtk.tar.gz&mirror_id=514'
		sudo tar zxvf ./apache-tomcat-7.0.4.tar.gz
		else
		sudo wget 'http://apache.hoxt.com/tomcat/tomcat-7/v7.0.4-beta/bin/apache-tomcat-7.0.4.tar.gz'
	
			sudo tar zxvf ./eclipse-jee-indigo-SR1-linux-gtk.tar.gz
			sudo wget 'http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/helios/SR2/eclipse-jee-helios-SR2-linux-gtk-x86_64.tar.gz&url=http://eclipse.ialto.com/technology/epp/downloads/release/helios/SR2/eclipse-jee-helios-SR2-linux-gtk-x86_64.tar.gz&mirror_id=514'
		if [ "$arch" = "amd64" ]; then
			sudo wget 'http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/indigo/SR1/eclipse-jee-indigo-SR1-linux-gtk-x86_64.tar.gz&url=http://eclipse.ialto.com/technology/epp/downloads/release/indigo/SR1/eclipse-jee-indigo-SR1-linux-gtk-x86_64.tar.gz&mirror_id=514'
		if [ "$arch" = "amd64" ]; then
			sudo tar zxvf ./eclipse-java-helios-SR2-linux-gtk-x86_64.tar.gz
			sudo tar zxvf ./eclipse-java-helios-SR2-linux-gtk-x86_64.tar.gz
	
		sudo wget 'http://mirror.ibcp.fr/pub/apache//maven/binaries/apache-maven-3.0.3-bin.tar.gz'
		sudo tar zxvf ./apache-maven-3.0.3-bin.tar.gz
===File minecraft.sh, 16398406===
# Make sure that Java, Perl, GNU Screen, and GNU Wget are installed.

JAVA=$(which java)
				else
					wget -N http://llama.cerberusstudios.net/runecraft/runecraft_latest.jar
					cd $MC_PATH/plugins/
					cd ModTmp/
					wget -N http://llama.cerberusstudios.net/runecraft_latest.zip
					unzip runecraft_latest.zip
    			fi
		            # McMyAdmin requires this file to be named craftbukkit.jar
        	        wget -N -O craftbukkit.jar http://ci.bukkit.org/job/dev-CraftBukkit/promotion/latest/Recommended/artifact/target/craftbukkit-0.0.1-SNAPSHOT.jar
			wget -N http://www.minecraft.net/download/minecraft_server.jar
		    if [[ 1 -eq $SERVERMOD ]]; then
			echo "Downloading new binaries..."
                else
    				wget -N http://ci.bukkit.org/job/dev-CraftBukkit/promotion/latest/Recommended/artifact/target/craftbukkit-0.0.1-SNAPSHOT.jar
===File rhel.sh, 64007387===
    output "Install Server Packages."
    wget http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm
    rpm -ivh nginx-release-centos-6-0.el6.ngx.noarch.rpm
    yum -y install make git tmux wget tig
    # wget http://rpms.famillecollet.com/enterprise/remi-release-5.rpm
    # wget http://dl.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm
    # Centos 5.x

    # CentOS Linux v6.x
    # https://launchpad.net/mysql-tuning-primer
    wget https://launchpad.net/mysql-tuning-primer/trunk/1.6-r1/+download/tuning-primer.sh -O /usr/local/bin/tuning-primer
    chmod a+x /usr/local/bin/tuning-primer
    # https://github.com/appleboy/MySQLTuner-perl
    wget https://raw.github.com/appleboy/MySQLTuner-perl/master/mysqltuner.pl -O /usr/local/bin/mysqltuner
    chmod a+x /usr/local/bin/mysqltuner
===File hagistack_controller_havana_neutron.sh, 67703848===
#sudo mkdir -p /opt/virt/ubuntu13.04 ; cd /opt/virt/ubuntu13.04
#glance image-create --name="Ubuntu_12.10" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-12.10-server-cloudimg-amd64-disk1.img
#sudo -E wget http://cloud-images.ubuntu.com/releases/quantal/release/ubuntu-12.10-server-cloudimg-amd64-disk1.img
#sudo mkdir /opt/virt/ubuntu12.10 ; cd /opt/virt/ubuntu12.10
#sudo -E wget http://cloud-images.ubuntu.com/releases/13.04/release/ubuntu-13.04-server-cloudimg-amd64-disk1.img
#glance image-create --name="Ubuntu_13.04_LTS" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-13.04-server-cloudimg-amd64-disk1.img
#glance image-create --name="Ubuntu_12.04_LTS" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-12.04-server-cloudimg-amd64-disk1.img
#sudo -E wget http://cloud-images.ubuntu.com/releases/precise/release/ubuntu-12.04-server-cloudimg-amd64-disk1.img
#glance image-create --name="Ubuntu_11.10" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-11.10-server-cloudimg-amd64-disk1.img
#sudo mkdir /opt/virt/ubuntu11.10 ; cd /opt/virt/ubuntu11.10
#sudo -E wget http://uec-images.ubuntu.com/releases/11.10/release/ubuntu-11.10-server-cloudimg-amd64-disk1.img
#sudo -E wget http://download.cirros-cloud.net/0.3.1/cirros-0.3.1-x86_64-uec.tar.gz
#sudo mkdir -p /opt/virt/cirros; cd /opt/virt/cirros;
#sudo tar zxvf cirros-0.3.1-x86_64-uec.tar.gz
#sudo mkdir /opt/virt/ubuntu12.04 ; cd /opt/virt/ubuntu12.04
===File rpm.sh, 67845741===
	if [ ! -s php-5.2.17.tar.gz ]; then
		wget -c -t3 -T3 https://gitcafe.com/wangyan/files/raw/master/php-5.2.17-fpm-0.5.14.diff.gz
	if [ ! -s php-5.2.17-fpm-0.5.14.diff.gz ]; then
		if [ $? != "0" ];then
			wget -c -t3 -T60 http://wangyan.org/download/lanmp-src/php-5.2.17.tar.gz
			rm -rf php-5.2.17.tar.gz
		if [ $? != "0" ];then
		wget -c -t3 -T3 https://gitcafe.com/wangyan/files/raw/master/php-5.2.17.tar.gz
		fi
		TARBALL_TYPE=`echo $2 | awk -F. '{print $NF}'`
			SOFTWARE_NAME=`echo $2 | awk -F/ '{print $NF}'`
	fi
		wget -c -t3 -T3 $2 -P $LANMP_PATH/ || exit
			rm -rf $LANMP_PATH/$SOFTWARE_NAME
			wget -c -t3 -T60 $2 -P $LANMP_PATH/
===File deb.sh, 67845798===
			wget -c -t3 -T60 http://wangyan.org/download/lanmp-src/php-5.2.17.tar.gz
			rm -rf php-5.2.17.tar.gz
		fi
			rm -rf $LANMP_PATH/$SOFTWARE_NAME
		if [ $? != "0" ];then
		wget -c -t3 -T3 https://gitcafe.com/wangyan/files/raw/master/php-5.2.17.tar.gz
	if [ ! -s php-5.2.17.tar.gz ]; then
			SOFTWARE_NAME=`echo $2 | awk -F/ '{print $NF}'`
		wget -c -t3 -T3 $1 -P $LANMP_PATH/
		if [ $? != "0" ];then
			wget -c -t3 -T60 $2 -P $LANMP_PATH/
		TARBALL_TYPE=`echo $2 | awk -F. '{print $NF}'`
	fi
		wget -c -t3 -T3 $2 -P $LANMP_PATH/ || exit
		TARBALL_TYPE=`echo $1 | awk -F. '{print $NF}'`
===File build-bundle-file.sh, 72654554===
then
    wget $WGET_V -P tmp-build-dir/tmp/tinycorelinux/4.x/x86/tcz $TCL_MIRROR_URI/$file
  then
          ;;
  wget $WGET_V -P tmp-build-dir/opt $RUBY_GEMS_URL
fi
fi
  wget $WGET_V -P tmp-build-dir/build_dir/dependencies $OPEN_VM_TOOLS_URL
          TAR_V='v'
          WGET_V='-v'
then
    wget $WGET_V -P tmp-build-dir/tmp/tinycorelinux/4.x/x86/tcz $TCL_MIRROR_URI/$file.list
    wget $WGET_V -P tmp-build-dir/tmp/tinycorelinux/4.x/x86/tcz $TCL_MIRROR_URI/$file.dep
    wget $WGET_V -P tmp-build-dir/tmp/tinycorelinux/4.x/x86/tcz $TCL_MIRROR_URI/$file.md5.txt
    wget $WGET_V -P tmp-build-dir/tmp/tinycorelinux/4.x/x86/tcz $TCL_MIRROR_URI/$file.info
===File hagistack_controller_quantum.sh, 67703675===
#sudo mkdir -p /opt/virt/cirros; cd /opt/virt/cirros;
sudo mkdir -p /opt/virt/coreos ; cd /opt/virt/coreos
sudo bunzip2 coreos_production_openstack_image.img.bz2
sudo -E wget http://storage.core-os.net/coreos/amd64-generic/dev-channel/coreos_production_openstack_image.img.bz2
sudo sed -i "s@HOST_IP=10.10.10.51@HOST_IP=$NOVA_CONTROLLER_IP@" /usr/local/src/keystone_basic.sh
#sudo tar zxvf cirros-0.3.1-x86_64-uec.tar.gz
#sudo -E wget http://download.cirros-cloud.net/0.3.1/cirros-0.3.1-x86_64-uec.tar.gz
sudo -E wget -P /usr/local/src https://raw.github.com/mseknibilel/OpenStack-Grizzly-Install-Guide/OVS_MultiNode/KeystoneScripts/keystone_endpoints_basic.sh
#sudo -E wget http://berrange.fedorapeople.org/images/2012-11-15/f17-x86_64-openstack-sda.qcow2
#sudo mkdir -p /opt/virt/fedora17; cd /opt/virt/fedora17;
#glance image-create --name="f17-jeos" --is-public=true --container-format=ovf --disk-format=qcow2 < f17-x86_64-openstack-sda.qcow2
###warning workaround###
sudo -E wget -P /etc/glance https://raw.github.com/openstack/glance/master/etc/schema-image.json
########################
sudo -E wget -P /usr/local/src https://raw.github.com/mseknibilel/OpenStack-Grizzly-Install-Guide/OVS_MultiNode/KeystoneScripts/keystone_basic.sh
sudo \rm -rf /usr/local/src/*keystone_endpoints_basic.sh*
===File install-asterisk-freepbx-on-ubuntu.sh, 68256495===
apt-get -y install wget iptables vim subversion flex bison libtiff-tools ghostscript autoconf gcc g++ automake libtool patch
apt-get -y install mysql-client libmysqlclient-dev build-essential sysvinit-utils libxml2 libxml2-dev libncurses5-dev libcurl4-openssl-dev libvorbis-dev libspeex-dev unixodbc unixodbc-dev libiksemel-dev wget iptables php5 php5-cli php-pear php5-mysql php-db libapache2-mod-php5 php5-gd php5-curl sqlite libnewt-dev libusb-dev zlib1g-dev  libsqlite0-dev  libapache2-mod-auth-mysql sox mpg123 postfix flite php5-mcrypt python-setuptools python-mysqldb python-psycopg2 python-sqlalchemy ntp

apt-get -y install mysql-server
#extras 

	rm -rf freepbx*.tar.gz
	wget http://mirror.freepbx.org/freepbx-2.8.0.tar.gz
	tar zxfv freepbx*.tar.gz
		tar zxf asterisk-$ASTVERSION.tar.gz
		wget http://downloads.asterisk.org/pub/telephony/asterisk/releases/asterisk-$ASTVERSION.tar.gz
		wget http://downloads.asterisk.org/pub/telephony/asterisk/releases/asterisk-addons-$ASTADDONSVERSION.tar.gz
		wget http://downloads.asterisk.org/pub/telephony/asterisk/$ASTERISK18VER
		tar zxf $ASTERISK18VER
		fi
	2)
===File getthemall.sh, 71081702===
wget -r --level=1000000 --tries=100 --retry-connrefused --include-directories=athlete,scores  'http://games.crossfit.com/scores/leaderboard.php?stage=3&sort=0&division=9&region=0&numberperpage=60&page=0&competition=0&frontpage=0&expanded=0&full=1&year=13&showtoggles=0&hidedropdowns=0&showathleteac=1&athletename='&
wget -r --level=1000000 --tries=100 --retry-connrefused --include-directories=athlete,scores  'http://games.crossfit.com/scores/leaderboard.php?stage=3&sort=0&division=8&region=0&numberperpage=60&page=0&competition=0&frontpage=0&expanded=0&full=1&year=13&showtoggles=0&hidedropdowns=0&showathleteac=1&athletename='&
wget -r --level=1000000 --tries=100 --retry-connrefused --include-directories=athlete,scores  'http://games.crossfit.com/scores/leaderboard.php?stage=3&sort=0&division=11&region=0&numberperpage=60&page=0&competition=0&frontpage=0&expanded=0&full=1&year=13&showtoggles=0&hidedropdowns=0&showathleteac=1&athletename='&
wget -r --level=1000000 --tries=100 --retry-connrefused --include-directories=athlete,scores  'http://games.crossfit.com/scores/leaderboard.php?stage=3&sort=0&division=10&region=0&numberperpage=60&page=0&competition=0&frontpage=0&expanded=0&full=1&year=13&showtoggles=0&hidedropdowns=0&showathleteac=1&athletename='&

wget -r --level=1000000 --tries=100 --retry-connrefused --include-directories=athlete,scores  'http://games.crossfit.com/scores/leaderboard.php?stage=3&sort=0&division=12&region=0&numberperpage=60&page=0&competition=0&frontpage=0&expanded=0&full=1&year=13&showtoggles=0&hidedropdowns=0&showathleteac=1&athletename='&
wget -r --level=1000000 --tries=100 --retry-connrefused --include-directories=athlete,scores 'http://games.crossfit.com/scores/leaderboard.php?stage=3&sort=0&division=1&region=0&numberperpage=60&page=0&competition=0&frontpage=0&expanded=0&full=1&year=13&showtoggles=0&hidedropdowns=0&showathleteac=1&athletename='&

wget -r --level=1000000 --tries=100 --retry-connrefused --include-directories=athlete,scores  'http://games.crossfit.com/scores/leaderboard.php?stage=3&sort=0&division=3&region=0&numberperpage=60&page=0&competition=0&frontpage=0&expanded=0&full=1&year=13&showtoggles=0&hidedropdowns=0&showathleteac=1&athletename='&
wget -r --level=1000000 --tries=100 --retry-connrefused --include-directories=athlete,scores 'http://games.crossfit.com/scores/leaderboard.php?stage=3&sort=0&division=2&region=0&numberperpage=60&page=0&competition=0&frontpage=0&expanded=0&full=1&year=13&showtoggles=0&hidedropdowns=0&showathleteac=1&athletename='&
wget -r --level=1000000 --tries=100 --retry-connrefused --include-directories=athlete,scores  'http://games.crossfit.com/scores/leaderboard.php?stage=3&sort=0&division=5&region=0&numberperpage=60&page=0&competition=0&frontpage=0&expanded=0&full=1&year=13&showtoggles=0&hidedropdowns=0&showathleteac=1&athletename='&
wget -r --level=1000000 --tries=100 --retry-connrefused --include-directories=athlete,scores  'http://games.crossfit.com/scores/leaderboard.php?stage=3&sort=0&division=4&region=0&numberperpage=60&page=0&competition=0&frontpage=0&expanded=0&full=1&year=13&showtoggles=0&hidedropdowns=0&showathleteac=1&athletename='&
wget -r --level=1000000 --tries=100 --retry-connrefused --include-directories=athlete,scores  'http://games.crossfit.com/scores/leaderboard.php?stage=3&sort=0&division=7&region=0&numberperpage=60&page=0&competition=0&frontpage=0&expanded=0&full=1&year=13&showtoggles=0&hidedropdowns=0&showathleteac=1&athletename='&
wget -r --level=1000000 --tries=100 --retry-connrefused --include-directories=athlete,scores  'http://games.crossfit.com/scores/leaderboard.php?stage=3&sort=0&division=6&region=0&numberperpage=60&page=0&competition=0&frontpage=0&expanded=0&full=1&year=13&showtoggles=0&hidedropdowns=0&showathleteac=1&athletename='&
===File rpm.sh, 72668875===
	if [ ! -s php-5.2.17.tar.gz ]; then
			wget -c -t3 -T60 http://wangyan.org/download/lanmp-src/php-5.2.17.tar.gz
			rm -rf php-5.2.17.tar.gz
			SOFTWARE_NAME=`echo $2 | awk -F/ '{print $NF}'`
		wget -c -t3 -T3 http://src-mirror.googlecode.com/files/php-5.2.17.tar.gz
		fi
			rm -rf $LANMP_PATH/$SOFTWARE_NAME
			wget -c -t3 -T60 $2 -P $LANMP_PATH/
	fi
		wget -c -t3 -T3 $2 -P $LANMP_PATH/ || exit
		TARBALL_TYPE=`echo $2 | awk -F. '{print $NF}'`
		if [ $? != "0" ];then
		wget -c -t3 -T3 $1 -P $LANMP_PATH/
		if [ $? != "0" ];then
		TARBALL_TYPE=`echo $1 | awk -F. '{print $NF}'`
===File deb.sh, 72668929===
	if [ ! -s php-5.2.17.tar.gz ]; then
		wget -c -t3 -T3 http://src-mirror.googlecode.com/files/php-5.2.17.tar.gz
		if [ $? != "0" ];then
		wget -c -t3 -T3 http://src-mirror.googlecode.com/files/php-5.2.17-fpm-0.5.14.diff.gz
		fi
			wget -c -t3 -T60 http://wangyan.org/download/lanmp-src/php-5.2.17.tar.gz
			rm -rf php-5.2.17.tar.gz
		if [ $? != "0" ];then
	if [ ! -s php-5.2.17-fpm-0.5.14.diff.gz ]; then
		wget -c -t3 -T3 $2 -P $LANMP_PATH/ || exit
		TARBALL_TYPE=`echo $2 | awk -F. '{print $NF}'`
	fi
			wget -c -t3 -T60 $2 -P $LANMP_PATH/
			SOFTWARE_NAME=`echo $2 | awk -F/ '{print $NF}'`
			rm -rf $LANMP_PATH/$SOFTWARE_NAME
===File server-encoded-url.sh, 4406===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
}
wget -q -O- 'http://127.0.0.1:8080/1%2b2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%2B2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%202.txt' | diff 'DIR/1 2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%262.txt' | diff 'DIR/1&2.txt' -

===File ooc-install.sh, 386349===
    else
        if [ ! -x "`which curl`" ] && [ ! -x "`which wget`" ]; then
            echo "Sorry, you need either curl or wget installed."
            echo ""
            echo "OS X: brew install wget"
            echo ""
            echo "Ubuntu: sudo apt-get install curl"
        curl -L -\# "http://ooc-lang.org/boots" | tar -xjf -
    elif [ -x "`which wget`" ]; then
        wget --progress=bar "http://ooc-lang.org/boots" -O - | tar -xjf -
    fi
===File get-dependencies.sh, 478760===
unzip $zeromq__hash

wget --no-check-certificate --directory-prefix=$fred__project_name/src/fred https://raw.github.com/blackwhale/FReD/$fred_hash/fred_uni.d
unzip $trioplax__hash


unzip $mongo_d_driver__hash
wget --no-check-certificate https://github.com/itiu/trioplax/zipball/$trioplax__hash

wget --no-check-certificate https://github.com/itiu/zeromq-connector/zipball/$zeromq__hash
wget --no-check-certificate --directory-prefix=$fred__project_name/src/fred https://raw.github.com/blackwhale/FReD/$fred_hash/fred.d

wget --no-check-certificate https://github.com/itiu/mongo-d-driver/zipball/$mongo_d_driver__hash
===File setuprutorrent.sh, 964972===
wget http://libtorrent.rakshasa.no/downloads/rtorrent-0.8.9.tar.gz
tar zxvf rtorrent-0.8.9.tar.gz
wget https://raw.github.com/joshmackey/ruTorrent-Installer/master/rtorrent.rc

tar zxvf libtorrent-0.12.9.tar.gz

mv lighttpd.conf /etc/lighttpd/
wget http://libtorrent.rakshasa.no/downloads/libtorrent-0.12.9.tar.gz
mv rtorrent.rc .rtorrent.rc

wget https://raw.github.com/joshmackey/ruTorrent-Installer/master/lighttpd.conf
cd /home/rt/
mv rtorrent /etc/init.d/
wget https://raw.github.com/joshmackey/ruTorrent-Installer/master/rtorrent

===File post_install_script.sh.erb, 1338946===
/usr/bin/wget /usr/bin/wget http://<%= @node[:netboot][:tftp_server_ip] %>/<%= @filename %>.pem -O client.pem
cd /etc/chef
#run chef client
/usr/bin/wget /usr/bin/wget http://<%= @node[:netboot][:tftp_server_ip] %>/client.rb
/usr/bin/wget http://<%= @node[:netboot][:tftp_server_ip] %>/ruby-enterprise_1.8.7-2010.01_amd64.deb
cd /tmp
/usr/bin/dpkg -i ruby-enterprise_1.8.7-2010.01_amd64.deb
===File server-encoded-url.sh, 2203753===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
}
wget -q -O- 'http://127.0.0.1:8080/1%2b2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%2B2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%202.txt' | diff 'DIR/1 2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%262.txt' | diff 'DIR/1&2.txt' -

===File server-encoded-url.sh, 2204985===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
}
wget -q -O- 'http://127.0.0.1:8080/1%2b2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%2B2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%202.txt' | diff 'DIR/1 2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%262.txt' | diff 'DIR/1&2.txt' -

===File test-patch.sh, 2630026===
    if [[ `$GREP -c 'Patch Available' $PATCH_DIR/jira` == 0 ]] ; then
    $WGET -q -O $PATCH_DIR/jira http://issues.apache.org/jira/browse/$defect
    echo "$patchURL"
    VERSION=${SVN_REVISION}_${defect}_PATCH-${patchNum}
    $WGET -q -O $PATCH_DIR/patch $patchURL
  if [[ $JENKINS == "true" ]] ; then
SVN=${SVN:-svn}
WGET=${WGET:-wget}
AWK=${AWK:-awk}
      ;;
      WGET=${i#*=}
  echo "--jenkins              Run by Jenkins (runs tests and posts results to JIRA)"
  echo "--wget-cmd=<cmd>       The 'wget' command to use (default 'wget')"
  echo "--jira-cmd=<cmd>       The 'jira' command to use (default 'jira')"
    --wget-cmd=*)
      ;;
===File download_3rdparty, 3069169===
#     ls *.tar.gz | xargs -n1 tar xzvf;
#     wget http://www.scheme.com/csv7.0/tk8.4.4.pkg.tar.gz;
then wget http://www.scheme.com/csv7.0/pcsv70.exe;
else 
elif [ "$MT" == "i3nt" ];
     wget http://scheme.com/csv7.3/pcsv7.3-ppcosx.tar.gz
then 
#     wget http://www.scheme.com/csv7.0/tcl8.4.4.pkg.tar.gz;
#     wget http://www.scheme.com/csv7.0/swl0.9z-1.pkg.tar.gz;
===File ooc-install.sh, 3361158===
    else
        if [ ! -x "`which curl`" ] && [ ! -x "`which wget`" ]; then
            echo "Sorry, you need either curl or wget installed."
            echo ""
            echo "OS X: brew install wget"
            echo ""
            echo "Ubuntu: sudo apt-get install curl"
        curl -L -\# "http://ooc-lang.org/boots" | tar -xjf -
    elif [ -x "`which wget`" ]; then
        wget --progress=bar "http://ooc-lang.org/boots" -O - | tar -xjf -
    fi
===File wget_tests, 3449495===
wget -O - http://localhost:6767/tests/crap


wget -O - http://localhost:6767/

wget -O - http://localhost:6767/handlertest

wget -O - http://localhost:6767/chatdemo/

wget -O - http://localhost:6767/tests/sample.json

===File ooc-install.sh, 3900987===
    else
        if [ ! -x "`which curl`" ] && [ ! -x "`which wget`" ]; then
            echo "Sorry, you need either curl or wget installed."
            echo ""
            echo "OS X: brew install wget"
            echo ""
            echo "Ubuntu: sudo apt-get install curl"
        curl -L -\# "http://ooc-lang.org/boots" | tar -xjf -
    elif [ -x "`which wget`" ]; then
        wget --progress=bar "http://ooc-lang.org/boots" -O - | tar -xjf -
    fi
===File ndistro, 4360221===


which wget > /dev/null && GET="wget -q -O-"
# Ensure we have curl or wget


test -z "$GET" && abort "curl or wget required"

# wget support
===File ooc-install.sh, 5292512===
    else
        if [ ! -x "`which curl`" ] && [ ! -x "`which wget`" ]; then
            echo "Sorry, you need either curl or wget installed."
            echo ""
            echo "OS X: brew install wget"
            echo ""
            echo "Ubuntu: sudo apt-get install curl"
        curl -L -\# "http://ooc-lang.org/boots" | tar -xjf -
    elif [ -x "`which wget`" ]; then
        wget --progress=bar "http://ooc-lang.org/boots" -O - | tar -xjf -
    fi
===File ooc-install.sh, 5556798===
    else
        if [ ! -x "`which curl`" ] && [ ! -x "`which wget`" ]; then
            echo "Sorry, you need either curl or wget installed."
            echo ""
            echo "OS X: brew install wget"
            echo ""
            echo "Ubuntu: sudo apt-get install curl"
        curl -L -\# "http://ooc-lang.org/boots" | tar -xjf -
    elif [ -x "`which wget`" ]; then
        wget --progress=bar "http://ooc-lang.org/boots" -O - | tar -xjf -
    fi
===File bench.sh, 14665668===
  echo -n " Softlayer SG : "
  wget -O /dev/null http://speedtest.sjc01.softlayer.com/downloads/test100.zip 2>&1 | awk '/\/dev\/null/ {speed=$3 " " $4} END {gsub(/\(|\)/,"",speed); print speed}'
  echo -n "    Linode UK : "
  wget -O /dev/null http://proof.ovh.net/files/100Mb.dat 2>&1 | awk '/\/dev\/null/ {speed=$3 " " $4} END {gsub(/\(|\)/,"",speed); print speed}'

  wget -O /dev/null http://tokyo1.linode.com/100MB-tokyo.bin  2>&1 | awk '/\/dev\/null/ {speed=$3 " " $4} END {gsub(/\(|\)/,"",speed); print speed}'
  wget -O /dev/null http://fremont1.linode.com/100MB-fremont.bin 2>&1 | awk '/\/dev\/null/ {speed=$3 " " $4} END {gsub(/\(|\)/,"",speed); print speed}'
  wget -O /dev/null http://london1.linode.com/100MB-london.bin 2>&1 | awk '/\/dev\/null/ {speed=$3 " " $4} END {gsub(/\(|\)/,"",speed); print speed}'
  echo -n "    Linode JP : "
  echo -n " Softlayer CA : "
  wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test100.zip 2>&1 | awk '/\/dev\/null/ {speed=$3 " " $4} END {gsub(/\(|\)/,"",speed); print speed}'
  echo -n " Softlayer DC : "
  echo -n "    Linode CA : "
  wget -O /dev/null http://speedtest.sng01.softlayer.com/downloads/test100.zip 2>&1 | awk '/\/dev\/null/ {speed=$3 " " $4} END {gsub(/\(|\)/,"",speed); print speed}'
  echo -n "       OVH FR : "
===File dtfreednsupdater, 16137411===

# Script uses:
# file to save ip to for checking
# file to save ip to for checking
# WGet - http://www.gnu.org/software/wget/
# find your ip
YOURIP="$(wget -q -O - api.myiptest.com | awk -F"\"" '{print $4}')"
YOURIP="$(wget -q -O - api.myiptest.com | awk -F"\"" '{print $4}')"
    sleep 1
    sleep 1
    wget -q --read-timeout=0.0 --waitretry=5 --tries=400 --background http://freedns.afraid.org/dynamic/update.php?$LOGPASSONE
# find your ip
    wget -q --read-timeout=0.0 --waitretry=5 --tries=400 --background http://freedns.afraid.org/dynamic/update.php?$LOGPASSTWO
    sleep 1
    sleep 1
===File build.sh, 70568844===
done
  sudo cp $rpm_path/*.rpm $chroot_path/
  sudo chroot $chroot_path urpmi --downloader wget --wget-options --auth-no-challenge -v --debug --no-verify --test --buildrequires `ls  $chroot_path |grep rpm` --root test_root --auto >> $test_log 2>&1
  sudo cp $src_rpm_path/*.rpm $chroot_path/
sudo urpmi.update -a
  sudo chroot $chroot_path urpmi --downloader wget --wget-options --auth-no-challenge -v --debug --no-verify --no-suggests --test `ls  $chroot_path |grep rpm` --root test_root --auto >> $test_log 2>&1
sudo urpmi --downloader wget --wget-options --auth-no-challenge --auto $p
for p in wget curl urpmi mock-urpm perl-URPM genhdlist2 tree ; do
#  sudo urpmi --downloader wget --wget-options --auth-no-challenge -v --debug --no-verify --no-suggests --test $rpm_path/*.rpm --root $test_root --urpmi-root $chroot_path --auto >> $test_log 2>&1
  sudo rm -f  $chroot_path/*.rpm
  sudo rm -f $chroot_path/*.rpm
# sudo urpmi --downloader wget --wget-options --auth-no-challenge -v --debug --no-verify --test --buildrequires $src_rpm_path/*.rpm --root $test_root --urpmi-root $chroot_path --auto >> $test_log 2>&1
===File cloudoptimizer-install.sh, 73482451===
                echo "wget $pkg_url" >>$dl_script && echo "tar -rf cloudoptimizer-packages.tar $pkg_name" >>$dl_script && message "OK" status || die "Could not write to script! Exiting."
            else
                message "$averb $pkg_name package" action
            else
                echo "wget $pkg_url" >>$dl_script && echo "tar -rf cloudoptimizer-packages.tar $pkg_name" >>$dl_script && message "OK" status || die "Could not write to script! Exiting."
                echo "wget $pkg_url" >>$dl_script && echo "tar -rf cloudoptimizer-packages.tar $pkg_name" >>$dl_script && message "OK" status || die "Could not write to script! Exiting."
                message "$averb $pkg_name package" action
                message "$averb $pkg_name package" action
            else
if [ -x "/usr/bin/curl" ]; then
# Check for wget, curl or fetch

                echo "wget $pkg_url" >>$dl_script && echo "tar -rf cloudoptimizer-packages.tar $pkg_name" >>$dl_script && message "OK" status || die "Could not write to script! Exiting."
                message "$averb $pkg_name package" action
            else
===File installer.sh, 73538552===
	cd /tmp/ec-install
	
		echo -e "\n\e[1;33m[*] Downloading and installing ettercap from source...\e[0m"

	reqs="gcc g++ subversion wget libssl-dev libpcap0.8 libpcap0.8-dev libssl-dev libssl0.9.8 libtool hostapd dsniff dhcp3-server ipcalc aircrack-ng"
		wget http://prdownloads.sourceforge.net/ettercap/ettercap-0.7.4.1.tar.gz?download -O /tmp/ec-install/ettercap-0.7.4.1.tar.gz
	wget http://www.erratasec.com/erratasec.zip -O /tmp/ec-install/erratasec.zip
	unzip erratasec.zip &> /dev/null
	cd /tmp/ec-install
		cd /tmp/ec-install
	echo -e "\n\e[1;33m[*] Downloading sslstrip from thoughtcrime.org...\e[0m"
	wget http://www.thoughtcrime.org/software/sslstrip/sslstrip-0.9.tar.gz -O /tmp/ec-install/sslstrip-0.9.tar.gz
	cd /tmp/ec-install
	wget http://www.willhackforsushi.com/code/asleap/2.2/asleap-2.2.tgz -O /tmp/ec-install/asleap.tgz
	echo -e "\n\e[1;33m Downloading and installing asleap from source...\e[0m"
===File download_thirdparty.sh, 73186689===
echo "Fetching gtest"
unzip gflags-${IMPALA_GFLAGS_VERSION}.zip
tar xzf gperftools-${IMPALA_GPERFTOOLS_VERSION}.tar.gz
tar xzf snappy-${IMPALA_SNAPPY_VERSION}.tar.gz
tar xzf glog-${IMPALA_GLOG_VERSION}.tar.gz
wget http://google-glog.googlecode.com/files/glog-${IMPALA_GLOG_VERSION}.tar.gz
echo "Fetching glog"
wget http://gperftools.googlecode.com/files/gperftools-${IMPALA_GPERFTOOLS_VERSION}.tar.gz
wget http://gflags.googlecode.com/files/gflags-${IMPALA_GFLAGS_VERSION}.zip
echo "Fetching gflags"
echo "Fetching gperftools"
echo "Fetching snappy"
wget http://googletest.googlecode.com/files/gtest-${IMPALA_GTEST_VERSION}.zip
wget http://snappy.googlecode.com/files/snappy-${IMPALA_SNAPPY_VERSION}.tar.gz
unzip gtest-${IMPALA_GTEST_VERSION}.zip
===File lfs-scripts.sh, 82993458===
wget_essential_package() {
    _log "get source code packages..."
    fi
        wget http://www.linuxfromscratch.org/patches/lfs/development/$GCC-startfiles_fix-1.patch
    if [ ! -e $GCC-startfiles_fix-1.patch ]; then
    fi
        wget ftp://ftp.gnu.org/gnu/gcc/$GCC/$GCC.tar.bz2
# get source code package
    fi
        wget ftp://ftp.gnu.org/gnu/binutils/$BINUTILS.tar.bz2
    if [ ! -e $BINUTILS.tar.bz2 ]; then
    fi
    if [ ! -e $LINUX.tar.bz2 ]; then
        wget http://www.kernel.org/pub/linux/kernel/v2.6/$LINUX.tar.bz2
    if [ ! -e $GCC.tar.bz2 ]; then
===File git-apply-url, 5783666===
  error need curl or wget
fi
  fetch="wget -O - -q --no-check-certificate"
else
  fetch="curl -s"
elif [[ -x $(which wget) ]]; then
===File install-pkgs.sh, 7098660===
else
  wget -i pkg-paths.txt -o ../wget-output.txt
echo
echo "#### Downloads Complete! Please check wget-output.txt for any errors that may have been encountered! ####"

  cat pkg-paths.txt
===File getInstallers.sh, 7099240===
	wget -nc --no-proxy -q $driverDownloadURL
	if ! ls ati*.run  > /dev/null 2>&1 ; then
	echo "Downloading AMD Installer from $driverDownloadURL ..."
	wget -nc --no-proxy -q "http://git.wilsonet.com/crystalhd.git?a=snapshot;h=HEAD;sf=tgz" -O crystalhd-HEAD.tar.gz
	if [ ! -f crystalhd-HEAD.tar.gz ]; then
	echo "Downloading NVIDIA Installer from $driverDownloadURL ..."
	wget -nc --no-proxy -q $driverDownloadURL
	if ! ls NVIDIA*.run  > /dev/null 2>&1 ; then
	echo "Downloading Broadcom drivers snapshot from http://git.wilsonet.com/crystalhd.git ..."
===File get-cygwin-deps.sh, 7234790===

commands="wget unzip automake autoconf libtool make bison"
fi
	wget -P $dir http://sourceforge.net/projects/mingw/files/MinGW/libiconv/libiconv-1.13/libiconv-1.13-mingw32-dev.tar.gz/download
if [ ! -f $dir/libiconv-1.13-mingw32-dev.tar.gz ]; then
fi
if [ ! -f $dir/gettext-runtime-0.17-1.zip ]; then
	wget -P $dir http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/gettext-runtime-0.17-1.zip

===File ciabot.sh, 7517704===
# Use this only if your hosting site forbids Python hooks.
#
# It requires: git(1), hostname(1), cut(1), sendmail(1), and wget(1).
longurl=${urlprefix}${merged}
url=$(wget -O - -q http://tinyurl.com/api-create.php?url=${longurl} 2>/dev/null)
# less space on the IRC notification line. Some repo sites (I'm looking at
# you, berlios.de!) forbid wget calls for security reasons.  On these,
# the code will fall back to the full un-tinyfied URL.
if [ -z "$url" ]; then
===File predict-update, 7628400===
wget -qc www.celestrak.com/NORAD/elements/weather.txt -O ./weather.txt
predict -u ./amateur.txt ./visual.txt ./weather.txt
wget -qc www.celestrak.com/NORAD/elements/amateur.txt -O ./amateur.txt
wget -qc www.celestrak.com/NORAD/elements/visual.txt -O ./visual.txt

===File cacheupdate.sh, 7641910===
	if [[ $? -eq 0 ]] ; then
	wget http://gcachescan.jonatkins.com/ -O .my_list &> /dev/null
	# Try to fetch an updated list
		if [[ $? -ne 0 ]] ; then
		wget ${cache}${URLFILE} -O .gwebcaches.new &> /dev/null
		wget ${cache}${HOSTFILE} -O .nodes.new &> /dev/null
	for cache in ${CACHE_LIST} ; do
		if [[ $? -ne 0 ]] ; then
	for cache in ${CACHE_LIST} ; do
===File factor.sh, 7707213===
    ensure_program_installed gcc
set_downloader() {
install_deps_linux() {
    check_ret sudo
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev gtk2-engines-pixbuf libgtkglext1-dev wget git-core git-doc rlwrap gcc make
    ensure_program_installed git
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
    ensure_program_installed wget curl
===File server-ip-address.sh, 7718098===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid



wget -q -O- http://127.0.0.1:${server_port}/ > /dev/null

wget -q -O- http://127.0.0.1:${server_port}/ > /dev/null
===File store-escaped-characters.sh, 7718148===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=store-escaped-characters.json -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
shutdown() {

json_cmp store-escaped-characters.expected.json DIR/jscoverage.json
cat store-escaped-characters.expected.json | sed s/1,/2,/g > TMP
wget --post-file=store-escaped-characters.json -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
===File factor.sh, 7749327===
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev wget git-core git-doc rlwrap gcc make
    test_program_installed wget curl
install_build_system_apt() {
    ensure_program_installed wget curl
    ensure_program_installed gcc
set_downloader() {
    else
    if [[ $? -ne 0 ]] ; then
        DOWNLOADER=wget
    check_ret sudo
    ensure_program_installed git
===File factor.sh, 7783702===
install_deps_linux() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev gtk2-engines-pixbuf libgtkglext1-dev wget git-core git-doc rlwrap gcc make
    check_ret sudo
set_downloader() {
    ensure_program_installed git
    ensure_program_installed wget curl
    ensure_program_installed gcc
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
===File WAS6, 7831553===
    then
  if
    have_binary $WGET
  then
  SnoopPort=`GetWASSnoopPort $1`
  output=`$WGET -nv -O$tmpfile  http://localhost:$SnoopPort/snoop 2>&1`
  rc=$?
    rc=$OCF_ERR_GENERIC
    if
      grep -i 'user-agent.*Wget' $tmpfile >/dev/null
    ocf_log "err" "WAS: $1: wget failure: $output"
#
  else
#
#       For this we invoke the snoop applet via wget.
===File WAS, 7831591===
    then
      grep -i 'user-agent.*Wget' $tmpfile >/dev/null
  else
    if
  SnoopPort=`GetWASSnoopPort $1`
    ocf_log "err" "WAS: $1: wget failure: $output"
  rc=$?
  output=`$WGET -nv -O$tmpfile  http://localhost:$SnoopPort/servlet/snoop 2>&1`
#
    have_binary $WGET
    rc=$OCF_ERR_GENERIC
#	For this we invoke the snoop applet via wget.
#
  then
  if
===File factor.sh, 7942449===
install_deps_linux() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev gtk2-engines-pixbuf libgtkglext1-dev wget git git-doc rlwrap gcc make
    check_ret sudo
    else
        DOWNLOADER=wget
    if [[ $? -ne 0 ]] ; then
    test_program_installed wget curl
set_downloader() {
    ensure_program_installed clang gcc
    ensure_program_installed git
    ensure_program_installed wget curl
===File server-ip-address.sh, 7989132===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid



wget -q -O- http://127.0.0.1:${server_port}/ > /dev/null

wget -q -O- http://127.0.0.1:${server_port}/ > /dev/null
===File store-escaped-characters.sh, 7989182===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=store-escaped-characters.json -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
shutdown() {

json_cmp store-escaped-characters.expected.json DIR/jscoverage.json
cat store-escaped-characters.expected.json | sed s/1,/2,/g > TMP
wget --post-file=store-escaped-characters.json -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
===File ironhide-configuration, 8134207===
        fi
WGET=`which wget`
fi
GLXGEARS=`which glxgears`
WHOAMI=`which whoami`
	wget -O $DATAFOLDER/allmachineinfo "http://martin-juhl.dk/ironhide/?searchitem=showall&search=1" 1>/dev/null 2>/dev/null
	wget -O $DATAFOLDER/machineinfo "http://martin-juhl.dk/ironhide/?searchitem=`sudo dmidecode --string system-product-name`&search=1" 1>/dev/null 2>/dev/null
fi
rm -rf "/tmp/index.google"
$WGET -q --tries=10 --timeout=5 http://www.google.com -O /tmp/index.google &> /dev/null
if [ ! -s /tmp/index.google ];then
	fi
===File factor.sh, 8254311===
install_deps_linux() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev gtk2-engines-pixbuf libgtkglext1-dev wget git git-doc rlwrap gcc make
    check_ret sudo
    else
        DOWNLOADER=wget
    if [[ $? -ne 0 ]] ; then
    test_program_installed wget curl
set_downloader() {
    ensure_program_installed clang gcc
    ensure_program_installed git
    ensure_program_installed wget curl
===File install-pkgs.sh, 8315704===
else
  wget -i pkg-paths.txt -o ../wget-output.txt
echo
echo "#### Downloads Complete! Please check wget-output.txt for any errors that may have been encountered! ####"

  cat pkg-paths.txt
===File configure, 8357659===
      wget|curl) LUAROCKS_DOWNLOADER="$value" ;;
      case "$value" in
      *) die "Invalid option: $value. See --help." ;;
                            Default is to auto-detect.
                            Valid options are: wget, curl.
--with-downloader=TOOL      Which tool to use as a downloader.
   LUAROCKS_DOWNLOADER=$HELPER
then
   find_helper "downloader helper program" wget curl fetch
===File factor.sh, 8526413===
    ensure_program_installed gcc
set_downloader() {
install_deps_linux() {
    check_ret sudo
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev gtk2-engines-pixbuf libgtkglext1-dev wget git-core git-doc rlwrap gcc make
    ensure_program_installed git
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
    ensure_program_installed wget curl
===File factor.sh, 8645993===
set_downloader() {
install_deps_linux() {
    check_ret sudo
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev libgtkglext1-dev wget git-core git-doc rlwrap gcc make
    ensure_program_installed git
    ensure_program_installed wget curl
    ensure_program_installed gcc
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
===File net-post-install.sh, 9601622===
	wget -a /root/post-install-wget.log -x -nH --cut-dirs=1 \
    while read f; do
(   cd "$BASEDIR"
    while ! wget -q http://192.168.1.2:8091/files.list; do sleep 1; done
	    "http://192.168.1.2:8091/${f#./}"
===File install-impl.sh, 15496636===
        wget_unpacked $LIBBONOBOUI_URL $DOWNLOAD_DIR $GNOME_DIR
        wget_unpacked $LIBBONOBOUI_DEV_URL $DOWNLOAD_DIR $GNOME_DIR
        wget_unpacked $INTLTOOL_URL $DOWNLOAD_DIR $GNOME_DIR
        wget_unpacked $GTK_DEV_URL $DOWNLOAD_DIR $GNOME_DIR
        wget_unpacked $LIBART_LGPL_URL $DOWNLOAD_DIR $GNOME_DIR
        wget_unpacked $LIBART_LGPL_DEV_URL $DOWNLOAD_DIR $GNOME_DIR
        wget_unpacked $LIBBONOBO_URL $DOWNLOAD_DIR $GNOME_DIR
        wget_unpacked $LIBBONOBO_DEV_URL $DOWNLOAD_DIR $GNOME_DIR
        wget_unpacked $GETTEXT_RUNTIME_DEV_URL $DOWNLOAD_DIR $GNOME_DIR
        wget_unpacked $GLIB_URL $DOWNLOAD_DIR $GNOME_DIR
        wget_unpacked $GETTEXT_TOOLS_URL $DOWNLOAD_DIR $GNOME_DIR
        wget_unpacked $GNOME_VFS_URL $DOWNLOAD_DIR $GNOME_DIR
        wget_unpacked $GLIB_DEV_URL $DOWNLOAD_DIR $GNOME_DIR
        wget_unpacked $GTK_URL $DOWNLOAD_DIR $GNOME_DIR
        wget_unpacked $GNOME_VFS_DEV_URL $DOWNLOAD_DIR $GNOME_DIR
===File tve-setup.sh, 64851211===
		fi
			wget -q -O - "$1"
# Find the network utility
		if [ -n "$2" ]; then
		else
			wget --header="$1" -q -O - "$2"
	post2stdout() {
if cmdexists wget 1>&2; then
	}
		wget --post-data="$2" -q -O - "$1"
		if [ -n "$2" ]; then
			wget --header="$1" -q "$2"
		else
			wget -q "$1"
		fi
===File ctools-installer.sh, 67416675===
	rm -f .tmp/dist/marketplace.xml
	echo -n "Downloading CDE... "
	wget --no-check-certificate 'http://ci.analytical-labs.com/job/Webdetails-CGG/lastSuccessfulBuild/artifact/*zip*/archive.zip' -P .tmp/cgg -o /dev/null
	echo -n "Downloading CGG... "

	rm -f .tmp/dist/marketplace.xml
	wget --no-check-certificate 'http://ci.analytical-labs.com/job/Webdetails-CDE'$URL1'/lastSuccessfulBuild/artifact/server/plugin/dist/*zip*/dist.zip' -P .tmp/cde -o /dev/null
wget --no-check-certificate 'https://raw.github.com/pmalves/ctools-installer/master/ctools-installer.sh' -P .tmp -o /dev/null

	wget --no-check-certificate $URL -P .tmp/cda -o /dev/null
	rm -f .tmp/dist/marketplace.xml	
	wget --no-check-certificate $URL -P .tmp/dist/ -o /dev/null	
	rm -f .tmp/dist/marketplace.xml
	echo -n "Downloading CDA... "
	echo -n "Downloading CDF... "
===File store.sh, 67901412===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File install_on_RHEL5.sh, 68828794===

wget http://mirrors.sonic.net/apache/avro/avro-1.7.1/cpp/avro-cpp-1.7.1.tar.gz -O avro-cpp-1.7.1.tar.gz
tar -xzvf numpy-1.6.2.tar.gz
tar -xzvf Python-2.7.3.tgz
wget http://python.org/ftp/python/2.7.3/Python-2.7.3.tgz -O Python-2.7.3.tgz

tar -xzvf avro-cpp-1.7.1.tar.gz
unzip JPype-0.5.4.2.zip
wget "https://downloads.sourceforge.net/project/jpype/JPype/0.5.4/JPype-0.5.4.2.zip?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fjpype%2Ffiles%2F&ts=1345046559&use_mirror=iweb" -O JPype-0.5.4.2.zip


wget 'http://downloads.sourceforge.net/project/numpy/NumPy/1.6.2/numpy-1.6.2.tar.gz?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fnumpy%2Ffiles%2FNumPy%2F1.6.2%2F&ts=1339612771&use_mirror=voxel' -O numpy-1.6.2.tar.gz

wget --no-check-certificate https://github.com/opencloudconsortium/matsu-project/tarball/master -O matsu-project.tar.gz
tar -xzvf matsu-project.tar.gz
===File server.sh, 80941854===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File server.sh, 81860346===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File airdriver-ng, 84550630===

    #get it with wget
LSUSB=`which lsusb 2>/dev/null`
WGET=`which wget 2>/dev/null`
            SI_DRIVERGET[$1]="wget"

    then
DI_DRIVERFILE[$i]="linux-wlan-ng-0.2.8.tar.bz2"
MAKE=`which make 2>/dev/null`
    if [ "${DI_DRIVERGET[$1]}" == "wget"  ]
DI_INIT[$i]=""
#0 - check if all needed variables are set
    if [ x"${DI_DRIVERFILE[$1]}" == x -a x"${DI_DRIVERGET[$1]}" == "wget" ]
            SI_DRIVERFILE[$1]="linux-$VANILLA.tar.bz2"
DI_DRIVERGET[$i]="wget"
===File AlsaUpgrade-1.0.24-2.sh, 67162085===

wget ftp://ftp.kernel.org/pub/linux/kernel/people/tiwai/snapshot/alsa-driver-snapshot.tar.gz
mv $DRIVER $DRIVER.old
test -f  alsa-driver-snapshot.tar.gz || die "Download of snapshot didn't work"
wget ftp://ftp.alsa-project.org/pub/tools/$TOOLS.tar.bz2 && tar -xjf $TOOLS.tar.bz2 
wget ftp://ftp.alsa-project.org/pub/oss-lib/$OSS.tar.bz2 && tar -xvf $OSS.tar.bz2 
wget ftp://ftp.alsa-project.org/pub/plugins/$PLUGINS.tar.bz2 && tar -xvf $PLUGINS.tar.bz2 
wget ftp://ftp.alsa-project.org/pub/utils/$UTILS.tar.bz2 && tar -xjf $UTILS.tar.bz2 
wget ftp://ftp.alsa-project.org/pub/firmware/$FIRMWARE.tar.bz2 && tar -xjf $FIRMWARE.tar.bz2 
wget ftp://ftp.alsa-project.org/pub/lib/$LIB.tar.bz2 && tar -xjf $LIB.tar.bz2 
header "Downloading and extracting ALSA packages..."
wget ftp://ftp.alsa-project.org/pub/driver/$DRIVER.tar.bz2 && tar -xjf $DRIVER.tar.bz2 
===File hagistack_controller.sh, 67703625===
#sudo wget http://cloud-images.ubuntu.com/releases/quantal/release/ubuntu-12.10-server-cloudimg-amd64-disk1.img
#sudo wget http://uec-images.ubuntu.com/releases/11.10/release/ubuntu-11.10-server-cloudimg-amd64-disk1.img
#sudo mkdir /opt/virt/ubuntu12.10 ; cd /opt/virt/ubuntu12.10
#glance image-create --name="Ubuntu_11.10" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-11.10-server-cloudimg-amd64-disk1.img
#glance image-create --name="Ubuntu_12.10" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-12.10-server-cloudimg-amd64-disk1.img
#sudo mkdir /opt/virt/ubuntu11.10 ; cd /opt/virt/ubuntu11.10
#sudo wget http://cloud-images.ubuntu.com/releases/precise/release/ubuntu-12.04-server-cloudimg-amd64-disk1.img
sudo tar zxvf cirros-0.3.1-x86_64-uec.tar.gz
sudo wget http://download.cirros-cloud.net/0.3.1/cirros-0.3.1-x86_64-uec.tar.gz
sudo mkdir -p /opt/virt/cirros; cd /opt/virt/cirros;
#glance image-create --name="Ubuntu_13.04_LTS" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-13.04-server-cloudimg-amd64-disk1.img
#sudo wget http://cloud-images.ubuntu.com/releases/13.04/release/ubuntu-13.04-server-cloudimg-amd64-disk1.img
#sudo mkdir -p /opt/virt/ubuntu13.04 ; cd /opt/virt/ubuntu13.04
#sudo mkdir /opt/virt/ubuntu12.04 ; cd /opt/virt/ubuntu12.04
#glance image-create --name="Ubuntu_12.04_LTS" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-12.04-server-cloudimg-amd64-disk1.img
===File hagistack_controller_grizzly.sh, 67703796===
#sudo wget http://uec-images.ubuntu.com/releases/11.10/release/ubuntu-11.10-server-cloudimg-amd64-disk1.img
#glance image-create --name="Ubuntu_11.10" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-11.10-server-cloudimg-amd64-disk1.img
#sudo mkdir /opt/virt/ubuntu12.04 ; cd /opt/virt/ubuntu12.04
#sudo wget http://cloud-images.ubuntu.com/releases/quantal/release/ubuntu-12.10-server-cloudimg-amd64-disk1.img
#sudo wget http://cloud-images.ubuntu.com/releases/13.04/release/ubuntu-13.04-server-cloudimg-amd64-disk1.img
#sudo mkdir -p /opt/virt/ubuntu13.04 ; cd /opt/virt/ubuntu13.04
sudo tar zxvf cirros-0.3.1-x86_64-uec.tar.gz
sudo wget http://download.cirros-cloud.net/0.3.1/cirros-0.3.1-x86_64-uec.tar.gz
sudo mkdir -p /opt/virt/cirros; cd /opt/virt/cirros;
#sudo mkdir /opt/virt/ubuntu11.10 ; cd /opt/virt/ubuntu11.10
#glance image-create --name="Ubuntu_12.04_LTS" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-12.04-server-cloudimg-amd64-disk1.img
#sudo mkdir /opt/virt/ubuntu12.10 ; cd /opt/virt/ubuntu12.10
#glance image-create --name="Ubuntu_12.10" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-12.10-server-cloudimg-amd64-disk1.img
#sudo wget http://cloud-images.ubuntu.com/releases/precise/release/ubuntu-12.04-server-cloudimg-amd64-disk1.img
#glance image-create --name="Ubuntu_13.04_LTS" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-13.04-server-cloudimg-amd64-disk1.img
===File setup_agent.sh, 68381915===
        if [ $? -gt 0 ]
        wget -N -P /etc/yum.repos.d/ http://download.cloud.com/foss/fedora/cloud.repo
            then
            if [ $? -gt 0 ]
            yum install wget -y
        then
        fi
        if [ $? -gt 0 ]
                exit 1
                printf "failed to install wget"
        # download  the repo
        # download  the repo
        which wget
        if [ $? -gt 0 ]
        which wget
===File install.sh, 69810132===
echo "Install Apache httpd"
wget http://www.gtlib.gatech.edu/pub/apache//httpd/httpd-2.4.7.tar.gz
tar -zxf httpd-2.4.7.tar.gz
echo "Install zlib"
wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.33.tar.gz
#echo "INSTALL ICU"
tar -zxf apr-util-1.5.3.tar.gz
mv apr-1.5.0 httpd-2.4.7/srclib/apr
echo "Install pcre"
#tar -zxf icu4c-50_1-src.tgz
#wget http://download.icu-project.org/files/icu4c/50.1/icu4c-50_1-src.tgz
tar -zxf apr-1.5.0.tar.gz
wget http://zlib.net/zlib-1.2.8.tar.gz
tar -zxf zlib-1.2.8.tar.gz
tar -zxf pcre-8.33.tar.gz
wget http://artfiles.org/apache.org/apr/apr-util-1.5.3.tar.gz
wget http://artfiles.org/apache.org/apr/apr-1.5.0.tar.gz
===File install-gis.sh, 72839860===
# Install PROJ.4 -------------------------------------------------------------
wget http://download.osgeo.org/proj/proj-4.7.0.tar.gz &> /dev/null
wget http://download.osgeo.org/proj/proj-datumgrid-1.5.zip &> /dev/null
wget http://download.osgeo.org/geos/geos-3.3.0.tar.bz2 &> /dev/null
# Install GEOS ---------------------------------------------------------------
tar xjf geos-3.3.0.tar.bz2
# Install GDAL ---------------------------------------------------------------
tar xzf postgis-1.5.2.tar.gz
# Install PostGIS ------------------------------------------------------------
wget http://postgis.refractions.net/download/postgis-1.5.2.tar.gz &> /dev/null
# Install SQLite -------------------------------------------------------------
wget http://sqlite.org/sqlite-amalgamation-3.6.23.1.tar.gz &> /dev/null
tar xzf sqlite-amalgamation-3.6.23.1.tar.gz
tar xzf gdal-1.9.1.tar.gz
wget http://download.osgeo.org/gdal/gdal-1.9.1.tar.gz &> /dev/null
tar xzf proj-4.7.0.tar.gz
===File prepare.sh, 73621959===
wget -O bin/checkstyle http://algs4.cs.princeton.edu/linux/checkstyle
wget -O findbugs-2.0.1/findbugs.xml http://algs4.cs.princeton.edu/linux/findbugs.xml
chmod 700 bin/*
wget -O bin/findbugs http://algs4.cs.princeton.edu/linux/findbugs
wget -O lib/stdlib.jar http://algs4.cs.princeton.edu/code/stdlib.jar

wget http://algs4.cs.princeton.edu/linux/checkstyle.zip
wget -O lib/algs4.jar wget http://algs4.cs.princeton.edu/code/algs4.jar
wget http://algs4.cs.princeton.edu/linux/findbugs.zip
unzip checkstyle.zip
wget -O checkstyle-5.5/checkstyle.xml http://algs4.cs.princeton.edu/linux/checkstyle.xml
unzip findbugs.zip
===File ss-deploy.sh, 75059278===
wget --no-check-certificate -O /var/lib/jenkins/plugins/gerrit-trigger.hpi https://updates.jenkins-ci.org/latest/gerrit-trigger.hpi
wget --no-check-certificate -O /var/lib/jenkins/plugins/pmd.hpi https://updates.jenkins-ci.org/latest/pmd.hpi
then
	dpkg -i /opt/mod-pagespeed-beta_current_amd64.deb
	wget --no-check-certificate https://dl-ssl.google.com/dl/linux/direct/mod-pagespeed-beta_current_amd64.deb --output-document=/opt/mod-pagespeed-beta_current_amd64.deb
wget --no-check-certificate -O /var/lib/jenkins/plugins/git.hpi https://updates.jenkins-ci.org/latest/git.hpi
wget --no-check-certificate -O /var/lib/jenkins/plugins/git-parameter.hpi https://updates.jenkins-ci.org/latest/git-parameter.hpi
wget --user-agent="Mozilla/5.0 (X11; Linux x86_64)" --no-check-certificate $SSHKEYURL --output-document=/tmp/ss-ssh.pub
cat /tmp/ss-ssh.pub >> /root/.ssh/authorized_keys

wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add -
apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db
#set user agent string to bypass default mod_security rules
else
	wget --no-check-certificate https://dl-ssl.google.com/dl/linux/direct/mod-pagespeed-beta_current_i386.deb --output-document=/opt/mod-pagespeed-beta_current_i386.deb
	dpkg -i /opt/mod-pagespeed-beta_current_i386.deb
wget --no-check-certificate -O /var/lib/jenkins/plugins/performance.hpi https://updates.jenkins-ci.org/latest/performance.hpi
===File server.sh, 77831824===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File server.sh, 78177639===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File server.sh, 78769392===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File server.sh, 79036030===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File server.sh, 79295791===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File alsa-info.sh, 80084341===

		if [[ -z $PASTEBIN ]]; then
			dialog --backtitle "$BGTITLE" --msgbox "Could not automatically upload output to http://www.pastebin.ca.\nPossible reasons are:\n\n    1. Couldn't find 'wget' in your PATH\n    2. Your version of wget is less than 1.8.2\n\nPlease manually upload $NFILE to http://www.pastebin.ca/upload.php and submit your post." 25 100
		fi
		echo "    1. Couldnt find 'wget' in your PATH"
		else
		echo ""
		echo "    2. Your version of wget is less than 1.8.2"
if
#Test that wget is installed, and supports --post-file. Upload $FILE if it does, and prompt user to upload file if it doesnt. 
	{ for i in 10 20 30 40 50 60 70 80 90; do
			dialog --backtitle "$BGTITLE" --msgbox "Could not automatically upload output to http://www.alsa-project.org.\nPossible reasons are:\n\n    1. Couldn't find 'wget' in your PATH\n    2. Your version of wget is less than 1.8.2\n\nPlease manually upload $NFILE to http://www.alsa-project,org/cardinfo-db/ and submit your post." 25 100
then
WGET=$(which wget 2>/dev/null| sed 's|^[^/]*||' 2>/dev/null); [[ -n "${WGET}" ]] && [[ -x "${WGET}" ]] && [[ `wget --help |grep post-file` ]]
	wget -O - --tries=5 --timeout=60 --post-file=$FILE "http://www.alsa-project.org/cardinfo-db/" &>$TEMPDIR/wget.tmp || echo "Upload failed; exit"
if [[ -z $PASTEBIN ]]; then
		echo "Possible reasons are:"
===File server.sh, 80367754===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File server.sh, 80599227===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File server.sh, 80608881===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File proxy.sh, 80941493===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File proxy.sh, 81859391===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File vst-install-rhel.sh, 88000029===
else
if [ "$srv_type" = 'micro' ] ||  [ "$srv_type" = 'small' ]; then
if [ "$srv_type" = 'micro' ]; then
# Exim
wget $CHOST/$VERSION/exim.conf -O /etc/exim/exim.conf
    wget $CHOST/$VERSION/mysql.cnf -O /etc/my.cnf
chown root:named /etc/named.conf
wget $CHOST/$VERSION/named.conf -O /etc/named.conf
# Bind configuration
chkconfig vsftpd on
    if [ $? -ne 0 ]; then
        echo "Error: can't install wget"
        exit 1
    wget $CHOST/$VERSION/mysql-512.cnf -O /etc/my.cnf
fi
wget $CHOST/$VERSION/vsftpd.conf -O /etc/vsftpd/vsftpd.conf
# Vsftpd configuration
===File vst-install-debian.sh, 88000031===
rm -rf conf.d *.ext README
wget $CHOST/$VERSION/dovecot-conf.d.tar.gz
# Dovecot configuration
cd /etc/dovecot/
wget $CHOST/$VERSION/dovecot.conf -O /etc/dovecot/dovecot.conf
# Exim
wget $CHOST/$VERSION/exim4.conf.template -O /etc/exim4/exim4.conf.template
if [ "$srv_type" = 'micro' ] ||  [ "$srv_type" = 'small' ]; then
touch /etc/exim4/white-blocks.conf
wget $CHOST/$VERSION/spam-blocks.conf -O /etc/exim4/spam-blocks.conf
wget $CHOST/$VERSION/dnsbl.conf -O /etc/exim4/dnsbl.conf
# Bind configuration
sed -i "s%listen-on%//listen%" /etc/bind/named.conf.options
wget $CHOST/$VERSION/named.conf -O /etc/bind/named.conf
fi
===File vst-install-ubuntu.sh, 88000034===
wget $CHOST/$VERSION/dovecot.conf -O /etc/dovecot/dovecot.conf
# Dovecot configuration
cd /etc/dovecot/
wget $CHOST/$VERSION/dovecot-conf.d.tar.gz
rm -rf conf.d *.ext README
if [ "$srv_type" = 'micro' ] ||  [ "$srv_type" = 'small' ]; then
touch /etc/exim4/white-blocks.conf
# Exim
wget $CHOST/$VERSION/dnsbl.conf -O /etc/exim4/dnsbl.conf
fi
wget $CHOST/$VERSION/exim4.conf.template -O /etc/exim4/exim4.conf.template
wget $CHOST/$VERSION/named.conf -O /etc/bind/named.conf
# Bind configuration
wget $CHOST/$VERSION/spam-blocks.conf -O /etc/exim4/spam-blocks.conf
sed -i "s%listen-on%//listen%" /etc/bind/named.conf.options
===File vst-install-rhel.sh, 88687735===
else
if [ "$srv_type" = 'micro' ] ||  [ "$srv_type" = 'small' ]; then
if [ "$srv_type" = 'micro' ]; then
# Exim
wget $CHOST/$VERSION/exim.conf -O /etc/exim/exim.conf
    wget $CHOST/$VERSION/mysql.cnf -O /etc/my.cnf
chown root:named /etc/named.conf
wget $CHOST/$VERSION/named.conf -O /etc/named.conf
# Bind configuration
chkconfig vsftpd on
    if [ $? -ne 0 ]; then
        echo "Error: can't install wget"
        exit 1
    wget $CHOST/$VERSION/mysql-512.cnf -O /etc/my.cnf
fi
wget $CHOST/$VERSION/vsftpd.conf -O /etc/vsftpd/vsftpd.conf
# Vsftpd configuration
===File vst-install-debian.sh, 88687739===
rm -rf conf.d *.ext README
wget $CHOST/$VERSION/dovecot-conf.d.tar.gz
# Dovecot configuration
cd /etc/dovecot/
wget $CHOST/$VERSION/dovecot.conf -O /etc/dovecot/dovecot.conf
# Exim
wget $CHOST/$VERSION/exim4.conf.template -O /etc/exim4/exim4.conf.template
if [ "$srv_type" = 'micro' ] ||  [ "$srv_type" = 'small' ]; then
touch /etc/exim4/white-blocks.conf
wget $CHOST/$VERSION/spam-blocks.conf -O /etc/exim4/spam-blocks.conf
wget $CHOST/$VERSION/dnsbl.conf -O /etc/exim4/dnsbl.conf
# Bind configuration
sed -i "s%listen-on%//listen%" /etc/bind/named.conf.options
wget $CHOST/$VERSION/named.conf -O /etc/bind/named.conf
fi
===File vst-install-ubuntu.sh, 88687746===
wget $CHOST/$VERSION/dovecot.conf -O /etc/dovecot/dovecot.conf
# Dovecot configuration
cd /etc/dovecot/
wget $CHOST/$VERSION/dovecot-conf.d.tar.gz
rm -rf conf.d *.ext README
if [ "$srv_type" = 'micro' ] ||  [ "$srv_type" = 'small' ]; then
touch /etc/exim4/white-blocks.conf
# Exim
wget $CHOST/$VERSION/dnsbl.conf -O /etc/exim4/dnsbl.conf
fi
wget $CHOST/$VERSION/exim4.conf.template -O /etc/exim4/exim4.conf.template
wget $CHOST/$VERSION/named.conf -O /etc/bind/named.conf
# Bind configuration
wget $CHOST/$VERSION/spam-blocks.conf -O /etc/exim4/spam-blocks.conf
sed -i "s%listen-on%//listen%" /etc/bind/named.conf.options
===File install.sh, 70078646===
cd /tmp/smbexec-inst
	for i in $reqs; do
	
	reqs="autoconf cmake g++ gcc python-dev wget xterm"
	echo -e "\n\e[1;33m[*] The Metasploit installer will walk you through the rest of the process\e[0m"
	wget http://downloads.metasploit.com/data/releases/metasploit-latest-linux-x64-installer.run -O /tmp/smbexec-inst/metasploit-latest-linux-x64-installer.run
echo -e "\n\e[1;33m[*] Downloading nmap-6.0.1 from nmap.org, this may take a while to complete\e[0m"
wget http://nmap.org/dist/nmap-6.25.tgz -O /tmp/smbexec-inst/nmap-6.25.tgz
	tar -zxf /tmp/smbexec-inst/libesedb-alpha-20120102.tar.gz -C /tmp/smbexec-inst/
	wget http://libesedb.googlecode.com/files/libesedb-alpha-20120102.tar.gz -O /tmp/smbexec-inst/libesedb-alpha-20120102.tar.gz
	sleep 2
	wget http://downloads.metasploit.com/data/releases/metasploit-latest-linux-installer.run -O /tmp/smbexec-inst/metasploit-latest-linux-installer.run
	echo -e "\n\e[1;33m[*] The Metasploit installer will walk you through the rest of the process\e[0m"
else
if [ $(uname -m) == "x86_64" ]; then
===File prepare-wine.sh, 70726642===
wine pywin32.exe
#wget -q -O zbar.exe "http://sourceforge.net/projects/zbar/files/zbar/0.10/zbar-0.10-setup.exe/download"
wget -O python.msi "$PYTHON_URL"
# Install Python
wine PyQt.exe
wget -O pywin32.exe "$PYWIN32_URL"
# Install PyWin32
# Install PyQt4
msiexec /q /i python.msi
wget -O pyinstaller.zip "$PYINSTALLER_URL"
#wine zbar.exe
# Install ZBar
unzip pyinstaller.zip
# Install pyinstaller
wget -O PyQt.exe "$PYQT4_URL"
===File oab-java.sh, 72737445===
    echo "  cd ~/"
    if [ "${JAVA_UPSTREAM}" == "sun-java6" ]; then
pid=$!;progress $pid
    echo "  wget https://github.com/flexiondotorg/oab-java6/raw/${VER}/`basename ${0}` -O `basename ${0}`"
    else
ncecho " [x] Getting current release download page "
wget http://www.oracle.com/${DOWNLOAD_INDEX} -O /tmp/oab-download.html >> "$log" 2>&1 &
pid=$!;progress $pid
    fi
        wget http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-javase6-419409.html -O /tmp/oab-download.html >> "$log" 2>&1 &
ncecho " [x] Getting Java SE download page "
wget "http://www.oracle.com/technetwork/java/javase/downloads/index.html" -O /tmp/oab-index.html >> "$log" 2>&1 &
ncecho " [x] Downloading ${JCE_POLICY} : ${DOWNLOAD_SIZE} "
wget --no-check-certificate --header="Cookie: ${COOKIES}" -c "${DOWNLOAD_URL}" -O ${WORK_PATH}/pkg/${JCE_POLICY} >> "$log" 2>&1 &
pid=$!;progress_loop $pid
    echo "  chmod +x `basename ${0}`"
        wget http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-javase7-521261.html -O /tmp/oab-download.html >> "$log" 2>&1 &    
===File oab-java.sh, 73171066===
    echo "  cd ~/"
    echo "  wget https://github.com/flexiondotorg/oab-java6/raw/${VER}/`basename ${0}` -O `basename ${0}`"
wget "http://www.oracle.com/technetwork/java/javase/downloads/index.html" -O /tmp/oab-index.html >> "$log" 2>&1 &
    if [ "${JAVA_UPSTREAM}" == "sun-java6" ]; then
        wget http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-javase6-419409.html -O /tmp/oab-download.html >> "$log" 2>&1 &
    else
        wget http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-javase7-521261.html -O /tmp/oab-download.html >> "$log" 2>&1 &    
    fi
pid=$!;progress $pid
    echo "  chmod +x `basename ${0}`"
ncecho " [x] Getting current release download page "
    ncecho " [x] Downloading ${JAVA_BIN} : ${DOWNLOAD_SIZE} "
wget http://www.oracle.com/${DOWNLOAD_INDEX} -O /tmp/oab-download.html >> "$log" 2>&1 &
    wget --no-check-certificate --header="Cookie: ${COOKIES}" -c "${DOWNLOAD_URL}" -O ${WORK_PATH}/pkg/${JAVA_BIN} >> "$log" 2>&1 &
pid=$!;progress $pid
ncecho " [x] Getting Java SE download page "
    pid=$!;progress_loop $pid
===File sync-hg-blocklist.sh, 74407406===
    if [ ! -s "blocklist_hg.xml" -o "${XML_HEADER}" != "${HG_HEADER}" ]; then
        exit 1
HG=hg
DIFF=diff
        exit 1
        echo "AMO blocklist does not appear to be an XML file. wget error?"
    if [ ! -s "blocklist_amo.xml" -o "${XML_HEADER}" != "${AMO_HEADER}" ]; then
    WGET_STATUS=$?
    if [ ${WGET_STATUS} != 0 ]; then
        echo "HG blocklist does not appear to be an XML file. wget error?"
    ${WGET} --no-check-certificate -O version.txt ${VERSION_URL_HG}
WGET=wget
    rm -f version.txt
        echo "ERROR wget exited with a non-zero exit code: $WGET_STATUS"
        return ${WGET_STATUS}
===File proxy.sh, 77830711===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File proxy.sh, 78177072===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File proxy.sh, 78768156===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File proxy.sh, 79034877===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File proxy.sh, 79294420===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File proxy.sh, 80367010===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File proxy.sh, 80598218===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File proxy.sh, 80607882===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File emulators.shinc, 83488966===
    tar xvfz libspectrum-1.0.0.tar.gz
    wget -O fbzx-2.10.0.tar.bz2 http://www.rastersoft.com/descargas/fbzx-2.10.0.tar.bz2
    pushd $rootdir/emulators/
    pushd "$rootdir/emulators/zxspectrum"
    tar xvfj fbzx-2.10.0.tar.bz2
    tar -xvzf vice-1.5-roms.tar.gz
    wget http://apt.duke4.net/pool/main/d/duke3d-shareware/duke3d-shareware_1.3d-23_all.deb 
    printMsg "Downloading eDuke32 Shareware files"
    wget http://repo.berryboot.com/eduke32_2.0.0rpi+svn2789_armhf.deb       
    printMsg "Downloading eDuke core"
    printMsg "Retrieving Commodore 64 ROMs"
    wget http://downloads.sourceforge.net/project/fuse-emulator/fuse/1.0.0.1a/fuse-1.0.0.1a.tar.gz
    wget http://www.zimmers.net/anonftp/pub/cbm/crossplatform/emulators/VICE/old/vice-1.5-roms.tar.gz
    if [[ ! -f "$rootdir/emulators/eduke32/eduke32_2.0.0rpi+svn2789_armhf.deb" ]]; then
    wget ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/unix/libspectrum-1.0.0.tar.gz
===File proxy.sh, 89053406===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8081/' http://127.0.0.1:8000/script.js > OUT
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/http:\/\/127.0.0.1:8000\//g' | diff --strip-trailing-cr - OUT
  wait $proxy_server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $origin_server_pid

wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/index.html | diff recursive/index.html -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/style.css | diff recursive/style.css -
wget -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/unix.txt | diff recursive/unix.txt -

shutdown() {
===File server.sh, 89053790===
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8082/1/1.js | diff --strip-trailing-cr recursive/1/1.js -

wget -q -O- http://127.0.0.1:8082/script.js > OUT
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget -q -O- http://127.0.0.1:8082/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -

wget -q -O- http://127.0.0.1:8081/1/1.js | diff --strip-trailing-cr recursive/1/1.js -
cat ../report.js recursive.expected/script.js | sed 's/@PREFIX@/\//g' | diff --strip-trailing-cr - OUT
wget -q -O- http://127.0.0.1:8081/script.js > OUT


wget -q -O- http://127.0.0.1:8081/1/2/2.js | diff --strip-trailing-cr recursive/1/2/2.js -
===File googlevoice.sh, 14675140===
rm -f ${cookie_file}
WGET="wget -q -O - --load-cookies=${cookie_file} --save-cookies=${cookie_file} --keep-session-cookies"


${WGET} ${logout_url} > /dev/null

if [ -z ${galx} ]; then
galx=`${WGET} ${login_url} | ${SED} "N;s/^.*${galx_exp}.*$/\1/p"`
SED="sed -r -n"
${WGET} --post-data=${data} ${login_url} > /dev/null
data="Email=${user}&Passwd=${password}&GALX=${galx}&rmShown=1&service=grandcentral"
data="outgoingNumber=${number}&forwardingNumber=${forward}&_rnr_se=${rnr}&phoneType=2"
if [ -z ${status} ] || [ ${status} != "0" ]; then
status=`${WGET} --post-data=${data} ${call_url} | ${SED} "s/^.*${status_exp}.*$/\1/p"`

===File shellbot-src.sh, 14843708===
                Reply "The name of your ${dick} is ${page}"
                ;;
                    "$(pacman -Q dash), GNU $(pacman -Q coreutils), GNU $(pacman -Q sed), $(pacman -Q socat), $(pacman -Q wget), $(pacman -Q grep)"
            wprandom)
                page=$(wget -qO - 'http://en.wikipedia.org/wiki/Special:Random' | grep '<title>' | sed 's/<title>//;s/ - Wikipedia.*//' | sed "s:%:%25:g;s:&:%26:g;s:+:%2b:g;s:;:%3b:g;s: :_:g")
                Reply "http://en.wikipedia.org/wiki/$page"
                title=$(echo "$data" | tr '}' '\n' | sed "s/.*,\"titleNoFormatting//;s/\":\"//;s/\",.*//;s/\\u0026/'/g;s/\\\//g;s/#39\;//g;s/'amp;/\&/g" | head -1)
                query=$(echo "$@" | sed "s:%:%25:g;s:&:%26:g;s:+:%2b:g;s:;:%3b:g;s: :+:g")
                data=$(wget -qO - "https://ajax.googleapis.com/ajax/services/search/web?v=1.0&q=$query")
                if [ -z "$tube" ];then
                    "$(uname -srmpio)" \
                #Reply "id $id"
                tube=$(wget -qO - "http://gdata.youtube.com/feeds/api/videos/${id}?v=2" | tr -d '\n')
                page=$(wget -qO - 'http://en.wikipedia.org/wiki/Special:Random' | grep '<title>' | sed 's/<title>//;s/ - Wikipedia.*//')
                dick=$(echo "$dicks" | tr ' ' '\n' | shuf | head -1)
===File doit.sh, 14970356===
wget -c 'http://www.fileformat.info/info/unicode/category/Lm/list.htm?mode=print' -O uc-lm.htm
wget -c 'http://www.fileformat.info/info/unicode/category/Lt/list.htm?mode=print' -O uc-lt.htm
wget -c 'http://www.fileformat.info/info/unicode/category/Nl/list.htm?mode=print' -O uc-nl.htm
wget -c 'http://www.fileformat.info/info/unicode/category/Lo/list.htm?mode=print' -O uc-lo.htm


wget -c 'http://www.fileformat.info/info/unicode/category/Ll/list.htm?mode=print' -O uc-ll.htm
wget -c 'http://www.fileformat.info/info/unicode/category/Lu/list.htm?mode=print' -O uc-lu.htm
===File GoearBestMatch.sh, 15021620===
	# Download the metadata from goear in a XML

	mp3url=`echo $infoline | cut -d '"' -f 6`
	infoline=`wget -qO- "http://www.goear.com/tracker758.php?f=$songId" | grep ".mp3"`

}
	wget -O "$songTitle $artist.mp3" -q $mp3url 
	echo "Downloading the song $songTitle FROM $artist"
# Limit wget bandwidth 
	wget -qO $search http://www.goear.com/search.php?q=$searchPattern
	search=`tempfile`
# Use random User-agent and referrer
	wget -qO $search "http://www.goear.com/search.php?q=$searchPattern&p=1"
	cat $search | egrep -o 'class="b1">[^<]*</a>' | cut -f 2 -d '>' | cut -f 1 -d '<' >> $songTitles
 	# We will search in the first 2 result pages. We don't check if a second page exists, it doesn't matter
===File freebsd, 15350797===
if [ -e "${couchpotato_conf}" ]; then

if [ ! -x "${WGET}" ]; then
WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown CouchPotato.

  exit 1
# Check for wget and refuse to start without it.
    ${WGET} -O - -q "http://${HOST}:${PORT}/api/${CPAPI}/app.shutdown/" >/dev/null
    verify_couchpotato_pid
  warn "couchpotato not started: You need wget to safely shut down CouchPotato."
    if [ -n "${pid}" ]; then
===File installEssentialsInUbuntu12.04.sh, 15370170===
wget -O wallpapers.zip http://ubuntuone.com/5EI2LpTImJIUrycLrFPymR
sudo wget https://launchpad.net/~pidgin-developers/+archive/ppa/+files/pidgin-ppa_0.0.7_all.deb
sudo dpkg -i pidgin-ppa_0.0.7_all.deb
cd /tmp/installEssentials/
sudo dpkg -i skype-ubuntu_2.2.0.35-1_amd64.deb
sudo dpkg -i google-chrome-stable_current_amd64.deb
cd /tmp/installEssentials/
sudo wget http://download.skype.com/linux/skype-ubuntu_2.2.0.35-1_amd64.deb
cd /tmp/installEssentials/
sudo echo "deb http://download.virtualbox.org/virtualbox/debian $(lsb_release -sc) contrib" | sudo tee /etc/apt/sources.list.d/virtualbox.list
sudo apt-get -y update
sudo wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
unzip -d ~/Pictures/ wallpapers.zip
cd /tmp/installEssentials/
sudo wget http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc -O- | sudo apt-key add -
===File getbyext.sh, 15803274===
            wget --quiet $auth -c -U "$uagent" --referer="$referer" "$link" -O "$dir$file" ${wgetargs[*]} 2>> "$errorlogfile"
            p_err2 "wget --quiet $auth -c -U \"$uagent\" --referer=\"$referer\" \"$link\" -O \"$dir$file\" ${wgetargs[*]}"
          if [ $errorlog -gt 0 ]; then
    [ -z "$2" ] && p_err "parsing args" && exit 1
    shift 2
          else
  $PROG -e tar,bz2 -m _src http://pkg.bar/packages.html
  $PROG -a --stdout http://some.url | uniq | xargs wget-mp -d
# Fetch all direct linked media files (e.g. mp3/jpg) from a given URL
    wgetargs=(${wgetargs[*]} --load-cookies $2)

# using wget, or another tool (link output possible).
EOF
    shift 2
    wgetargs=(${wgetargs[*]} --post-data="$2")
    [ -z "$2" ] && p_err "parsing args" && exit 1
===File smfetch.sh, 15803278===
  #"${WGET_CMD_BG[@]}" -O "$l_metafile" "http://player.vimeo.com/config/${l_id}.smil" || return 1
  "${WGET_CMD_BG[@]}" -O "$l_metafile" "http://player.vimeo.com/config/${l_id}" || return 1

  "${WGET_CMD_BG[@]}" -O "$l_metafile" "http://www.zdf.de/ZDFmediathek/xmlservice/web/beitragsDetails?id=${l_id}" || return 1
  prt_dbg 1 "$l_service | fetching meta file, lang = $l_lang, meta file = $l_metafile"
  "${WGET_CMD_BG[@]}" -O "$l_metafile" "$l_id" \
    || return 1

  prt_dbg 1 "$l_service | fetching 2nd meta file containing rtmp uri"
  # var...profiles":{"h264":{"hd":113,"sd":112,"mobile":116}},"smil":{"url":"http:\/\/player.vimeo.com\/config\/39275532.smil","qualities":["hd","sd","mobile"]}},...
# but it works only with core utilities, awk, wget and rtmpdump.
# individual media libraries (tv stations etc.). It may not be very pretty,

    awk '/<formitaet.*h264_aac_mp4_rtmp_zdfmeta_http/,/\/formitaet/ {ORS=\"\";gsub(/<\/formitaet>/, \"</formitaet>\n\"); print}' |\
  l_rtmp=$("${WGET_CMD_BG[@]}" -O - "`cat \"$l_metafile\" |\
===File EasyHadoop.sh, 15876603===
	echo "-------------config hosts----------------"
	cat hosts >> /etc/hosts
	wget http://221.238.27.164/hadoop/hadoop-gpl-packaging-0.2.8-1.x86_64.rpm
	wget http://221.238.27.164/hadoop/hadoop-0.20.203.0.tar.gz


	wget http://221.238.27.164/hadoop/lzop-1.03.tar.gz
	wget http://221.238.27.164/hadoop/lzo-2.06.tar.gz
	wget http://221.238.27.164/hadoop/jdk-6u21-linux-amd64.rpm
	wget http://221.238.27.164/hadoop/hosts
===File mycode_extract_renren_music.sh, 16438419===
	wget --load-cookies cookies.txt --save-cookies cookies.txt --keep-session-cookies -O musicbox -o log "http://music.renren.com/musicbox"
fi
	wget --save-cookies cookies.txt --keep-session-cookies  --post-data "email=$1&password=$2" -O home -o log "http://www.renren.com/PLogin.do"
if [ "$1" != "-f" ]; then
	wget --save-cookies cookies.txt --keep-session-cookies  --post-data "`cat $2`" -O home -o log "http://www.renren.com/PLogin.do"
else
if [ "$3" = "" ]; then
	fi
		wget --load-cookies cookies.txt --save-cookies cookies.txt --keep-session-cookies -O "$4" $mp3_src
	else
		wget --load-cookies cookies.txt --save-cookies cookies.txt --keep-session-cookies -O renren.mp3 $mp3_src
	wget --load-cookies cookies.txt --save-cookies cookies.txt --keep-session-cookies -O musicbox "music.renren.com/musicbox?tab=1&autoPlay=true&songId=$3"
fi
else
	if [ "$4" = "" ]; then
===File mycode_erm.sh, 16438425===
	wget --load-cookies cookies.txt --save-cookies cookies.txt --keep-session-cookies -O musicbox -o log "http://music.renren.com/musicbox"
fi
	wget --save-cookies cookies.txt --keep-session-cookies  --post-data "email=$1&password=$2" -O home -o log "http://www.renren.com/PLogin.do"
if [ "$1" != "-f" ]; then
	wget --save-cookies cookies.txt --keep-session-cookies  --post-data "`cat $2`" -O home -o log "http://www.renren.com/PLogin.do"
else
if [ "$3" = "" ]; then
	fi
		wget --load-cookies cookies.txt --save-cookies cookies.txt --keep-session-cookies -O "$4" $mp3_src
	else
		wget --load-cookies cookies.txt --save-cookies cookies.txt --keep-session-cookies -O renren.mp3 $mp3_src
	wget --load-cookies cookies.txt --save-cookies cookies.txt --keep-session-cookies -O musicbox "music.renren.com/musicbox?tab=1&autoPlay=true&songId=$3"
fi
else
	if [ "$4" = "" ]; then
===File run.sh, 16736330===

  apt-get install -y wget $readline
  wget http://rubyenterpriseedition.googlecode.com/files/$ree
  dpkg -i $ree
  
function install_rubygems() {
  tar xfpz rubygems-$CONFIG_RUBYGEMS.tgz
  wget http://production.cf.rubygems.org/rubygems/rubygems-$CONFIG_RUBYGEMS.tgz
  fi

  tar xvzf ruby-1.9.3-$patch.tar.gz
  wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-$patch.tar.gz
  wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.2-$patch.tar.gz
  tar xvzf ruby-1.9.2-$patch.tar.gz

===File setup_iphone.sh, 17245604===
wget http://www.syshalt.net/pub/iphone/gcc-iphone/fake-libgcc_1.0_iphoneos-arm.deb

apt-get install iphone-gcc
dpkg ?i fake-libgcc_1.0_iphoneos-arm.deb
tar -xvzf sdk-2.0-headers.tar.gz
wget http://www.syshalt.net/iphone/gcc-iphone/sdk-2.0-headers.tar.gz
#mkdir $SBT_HOME
tar -xvzf gcc_files.tar.gz
wget http://simple-build-tool.googlecode.com/files/sbt-launch-0.7.4.jar -O $SBT_HOME/sbt-launch.jar
echo 'java -server -XX:+UseParallelGC -XX:+DoEscapeAnalysis -XX:+UseCompressedOops -Xmx512M -jar' $SBT_HOME'/sbt-launch.jar "$@"' > $SBT_HOME/sbt
export MAVEN_VERSION=2.2.1
wget ftp://ftp.inria.fr/pub/Apache//maven/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz
tar zxvf apache-maven-$MAVEN_VERSION-bin.tar.gz
cd ..
wget http://www.syshalt.net/iphone/gcc-iphone/gcc_files.tar.gz
===File crawl.maven.release.dist.sh, 25293468===
cd solr
wget -r -np -l 0 -nH -erobots=off --cut-dirs=8 \
        | perl -ne '$url=$1 if (/Location:\s*(\S+)/); END { print "$url" if ($url); }'`
RC_URL=`(echo "Location: $1" ; wget -l 1 --spider "$1" 2>&1) \
wget -r -np -l 0 -nH -erobots=off --cut-dirs=8 \
     --reject="*.md5,*.sha1,maven-metadata.xml*,index.html*" "${RC_URL}/lucene/maven/"
cd lucene
     --reject="*.md5,*.sha1,maven-metadata.xml*,index.html*" "${RC_URL}/solr/maven/"
# Resolve redirects, e.g. from URL shortening, e.g. http://s.apache.org/lusolr36rc1
===File pacman.sh, 26017093===
gunzip *.gz
do
done
  wget $UBUNTU/$v-updates/$PACKAGES -O $DATE-$v-updates.txt.gz
wget $DEBIAN/stable/$PACKAGES -O $DATE-squeeze.txt.gz

  wget $UBUNTU/$v/$PACKAGES -O $DATE-$v.txt.gz
===File build-guestkernel, 26021976===
check_commands bunzip2 bzcat make wget

	execute "wget -q $url"
fi
fi
	log_action "Downloading $url"
	execute "wget -q $url"
	log_action "Downloading $url"

===File ciabot.sh, 26057769===
# Use this only if your hosting site forbids Python hooks.
#
# It requires: git(1), hostname(1), cut(1), sendmail(1), and wget(1).
longurl=${urlprefix}${merged}
url=$(wget -O - -q http://tinyurl.com/api-create.php?url=${longurl} 2>/dev/null)
# less space on the IRC notification line. Some repo sites (I'm looking at
# you, berlios.de!) forbid wget calls for security reasons.  On these,
# the code will fall back to the full un-tinyfied URL.
if [ -z "$url" ]; then
===File install-pkgs.sh, 26201240===
else
  wget -i pkg-paths.txt -o ../wget-output.txt
echo
echo "#### Downloads Complete! Please check wget-output.txt for any errors that may have been encountered! ####"

  cat pkg-paths.txt
===File check-tor, 26332043===
fi
lines=$( wget -q $dirserver --proxy=off -O - | grep -A5 '^router '"$router"' ' )

line=$( echo "$lines" | head -n1 )
	timeout 5 wget --proxy=off -O - http://$ipop/tor/ | head -n3
	echo ">>" wget --proxy=off -O - http://$ipop/tor/
	echo
===File sd, 26332055===
# It currently uses the v2 dir information and not the v3 consensus by default.
# It requires wget, perl, awk to function properly. This is based on a zsh
# dotfile from weasel and adapted to be a small bash utility.
then
	awk '$1 == "r" && $2 == "'$nickname'" {printf "%s===", $3}' | \
fp=`wget -q -O - $authority | \
# Fetch it and decode the fingerprint 
	exit $?;	
	wget -q -O - http://tor.noreply.org:80/tor/server/fp/$fp;
===File ciabot.sh, 26462737===
# Use this only if your hosting site forbids Python hooks.
#
# It requires: git(1), hostname(1), cut(1), sendmail(1), and wget(1).
longurl=${urlprefix}${merged}
url=$(wget -O - -q http://tinyurl.com/api-create.php?url=${longurl} 2>/dev/null)
# less space on the IRC notification line. Some repo sites (I'm looking at
# you, berlios.de!) forbid wget calls for security reasons.  On these,
# the code will fall back to the full un-tinyfied URL.
if [ -z "$url" ]; then
===File get-cygwin-deps.sh, 26595654===

commands="wget unzip automake autoconf libtool make bison"
fi
	wget -P $dir http://sourceforge.net/projects/mingw/files/MinGW/libiconv/libiconv-1.13/libiconv-1.13-mingw32-dev.tar.gz/download
if [ ! -f $dir/libiconv-1.13-mingw32-dev.tar.gz ]; then
fi
if [ ! -f $dir/gettext-runtime-0.17-1.zip ]; then
	wget -P $dir http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/gettext-runtime-0.17-1.zip

===File update.sh, 26708207===
    exit 1
    echo "Neither curl nor wget found. Please install one of these."
  else
    wget "${CDS_FULL_URL}" -O "${CDS_OUTPUT}" || rm -rf "${CDS_OUT_DIR}"
  elif which wget > /dev/null; then
        rm -rf "${CDS_OUT_DIR}"
===File getpages.sh, 26762088===
	cd $CLEANURL
	FILENAME=$(grep "saved" outputlog.txt | head -1 | sed -e "s/.*\`\(.*\)\'.*/\1/")
	../../wget-1.10-css-parser/src/wget -p -k -H -E -erobots=off --no-check-certificate -U "Mozilla/5.0 (firefox)" --restrict-file-names=windows $URL -o outputlog.txt
	#figure out where/what the index file for this page is from the wget output log
===File wallhaven_parallel.sh, 64008869===
    favnumber="$(wget -q --keep-session-cookies --load-cookies=cookies.txt --referer=alpha.wallhaven.cc http://alpha.wallhaven.cc/favorites -O - | grep -A 1 "<span>Favorites</span>" | grep -B 1 "<small>" | sed -n '2{p;q}' | sed 's/.\{9\}$//' | sed 's .\{23\}  ')"
    for (( count= 0, page=1; count< "$WPNUMBER" && count< "$favnumber"; count=count+"64", page=page+1 ));
    # currently using sum of all collections
    # everythings ok --> login
        cat download.txt | parallel --no-notice wget -q --keep-session-cookies --load-cookies=cookies.txt --referer=alpha.wallhaven.cc http://alpha.wallhaven.cc/wallpaper/{}
        cat download.txt | parallel --no-notice "cat {} | egrep -o 'http://alpha.wallhaven.cc/wallpapers.*(png|jpg|gif)' | wget -q --keep-session-cookies --load-cookies=cookies.txt --referer=http://alpha.wallhaven.cc/wallpaper/{} -i -"
        rm tmp $(cat download.txt) download.txt
} # /login
    wget -q --load-cookies=cookies.txt --keep-session-cookies --save-cookies=cookies.txt --referer=http://alpha.wallhaven.cc/auth/login --post-data="_token=$token&username=$USER&password=$PASS" http://alpha.wallhaven.cc/auth/login
    wget -q --keep-session-cookies --save-cookies=cookies.txt --referer=http://alpha.wallhaven.cc http://alpha.wallhaven.cc/auth/login
    token="$(cat login | grep 'name="_token"' | sed  's .\{180\}  ' | sed 's/.\{16\}$//')"
		printf "arg1:	 parameters for the wget -q command\n\n"
		printf "press any key to exit\n"
        done
		printf "getPage expects at least 1 argument\n"
===File wallhaven.sh, 64008870===
    favnumber="$(wget -q --keep-session-cookies --load-cookies=cookies.txt --referer=alpha.wallhaven.cc http://alpha.wallhaven.cc/favorites -O - | grep -A 1 "<span>Favorites</span>" | grep -B 1 "<small>" | sed -n '2{p;q}' | sed 's/.\{9\}$//' | sed 's .\{23\}  ')"
    for (( count= 0, page=1; count< "$WPNUMBER" && count< "$favnumber"; count=count+"64", page=page+1 ));
    # currently using sum of all collections
    # everythings ok --> login
        printf "getPage expects at least 1 argument\n"
} # /login
    wget -q --load-cookies=cookies.txt --keep-session-cookies --save-cookies=cookies.txt --referer=http://alpha.wallhaven.cc/auth/login --post-data="_token=$token&username=$USER&password=$PASS" http://alpha.wallhaven.cc/auth/login
    wget -q --keep-session-cookies --save-cookies=cookies.txt --referer=http://alpha.wallhaven.cc http://alpha.wallhaven.cc/auth/login
    token="$(cat login | grep 'name="_token"' | sed  's .\{180\}  ' | sed 's/.\{16\}$//')"
        printf "arg1:    parameters for the wget -q command\n\n"
        printf "press any key to exit\n"
				cat $number | egrep -o "http://alpha.wallhaven.cc/wallpapers.*(png|jpg|gif)" | wget -q --keep-session-cookies --load-cookies=cookies.txt --referer=http://alpha.wallhaven.cc/wallpaper/$number -i -
				rm $number	
				echo $number >> downloaded.txt
				wget -q --keep-session-cookies --load-cookies=cookies.txt --referer=alpha.wallhaven.cc $img
===File add-apt-sources, 64893811===
	  wget -q http://download.virtualbox.org/virtualbox/debian/sun_vbox.asc -O- | sudo apt-key add -
      sudo apt-get update
    wget -q http://packages.medibuntu.org/medibuntu-key.gpg -O- | sudo apt-key add - && sudo apt-get update
    fi
        wget -q http://deb.mulx.net/pol.gpg -O- | sudo apt-key add - && sudo apt-get update
else
        echo -e "#the source of PlayOnLinux (Lazyscripts 新增)\ndeb http://deb.mulx.net/ $DISTRIB_CODENAME main" | sudo tee -a /etc/apt/sources.list
    echo -e "#the source of Medibuntu (Lazyscripts 新增)\ndeb http://packages.medibuntu.org/ $DISTRIB_CODENAME free non-free" | sudo tee -a /etc/apt/sources.list
      wget -q http://apt.wicd.net/wicd.gpg -O- | sudo apt-key add -
      fi
      sudo apt-get update
else
    echo -e "#the source of WineHQ Apt  (Lazyscripts 新增)\ndeb http://wine.budgetdedicated.com/apt $DISTRIB_CODENAME main" | sudo tee -a /etc/apt/sources.list
    wget -q http://wine.budgetdedicated.com/apt/387EE263.gpg -O- | sudo apt-key add - && sudo apt-get update
    else 
===File bashpodder-cng-0.5.shell, 64987683===

# Read the bp.conf file and wget any url not already in the 
fetchlist='bp.conf' # default is bp.conf; can change name to other file
		# File names longer than 255 characters break wget, this should
		# fix that.
		# Added Christian Daven's wget switches
		if [ -n "$verbose" ]; then echo "Fetching $realurl...";fi
    		then
wget_quiet='' # default: -q is quiet, can remove the -q to get output

# podcast.log file:
	sed -n 's/.*url="\([^"]*\)".*/\1/p')
	file=$(wget -q $podcast -O - | tr '\r' '\n' | tr \' \" | \
	xsltproc parse_enclosure.xsl - 2> /dev/null) || \
	file=$(wget -q $podcast -O - | \
	if [ -n "$verbose" ]; then echo "Checking "$podcast; fi
===File ndistro, 65554419===
# wget support
which wget > /dev/null && GET="wget -q -O-" && GET_CMD="wget"


  fi

test -z "$GET" && abort "curl or wget required"

# Ensure we have curl or wget

  else
    return $(wget -q --spider -S "$1" 2>&1 | sed -n -e 's/^  HTTP\/1\.[01] \([0-9]*\) .*$/\1/p' | sed -n '$p')
===File roo-deploy.sh, 65984501===
        l_error "wget failed: $@ (returned code $EXITED)" >&2; exit 1;
    fi
    EXITED=$?
    if [[ ! "$EXITED" = "0" ]]; then
    fi
    wget $WGET_OPTS --retry-connrefused --tries=30 -O /tmp/rootest/wget.html $@
    sha1sum, zip, unzip and other common *nix commands
    mvn and wget (only required if using -t or -T)
    ~/.m2/settings.xml contains a <gpg.passphrase> for the GPG key
    WGET_OPTS="-q"
    $MVN_CMD -e -B -Dmaven.tomcat.port=8888 tomcat:run &>/dev/null 2>&1 &
	
    wget --retry-connrefused --tries=30 --header 'Accept: application/json' --quiet http://localhost:8888/pizzashop/bases 2>&1

        WGET_OPTS="-v"
    if [ "$VERBOSE" = "1" ]; then
===File apt-nyaa, 67161835===
    echo "You can install:"
  exit 0
  sudo apt-get --assume-yes install wget > /dev/null 2>&1 && cd /usr/bin/ && sudo wget -Nq https://raw.github.com/nyaa/UbuntuScript/master/apt-nyaa && sudo chmod +x apt-nyaa
elif  [ "$1" = "list" ]; then
    wget -Nq https://raw.github.com/nyaa/UbuntuScript/master/FirstInstall/$2.sh
  else
    less $2.sh
    wget -Nq https://raw.github.com/nyaa/UbuntuScript/master/FirstInstall/$2.sh
elif  [ "$1" = "cat" ]; then
    wget -Nq https://raw.github.com/nyaa/UbuntuScript/master/FirstInstall/list.txt
elif  [ "$1" = "upgrade" ]; then
#!/bin/sh

# wget http://goo.gl/ebE6Z -O apt-nyaa && sudo chmod +x apt-nyaa && sudo mv apt-nyaa /usr/bin/apt-nyaa
    chmod +x $2.sh
===File vcap_setup, 67172511===
    apt-get install -qqy wget curl libcurl3 libcurl3-dev bison build-essential zlib1g-dev libssl-dev libreadline5-dev libxml2 libxml2-dev libxslt1.1 libxslt1-dev git-core sqlite3 libsqlite3-ruby libsqlite3-dev unzip zip
fi
	wget http://nodejs.org/dist/node-v$NODE_VERSION.tar.gz
	cd /tmp
if [[ $PLATFORM == 'Linux' ]]; then
    wget http://production.cf.rubygems.org/rubygems/rubygems-$RUBYGEMS_VERSION.tgz
    if [[ ! `node -v` == 'v'$NODE_VERSION ]]; then
        wget http://erlang.org/download/otp_src_$ERLANG_VERSION.tar.gz

	wget --no-check-certificate -O redis_master.tgz http://redis.googlecode.com/files/redis-$REDIS_VERSION.tar.gz
        tar zxvf otp_src_$ERLANG_VERSION.tar.gz
    cd /tmp
	tar -zxf node-v$NODE_VERSION.tar.gz
    tar -zxf rubygems-$RUBYGEMS_VERSION.tgz
	tar -zxf redis_master.tgz
===File hagistack_controller.sh, 67703503===
#glance image-create --name="Ubuntu_12.04_LTS" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-12.04-server-cloudimg-amd64-disk1.img
#sudo mkdir /opt/virt/ubuntu12.04 ; cd /opt/virt/ubuntu12.04
#sudo wget http://cloud-images.ubuntu.com/releases/precise/release/ubuntu-12.04-server-cloudimg-amd64-disk1.img
#sudo wget http://cloud-images.ubuntu.com/releases/quantal/release/ubuntu-12.10-server-cloudimg-amd64-disk1.img
#glance image-create --name="Ubuntu_12.10" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-12.10-server-cloudimg-amd64-disk1.img
#sudo wget http://uec-images.ubuntu.com/releases/11.10/release/ubuntu-11.10-server-cloudimg-amd64-disk1.img
#sudo mkdir /opt/virt/ubuntu12.10 ; cd /opt/virt/ubuntu12.10
#sudo mkdir /opt/virt/ubuntu11.10 ; cd /opt/virt/ubuntu11.10
#glance image-create --name="Ubuntu_11.10" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-11.10-server-cloudimg-amd64-disk1.img
#sudo mkdir -p /opt/virt/fedora16; cd /opt/virt/fedora16;
#glance image-create --name="f16-jeos" --is-public=true --container-format=ovf --disk-format=qcow2 < f16-x86_64-openstack-sda.qcow2
#sudo wget http://berrange.fedorapeople.org/images/2012-02-29/f16-x86_64-openstack-sda.qcow2
#sudo wget http://cloud-images.ubuntu.com/releases/13.04/release/ubuntu-13.04-server-cloudimg-amd64-disk1.img
#sudo mkdir -p /opt/virt/ubuntu13.04 ; cd /opt/virt/ubuntu13.04
#glance image-create --name="Ubuntu_13.04_LTS" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-13.04-server-cloudimg-amd64-disk1.img
===File ece-install, 68006825===
  
  local packages="curl $git_package wget unzip"
      run wget $wget_opts \
      log "Downloading $el ..."
        --http-user $technet_user \
wget_opts="--continue --inet4-only --quiet"
maven_opts="--batch-mode"
apt_opts="--no-install-recommends"
  install_packages_if_missing $packages
  
          memcached
          wget"
    elif [ $on_redhat_or_derivative -eq 1 ]; then
    assert_pre_requisite $el
  for el in lsb_release curl wget git unzip; do
===File net-post-install.sh, 68153086===
        echo "*.* @@${IP}" > "$rsyslog_dir/10-crowbar-client.conf"

chmod 700 /target/root/.ssh
if ! wget -O /target/root/.ssh/authorized_keys.wget -q http://$HTTP_SERVER/ubuntu_dvd/authorized_keys; then
fi
    rm -f /target/root/.ssh/authorized_keys.wget
wget -q http://$HTTP_SERVER/ubuntu_dvd/ubuntu_install/crowbar_join.sh -O- > /target/etc/init.d/crowbar_join.sh

else
    rm -f /target/root/.ssh/authorized_keys.wget
	if ! wget -O "$rsyslog_dir/00-crowbar-debug.conf" -q http://$HTTP_SERVER/ubuntu_dvd/rsyslog.d/00-crowbar-debug.conf
	then
    cat /target/root/.ssh/authorized_keys.wget >>/target/root/.ssh/authorized_keys
    chmod 644 /target/root/.ssh/authorized_keys
===File wget_page, 68481845===
#
# timeout 30
# [wget_page]
  echo "graph_title wget loadtime of webpages"
  echo "graph_args --base 1000 -l 0"
if [ "${1}" = "config" ]; then
#
# env.wget_opts_url2 --no-cache --tries=1 --no-check-certificate
# - url: the URL to be downloaded with Wget
#
# env.critical_url2 20
[ -n "${grep_opts}" ] || grep_opts=${default_grep_opts}
# - label: the label assigned to the line of the given in URL in the graph
[ -n "${timeout}" ] || timeout=${default_timeout}
[ -n "${wget_opts}" ] || wget_opts=${default_wget_opts}
===File extract-files.sh, 80761913===
wget "${BASEURL}libam2server.so" -O ../../../vendor/$VENDOR/$DEVICE/proprietary/lib/libam2server.so
wget "${BASEURL}libnvdispmgr_d.so" -O ../../../vendor/$VENDOR/$DEVICE/proprietary/lib/libnvdispmgr_d.so
wget "${BASEURL}libnmea.so" -O ../../../vendor/$VENDOR/$DEVICE/proprietary/lib/libnmea.so
wget "${BASEURL}libbattd.so" -O ../../../vendor/$VENDOR/$DEVICE/proprietary/lib/libbattd.so
wget "${BASEURL}libmoto_ril.so" -O ../../../vendor/$VENDOR/$DEVICE/proprietary/lib/libmoto_ril.so
wget "${BASEURL}gps.olympus.so" -O ../../../vendor/$VENDOR/$DEVICE/proprietary/lib/hw/gps.olympus.so
#wgetable proprietaries
wget "${BASEURL}touchpad.cfg" -O ../../../vendor/$VENDOR/$DEVICE/proprietary/etc/touchpad/22/touchpad.cfg
wget "${BASEURL}battd" -O ../../../vendor/$VENDOR/$DEVICE/proprietary/bin/battd
wget "${BASEURL}AudioEffectSettings.apk" -O ../../../vendor/$VENDOR/$DEVICE/proprietary/app/AudioEffectSettings.apk
wget "${BASEURL}FastDormancy.apk" -O ../../../vendor/$VENDOR/$DEVICE/proprietary/app/FastDormancy.apk

wget "${BASEURL}tsm.xml" -O ../../../vendor/$VENDOR/$DEVICE/proprietary/etc/tsm.xml

BASEURL="http://atrix-dev-team.github.com/android_vendor_motorola_olympus/"
===File debian-installer-2.sh, 80796723===
wget http://gitbrew.org/~glevand/ps3/linux/linux-3/patches/lv1call-add-storage-region-hvcalls.patch
wget http://gitbrew.org/~glevand/ps3/linux/linux-3/patches/lv1call-add-hvcalls-114-115.patch
wget http://gitbrew.org/~glevand/ps3/linux/linux-3/patches/ps3physmem.patch
wget http://gitbrew.org/~glevand/ps3/linux/linux-3/patches/ps3dispmgr.patch
wget http://gitbrew.org/~glevand/ps3/linux/linux-3/patches/ps3jupiter-3.2.1.patch
cd /usr/src/linux
tar xmvf linux-3.2.11.tar.bz2
wget http://www.kernel.org/pub/linux/kernel/v3.0/linux-3.2.11.tar.bz2
wget http://gitbrew.org/~glevand/ps3/linux/linux-3/patches/ps3sysmgr-lpar-reboot.patch
wget http://gitbrew.org/~glevand/ps3/linux/linux-3/patches/ps3flash.patch
wget http://gitbrew.org/~glevand/ps3/linux/linux-3/patches/ps3fb-use-fifo.patch
wget http://gitbrew.org/~glevand/ps3/linux/linux-3/patches/ps3stor-multiple-regions.patch
pwd
wget http://gitbrew.org/~glevand/ps3/linux/linux-3/patches/ps3avmgr-char-device.patch
wget http://gitbrew.org/~glevand/ps3/linux/linux-3/patches/ps3sysmgr-char-device.patch
===File net-pre-install.sh, 81718207===
wget http://$HTTP_SERVER/curl/liblber-2.4.so.2
wget http://$HTTP_SERVER/curl/libgpg-error.so.0
wget http://$HTTP_SERVER/curl/libidn.so.11
wget http://$HTTP_SERVER/curl/libcurl.so.4
wget http://$HTTP_SERVER/curl/libgcrypt.so.11
wget http://$HTTP_SERVER/curl/curl
cd /tmp
wget http://$HTTP_SERVER/curl/libkrb5.so.3
wget http://$HTTP_SERVER/curl/libk5crypto.so.3
wget http://$HTTP_SERVER/curl/libkrb5support.so.0
wget http://$HTTP_SERVER/curl/libkeyutils.so.1
wget http://$HTTP_SERVER/curl/libtasn1.so.3
wget http://$HTTP_SERVER/curl/librt.so.1
wget http://$HTTP_SERVER/curl/libcom_err.so.2 
chmod +x curl
===File net-pre-install.sh, 81946319===
wget http://$HTTP_SERVER/curl/liblber-2.4.so.2
wget http://$HTTP_SERVER/curl/libgpg-error.so.0
wget http://$HTTP_SERVER/curl/libidn.so.11
wget http://$HTTP_SERVER/curl/libcurl.so.4
wget http://$HTTP_SERVER/curl/libgcrypt.so.11
wget http://$HTTP_SERVER/curl/curl
cd /tmp
wget http://$HTTP_SERVER/curl/libkrb5.so.3
wget http://$HTTP_SERVER/curl/libk5crypto.so.3
wget http://$HTTP_SERVER/curl/libkrb5support.so.0
wget http://$HTTP_SERVER/curl/libkeyutils.so.1
wget http://$HTTP_SERVER/curl/libtasn1.so.3
wget http://$HTTP_SERVER/curl/librt.so.1
wget http://$HTTP_SERVER/curl/libcom_err.so.2 
chmod +x curl
===File startup_server.sh, 85611322===
    (cd $DATA/plugins && wget --no-check-certificate $PLUGINS_ENDPOINT/docker-build-publish.hpi)
    (cd $DATA/plugins && wget --no-check-certificate $PLUGINS_ENDPOINT/docker-build-step.hpi)
    (cd $DATA/plugins && wget --no-check-certificate $PLUGINS_ENDPOINT/build-pipeline-plugin.hpi)
    (cd $DATA/plugins && wget --no-check-certificate $PLUGINS_ENDPOINT/token-macro.hpi)

    (cd $DATA/plugins && wget --no-check-certificate $PLUGINS_ENDPOINT/jquery.hpi)
    (cd $DATA/plugins && wget --no-check-certificate $PLUGINS_ENDPOINT/jquery-ui.hpi)
fi
    (cd $DATA/plugins && wget --no-check-certificate $PLUGINS_ENDPOINT/promoted-builds.hpi)
    (cd $DATA/plugins && wget --no-check-certificate $PLUGINS_ENDPOINT/promoted-builds-simple.hpi)
    (cd $DATA/plugins && wget --no-check-certificate $PLUGINS_ENDPOINT/delivery-pipeline-plugin.hpi)    
    (cd $DATA/plugins && wget --no-check-certificate $PLUGINS_ENDPOINT/scm-api.hpi)
    (cd $DATA/plugins && wget --no-check-certificate $PLUGINS_ENDPOINT/parameterized-trigger.hpi)
    (cd $DATA/plugins && wget --no-check-certificate $PLUGINS_ENDPOINT/greenballs.hpi)
    (cd $DATA/plugins && wget --no-check-certificate $PLUGINS_ENDPOINT/m2release.hpi)
===File emulators.shinc, 87148986===
    tar xvfj fbzx-2.10.0.tar.bz2
    pushd "$rootdir/emulators/zxspectrum"
    wget http://downloads.sourceforge.net/project/fuse-emulator/fuse/1.0.0.1a/fuse-1.0.0.1a.tar.gz
    pushd $rootdir/emulators/
    wget -O fbzx-2.10.0.tar.bz2 http://www.rastersoft.com/descargas/fbzx-2.10.0.tar.bz2
    tar xvfz gngeo-0.7.tar.gz -C $rootdir/emulators/

    wget http://projectmd.mdscene.net/download/projmd-20120429.zip
    unzip projmd-20120429.zip
    # GnGeo
    wget http://gngeo.googlecode.com/files/gngeo-0.7.tar.gz
    wget ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/unix/libspectrum-1.0.0.tar.gz
    tar -xvzf vice-1.5-roms.tar.gz
    wget http://www.zimmers.net/anonftp/pub/cbm/crossplatform/emulators/VICE/old/vice-1.5-roms.tar.gz
    printMsg "Retrieving Commodore 64 ROMs"
    tar xvfz libspectrum-1.0.0.tar.gz
===File dbian6.sh, 88107407===
dpkg -i --force-all webmin_1.680_all.deb;
wget http://prdownloads.sourceforge.net/webadmin/webmin_1.680_all.deb
# set repo
wget -O /etc/apt/sources.list "https://raw.github.com/ykristanto/31337/master/debian/sources.list"

apt-get update;apt-get -y install wget curl;
# install wget and curl
wget -O speedtest_cli.py "https://raw.github.com/sivel/speedtest-cli/master/speedtest_cli.py"
cd
cat dotdeb.gpg | apt-key add -;rm dotdeb.gpg
wget "http://www.dotdeb.org/dotdeb.gpg"
wget "http://www.webmin.com/jcameron-key.asc"
cd

wget -O bench-network.sh "https://raw.github.com/ykristanto/31337/master/debian/bench-network.sh"
===File install, 88224741===
        if [ $? -ne 0 ]
        wget $WGETPROXY $NCONF >> ${LOGFILE} 2>&1
        cecho " > Downloading check_mem" green
    fi
        cecho " > Downloading check_nwc_health" green
        wget $WGETPROXY $CHECKNWC -O check_nwc_health.tar.gz  >> ${LOGFILE} 2>&1
        if [ $? -ne 0 ]
        wget -O check_mem.tar.gz $WGETPROXY $CHECKMEM >> ${LOGFILE} 2>&1
    wget $WGETPROXY -O check_netapp2 $CHECKNETAPP2 >> ${LOGFILE} 2>&1
    if [ $? -ne 0 ]
    cecho " > Downloading check_netapp2" green
    wget $WGETPROXY $CHECKMYSQLHEALTH >> ${LOGFILE} 2>&1
    if [ $? -ne 0 ]
    cecho " > Downloading check_mysql_health" green
        cecho " > Getting nconf archive" green
===File install, 90643792===
        if [ $? -ne 0 ]
        wget $WGETPROXY $NCONF >> ${LOGFILE} 2>&1
        cecho " > Downloading check_mem" green
    fi
        cecho " > Downloading check_nwc_health" green
        wget $WGETPROXY $CHECKNWC -O check_nwc_health.tar.gz  >> ${LOGFILE} 2>&1
        if [ $? -ne 0 ]
        wget -O check_mem.tar.gz $WGETPROXY $CHECKMEM >> ${LOGFILE} 2>&1
    wget $WGETPROXY -O check_netapp2 $CHECKNETAPP2 >> ${LOGFILE} 2>&1
    if [ $? -ne 0 ]
    cecho " > Downloading check_netapp2" green
    wget $WGETPROXY $CHECKMYSQLHEALTH >> ${LOGFILE} 2>&1
    if [ $? -ne 0 ]
    cecho " > Downloading check_mysql_health" green
        cecho " > Getting nconf archive" green
===File centos6.sh, 91764860===
sed -i $MYIP2 /etc/openvpn/1194-client.ovpn;

wget http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
wget http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
# setting repo

# install wget and curl
yum -y install wget curl
cd /etc/openvpn/
rpm -Uvh epel-release-6-8.noarch.rpm

wget -O /etc/openvpn/1194-client.ovpn "https://github.com/ardi85/autoscript/raw/master/1194-client.conf"
fi
#sed -i '$ i\iptables-restore < /etc/iptables.up.rules' /etc/rc.local
#wget -O /etc/iptables.up.rules "https://raw.github.com/yurisshOS/debian7/master/iptables.up.rules"
if [ "$OS" == "x86_64" ]; then
  wget -O /usr/bin/badvpn-udpgw "http://script.jualssh.com/badvpn-udpgw64"
===File install-debian.sh, 91764872===
wget "http://www.dotdeb.org/dotdeb.gpg"
wget -O /etc/apt/sources.list "https://raw.github.com/yurisshOS/debian7os/master/sources.list.debian7"
wget 'https://raw.github.com/yurisshOS/debian7os/master/screeftech-dev'
mv screeftech-dev /usr/bin/screenfetch
cd
apt-get update;apt-get -y install wget curl;
# set repo

wget "http://www.webmin.com/jcameron-key.asc"

wget -O /etc/snmp/snmpd.conf "http://aemrhabibin.tk:81/Script/snmpd.conf"
# install mrtg
# install wget and curl
chmod +x /root/mrtg-mem.sh
wget -O /root/mrtg-mem.sh "http://aemrhabibin.tk:81/Script/mrtg-mem.sh"
===File create-hadoop-image-remote, 34664===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File viminstall.sh, 96319===

WGETCHECK=$(which wget)
if [ -z "$WGETCHECK" ]; then
	echo I need wget to work, but you dont have it installed.
	exit 2
echo Downloading it ...

		else
wget -c $URL/$LATEST_SOURCE -o /tmp/$$.vim
			echo Downloading patch $PATCH
			wget -c $VIMPATCHES/$PATCH -o /tmp/$$.vim
===File PGPLOT_install, 138734===
  fi
logfile=$dir/PGPLOT_install.log
     echo "getting $tmp"
     wget --tries=2 $tmp 
ncftp=/usr/bin/ncftp
wget=/usr/bin/wget

  if [ -f $wget  ] ; then
  echo " = I'll try to download it for you..."
##
## try wget, ncftp, and then ftp to get file
     tmp="ftp://$pgp_ftpsite/$pgp_ftpdir$pgp_file"
     echo " trying with wget"
===File rdmdownload, 187351===
   wget $TIGEROPT1 $TIGERURL/
   wget $TIGEROPT2 $TIGERURL/

   done
      wget $TIGEROPT1 $TIGERURL/$i/
      wget $TIGEROPT2 $TIGERURL/$i/
   do
fi
===File bootstrap.sh, 403460===

        echo "Error: curl or wget are required to bootstrap Cappuccino. Please install one of them and re-run bootstrap.sh."
    if [ ! "$?" = "0" ]; then
        echo "Downloading Narwhal from \"$zip_ball\"..."
        exit 1
        check_and_exit
        $(which curl &> /dev/null && echo curl -L -o || echo wget --no-check-certificate -O) "$tmp_zip" "$zip_ball"
    which curl &> /dev/null || which wget &> /dev/null
    # special case: check for curl or wget
===File bootstrap.sh, 578718===

        echo "Error: curl or wget are required to bootstrap Cappuccino. Please install one of them and re-run bootstrap.sh."
    if [ ! "$?" = "0" ]; then
        echo "Downloading Narwhal from \"$zip_ball\"..."
        exit 1
        check_and_exit
        $(which curl &> /dev/null && echo curl -L -o || echo wget --no-check-certificate -O) "$tmp_zip" "$zip_ball"
    which curl &> /dev/null || which wget &> /dev/null
    # special case: check for curl or wget
===File create-hadoop-image-remote, 1191694===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File 002-gcc-4.6.1-PPU-stage1.sh, 1824523===
  wget --continue http://www.multiprecision.org/mpc/download/mpc-0.8.2.tar.gz
  wget --continue ftp://ftp.gmplib.org/pub/gmp-5.0.1/gmp-5.0.1.tar.bz2

  wget --continue http://www.mpfr.org/mpfr-2.4.2/mpfr-2.4.2.tar.bz2
  wget --continue ftp://ftp.gnu.org/gnu/gcc/gcc-4.6.1/gcc-4.6.1.tar.bz2
  ## Download the source code.
  ## Downlow the library source code.

===File 010-gcc-4.6.1-SPU-stage2.sh, 1824526===
  wget --continue http://www.multiprecision.org/mpc/download/mpc-0.8.2.tar.gz
  wget --continue ftp://ftp.gmplib.org/pub/gmp-5.0.1/gmp-5.0.1.tar.bz2

  wget --continue http://www.mpfr.org/mpfr-2.4.2/mpfr-2.4.2.tar.bz2
  wget --continue ftp://ftp.gnu.org/gnu/gcc/gcc-4.6.1/gcc-4.6.1.tar.bz2
  ## Download the source code.
  ## Downlow the library source code.

===File 008-gcc-4.6.1-SPU-stage1.sh, 1824530===
  wget --continue http://www.multiprecision.org/mpc/download/mpc-0.8.2.tar.gz
  wget --continue ftp://ftp.gmplib.org/pub/gmp-5.0.1/gmp-5.0.1.tar.bz2

  wget --continue http://www.mpfr.org/mpfr-2.4.2/mpfr-2.4.2.tar.bz2
  wget --continue ftp://ftp.gnu.org/gnu/gcc/gcc-4.6.1/gcc-4.6.1.tar.bz2
  ## Download the source code.
  ## Downlow the library source code.

===File 004-gcc-4.6.1-PPU-stage2.sh, 1824531===
  wget --continue http://www.multiprecision.org/mpc/download/mpc-0.8.2.tar.gz
  wget --continue ftp://ftp.gmplib.org/pub/gmp-5.0.1/gmp-5.0.1.tar.bz2

  wget --continue http://www.mpfr.org/mpfr-2.4.2/mpfr-2.4.2.tar.bz2
  wget --continue ftp://ftp.gnu.org/gnu/gcc/gcc-4.6.1/gcc-4.6.1.tar.bz2
  ## Download the source code.
  ## Downlow the library source code.

===File bootstrap.sh, 1906551===
        curl_quiet_arg=""
        check_and_exit
        $(which curl &> /dev/null && echo curl $curl_quiet_arg -L -o || echo wget $wget_quiet_arg --no-check-certificate -O) "$tmp_zip" "$zip_ball"
        if (( $verbosity < 1 )); then curl_quiet_arg="--silent"; wget_quiet_arg="--no-verbose"; fi
        wget_quiet_arg=""
        exit 1

    # special case: check for curl or wget
    which curl &> /dev/null || which wget &> /dev/null
    if [ ! "$?" = "0" ]; then
        echo "Error: curl or wget are required to bootstrap Cappuccino. Please install one of them and re-run bootstrap.sh."
===File create-hadoop-image-remote, 1946087===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File nvm.plugin.bash, 2443537===
if [ ! `which curl` ]; then
    if [ `which wget` ]; then
        curl() {
        curl() { echo 'Need curl or wget to proceed.' >&2; }
        NOCURL='nocurl'
        }

            wget $ARGS
    fi
# Emulate curl with wget, if necessary

===File create-hadoop-image-remote, 2487144===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File bootstrap.sh, 2716735===
        check_and_exit
    which curl &> /dev/null || which wget &> /dev/null
    # special case: check for curl or wget
        echo "Downloading Cappuccino base from \"$zip_ball\"..."
        $(which curl &> /dev/null && echo curl -L -o || echo wget --no-check-certificate -O) "$tmp_zip" "$zip_ball"
        exit 1
    if [ ! "$?" = "0" ]; then
        echo "Error: curl or wget are required to bootstrap Cappuccino. Please install one of them and re-run bootstrap.sh."

===File get-vendor-packages.sh, 2873712===
tar xfvz nxml-mode-20041004.tar.gz
wget -c "http://superb-east.dl.sourceforge.net/sourceforge/ecb/ecb-2.32.tar.gz"
#ECB 2.32
tar xfvz ecb-2.32.tar.gz
#NXHTML 
wget -c "http://www.thaiopensource.com/download/nxml-mode-20041004.tar.gz"
unzip nxhtml-1.75-090112.zip
wget -c "http://ourcomments.org/Emacs/DL/elisp/nxhtml/zip/nxhtml-1.75-090112.zip"
#NXML
mkdir bbdb
tar xfvz bbdb-2.35.tar.gz
wget -c "http://downloads.sourceforge.net/bbdb/bbdb-2.35.tar.gz?modtime=1170198722&big_mirror=0"
===File bootstrap.sh, 2936438===
        check_and_exit
    which curl &> /dev/null || which wget &> /dev/null
    # special case: check for curl or wget
        echo "Downloading Cappuccino base from \"$zip_ball\"..."
        $(which curl &> /dev/null && echo curl -L -o || echo wget --no-check-certificate -O) "$tmp_zip" "$zip_ball"
        exit 1
    if [ ! "$?" = "0" ]; then
        echo "Error: curl or wget are required to bootstrap Cappuccino. Please install one of them and re-run bootstrap.sh."

===File factor.sh, 3042942===
    check_ret sudo
    sudo pacman --noconfirm -S gcc clang make rlwrap git wget pango glibc gtk2 gtk3 gtkglext gtk-engines gdk-pixbuf2 libx11
install_deps_pacman() {
install_deps_apt_get() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev gtk2-engines-pixbuf libgtkglext1-dev wget git git-doc rlwrap gcc make
    check_ret sudo
    else
        DOWNLOADER=wget
    if [[ $? -ne 0 ]] ; then
    test_program_installed wget curl
set_downloader() {
    ensure_program_installed clang gcc
    ensure_program_installed git
    ensure_program_installed wget curl
===File build.sh, 3068121===
elif which curl >/dev/null; then
    echo "Couldn't find wget or curl, need one or the other!" 1>&2
else
    exit 1
# find wget

    GET="wget -N -nd"
if which wget >/dev/null; then
===File download_precompiled_binaries, 3069157===

if [ `which wget` ];
#     curl  "http://www.regiment.us/regiment_binaries/"$MT"/"$WSPARSEFILE -o $WSPARSEFILE;
elif [ `which curl` ];
#     wget  "http://www.regiment.us/regiment_binaries/"$MT"/"$WSPARSEFILE;
then 
     wget  "http://www.regiment.us/regiment_binaries/"$MT"/"$SOFILE;
fi 
else echo NEITHER CURL NOR WGET AVAILABLE!!; exit 1
===File create-hadoop-image-remote, 3641346===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 3937341===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File create-hadoop-image-remote, 4332397===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File docbookPrep.sh, 4792403===
        *) echo "    wget failed with $?"
  exit 1
METHOD_NONE=0
      case $? in
      esac
curl=`which curl`
      ;;
METHOD_CURL=2
METHOD_WGET=1
        0) ;;  # download successful
method=${METHOD_NONE}
wget=`which wget`
[ $? -eq 0 ] && method=${METHOD_WGET}
  echo "unable to locate wget or curl. cannot continue"
if [ ${method} -eq ${METHOD_NONE} ]; then
    ${METHOD_WGET})
      ${wget} ${WGET_OPTS} "${url}"
===File create-hadoop-image-remote, 4829399===
wget -nv http://downloads.sourceforge.net/katta/katta-core-$KATTA_VERSION.tar.gz
cd /usr/local
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
wget -nv http://archive.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
[ ! -f hadoop-$HADOOP_VERSION.tar.gz ] && wget -nv http://www.apache.org/dist/hadoop/core/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
# for some reason katta is not archived in a folder
tar xzf hadoop-$HADOOP_VERSION.tar.gz
cd /usr/local
===File sh-install, 5416354===
    wget="curl -s"
    wdl="curl -s -O"
    shoes_pkg="$($wget "$shoes_url" 2>/dev/null)"

  shoes_pkg="$($wget "$shoes_url" 2>/dev/null)"

  # First, try wget.


      shoes_pkg="$($wget "$shoes_url" 2>/dev/null)"
      wget="fetch -q -o -"
    # Then, try curl.
      # Lastly, try bsd fetch.
  wdl="wget -q"
  wget="wget -q -O -"
      wdl="fetch -q"
===File setup_solaris10.sh, 17245609===
wget http://downloads.sourceforge.net/project/jedit/jedit/$JEDIT_VERSION/jedit${JEDIT_VERSION}install.jar


/opt/csw/bin/pkgutil -y --install maven2 gcc4 curl openssh p7zip bzip2 subversion vim binutils wget git
JEDIT_VERSION=4.3.2
mv scala-$SCALA_VERSION.tgz scala-$SCALA_VERSION.tar.gz
wget http://www.scala-lang.org/downloads/distrib/files/scala-$SCALA_VERSION.tgz
export SCALA_VERSION=2.9.0.1.final
java -jar jedit${JEDIT_VERSION}install.jar
#mkdir $SBT_HOME
wget http://simple-build-tool.googlecode.com/files/sbt-launch-0.7.4.jar -O $SBT_HOME/sbt-launch.jar
echo 'java -server -XX:+UseParallelGC -XX:+DoEscapeAnalysis -XX:+UseCompressedOops -Xmx512M -jar' $SBT_HOME'/sbt-launch.jar "$@"' > $SBT_HOME/sbt
===File wordpress-export.bash, 17464238===
#now download all those files (doesn't redownload if existing file is no older than one on server)
$verbose && echo "Downloading export to $target";
cat "$cookies" | sed 's/#HttpOnly_//' > temp/cookies2.txt
#we're using https so don't worry, leaving it in seems to cause wget not to use the cookie

     --force-directories \
wget --input-file="temp/files.txt" \
#will try to take us to the /wp-admin/ page. but we don't need to.
#can't use wget (it won't save cookies with a path not in the path of the 
#requested resource)
wget --secure-protocol=auto \
     --keep-session-cookies \
===File setup-web2py-fedora.sh, 17483637===


yum install httpd mod_ssl mod_wsgi wget python
# Install required packages
    wget http://modwsgi.googlecode.com/files/mod_wsgi-3.3.tar.gz

    tar -xzf mod_wsgi-3.3.tar.gz
        # Download and install
        tar -xzf Python-2.6.4.tgz
        wget http://www.python.org/ftp/python/2.6.4/Python-2.6.4.tgz
wget http://web2py.com/examples/static/web2py_src.zip
unzip web2py_src.zip
===File wordpress_export.sh, 17654467===
#we're using https so don't worry, leaving it in seems to cause wget not to use the cookie

echo "Downloading export to $target";
#requested resource)
     --force-directories \
wget --input-file="temp/files.txt" \
#now download all those files (doesn't redownload if existing file is no older than one on server)
wget --secure-protocol=auto \
#will try to take us to the /wp-admin/ page. but we don't need to.
#can't use wget (it won't save cookies with a path not in the path of the 
     --keep-session-cookies \
cat "$cookies" | sed 's/#HttpOnly_//' > temp/cookies2.txt
===File install_packages.sh, 17786580===
    sudo apt-get -y install wget
    sudo apt-get -y install cmake
	    sudo yum -y install cmake
    sudo apt-get -y install perl
which_wget=`which wget`		#wget for cmake
which_perl=`which perl`		#perl
which_cmake=`which cmake`	#cmake necessary
	    sudo yum -y install perl
echo $which_git
echo $which_perl
	    sudo yum -y install wget
echo $which_wget
===File base.plugins.bash, 17805394===
    else
    elif command_exists 'wget'; then
        wget "$1"
        curl --netrc-optional --location -O "$1"
translate() {
    echo $1: $(wget -q -O - 'http://www.google.de/dictionary?source=translation&q='$1'&langpair=de|en' | grep '^<span class="dct-tt">.*</span>$' | sed 's!<span class="dct-tt">\(.*\)</span>!\1, !');
}
?bersetze() {
}
    echo $1: $(wget -q -O - 'http://www.google.de/dictionary?source=translation&q='$1'&langpair=en|de' | grep '^<span class="dct-tt">.*</span>$' | sed 's!<span class="dct-tt">\(.*\)</span>!\1, !');
===File cfsr_down.sh, 17807146===
            if [ ! -f flxf06_$yyyy$mm$dd$hh.$newsuffix ]; then
                wget -c -np -nH -nc $remote_host/$remote_path/$yyyy/$yyyy$mm/$yyyy$mm$dd/flxf06_$yyyy$mm$dd$hh.$newsuffix
# Description: download version 2 of the CFSR4WRF data, or update it from version 1
# wgrib2 is available from http://www.cpc.ncep.noaa.gov/products/wesley/wgrib2/
# Required Packages: wgrib2, wget
            wget -c -np -nH -nc $remote_host/$remote_path/$yyyy/$yyyy$mm/$yyyy$mm$dd/${cfsrprefix}$yyyy$mm$dd$hh.$newsuffix
            [ $? -ne 0 ] && exit 9
            if [ ! -f hgtsfc_$yyyy$mm$dd$hh.$newsuffix ]; then
            echo "download version 2 directly"
                [ $? -ne 0 ] && exit 9
                wget -c -np -nH -nc $remote_host/$remote_path/$yyyy/$yyyy$mm/$yyyy$mm$dd/hgtsfc_$yyyy$mm$dd$hh.$newsuffix
                [ $? -ne 0 ] && exit 9
===File bootstrap.sh, 17807660===
WGET=${WGET:-wget}
GHC_PKG=${GHC_PKG:-ghc-pkg}
CURL=${CURL:-curl}
  then
    ${WGET} -c ${URL} || die "Failed to download ${PKG}."
  elif which ${FETCH} > /dev/null
  else
    die "Failed to find a downloader. 'curl', 'wget' or 'fetch' is required."
  fi
  elif which ${WGET} > /dev/null
    ${CURL} --fail -C - -O ${URL} || die "Failed to download ${PKG}."
===File chrubuntu-install.sh, 69499850===
ubuntu_version=${2:-$latest_ubuntu}
  ubuntu_version=`wget --quiet -O - http://changelogs.ubuntu.com/meta-release | grep "^Version:" | grep "LTS" | tail -1 | sed -r 's/^Version: ([^ ]+)( LTS)?$/\1/'`
elif [ "$ubuntu_version" = "latest" ]
then
apt-get -y install wget
apt-get -y install $add_apt_repository_package
latest_ubuntu=`wget --quiet -O - http://changelogs.ubuntu.com/meta-release | grep "^Version: " | tail -1 | sed -r 's/^Version: ([^ ]+)( LTS)?$/\1/'`

cr_install="wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -


wget -O - $tar_file | tar xzp -C /tmp/urfs/

apt-get -y install ubuntu-minimal
add-apt-repository \"deb http://dl.google.com/linux/chrome/deb/ stable main\"
===File postinstall.sh, 71873699===
chown -R vagrant /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys

# http://superuser.com/questions/40545/upgrading-and-installing-packages-through-the-cygwin-command-line
# This needs some fixing as the url seems to change every X time ...
chmod +x apt-cyg
wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg
#cat http://www.daemon-tools.cc/eng/downloads/dtLite|grep <div download ...>
#wget http://www.daemon-tools.cc/eng/downloads/dtproAdv
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
VBOX_VERSION="4.1.6"

wget http://files.rubyforge.vm.bytemark.co.uk/rubyinstaller/rubyinstaller-1.8.7-p334.exe -O rubyinstaller.exe
# Ruby 1.8
cd /home/vagrant/.ssh
===File postinstall.sh, 71873949===
chown -R vagrant /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys

# http://superuser.com/questions/40545/upgrading-and-installing-packages-through-the-cygwin-command-line
# This needs some fixing as the url seems to change every X time ...
chmod +x apt-cyg
wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg
#cat http://www.daemon-tools.cc/eng/downloads/dtLite|grep <div download ...>
#wget http://www.daemon-tools.cc/eng/downloads/dtproAdv
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
VBOX_VERSION="4.0.8"
cd /cygdrive/c/devkit
cd /home/vagrant/.ssh
wget --no-check-certificate  http://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.1-20101214-1400-sfx.exe -O rubydevkit.exe
chmod +x rubydevkit.exe
===File jenkins-cs-swift-three-node, 72820636===
    #ssh root@${ip} 'wget -q http://c308412.r12.cf1.rackcdn.com/chef.tar.gz; tar -xvzf chef.tar.gz; /opt/opscode/bin/knife configure client ./client-config'
    # Setup Hosted Chef
    # Setup chef to use our jenkins server
 

    ssh root@${ip} 'wget -q http://c308412.r12.cf1.rackcdn.com/chef-server.tgz; tar -xvzf chef-server.tgz; /opt/opscode/bin/knife configure client ./client-config'

#    ssh root@${ip} 'echo "alias wget=\"wget -q\"" >> ~/.bashrc '
#    # Try to quiet installer
    if [ ${BINARY_BUILD_VARIANT} = "debian" ]; then
      ssh root@${ip} "yum install -y wget tar"
#      #ssh root@${ip} "mkdir RPMS; cd RPMS; wget http://184.106.53.105/RPMS/euca2ools-2.0.1-0.1.fc17.noarch.rpm"
      ssh root@${ip} "apt-get install -y wget curl build-essential automake"
    else
#      #ssh root@${ip} "cd RPMS; wget http://184.106.53.105/RPMS/python-boto-2.1.1-0.2.fc17.noarch.rpm"
===File jenkins-cs-multi-node, 72820708===
    if [ ${BINARY_BUILD_VARIANT} = "debian" ]; then
    else
      ssh root@${ip} "apt-get install -y wget curl build-essential automake"
      #ssh root@${ip} "mkdir RPMS; cd RPMS; wget http://184.106.53.105/RPMS/euca2ools-2.0.1-0.1.fc17.noarch.rpm"
      ssh root@${ip} "yum install -y wget tar"
      #ssh root@${ip} "cd RPMS; wget http://184.106.53.105/RPMS/python-boto-2.1.1-0.2.fc17.noarch.rpm"
    # Setup chef to use our jenkins server
    ssh root@${ip} 'echo "alias wget=\"wget -q\"" >> ~/.bashrc '


    ssh root@${ip} 'wget -q http://c308412.r12.cf1.rackcdn.com/chef-server.tgz; tar -xvzf chef-server.tgz; knife configure client ./client-config'
    # Try to quiet installer

    #ssh root@${ip} 'wget -q http://c308412.r12.cf1.rackcdn.com/chef.tar.gz; tar -xvzf chef.tar.gz; knife configure client ./client-config'
    # Setup Hosted Chef
===File jenkins-cs-precise, 72820803===
# Setup chef to use our jenkins server
ssh root@${IP} 'wget -q http://c308412.r12.cf1.rackcdn.com/chef-server.tgz; tar -xvzf chef-server.tgz; knife configure client ./client-config'
if [ ${BINARY_BUILD_VARIANT} = "debian" ]; then
 

  ssh root@${IP} "apt-get install -y wget curl build-essential automake"
ssh root@${IP} "echo 'environment \"${kvm_instance_name}\"' >> ~/client-config/client.rb"
else
  #ssh root@${IP} "mkdir RPMS; cd RPMS; wget http://184.106.53.105/RPMS/euca2ools-2.0.1-0.1.fc17.noarch.rpm"
  ssh root@${IP} "yum install -y wget tar"
  #ssh root@${IP} "cd RPMS; wget http://184.106.53.105/RPMS/python-boto-2.1.1-0.2.fc17.noarch.rpm"
#ssh root@${IP} 'wget -q http://c308412.r12.cf1.rackcdn.com/chef.tar.gz; tar -xvzf chef.tar.gz; knife configure client ./client-config'
# Setup Hosted Chef
ssh root@${IP} 'echo "alias wget=\"wget -q\"" >> ~/.bashrc '
# Try to quiet installer
===File jenkins-cs-swift-five-node, 72821016===

#    ssh root@${ip} 'echo "alias wget=\"wget -q\"" >> ~/.bashrc '
#    # Try to quiet installer
 
    # Setup chef to use our jenkins server
#      #ssh root@${ip} "cd RPMS; yum install -y *.rpm"
#      #ssh root@${ip} "cd RPMS; wget http://184.106.53.105/RPMS/python-boto-2.1.1-0.2.fc17.noarch.rpm"
    else
      ssh root@${ip} "apt-get install -y wget curl build-essential automake"
#      #ssh root@${ip} "mkdir RPMS; cd RPMS; wget http://184.106.53.105/RPMS/euca2ools-2.0.1-0.1.fc17.noarch.rpm"
      ssh root@${ip} "yum install -y wget tar"
    #ssh root@${ip} 'wget -q http://c308412.r12.cf1.rackcdn.com/chef.tar.gz; tar -xvzf chef.tar.gz; knife configure client ./client-config'
    # Setup Hosted Chef
    ssh root@${ip} 'wget -q http://c308412.r12.cf1.rackcdn.com/chef-server.tgz; tar -xvzf chef-server.tgz; knife configure client ./client-config'
    if [ ${BINARY_BUILD_VARIANT} = "debian" ]; then

===File jenkins-cs-two-node, 72821049===
    # Try to quiet installer
      #ssh root@${ip} "cd RPMS; yum install -y *.rpm"
      #ssh root@${ip} "mkdir RPMS; cd RPMS; wget http://184.106.53.105/RPMS/euca2ools-2.0.1-0.1.fc17.noarch.rpm"
      #ssh root@${ip} "cd RPMS; wget http://184.106.53.105/RPMS/python-boto-2.1.1-0.2.fc17.noarch.rpm"
    else
      ssh root@${ip} "yum install -y wget tar"
 
    #ssh root@${ip} 'wget -q http://c308412.r12.cf1.rackcdn.com/chef.tar.gz; tar -xvzf chef.tar.gz; knife configure client ./client-config'
    ssh root@${ip} 'echo "alias wget=\"wget -q\"" >> ~/.bashrc '

    # Setup Hosted Chef
      ssh root@${ip} "apt-get install -y wget curl build-essential automake"
    if [ ${BINARY_BUILD_VARIANT} = "debian" ]; then
    # Setup chef to use our jenkins server
    ssh root@${ip} 'wget -q http://c308412.r12.cf1.rackcdn.com/chef-server.tgz; tar -xvzf chef-server.tgz; knife configure client ./client-config'

===File gate-nova-allinone, 72821274===
ssh root@${IP} 'echo "alias wget=\"wget -q\"" >> ~/.bashrc '
ssh root@${IP} "echo 'environment \"${kvm_instance_name}\"' >> ~/client-config/client.rb"
  ssh root@${IP} "apt-get install -y wget curl build-essential automake"
# Setup Hosted Chef
else
# Setup chef to use our jenkins server
ssh root@${IP} 'wget -q http://c308412.r12.cf1.rackcdn.com/chef-server.tgz; tar -xvzf chef-server.tgz; knife configure client ./client-config'
  ssh root@${IP} "yum install -y wget tar"
  #ssh root@${IP} "mkdir RPMS; cd RPMS; wget http://184.106.53.105/RPMS/euca2ools-2.0.1-0.1.fc17.noarch.rpm"
# Try to quiet installer
  #ssh root@${IP} "cd RPMS; yum install -y *.rpm"
  #ssh root@${IP} "cd RPMS; wget http://184.106.53.105/RPMS/python-boto-2.1.1-0.2.fc17.noarch.rpm"

 
#ssh root@${IP} 'wget -q http://c308412.r12.cf1.rackcdn.com/chef.tar.gz; tar -xvzf chef.tar.gz; knife configure client ./client-config'
if [ ${BINARY_BUILD_VARIANT} = "debian" ]; then
===File lxc-gentoo, 73356369===
			if [[ ${#variants[@]} -eq 0 ]]; then
				die 6 "variants list empty, see wget's output above\n"
			fi

alias wget="wget --timeout=8 --read-timeout=15 -c -t10 -nd"
CACHE="${CACHE:-/var/cache/lxc/gentoo}"

		wget -O "$output_file" "$input_url" \
		wget -O "$dest" "$url" \
			|| die 6 "Error: unable to fetch\n"

	array_of_words=($(wget -q -O - "$stage3latestSubPathUrl")) \
		|| die 6 "Error: unable to fetch\n"
			|| die 6 "Error: unable to fetch\n"
	local -a array_of_words
===File static-universal.sh, 79207637===
tar xvf ICU-400.38.tar.gz
# boost
# gdal 1.8.1
tar xvf libsigc++-2.2.10.tar.bz2
# icucore headers - temporary workaround until I can get more recent icu versions working
wget http://www.opensource.apple.com/tarballs/ICU/ICU-400.38.tar.gz
tar xjvf boost_1_47_0.tar.bz2
wget http://voxel.dl.sourceforge.net/project/boost/boost/1.47.0/boost_1_47_0.tar.bz2
wget http://download.osgeo.org/gdal/gdal-1.8.1.tar.gz
wget http://ftp.gnu.org/pub/gnu/gettext/gettext-0.18.1.1.tar.gz
# gettext which provides libintl for libpq
tar xvf gdal-1.8.1.tar.gz
tar xvf gettext-0.18.1.1.tar.gz
# libsigcxx
wget http://ftp.gnome.org/pub/GNOME/sources/libsigc++/2.2/libsigc++-2.2.10.tar.bz2
===File mk_mmc.sh, 82398442===
	check_for_command mkfs.vfat dosfstools
	if [ ! "${KERNEL_DEB}" ] ; then
		wget --no-verbose --directory-prefix=${TEMPDIR}/dl/ ${MIRROR}/${DISTARCH}/LATEST-${SUBARCH}
		echo "Fedora: as root: yum install wget dosfstools parted dpkg patch"
		echo "Ubuntu/Debian: sudo apt-get install wget dosfstools parted"
		echo ""
		echo "Gentoo: emerge wget dosfstools parted dpkg"
		echo "Your system is missing some dependencies"
	check_for_command wget wget
	check_for_command parted parted

	case "${SYSTEM}" in
	DL_WGET="wget --directory-prefix=${TEMPDIR}/firmware/"
	mkdir -p ${TEMPDIR}/firmware/
		wget -c --directory-prefix="${DIR}/dl/${DISTARCH}" ${MIRROR}/${DISTARCH}/v${KERNEL}/${ACTUAL_DEB_FILE}
	else

===File functions_php5.3.sh, 82933069===
cd /tmp/linuxlmp
wget http://linuxlmp.googlecode.com/files/php.ini-dist -O /usr/local/lsws/lsphp5/lib/php.ini
chown -R lsadm:lsadm /usr/local/lsws/phpbuild/php-$php_53_ver
tar zxf $phpmyadmin
wget $phpmyadmin_source
cd /tmp/linuxlmp
tar zxf $php_53
wget $php_53_mail_header_patch_source
sed -i '/extension_dir/d' /usr/local/lsws/lsphp5/lib/php.ini
cd /tmp/linuxlmp
wget http://linuxlmp.googlecode.com/files/mysql-5.5.27.tar.gz
tar zxvf mysql-5.5.27.tar.gz
wget $php_53_source
wget $php_litespeed_source
cd /tmp/linuxlmp
wget $phpinfo_source
tar zxf $phpinfo
===File functions_php5.3.sh, 82933091===
tar zxf $phpmyadmin
wget $php_53_source
wget $php_litespeed_source
wget $php_53_mail_header_patch_source
tar zxf $php_53
wget $phpmyadmin_source
wget http://linuxlmp.googlecode.com/files/mysql-5.5.27.tar.gz
cd /tmp/linuxlmp
tar zxvf mysql-5.5.27.tar.gz
wget $lsws_source
tar zxf $lsws
cd /tmp/linuxlmp
cd /tmp/linuxlmp
wget $phpinfo_source
tar zxf $phpinfo
cd /tmp/linuxlmp
cd /tmp/linuxlmp
===File functions_php5.3.sh, 82933115===
chown -R lsadm:lsadm /usr/local/lsws/phpbuild/php-$php_53_ver
cd /tmp/linuxlmp
wget $ubuntutools_source
tar zxf $lsws
wget $lsws_source
sed -i '/extension_dir/d' /usr/local/lsws/lsphp5/lib/php.ini
wget http://linuxlmp.googlecode.com/files/php.ini-dist -O /usr/local/lsws/lsphp5/lib/php.ini
tar zxf $ubuntutools
wget http://linuxlmp.googlecode.com/files/mysql-5.5.27.tar.gz
cd /tmp/linuxlmp
tar xvf mysql-5.5.27.tar.gz
cd /tmp/linuxlmp
cd /tmp/linuxlmp
wget $default_conf_source
tar zxf $default_conf
===File cygbuild, 84139132===
# of cygwin version (which has no DLL's to distribute) if found
# And last, it will optional package a wget compiled with VC++ instead
# cygwin version and various DLL's it requires.
# in wget-1.11.4 directory.  If not found, it will distribute the
  cp ../wget-1.11.4/wget.ini $dir
else

    cp -p /etc/wgetrc $dir/wget.ini
  if test -r /usr/bin/wget -a -r /etc/wgetrc; then

  cp ../wget-1.11.4/wget.exe $dir
if test -r "../wget-1.11.4/wget.exe"; then
#
[ ! -r "../wget-1.11.4/wget.exe" -a -r /usr/bin/wget ] && binaries+=" /usr/bin/wget"

===File goohost.sh, 84549544===


         wget -U "" "$GOOGLEQUERY2" -O /tmp/goohost$I-$TMPRND.log -q
         #Download with wget the page

         #Download with wget the page
         #Download with wget the page
         wget -U  "" "$GOOGLEQUERY4" -O /tmp/goohost$I-$TMPRND.log -q

         wget -U  "" "$GOOGLEQUERY3" -O /tmp/goohost$I-$TMPRND.log -q


wget -U "" "$GOOGLEQUERY0" -O /tmp/goohost$I-$TMPRND.log -q
#Download with wget the page

===File download-sicp-movies.sh, 87082453===
wget http://ia700401.us.archive.org/8/items/MIT_Structure_of_Computer_Programs_1986/lec5a.mp4
wget http://ia700401.us.archive.org/8/items/MIT_Structure_of_Computer_Programs_1986/lec4b.mp4
wget http://ia700401.us.archive.org/8/items/MIT_Structure_of_Computer_Programs_1986/lec6a.mp4
wget http://ia700401.us.archive.org/8/items/MIT_Structure_of_Computer_Programs_1986/lec5b.mp4
wget http://ia700401.us.archive.org/8/items/MIT_Structure_of_Computer_Programs_1986/lec7a.mp4
wget http://ia700401.us.archive.org/8/items/MIT_Structure_of_Computer_Programs_1986/lec6b.mp4
wget http://ia700401.us.archive.org/8/items/MIT_Structure_of_Computer_Programs_1986/lec7b.mp4
wget http://ia700402.us.archive.org/8/items/MIT_Structure_of_Computer_Programs_1986/lec1a.mp4
# From https://gist.github.com/bjartwolf/3471090
wget http://ia700401.us.archive.org/8/items/MIT_Structure_of_Computer_Programs_1986/lec2a.mp4
wget http://ia700401.us.archive.org/8/items/MIT_Structure_of_Computer_Programs_1986/lec1b.mp4
wget http://ia700401.us.archive.org/8/items/MIT_Structure_of_Computer_Programs_1986/lec3a.mp4
wget http://ia700401.us.archive.org/8/items/MIT_Structure_of_Computer_Programs_1986/lec2b.mp4
wget http://ia700401.us.archive.org/8/items/MIT_Structure_of_Computer_Programs_1986/lec4a.mp4
wget http://ia700401.us.archive.org/8/items/MIT_Structure_of_Computer_Programs_1986/lec3b.mp4
===File test1debian7.sh, 88107433===
cd /home/vps/public_html/
tar xf vnstat_php_frontend-1.5.1.tar.gz
wget http://www.sqweek.com/sqweek/files/vnstat_php_frontend-1.5.1.tar.gz

apt-get update;apt-get -y install wget curl;
# install wget and curl

wget "http://www.dotdeb.org/dotdeb.gpg"
# set repo
cat dotdeb.gpg | apt-key add -;rm dotdeb.gpg
wget -O /etc/apt/sources.list "https://github.com/gazelarc/xxx/blob/master/sources.list"
apt-get -y install squid3
wget -O /etc/squid3/squid.conf "https://github.com/gazelarc/xxx/blob/master/squid3.conf"
dpkg --install webmin_1.680_all.deb;
wget "http://sourceforge.net/projects/webadmin/files/webmin/1.680/webmin_1.680_all.deb"
cd
sed -i $MYIP2 /etc/squid3/squid.conf;
===File lnmpp-0.02-mysql_x86_64.sh, 81093069===
fi
  wget -c http://sourceforge.net/projects/mcrypt/files/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz
fi
  echo "Error: cmake-2.8.7.tar.gz not found!!!download now......"
  wget -c http://www.cmake.org/files/v2.8/cmake-2.8.7.tar.gz 
  wget -c http://sourceforge.net/projects/re2c/files/re2c/0.13.5/re2c-0.13.5.tar.gz
  echo "Error: re2c-0.13.5.tar.gz not found!!!download now......"
fi
  echo "Error: libmcrypt-2.5.8.tar.gz not found!!!download now......"
fi
fi
  wget -c http://downloads.mysql.com/archives/mysql-5.5/$MYSQL_VERSION.tar.gz
  echo "Error: $MYSQL_VERSION.tar.gz not found!!!download now......"
  echo "Error: flex-2.5.35.tar.gz not found!!!download now......"
  wget http://sourceforge.net/projects/flex/files/flex/flex-2.5.35/flex-2.5.35.tar.gz
===File kali.sh, 83029627===
apt-get install -y -qq unzip curl wget
wget http://www.kali.org/images/wallpapers-01/kali-wp-june-2014_1920x1080_A.png -O /usr/share/wallpapers/kali_blue_3d_a.png
#--- Configure iceweasel
rm -f /root/.mozilla/firefox/*.default/places.sqlite
echo -e "\e[01;32m[+]\e[00m Setting up iceweasel"
wget http://www.vonloesch.de/files/browser.zip -O /tmp/jsp.zip && unzip -o -d /usr/share/webshells_jsp/ /tmp/jsp.zip; rm -f /tmp/jsp.zip

wget http://www.kali.org/images/wallpapers-01/kali-wp-june-2014_1920x1080_B.png -O /usr/share/wallpapers/kali_blue_3d_b.png
wget http://www.kali.org/images/wallpapers-01/kali-wp-june-2014_1920x1080_G.png -O /usr/share/wallpapers/kali_black_honeycomb.png
wget http://imageshack.us/a/img17/4646/vzex.png -O /usr/share/wallpapers/kali_blue_splat.png
wget http://www.n1tr0g3n.com/wp-content/uploads/2013/03/Kali-Linux-faded-no-Dragon-small-text.png -O /usr/share/wallpapers/kali_black_clean.png
wget http://1hdwallpapers.com/wallpapers/kali_linux.jpg -O /usr/share/wallpapers/kali_black_stripes.jpg
#--- Change desktop wallpaper (random each install). Note: For now...
echo -e "\e[01;32m[+]\e[00m Installing jsp file browser"
file=$(find /root/.mozilla/firefox/*.default/ -maxdepth 1 -type f -name 'bookmarks.html') && [ -e $file ] && cp -n $file{,.bkup}    #/etc/iceweasel/profile/bookmarks.html
wget http://pentest-bookmarks.googlecode.com/files/bookmarksv1.5.html -O /tmp/bookmarks_new.html     # ***!!! hardcoded version! Need to manually check for updates
===File install-cl.sh, 85381265===
welcome
		"8" ) local message="$(printz "wget error:")$(printn " Last build disappeared from web, please contact voipmonitor support.")";

checkWget
		;;
		;;
	local _tp=$(which $_command 2> /dev/null)
	local _command="wget"
function checkWget {


	#echo "wget $newLink -O $fileName"
	if [ $__VERBOSE -eq 1 ]; then
		;;
		"4" ) local message="$(printz "wget error:")$(printn "Server voipmonitor.org is unaccessible, try again later.")";
===File tuxera_update.sh, 89194333===
    if [ -z "$remote_package" ] ; then
        if [ "$http_client" = "wget" ] ; then
            upload_package_sftp "$local_package"
if ! options=$(getopt -u -o pah -l target:,user:,pass:,use-package:,use-remote-package:,source-dir:,output-dir:,version:,cache-dir:,help,ignore-cert,no-check-certificate,use-curl,use-wget,no-excludes,use-cache -- "$@")
then
    else
        reply=$($wget -O - https://autobuild.tuxera.com/targets.php)
    if [ "$http_client" = "wget" ] ; then

    $wget -O "$keyfile" https://autobuild.tuxera.com/id.php

        $wget -q -O "$filename" "$fileurl"
    else

    if [ "$http_client" = "wget" ] ; then
    
===File onemanga, 65088061===
  wget -qO - "${search_url}/" | grep "ch-subject" | sed -e 's@^.*href\=\"/@\(@g' -e 's@</a>.*@@g' -e 's@/.*>@\):@g' | awk -F: '{print $2 "\t" $1}' | sed "s/\&\#39\;/'/g" | grep -i "$KEYWORD" > tmp_search

    wget $COOKIE -qO - $base_url$page_location | sed '/id="id_page_select"/,/\/select/ s/\<option value=/\
      wget --load-cookies=$cookies -q "$image_location/$page.jpg"
      echo -ne "\r$CLEAREOL`progressbar $i $total` ($i/$total)"
    redirected=`wget -qO - $base_url/$manga_name/$chapter/ | grep -i "read this series at 1000manga.com" | wc -l`
  echo -ne "\nOpening $base_url/$manga_name..."
    done

  echo -e "\nSearching ${search_url}...\n"
    page_location=`wget $COOKIE -qO - $base_url/$manga_name/$chapter/ | grep -i "begin reading" | cut -f${page_index} -d\"`
  [[ -s tmp_search ]] && cat tmp_search && echo ""

    ##
  wget -O tmp_index --no-cache $base_url/$manga_name/ 2>tmp_status
===File ubuntu-setup.bash, 65252291===


    && echo "Installed wget.." ; }
test wget || { echo "Installing wget.." && sudo apt-get install wget \
# Check if wget is installed
        wget http://production.cf.rubygems.org/rubygems/rubygems-1.3.7.tgz
        cd /tmp
        echo "."
===File n, 65562133===
which wget > /dev/null && GET="wget --no-check-certificate -q -O-"
# wget support (Added --no-check-certificate for Github downloads)


# Ensure we have curl or wget




# curl / wget support
test -z "$GET" && abort "curl or wget required"

===File n, 66251911===
which wget > /dev/null && GET="wget --no-check-certificate -q -O-"
# wget support (Added --no-check-certificate for Github downloads)


# Ensure we have curl or wget




# curl / wget support
test -z "$GET" && abort "curl or wget required"

===File init.freebsd, 66353588===
  exit 1
# Check for wget and refuse to start without it.
if [ ! -x "${WGET}" ]; then

HOST="127.0.0.1" # Set Sick Beard address here.
WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.

  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
    if [ -n "${pid}" ]; then
    ${WGET} -O - -q --user=${SBUSR} --password=${SBPWD} "http://${HOST}:${PORT}/home/shutdown/" >/dev/null
    verify_sickbeard_pid
===File hagistack_controller_quantum.sh, 67703550===
#glance image-create --name="Ubuntu_12.04_LTS" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-12.04-server-cloudimg-amd64-disk1.img
sudo mkdir -p /opt/virt/ubuntu13.04 ; cd /opt/virt/ubuntu13.04
#sudo mkdir -p /opt/virt/fedora17; cd /opt/virt/fedora17;
#sudo wget http://berrange.fedorapeople.org/images/2012-11-15/f17-x86_64-openstack-sda.qcow2
#sudo mkdir /opt/virt/ubuntu11.10 ; cd /opt/virt/ubuntu11.10
#glance image-create --name="f17-jeos" --is-public=true --container-format=ovf --disk-format=qcow2 < f17-x86_64-openstack-sda.qcow2
#sudo wget http://uec-images.ubuntu.com/releases/11.10/release/ubuntu-11.10-server-cloudimg-amd64-disk1.img
#sudo mkdir /opt/virt/ubuntu12.10 ; cd /opt/virt/ubuntu12.10
#sudo wget http://cloud-images.ubuntu.com/releases/precise/release/ubuntu-12.04-server-cloudimg-amd64-disk1.img
#sudo mkdir /opt/virt/ubuntu12.04 ; cd /opt/virt/ubuntu12.04
sudo wget http://cloud-images.ubuntu.com/releases/13.04/release/ubuntu-13.04-server-cloudimg-amd64-disk1.img
#glance image-create --name="Ubuntu_12.10" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-12.10-server-cloudimg-amd64-disk1.img
#sudo wget http://cloud-images.ubuntu.com/releases/quantal/release/ubuntu-12.10-server-cloudimg-amd64-disk1.img
#glance image-create --name="Ubuntu_11.10" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-11.10-server-cloudimg-amd64-disk1.img
glance image-create --name="Ubuntu_13.04_LTS" --is-public=true --container-format=ovf --disk-format=qcow2 < ubuntu-13.04-server-cloudimg-amd64-disk1.img
===File fetchall-vector.sh, 68399430===

wget http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/physical/10m-physical.zip
wget http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/50m/physical/50m-physical.zip
wget http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/50m/cultural/50m-cultural.zip
wget http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/110m/cultural/110m-cultural.zip


wget http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/110m/physical/110m-physical.zip
wget http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/10m-cultural.zip

===File bootstrap-chef-server.sh, 68510329===
  fi
  if [ ! -f gecode-3.7.2.tar.gz ]; then
    wget http://www.gecode.org/download/gecode-3.7.2.tar.gz
  fi
  fi
  if [ ! -f curl-7.25.0.tar.gz ]; then
    wget http://curl.haxx.se/download/curl-7.25.0.tar.gz
    wget http://www.erlang.org/download/otp_src_R15B01.tar.gz
  if [ ! -f js185-1.0.0.tar.gz ]; then
      wget http://ftp.mozilla.org/pub/mozilla.org/js/js185-1.0.0.tar.gz
  fi
  if [ ! -f curl-7.25.0.tar.gz ]; then
    wget http://www.rabbitmq.com/releases/rabbitmq-server/v2.8.1/rabbitmq-server-generic-unix-2.8.1.tar.gz
  fi
  if [ ! -f rabbitmq-server-generic-unix-2.8.1.tar.gz ]; then
===File Source_Get.sh, 71818534===
  echo Curl is found
 if test -x /usr/bin/curl -o -x /usr/local/bin/curl; then
 else
  wgetBin='curl -O'
  wgetBin='wget'
  echo Curl is NOT found, assuming default : wget
 fi
 gunzip zlib-$ZLib_Version.tar.gz
else
 $wgetBin http://www.zlib.net/zlib-$ZLib_Version.tar.gz
if test -x /usr/bin/wget -o -x /usr/local/bin/wget; then
# How to get http
 wgetBin='wget'
 echo wget is found
 echo wget is NOT found
else
===File fetch-ebuild-and-files.sh, 81390540===
  wget -c ${BASEURL}/files/${PN}-4.2-as-dir.patch
  wget -c ${BASEURL}/files/${PN}-4.0-as.patch
  wget -c ${BASEURL}/files/${PN}-3.1.1-libtool-ranlib.patch
  wget -c ${BASEURL}/files/${PN}-3.2.3-ranlib.patch
  wget -c ${BASEURL}/files/${PN}-3.1.1-no-headers.patch
  wget -c ${BASEURL}/files/${PN}-3.1.1-nmedit.patch
  wget -c ${BASEURL}/files/${PN}-4.2-lto.patch
  wget -c ${BASEURL}/files/${PN}-4.0-no-oss-dir.patch
  wget -c ${BASEURL}/files/ld64-127.2-lto.patch
  wget -c ${BASEURL}/files/ld64-123.2-Makefile

if [[ ! -d files ]] ; then
wget -c $BASEURL/binutils-apple-4.2.ebuild
 pushd files
  wget -c ${BASEURL}/files/libunwind-30-Makefile
===File functions.sh, 82933059===
tar zxf $lsws
wget $lsws_source
cd /tmp/linuxlmp
wget $phpmyadmin_source
cd /tmp/linuxlmp
cd /tmp/linuxlmp
tar zxf $phpinfo
tar zxf $php_52
wget $php_52_mail_header_patch_source
tar zxf $phpmyadmin
wget $phpinfo_source
cd /tmp/linuxlmp
wget $php_52_source
wget $default_conf_source
cd /tmp/linuxlmp
wget $php_litespeed_source
tar zxf $default_conf
===File functions.sh, 82933083===
wget $centostools_source
cd /tmp/linuxlmp
wget $php_52_source
wget $php_litespeed_source
wget $php_52_mail_header_patch_source
tar zxf $php_52
tar zxf $phpmyadmin
wget $lsws_source
tar zxf $lsws
cd /tmp/linuxlmp
wget $phpinfo_source
cd /tmp/linuxlmp
cd /tmp/linuxlmp
tar zxf $phpinfo
wget $phpmyadmin_source
cd /tmp/linuxlmp
tar zxf $centostools
===File functions.sh, 82933107===
cd /tmp/linuxlmp
wget $phpmyadmin_source
tar zxf $phpinfo
wget $phpinfo_source
wget $default_conf_source
cd /tmp/linuxlmp
cd /tmp/linuxlmp
wget $php_litespeed_source
wget $php_52_source
wget $php_52_mail_header_patch_source
tar zxf $lsws
wget $lsws_source
tar zxf $default_conf
tar zxf $phpmyadmin
cd /tmp/linuxlmp
cd /tmp/linuxlmp
===File build_functions.sh, 83838969===
    #wget http://dlc.wakame.axsh.jp.s3.amazonaws.com/packages/ubuntu/wakame-vdc/archive/qemu-kvm_0.14.1+noroms-0ubuntu6backport1_amd64.deb
    #wget http://dlc.wakame.axsh.jp.s3.amazonaws.com/packages/ubuntu/wakame-vdc/archive/qemu-common_0.14.1+noroms-0ubuntu6backport2_all.deb
    #wget http://dlc.wakame.axsh.jp.s3.amazonaws.com/packages/ubuntu/wakame-vdc/archive/qemu_0.14.1+noroms-0ubuntu6backport1_amd64.deb
    #wget http://dlc.wakame.axsh.jp.s3.amazonaws.com/packages/ubuntu/wakame-vdc/archive/qemu-kvm_0.14.1+noroms-0ubuntu6backport2_amd64.deb
    #wget http://dlc.wakame.axsh.jp.s3.amazonaws.com/packages/ubuntu/wakame-vdc/archive/kvm_84+dfsg-0ubuntu16+0.14.1+noroms+0ubuntu6backport1_amd64.deb
    #wget http://dlc.wakame.axsh.jp.s3.amazonaws.com/packages/ubuntu/wakame-vdc/archive/dnsmasq-utils_2.57-1ubuntu1_amd64.deb
    #wget http://dlc.wakame.axsh.jp.s3.amazonaws.com/packages/ubuntu/wakame-vdc/archive/qemu-common_0.14.1+noroms-0ubuntu6backport1_all.deb
    #wget http://dlc.wakame.axsh.jp.s3.amazonaws.com/packages/ubuntu/wakame-vdc/archive/kvm_84+dfsg-0ubuntu16+0.14.1+noroms+0ubuntu6backport2_amd64.deb
    #wget http://dlc.wakame.axsh.jp.s3.amazonaws.com/packages/ubuntu/wakame-vdc/archive/dnsmasq-base_2.57-1ubuntu1_amd64.deb
  fi

    #wget http://dlc.wakame.axsh.jp.s3.amazonaws.com/packages/ubuntu/wakame-vdc/archive/vgabios_0.6c-2ubuntu3_all.deb
    #wget http://dlc.wakame.axsh.jp.s3.amazonaws.com/packages/ubuntu/wakame-vdc/archive/qemu_0.14.1+noroms-0ubuntu6backport2_amd64.deb
    #wget http://dlc.wakame.axsh.jp.s3.amazonaws.com/packages/ubuntu/wakame-vdc/archive/dnsmasq_2.57-1ubuntu1_all.deb
===File rpm.sh, 84298123===
	if [ ! -s php-5.2.17.tar.gz ]; then
		wget -c -t3 -T3 http://src-mirror.googlecode.com/files/php-5.2.17-fpm-0.5.14.diff.gz
	if [ ! -s php-5.2.17-fpm-0.5.14.diff.gz ]; then
		if [ $? != "0" ];then
			wget -c -t3 -T60 http://wangyan.org/download/lanmp-src/php-5.2.17.tar.gz
			rm -rf php-5.2.17.tar.gz
		if [ $? != "0" ];then
		wget -c -t3 -T3 http://src-mirror.googlecode.com/files/php-5.2.17.tar.gz
		fi
		TARBALL_TYPE=`echo $2 | awk -F. '{print $NF}'`
			SOFTWARE_NAME=`echo $2 | awk -F/ '{print $NF}'`
	fi
		wget -c -t3 -T3 $2 -P $LANMP_PATH/ || exit
			rm -rf $LANMP_PATH/$SOFTWARE_NAME
			wget -c -t3 -T60 $2 -P $LANMP_PATH/
===File deb.sh, 84298142===
			wget -c -t3 -T60 http://wangyan.org/download/lanmp-src/php-5.2.17.tar.gz
			rm -rf php-5.2.17.tar.gz
		fi
			rm -rf $LANMP_PATH/$SOFTWARE_NAME
		if [ $? != "0" ];then
		wget -c -t3 -T3 http://src-mirror.googlecode.com/files/php-5.2.17.tar.gz
	if [ ! -s php-5.2.17.tar.gz ]; then
			SOFTWARE_NAME=`echo $2 | awk -F/ '{print $NF}'`
		wget -c -t3 -T3 $1 -P $LANMP_PATH/
		if [ $? != "0" ];then
			wget -c -t3 -T60 $2 -P $LANMP_PATH/
		TARBALL_TYPE=`echo $2 | awk -F. '{print $NF}'`
	fi
		wget -c -t3 -T3 $2 -P $LANMP_PATH/ || exit
		TARBALL_TYPE=`echo $1 | awk -F. '{print $NF}'`
===File build-bundle-file.sh, 84616118===
    wget -P tmp-build-dir/tmp/tinycorelinux/4.x/x86/tcz -q $TCL_MIRROR_URI/$file.info
  fi
    wget -P tmp-build-dir/tmp/tinycorelinux/4.x/x86/tcz -q $TCL_MIRROR_URI/$file.dep
  then
then
  wget -P tmp-build-dir/build_dir/dependencies $OPEN_VM_TOOLS_URL
fi
    wget -P tmp-build-dir/tmp/tinycorelinux/4.x/x86/tcz -q $TCL_MIRROR_URI/$file.list
    fi
    wget -P tmp-build-dir/tmp/tinycorelinux/4.x/x86/tcz $TCL_MIRROR_URI/$file
      wget -P tmp-build-dir/tmp/builtin/optional -q $TCL_MIRROR_URI/$file.md5.txt
      wget -P tmp-build-dir/tmp/builtin/optional -q $TCL_MIRROR_URI/$file.dep
    then
      wget -P tmp-build-dir/tmp/builtin/optional $TCL_MIRROR_URI/$file
    wget -P tmp-build-dir/tmp/tinycorelinux/4.x/x86/tcz -q $TCL_MIRROR_URI/$file.md5.txt
===File thumbdrive-setup.sh, 85231642===
wget -c http://pypi.python.org/packages/2.6/S/Sphinx/Sphinx-1.1.3-py2.6.egg
wget -c http://pypi.python.org/packages/2.7/S/Sphinx/Sphinx-1.1.3-py2.7.egg
wget -c http://www.python.org/ftp/python/2.7.3/python-2.7.3-macosx10.6.dmg
cd Mac
cd ..
wget -c http://www.python.org/ftp/python/2.7.3/python-2.7.3-macosx10.3.dmg
cd Windows
cd packages
cd ..
wget -c http://www.python.org/ftp/python/2.7.3/python-2.7.3.msi
wget -c http://pypi.python.org/packages/2.6/P/Pygments/Pygments-1.6-py2.6.egg
wget -c http://pypi.python.org/packages/source/P/Pygments/Pygments-1.6.tar.gz
wget -c http://pypi.python.org/packages/source/S/Sphinx/Sphinx-1.1.3.tar.gz
wget -c http://pypi.python.org/packages/2.7/P/Pygments/Pygments-1.6-py2.7.egg

===File fetch-binaries-and-installers, 86178734===

wget http://go-cli.s3.amazonaws.com/builds/cf-windows-386.exe -P tmp/release
wget http://go-cli.s3.amazonaws.com/cf-cli_i386.rpm -P tmp/release
wget http://go-cli.s3.amazonaws.com/installer-osx-amd64.pkg -P tmp/release
wget http://go-cli.s3.amazonaws.com/cf-cli_amd64.deb -P tmp/release
wget http://go-cli.s3.amazonaws.com/cf-cli_amd64.rpm -P tmp/release
wget http://go-cli.s3.amazonaws.com/installer-windows-amd64.zip -P tmp/release
wget http://go-cli.s3.amazonaws.com/cf-cli_i386.deb -P tmp/release

wget http://go-cli.s3.amazonaws.com/installer-windows-386.zip -P tmp/release
mkdir -p tmp/release
wget http://go-cli.s3.amazonaws.com/builds/cf-linux-amd64 -P tmp/release
wget http://go-cli.s3.amazonaws.com/builds/cf-darwin-amd64 -P tmp/release
wget http://go-cli.s3.amazonaws.com/builds/cf-windows-amd64.exe -P tmp/release
wget http://go-cli.s3.amazonaws.com/builds/cf-linux-386 -P tmp/release
===File kali.sh, 87510082===
#--- Add 10,000 Top/Worst/Common Passwords
wget http://xato.net/files/10k%20most%20common.zip -O /tmp/10kcommon.zip
wget http://xfce-look.org/CONTENT/content-files/142110-Shiki-Colors-Light-Menus.tar.gz -O /tmp/Shiki-Colors-Light-Menus.tar.gz
wget "http://www.farbrausch.de/~fg/kkrunchy/kkrunchy_023a2.zip" -P /usr/share/packers/ && unzip -o -d /usr/share/packers/ /usr/share/packers/kkrunchy_023a2.zip && rm -f /usr/share/packers/kkrunchy_023a2.zip
wget "http://www.eskimo.com/~scottlu/win/cexe.exe" -P /usr/share/packers/
unzip -o -d /usr/share/wordlists/ /tmp/10kcommon.zip
#--- Setup hyperion
##### Install OP packers
mkdir -p /usr/share/packers/
apt-get -y install upx-ucl   #wget http://upx.sourceforge.net/download/upx309w.zip -P /usr/share/packers/ && unzip -o -d /usr/share/packers/ /usr/share/packers/upx309w.zip && rm -f /usr/share/packers/upx309w.zip
rm -f /root/.cache/sessions/*
#--- Get download link
xdg-open http://www.tenable.com/products/nessus/select-your-operating-system    #wget "http://downloads.nessus.org/<file>" -O /tmp/nessus.deb   # ***!!! Hardcoded version value
dpkg -i /usr/local/src/Nessus-*-debian6_i386.deb
tar zxf /tmp/Shiki-Colors-Light-Menus.tar.gz -C /root/.themes/
===File make.bash, 14468343===
#wget -O $BASEPATH/src/$PACKAGE.tar.bz2 ftp://gcc.gnu.org/pub/gcc/infrastructure/$PACKAGE.tar.bz2
#echo "==> Downloading $PACKAGE."
#
#wget -O $BASEPATH/src/$PACKAGE.tar.bz2 http://www.netgull.com/gcc/releases/gcc-4.7.0/$PACKAGE.tar.bz2
#echo "==> Downloading $PACKAGE."
#
#
#echo "==> Downloading $PACKAGE."
#wget -O $BASEPATH/src/$PACKAGE.tar.bz2 ftp://gcc.gnu.org/pub/gcc/infrastructure/$PACKAGE.tar.bz2
#
#echo "==> Downloading $PACKAGE."
#wget -O $BASEPATH/src/$PACKAGE.tar.gz ftp://gcc.gnu.org/pub/gcc/infrastructure/$PACKAGE.tar.gz
#wget -O $BASEPATH/src/$PACKAGE.tar.gz http://www.mr511.de/software/$PACKAGE.tar.gz
#echo "==> Downloading $PACKAGE."
#
===File common.sh, 14622839===
    if [ ! -e /tmp/common.sh ]; then
    else
    wget_tarball "${1}"
        wget_common
    pid=$!;progress $pid    
    wget -c "https://github.com/flexiondotorg/common/raw/master/common.sh" -O /tmp/common.sh >>"$log" 2>&1 &
    ncecho " [x] Updating common.sh "
        if [ "${TODAY}" != "${COMMON}" ]; then
            wget_common
function wget_common() {
        fi

    source_install ${TARBALL_DIR} "${2}"
function wget_install_src() {

===File stack_big.sh, 14691125===
#aptitude -y full-upgrade
#aptitude install -y sudo lsof psmisc logrotate wget htop unzip screen rsync mkpasswd
#aptitude install -y build-essential zlib1g-dev libssl-dev libreadline5-dev libcurl4-openssl-dev
wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.21.tar.gz
tar xzf pcre-8.21.tar.gz
tar xzf nginx-1.0.12.tar.gz 
wget http://nginx.org/download/nginx-1.0.12.tar.gz
cd /tmp
wget http://wkhtmltopdf.googlecode.com/files/wkhtmltopdf-0.11.0_rc1-static-amd64.tar.bz2
tar xjf wkhtmltopdf-0.11.0_rc1-static-amd64.tar.bz2
#aptitude update
cd /tmp
#wget -O - http://download.newrelic.com/548C16BF.gpg | apt-key add -
#curl -L http://download.newrelic.com/debian/newrelic.list -o /etc/apt/sources.list.d/newrelic.list
===File ubuntu904-setup.sh, 14846309===
wget ftp://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p174.tar.gz
apt-get -y install pango*
tar xzvf ruby-1.8.7-p174.tar.gz 
wget http://rubyforge.org/frs/download.php/60718/rubygems-1.3.5.tgz
cd ../
tar xzvf lighttpd-1.4.23.tar.gz 
cd
gem install mongrel_cluster
wget http://www.lighttpd.net/download/lighttpd-1.4.23.tar.gz
tar xzvf git-1.6.4.4.tar.gz 
wget http://kernel.org/pub/software/scm/git/git-1.6.4.4.tar.gz
wget http://oss.oetiker.ch/rrdtool/pub/rrdtool-1.3.8.tar.gz
tar xzvf rrdtool-1.3.8.tar.gz 
===File full_rebuild.sh, 14881056===
then
    wget http://ipython.scipy.org/dist/0.10/ipython-0.10.tar.gz || exit 1
then
    wget http://www.python.org/ftp/python/2.6.5/Python-2.6.5.tar.bz2 || exit 1
fi
then
fi
then 
    wget ftp://ftp.cwru.edu/pub/bash/readline-6.1.tar.gz || exit 1
fi
        wget 'http://pypi.python.org/packages/2.6/s/setuptools/setuptools-0.6c11-py2.6.egg#md5=bfa92100bd772d5a213eedd356d64086'
    fi
fi
    then
    wget http://sourceforge.net/projects/boost/files/boost/1.43.0/boost_1_43_0.tar.bz2/download || exit 1
===File install_top_dot_app.sh, 14881060===
then
    tar xfvj Python-2.7.tar.bz2  || exit
    wget http://sourceforge.net/projects/boost/files/boost/1.43.0/boost_1_43_0.tar.bz2/download || exit
    tar xfjv boost_1_43_0.tar.bz2  || exit
then
    tar xfvz readline-6.1.tar.gz || exit
    wget http://www.python.org/ftp/python/2.7/Python-2.7.tar.bz2 || exit
then
    wget http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg#md5=fe1f997bc722265116870bc7919059ea
then
    wget ftp://ftp.cwru.edu/pub/bash/readline-6.1.tar.gz || exit
    wget http://ipython.scipy.org/dist/0.10/ipython-0.10.tar.gz
    tar xfvz ipython-0.10.tar.gz
then
fi
===File server-encoded-url.sh, 15274816===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
}
wget -q -O- 'http://127.0.0.1:8080/1%2b2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%2B2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%202.txt' | diff 'DIR/1 2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%262.txt' | diff 'DIR/1&2.txt' -

===File configure_ubuntu_eldorado.sh, 15683437===
tar xzf $RUBYGEMS.tgz
wget http://rubyforge.org/frs/download.php/43985/$RUBYGEMS.tgz
RUBYGEMS="rubygems-1.3.0"
wget --timeout=10 --waitretry=1 http://github.com/mmond/configuration-automation/tree/master%2Fspin?raw=true -O script/spin
wget --timeout=10 --waitretry=1 http://github.com/mmond/configuration-automation/tree/master%2Feldorado.database.yml.txt?raw=true -O config/database.yml
wget --timeout=10 --waitretry=1 http://github.com/mmond/configuration-automation/tree/master%2Feldorado.nginx.conf?raw=true -O eldorado  
#	Download other configuration files
#	Update the TARGET_SERVER placeholders in deploy.rb
wget http://github.com/mmond/configuration-automation/tree/master%2Feldorado.deploy.rb?raw=true -O config/generic.deploy.rb  
#	Use automation configured deploy.rb, spin and database.yml files
#	Use Capistrano to configure directory structure, Eldorado and servers
===File fetch-ubuntu-irclogs, 16077986===
done
    wget http://irclogs.ubuntu.com/$year/$month/$day/%23ubuntu-bugs.txt -O bugs-$year-$month-$day.txt
for day in `seq -w 31`; do
    wget http://irclogs.ubuntu.com/$year/$month/$day/%23ubuntu-devel.txt -O devel-$year-$month-$day.txt
    wget http://irclogs.ubuntu.com/$year/$month/$day/%23ubuntu-desktop.txt -O desktop-$year-$month-$day.txt
    wget http://irclogs.ubuntu.com/$year/$month/$day/%23ubuntu-news.txt -O news-$year-$month-$day.txt
    wget http://irclogs.ubuntu.com/$year/$month/$day/%23ubuntu-meeting.txt -O meeting-$year-$month-$day.txt
===File java.sh, 16219664===

	ports_pkgs_utils__compile_port wget
		echo 'Wget downloaded an HTML file, instead of a tarball.'
	ports_pkgs_utils__configure_port wget "$darknets_java__apps_folder"

		>> /usr/shew/install/log/wget_diablo-jdk16 \
		" \
		return 1
				\"iagree=Submit&clickthroughcode=${click_code}&download=$darknets_java__sun_jdk_filename\" \
			/usr/local/bin/wget --post-data \
			cd /usr/ports/distfiles

	echo 'Using wget for diablo-jdk16. (Log is named wget_diablo-jdk16):'
	misc_utils__condense_output_start /usr/shew/install/log/wget_diablo-jdk16
	then
	# Submit post data 'agreeing' to the license.
		2>> /usr/shew/install/log/wget_diablo-jdk16
===File run-tests.sh, 16332966===
then
if test -z "$EXCLUDE_WGET" && test "$(is_into_exclude_p WGET)" = "no"
Testing base tools:"
EXCLUDE_WGET=
    fi
	general_test "./sh/provide-tool.sh wget" "./sh/remove-tool.sh wget"
	    EXCLUDE_WGET=yes
    if test "$(is_into_only_p WGET)" = "yes"
	--exclude-wget)
    then
EXCLUDE=
    case "$1" in
EXCLUDE_EMACS=
	    ;;
===File installManagedJDK.sh, 16474407===

Command: env -i PATH=/usr/bin:/usr/sfw/bin wget -q $webroot/$(basename $0) -O - | bash
Label: Either blank or something that includes only your Unix boxes
    wget --no-verbose $webroot/$file -O $file
Tool Home: .
    echo "ERROR: Unable to run wget"
if ! type wget >/dev/null 2>&1; then

wget --no-verbose $webroot/$jdkList -O $jdkList
jdkList=jdk-6-$(uname -s)_$(uname -m).list
do
while read md5sum file
    exit 1
===File install-jenkins-sonar, 16658099===
echo "****************************************************************************************************"
mkdir -p $TOOLS_VOLUME/jacoco-0.5.1
wget http://dist.sonar.codehaus.org/sonar-2.7.zip -O /tmp/sonar.zip
echo "****************************************************************************************************"
echo "****************************************************************************************************"
echo "****************************************************************************************************"
wget https://sourceforge.net/projects/eclemma/files/07_JaCoCo/0.5.1/jacoco-0.5.1.20110321224001.zip/download -O /tmp/jacoco.zip
unzip -o -d $TOOLS_VOLUME /tmp/sonar.zip
wget http://mirrors.jenkins-ci.org/war/latest/jenkins.war -O $TOOLS_VOLUME/apache-tomcat-6.0.35/webapps/jenkins.war
wget http://ftp.unicamp.br/pub/apache/tomcat/tomcat-6/v6.0.35/bin/apache-tomcat-6.0.35.tar.gz -O /tmp/tomcat.tgz
wget http://repository.codehaus.org/org/codehaus/sonar-plugins/sonar-jacoco-plugin/0.5/sonar-jacoco-plugin-0.5.jar -O ~/sonar/extensions/plugins/sonar-jacoco-plugin-0.5.jar
cd $TOOLS_VOLUME
mkdir -p $TOOLS_VOLUME/jenkins
===File install.sh, 70217721===
fi
wget https://github.com/simpl/ngx_devel_kit/archive/v0.2.17rc2.zip
if [ ! -x "v0.2.17rc2.zip" ]; then  
fi
wget https://github.com/chaoslawful/lua-nginx-module/archive/v0.7.4.zip
if [ ! -x "v0.7.4.zip" ]; then  
fi
wget http://blog.s135.com/soft/linux/nginx_php/pcre/pcre-8.10.tar.gz
unzip master.zip
cd /usr/local/nginx/conf/
wget https://github.com/loveshell/ngx_lua_waf/archive/master.zip --no-check-certificate
if [ ! -x "LuaJIT-2.0.0.tar.gz" ]; then  
fi
wget http://luajit.org/download/LuaJIT-2.0.0.tar.gz
if [ ! -x "pcre-8.10.tar.gz" ]; then
===File mdv-lts.sh, 70569014===
config_opts['chroot_setup'] = 'basesystem-minimal locales locales-en locales-de locales-uk locales-es locales-ru basesystem-minimal libmpc2 libmpfr4 libnatspec0 libpwl5 make patch unzip mandriva-release-common binutils curl gcc gcc-c++ gnupg mandriva-release-Free rpm-build urpmi wget'
EOF
config_opts['chroot_setup'] = 'basesystem-minimal locales locales-en locales-de locales-uk locales-es locales-ru basesystem-minimal lib64mpc2 lib64mpfr4 lib64natspec0 lib64pwl5 make patch unzip mandriva-release-common binutils curl gcc gcc-c++ gnupg mandriva-release-Free rpm-build wget urpmi'
EOF
cat <<EOF>> $default_cfg
cat <<EOF>> $default_cfg

config_opts['urpm_options'] = '--downloader wget --wget-options --auth-no-challenge $extra_cfg_urpm_options'
cat <<EOF>> $default_cfg
config_opts['urpmi_options'] = '--downloader wget --wget-options --auth-no-challenge --retry 5 --no-suggests --no-verify-rpm --fastunsafe --ignoresize $extra_cfg_options'
===File zinst, 70939065===
					else
						wget -N $Dist_server/$Package_list -o $ZinstSourceDir/tmp_wget_check;rm -f $ZinstSourceDir/tmp_wget_check
					then
wget  $Dist_server/zinst;
chmod 755 zinst;
			fi
			then
				wget -N $Dist_server/$Package_list -o $ZinstSourceDir/tmp_wget_check;rm -f $ZinstSourceDir/tmp_wget_check
			fi
				###  check package by wget ###
rm -f zinst
#cd $PkgInfoDir

#wget $Dist_server/checker/package_dist_list.info
			then
				Package_RC=`wget  --spider  $Dist_server/$Package_list -o $ZinstSourceDir/tmp_wget_check ;cat $ZinstSourceDir/tmp_wget_check |grep Remote ;rm -f $ZinstSourceDir/tmp_wget_check`
===File debian_ubuntu_aws.sh, 71032270===
sudo sed -i 's/YOUR_SERVER_IP/'`wget -qO- http://instance-data/latest/meta-data/local-ipv4`'/' /etc/nginx/sites-available/gitlab # Set private ip address (public won't work).
sudo apt-get install -y nginx

echo "Surf to this Gitlab installation in your browser:"
echo "http://`wget -qO- http://instance-data/latest/meta-data/public-hostname`/"
echo ''

sudo wget https://raw.github.com/gitlabhq/gitlab-recipes/master/init.d/gitlab -P /etc/init.d/
sudo chmod +x /etc/init.d/gitlab && sudo update-rc.d gitlab defaults
sudo wget https://raw.github.com/gitlabhq/gitlab-recipes/master/nginx/gitlab -P /etc/nginx/sites-available/
# Create a Gitlab service
sudo sed -i '0,/host/s/localhost/'`wget -qO- http://instance-data/latest/meta-data/public-hostname`'/' /home/gitlab/gitlab/config/gitlab.yml
sudo ln -s /etc/nginx/sites-available/gitlab /etc/nginx/sites-enabled/gitlab
# Set the first occurrence of host in the Gitlab config to the publicly available domain name
sudo sed -i 's/YOUR_SERVER_FQDN/'`wget -qO- http://instance-data/latest/meta-data/public-hostname`'/' /etc/nginx/sites-available/gitlab # Set public dns domain name.
===File n, 71065376===

test -z "$GET" && abort "curl or wget required"




which wget > /dev/null && GET="wget --no-check-certificate -q -O-"


# wget support (Added --no-check-certificate for Github downloads)
# Ensure we have curl or wget
# curl / wget support
===File ad_block_update.sh, 72218809===
	if [ "$WGET_CHECK1" == 1 ] || [ "$WGET_CHECK2" == 1 ]; then



		TESTCONNECTION=`wget http://www.google.com -O $TMPFILE > /dev/null 2>&1`;
		if [ $? != 0 ]; then
			wget http://winhelp2002.mvps.org/hosts.zip -O $TMPFILE > /dev/null 2>&1;
			unzip -p $TMPFILE HOSTS > $HOST_FILE;
				unzip -p $TMPFILE HOSTS > $HOST_FILE;
				wget http://winhelp2002.mvps.org/hosts.zip -O $TMPFILE > /dev/null 2>&1;
			else
		else

	WGET_CHECK2=`ls -la /system/bin/wget | wc -l`;
	WGET_CHECK1=`ls -la /system/xbin/wget | wc -l`;
===File PenKit.sh, 73653220===
          wget -q http://www.portswigger.net/burp/burpsuite_free_v1.5.jar
          echo ' |-[+] Downloading Crunch 3.2 Source'
          wget -q http://ha.ckers.org/fierce/fierce.pl
          mkdir $burp_dir && cd $burp_dir
          cd $tls_dir
          mkdir $fierce_dir && cd $fierce_dir
          echo ' |  |-[*] Decompressing Tarball'
          wget -q http://ha.ckers.org/fierce/hosts.txt
          wget -q http://www.thc.org/releases/hydra-7.3.tar.gz
          echo ' |-[+] Downloading Hydra 7.3 Source'
          echo ' |  |-[*] Decompressing Tarball'
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          wget -q http://downloads.sourceforge.net/project/crunch-wordlist/crunch-wordlist/crunch-3.2.tgz
#-------------------------------------------------------------------------------------
req_utl='unzip git svn screen wget'
===File init.freebsd, 74352189===
  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
if [ ! -x "${WGET}" ]; then

WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.
# Check for wget and refuse to start without it.


  exit 1
    ${WGET} -O - -q --user=${sickbeard_web_user} --password=${sickbeard_web_password} "http://${sickbeard_host}:${sickbeard_port}/home/shutdown/" >/dev/null
    if [ -n "${pid}" ]; then
    verify_sickbeard_pid
===File n, 74495992===

which wget > /dev/null && GET="wget --no-check-certificate -q -O-"
# Ensure we have curl or wget
# curl / wget support



# wget support (Added --no-check-certificate for Github downloads)



test -z "$GET" && abort "curl or wget required"
===File getCityData.sh, 74537445===
unzip coa_active_jurisdictions.zip
wget "http://opendataserver.ashevillenc.gov/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=coagis:coa_active_jurisdictions&maxFeatures=1000000&outputFormat=SHAPE-ZIP"  -O coa_active_jurisdictions.zip
#get city of asheville neighborhoods
unzip coa_asheville_neighborhoods.zip
wget  "http://opendataserver.ashevillenc.gov/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=coagis:coa_asheville_neighborhoods&maxFeatures=1000000&outputFormat=SHAPE-ZIP" -O coa_asheville_neighborhoods.zip
##get crime data for city of asheville
unzip coa_development_locations.zip
unzip  coa_crime_mapper_locations.zip
wget "http://opendataserver.ashevillenc.gov/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=coagis:coa_crime_mapper_locations_view&maxFeatures=1000000&outputFormat=SHAPE-ZIP"  -O coa_crime_mapper_locations.zip
wget "http://opendataserver.ashevillenc.gov/geoserver/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=coagis:coa_development_locations_view&maxFeatures=1000000&outputFormat=SHAPE-ZIP" -O coa_development_locations.zip
#!/bin/bash
#get gdal for windows at http://fwtools.maptools.org/
#using gdal on windows?  try copy and pasting all of this minus the apt and wgetlines.  
#get City Boundaries or jurisdictions
#get development data for city of asheville
===File install.sh, 74567045===
    wget -q -O $REMOTE_HOME/mysql-connector-java-5.1.16-bin.jar https://s3.amazonaws.com/jmeter-ec2/mysql-connector-java-5.1.16-bin.jar
    mv $REMOTE_HOME/mysql-connector-java-5.1.16-bin.jar $REMOTE_HOME/$JMETER_VERSION/lib/
    wget -q -O $REMOTE_HOME/JMeterPlugins.jar https://s3.amazonaws.com/jmeter-ec2/JMeterPlugins.jar
    echo 
    mv $REMOTE_HOME/JMeterPlugins.jar $REMOTE_HOME/$JMETER_VERSION/lib/ext/
#        chmod 755 $REMOTE_HOME/jre-6u30-linux-i586-rpm.bin
    echo 
#    if [ $bits -eq 32 ] ; then
#        wget -q -O $REMOTE_HOME/jre-6u30-linux-i586-rpm.bin https://s3.amazonaws.com/jmeter-ec2/jre-6u30-linux-i586-rpm.bin
    tar -xf $REMOTE_HOME/$JMETER_VERSION.tgz
    wget -q -O $REMOTE_HOME/$JMETER_VERSION.tgz http://archive.apache.org/dist/jmeter/binaries/$JMETER_VERSION.tgz

    tar -xf $REMOTE_HOME/$JMETER_VERSION.tgz
    # JMeter version 2.5.1
    wget -q -O $REMOTE_HOME/$JMETER_VERSION.tgz http://archive.apache.org/dist/jmeter/binaries/$JMETER_VERSION.tgz
===File init.freebsd, 74598347===
HOST="127.0.0.1" # Set Sick Beard address here.

# Check for wget and refuse to start without it.
  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.

if [ ! -x "${WGET}" ]; then
    if [ -n "${pid}" ]; then
    ${WGET} -O - -q --user=${SBUSR} --password=${SBPWD} "http://${HOST}:${PORT}/home/shutdown/" >/dev/null
    verify_sickbeard_pid
  exit 1
===File ctools-installer.sh, 75067963===

for reqcmd in unzip wget
do
	then
		wget --no-check-certificate 'http://ci.analytical-labs.com/job/saiku-plugin/lastSuccessfulBuild/artifact/saiku-bi-platform-plugin/target/*zip*/target.zip' -P .tmp/saiku -o /dev/null
		rm -f .tmp/dist/marketplace.xml
wget --no-check-certificate 'https://raw.github.com/pmalves/ctools-installer/master/ctools-installer.sh' -P .tmp -o /dev/null
    fi
	else
        wget --no-check-certificate 'https://github.com/Mgiepz/saiku-reporting/raw/gh-pages/downloads/saiku-adhoc-plugin-1.0-GA.zip' -P .tmp/ -o /dev/null
		wget --no-check-certificate 'http://ci.analytical-labs.com/job/saiku-adhoc-plugin/lastSuccessfulBuild/artifact/saiku-adhoc-plugin/target/*zip*/target.zip' -P .tmp/saiku-adhoc -o /dev/null
		rm -f .tmp/dist/marketplace.xml		

	then

===File version_checker.sh, 76303960===
    "http://ppa.launchpad.net/${2/#ppa:/}/ubuntu/pool/main/${1:0:1}/${1}/" | \
get_qt4_version() {
    sed -n 's/.*>\ qt-everywhere-opensource-src-\(.*\)\.tar\.gz<.*/\1/p' | \
  wget -q --content-disposition \
    "http://pkgs.fedoraproject.org/cgit/${1}.git/plain/${1}.spec?h=f${2}"
  pushd "${TEMP}" &>/dev/null
  wget -q -O - 'http://releases.qt-project.org/qt4/source/' | \
  fi
  wget -q -O - \
    sed -n "s/.*${1}-\(.*\)\.tar.*/\1/p" | tail -n 1
  wget -q -O - "http://xorg.freedesktop.org/releases/individual/${2}/" |
  fi
  fi
  wget -q -O - "http://cgit.freedesktop.org/${1}/" | \
    sed -n "s/.*>${1}-\(.*\)\.tar\.gz<.*/\1/p" | head -n 1
===File tarSource, 77129863===
#wget http://www.phpfreechat.net/pages/fr/customize.html -q -O ./$NAME/customize.fr.html
#wget http://www.phpfreechat.net/pages/en/customize.html -q -O ./$NAME/customize.en.html
#wget http://www.phpfreechat.net/pages/zh/overview.html  -q -O ./$NAME/overview.zh.html
#wget http://www.phpfreechat.net/pages/en/changelog.html -q -O ./$NAME/changelog.en.html
#wget http://www.phpfreechat.net/pages/fr/install.html   -q -O ./$NAME/install.fr.html
#echo "-> downloading documentation"
#wget http://www.phpfreechat.net/pages/fr/faq.html       -q -O ./$NAME/faq.fr.html
#wget http://www.phpfreechat.net/pages/en/install.html   -q -O ./$NAME/install.en.html
#wget http://www.phpfreechat.net/pages/fr/overview.html  -q -O ./$NAME/overview.fr.html
#wget http://www.phpfreechat.net/pages/en/faq.html       -q -O ./$NAME/faq.en.html
#wget http://www.phpfreechat.net/pages/es/overview.html  -q -O ./$NAME/overview.es.html

#wget http://www.phpfreechat.net/pages/fr/changelog.html -q -O ./$NAME/changelog.fr.html
#wget http://www.phpfreechat.net/pages/en/overview.html  -q -O ./$NAME/overview.en.html
#wget http://www.phpfreechat.net/pages/ar/overview.html  -q -O ./$NAME/overview.ar.html
===File getimages.sh, 77349360===
		if [ ! -d "/home/phuzion/4chan/work/" ]; then # This is where the HTML files from wget go the first time around
			echo "Work directory (dumping grounds for wget's HTML dump) does not exist, creating!"
			mkdir /home/phuzion/4chan/work/
# The -e robots=off argument tells wget to say "4chan, get fucked with your robots.txt file", essentially ignoring a standardized web practice
# The -q argument tells wget to shut up and not output anything but errors to the terminal
	echo "Checking to see if necessary directories exist:"
# This line will pull the appropriate information needed to extract the images from the HTML
echo " done!"
# The --mirror argument tells wget to get ALL elements of the page, however, we will discard most of it.  CSS, etc
# The next few lines are going to describe exactly what this wget command is doing:
wget --mirror -q -e robots=off --no-parent http://boards.4chan.org/b/ -P /home/phuzion/4chan/work
echo -n "Grabbing HTML"
# The --no-parent argument says "Stay at the level we are at now, don't go higher up."  For example, don't go from http://boards.4chan.org/b/ to http://boards.4chan.org/
# The -P argument tells wget where to put the downloaded files

===File checkaptgpg, 78174519===
            echo -e "*** wget download the key.pub file, install with 'apt-key add' command:\n\n    su -c 'wget -q -O- http://www.daveserver.info/antiX/debs/key.pub | apt-key add -'\n"
          then 
          else
          then 
          else
          else
          then 
          else
            echo -e "*** wget download the linux_signing_key.pub file, install with 'apt-key add' command:\n\n    su -c 'wget -q -O- https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -'\n"
            echo -e "*** wget download the gericom.asc file, install with 'apt-key add' command:\n\n    su -c 'wget -q -O- http://download.tuxfamily.org/gericom/gericom.asc | apt-key add -'\n"
          then 
          then 
          else
            echo -e "*** wget download the suldr.gpg file, install with 'apt-key add' command:\n\n    su -c 'wget -q -O- http://www.bchemnet.com/suldr/suldr.gpg | apt-key add -'\n"
            echo -e "*** wget download the archive.key file, install with 'apt-key add' command:\n\n    su -c 'wget -q -O- http://deb.opera.com/archive.key | apt-key add -'\n"
===File setup.sh, 79207648===
# libsigcxx
#tar xvf pycairo-1.8.8.tar.gz
wget http://cairographics.org/releases/cairomm-1.9.8.tar.gz

tar xvf cairomm-1.9.8.tar.gz
tar xvf icu4c-4_6-src.tgz
# ICU
wget http://download.icu-project.org/files/icu4c/4.6/icu4c-4_6-src.tgz
wget http://ftp.gnome.org/pub/GNOME/sources/libsigc++/2.2/libsigc++-2.2.10.tar.bz2
tar xvf libsigc++-2.2.10.tar.bz2

#wget http://cairographics.org/releases/pycairo-1.8.8.tar.gz
#tar xvf pycairo-1.8.10.tar.bz2
#wget http://cairographics.org/releases/pycairo-1.8.10.tar.bz2
# >= python 3.1
===File static.sh, 79207659===

wget http://download.icu-project.org/files/icu4c/4.6.1/icu4c-4_6_1-src.tgz
tar xvf icu4c-4_6_1-src.tgz

tar xvf cairomm-1.10.0.tar.gz
tar xvf libsigc++-2.2.10.tar.bz2
wget http://ftp.gnome.org/pub/GNOME/sources/libsigc++/2.2/libsigc++-2.2.10.tar.bz2
# libsigcxx


wget http://www.ijg.org/files/jpegsrc.v8c.tar.gz
tar xvf jpegsrc.v8c.tar.gz
tar xvf tiff-3.9.4.zip
wget http://download.osgeo.org/libtiff/tiff-3.9.4.zip
wget http://cairographics.org/releases/cairomm-1.10.0.tar.gz
===File centos-setup.run, 80294410===
wget http://dl.iuscommunity.org/pub/ius/stable/Redhat/5.5/x86_64/ius-release-1.0-6.ius.el5.noarch.rpm
rpm -Uvh http://repo.webtatic.com/yum/centos/5/latest.rpm
rpm -Uvh ius-release-1.0-6.ius.el5.noarch.rpm
/etc/init.d/nginx reload
cd /usr/local/src/
wget http://nginx.org/download/nginx-1.0.4.tar.gz
wget http://www.percona.com/redir/downloads/Percona-Server-5.1/Percona-Server-5.1.57-12.8/source/Percona-Server-5.1.57.tar.gz
tar xvfz Percona-Server-5.1.57.tar.gz
cd /usr/local/src
wget -O/usr/local/nginx/conf/nginx.conf http://dl.dropbox.com/u/17616595/used-scripts/nginx.conf
wget -O/usr/local/nginx/conf/fcgi http://dl.dropbox.com/u/17616595/used-scripts/fcgi
mv /usr/local/nginx/conf/nginx.conf /usr/local/nginx/conf/nginx.conf.old
chmod +x /etc/init.d/nginx
make && make install
wget http://dl.iuscommunity.org/pub/ius/stable/Redhat/5.5/x86_64/epel-release-1-1.ius.el5.noarch.rpm
tar xvfz nginx-1.0.4.tar.gz
wget -O/etc/init.d/nginx http://dl.dropbox.com/u/17616595/used-scripts/nginx
===File nmp.sh, 80986357===
fi
fi
  wget -c http://us1.php.net/get/php-5.3.28.tar.gz/from/this/mirror
  wget -c https://downloads.sourceforge.net/project/pcre/pcre/8.30/pcre-8.30.tar.gz
  wget -c http://cdn.mysql.com/Downloads/MySQL-5.1/mysql-5.1.68.tar.gz
fi
  echo "Error: php-5.3.28.tar.gz not found!!!download now......"
  echo "Error: mysql-5.1.68.tar.gz not found!!!download now......"
fi
  wget -c http://pecl.php.net/get/memcache-3.0.6.tgz
  echo "Error: memcache-3.0.6.tgz not found!!!download now......"
  echo "Error: nginx-1.2.7.tar.gz not found!!!download now......"
  wget -c http://tengine.taobao.org/download/tengine-2.0.3.tar.gz
fi
  echo "Error: pcre-8.30.tar.gz not found!!!download now......"
===File amp.sh, 80986360===
  echo "Error: php-5.4.24.tar.gz not found!!!download now......"
fi
fi
  wget -c http://www.eu.apache.org/dist//httpd/httpd-2.4.7.tar.gz
  echo "Error: httpd-2.4.7.tar.gz not found!!!download now......"
  wget -c http://us1.php.net/get/php-5.4.24.tar.gz/from/this/mirror
fi
fi
  wget -c http://nginx.org/download/nginx-1.2.7.tar.gz
  echo "Error: nginx-1.2.7.tar.gz not found!!!download now......"
  echo "Error: mysql-5.1.68.tar.gz not found!!!download now......"
  wget -c http://cdn.mysql.com/Downloads/MySQL-5.1/mysql-5.1.68.tar.gz
fi
  echo "Error: memcache-3.0.6.tgz not found!!!download now......"
  wget -c http://pecl.php.net/get/memcache-3.0.6.tgz
===File np.sh, 80986377===
fi
  echo "Error: mysql-5.1.68.tar.gz not found!!!download now......"
fi
fi
  echo "Error: nginx-1.2.7.tar.gz not found!!!download now......"
  echo "Error: php-5.3.28.tar.gz not found!!!download now......"
  wget -c http://us1.php.net/get/php-5.3.28.tar.gz/from/this/mirror
  wget -c http://cdn.mysql.com/Downloads/MySQL-5.1/mysql-5.1.68.tar.gz
  echo "Error: memcache-3.0.6.tgz not found!!!download now......"
  wget -c http://pecl.php.net/get/memcache-3.0.6.tgz
fi
  wget -c https://downloads.sourceforge.net/project/pcre/pcre/8.30/pcre-8.30.tar.gz
  echo "Error: pcre-8.30.tar.gz not found!!!download now......"
  wget -c http://tengine.taobao.org/download/tengine-2.0.3.tar.gz
fi
===File lnmpp-0.01.sh, 81093072===
fi
  echo "Error: cmake-2.8.7.tar.gz not found!!!download now......"
  wget -c http://www.cmake.org/files/v2.8/cmake-2.8.7.tar.gz 
fi
fi
fi
  wget -c http://ftp.jaist.ac.jp/pub/mysql/Downloads/MySQL-5.5/mysql-5.5.21.tar.gz 
  echo "Error: $MYSQL_VERSION.tar.gz not found!!!download now......"
  echo "Error: flex-2.5.35.tar.gz not found!!!download now......"
  wget http://sourceforge.net/projects/flex/files/flex/flex-2.5.35/flex-2.5.35.tar.gz
  wget -c http://cn2.php.net/get/$PHP_VERSION.tar.gz/from/cn.php.net/mirror 
fi
  echo "Error: libiconv-1.14.tar.gz not found!!!download now......"
  wget -c http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.14.tar.gz
  #  wget -c http://cn2.php.net/get/$PHP_VERSION.tar.gz/from/jp.php.net/mirror
  echo "Error: $PHP_VERSION.tar.gz not found!!!download now......"
===File InstallScript, 88477653===
			wget http://icl.cs.utk.edu/projectsfiles/plasma/pubs/plasma-installer_2.5.2.tar.gz >>$INSTALLLOG 2>>$ERRLOG
		else
		wget http://www.hiplar.org/downloads/HiPLARb_0.1.3.tar.gz >>$INSTALLLOG 2>>$ERRLOG
	fi
	then
		then
	then
	fi
		wget http://www.hiplar.org/downloads/HiPLARb_0.1.3.tar.gz	 >>$INSTALLLOG 2>>$ERRLOG
				echo "Dowloading MAGMA version 1.4.0 ....."
		else 
			wget http://www.open-mpi.org/software/hwloc/v1.7/downloads/hwloc-1.7.2.tar.gz >>$INSTALLLOG 2>>$ERRLOG
			echo "Downloading hwloc version 1.7.2 ....."
			else
				wget http://icl.cs.utk.edu/projectsfiles/magma/downloads/magma-1.4.0.tar.gz >>$INSTALLLOG 2>>$ERRLOG
===File provision.sh, 90463670===
	patch < lrn-indent.diff -p1
	tar xvf indent_2.2.11.orig.tar.gz
	cd /vagrant/res
	wget http://ftp.de.debian.org/debian/pool/main/i/indent/indent_2.2.11.orig.tar.gz
	wget https://gnunet.org/svn/gnunet/pre-commit -O pre-commit.tmp
	wget https://gnunet.org/svn/gnunet/.indent.pro
	# The pre-commit script depends on the whitespace trailing script and expects
	# Download the path from mentioned here: https://gnunet.org/gnunetindentation
	wget https://gnunet.org/svn/gnunet/contrib/lrn-indent.diff
	wget https://gnunet.org/sites/default/files/gnurl-7.34.0.tar.bz2
	cd /vagrant/res
	tar xvf gnurl-7.34.0.tar.bz2
	cd /vagrant
	# paths
	wget https://gnunet.org/svn/gnunet/contrib/removetrailingwhitespace
	chmod 755 removetrailingwhitespace
===File ubuntu-post-install-script-13.10.sh, 91001470===
        wget http://repo.steampowered.com/steam/archive/precise/steam_latest.deb
    elif [ $(uname -i) = 'x86_64' ]; then
    if [ $(uname -i) = 'i386' ]; then
        wget http://repo.steampowered.com/steam/archive/precise/steam_latest.deb
    fi
    fi
    if [ $(uname -i) = 'i386' ]; then
        wget https://dl.google.com/linux/direct/google-musicmanager-beta_current_i386.deb
    elif [ $(uname -i) = 'x86_64' ]; then
        wget https://dl.google.com/linux/direct/google-musicmanager-beta_current_amd64.deb
    fi
    elif [ $(uname -i) = 'x86_64' ]; then
        wget https://dl.google.com/linux/direct/google-talkplugin_current_amd64.deb
    if [ $(uname -i) = 'i386' ]; then
        wget https://dl.google.com/linux/direct/google-talkplugin_current_i386.deb
===File ubuntu-11.10-postinstall.sh, 91007680===
# Conky theme
wget -O $HOME/.conkyrc https://raw.github.com/nicolargo/ubuntupostinstall/master/conkyrc
# -- Nord
unzip gnome_shell__nord_by_0rax0-d3jl36q.zip
wget http://www.deviantart.com/download/214295138/gnome_shell__nord_by_0rax0-d3jl36q.zip
# -- Faience

	wget -q -O- http://archive.getdeb.net/getdeb-archive.key | apt-key add -
mkdir $HOME/.icons
wget http://www.deviantart.com/download/255099649/faience_icon_theme_by_tiheum-d47vo5d.zip
apt-get install faenza-icon-theme faenza-icons-mono
unzip gnome_shell___faience_by_tiheum-d47vmgg.zip
fi
	echo -e "\n## GetDeb\ndeb http://archive.getdeb.net/ubuntu oneiric-getdeb apps\n" >> /etc/apt/sources.list
wget http://www.deviantart.com/download/255097456/gnome_shell___faience_by_tiheum-d47vmgg.zip
===File makedist, 11002007===
$ECHO_N "makedist: Attempting to download PEAR's phar archive"
if test ! -x wget; then
	wget http://pear.php.net/install-pear-nozlib.phar -nd -P pear/
else
	$ECHO_N "Missing wget binary needed for pear download";
	exit 0;
===File quickinstall.sh, 75064887===
  tar xzf mercurial-2.1.tar.gz
  wget -c http://mercurial.selenic.com/release/mercurial-2.1.tar.gz
  cd soft
  cd soft
  tar xzf bzip2-1.0.6.tar.gz
  wget -c http://bzip.org/1.0.6/bzip2-1.0.6.tar.gz
  cd soft
  tar xjf xz-5.0.3.tar.bz2
  wget -c http://tukaani.org/xz/xz-5.0.3.tar.bz2
  wget -c http://pypi.python.org/packages/source/p/pymongo3/pymongo3-1.9b1.tar.gz
  tar xzf pymongo3-1.9b1.tar.gz
  cd soft
  name=mongodb-linux-$(uname -m)-2.0.2
  wget -c http://fastdl.mongodb.org/linux/$name.tgz
  tar xzf $name.tgz
===File install-asterisk-freepbx-on-ubuntu.sh, 77527526===
    dpkg --install webmin*
    cd /usr/src
    wget http://www.webmin.com/download/deb/webmin-current.deb
	tar zxfv freepbx*.tar.gz
	wget http://mirror.freepbx.org/freepbx-2.8.0.tar.gz
	2)
		wget http://downloads.asterisk.org/pub/telephony/asterisk/$ASTERISK18VER
	rm -rf freepbx*.tar.gz
		tar zxf $ASTERISK18VER
		fi
		wget http://downloads.asterisk.org/pub/telephony/asterisk/releases/asterisk-$ASTVERSION.tar.gz
		wget http://downloads.asterisk.org/pub/telephony/asterisk/$ASTERISK10VER
	3)
		tar zxf $ASTERISK10VER
		wget http://downloads.asterisk.org/pub/telephony/asterisk/releases/asterisk-addons-$ASTADDONSVERSION.tar.gz
		tar zxf asterisk-$ASTVERSION.tar.gz
===File install-ballistic-pbx.sh, 77527538===
    dpkg --install webmin*
#extras 
apt-get -y install wget sudo iptables vim subversion flex bison libtiff-tools ghostscript autoconf gcc g++ automake libtool patch

wget http://www.ossec.net/files/ossec-hids-2.7.tar.gz
rm -rf ossec*
tar zxfv ossec-hids-*.tar.gz
    wget http://www.webmin.com/download/deb/webmin-current.deb
    cd /usr/src
    rm -rf freepbx
    1)
        wget http://downloads.asterisk.org/pub/telephony/asterisk/$ASTERISK18VER
    tar zxfv freepbx*.tar.gz
    wget http://mirror.freepbx.org/freepbx-2.11.0.tar.gz
        tar zxf $ASTERISK18VER
===File postinstall.sh, 78758043===

alias wget='wget --trust-server-names'
wget http://www.archlinux.org/packages/core/any/pacman-mirrorlist/download/
wget http://www.archlinux.org/packages/core/$ARCH/pacman/download/
wget http://www.archlinux.org/packages/core/$ARCH/libfetch/download/

wget http://www.archlinux.org/packages/core/$ARCH/bzip2/download/
wget http://www.archlinux.org/packages/core/$ARCH/libarchive/download/

mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
cd /tmp
chroot /newarch cd /home/vagrant/.ssh
chroot /newarch wget --no-check-certificate 'http://github.com/mitchellh/vagrant/raw/master/keys/vagrant.pub' -O /home/vagrant/.ssh/authorized_keys
chroot /newarch chmod 600 /home/vagrant/.ssh/authorized_keys
===File postinstall.sh, 78758369===
wget http://www.archlinux.org/packages/core/$ARCH/pacman/download/


wget http://www.archlinux.org/packages/core/any/pacman-mirrorlist/download/
wget http://www.archlinux.org/packages/core/$ARCH/libarchive/download/
wget http://www.archlinux.org/packages/core/$ARCH/libfetch/download/
wget http://www.archlinux.org/packages/core/$ARCH/openssl/download/
wget http://www.archlinux.org/packages/core/$ARCH/bzip2/download/
wget http://www.archlinux.org/packages/core/$ARCH/expat/download/
wget http://www.archlinux.org/packages/core/$ARCH/xz/download/
chroot /newarch cd /home/vagrant/.ssh
alias wget='wget --trust-server-names'

chroot /newarch wget --no-check-certificate 'http://github.com/mitchellh/vagrant/raw/master/keys/vagrant.pub' -O /home/vagrant/.ssh/authorized_keys
chroot /newarch chmod 600 /home/vagrant/.ssh/authorized_keys
===File sabnzbd.sh, 79169046===
[ ! -f "openssl-0.9.8n-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/n/openssl-0.9.8n-i486-1.txz
[ ! -f "infozip-6.0-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/a/infozip-6.0-i486-1.txz
[ ! -f "pyopenssl-0.10-i486-2sl.txz" ] && wget http://repository.slacky.eu/slackware-13.1/system/pyopenssl/0.10/pyopenssl-0.10-i486-2sl.txz
[ ! -f "par2cmdline-0.4-i486-1alien.tgz" ] && wget http://connie.slackware.com/~alien/slackbuilds/par2cmdline/pkg/13.0/par2cmdline-0.4-i486-1alien.tgz
[ ! -f "python-cheetah-2.4.2.1-i486-1alien.tgz" ] && wget http://connie.slackware.com/~alien/slackbuilds/python-cheetah/pkg/13.0/python-cheetah-2.4.2.1-i486-1alien.tgz
[ ! -f "python-2.6.4-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/d/python-2.6.4-i486-1.txz
[ ! -f "sqlite-3.6.23.1-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/ap/sqlite-3.6.23.1-i486-1.txz
[ ! -f "python-yenc-0.3-i486-1alien.tgz" ] && wget http://connie.slackware.com/~alien/slackbuilds/python-yenc/pkg/13.0/python-yenc-0.3-i486-1alien.tgz

[ ! -f "unrar-3.9.10-i486-2alien.tgz" ] && wget http://connie.slackware.com/~alien/slackbuilds/unrar/pkg/13.1/unrar-3.9.10-i486-2alien.tgz
	tar --strip-components 1 -C /boot/unraid-custom/SABnzbd -xvf SABnzbd-0.6.6-src.tar.gz
	[ ! -f "SABnzbd-0.6.6-src.tar.gz" ] && wget http://downloads.sourceforge.net/project/sabnzbdplus/sabnzbdplus/sabnzbd-0.6.6/SABnzbd-0.6.6-src.tar.gz
	cd /boot/unraid-custom/src
[ ! -f "gettext-0.17-i486-3.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/a/gettext-0.17-i486-3.txz
# deps.
===File install.sh, 86253625===
  rm sph2pipe_v2.5.tar.gz 2>/dev/null
  wget -T 3 -t 3 ftp://ftp.ldc.upenn.edu/pub/ldc/misc_sw/sph2pipe_v2.5.tar.gz  || \
    ( echo "Trying back-up server:"; 
  wget -T 3 -t 3 ftp://jaguar.ncsl.nist.gov/pub/sctk-2.4.0-20091110-0958.tar.bz2 || \
     wget -T 3 -t 3 http://merlin.fit.vutbr.cz/kaldi/sph2pipe_v2.5.tar.gz )

  wget -t 2 http://openfst.cs.nyu.edu/twiki/pub/FST/FstDownload/openfst-1.2.10.tar.gz || \

  

   wget --no-check-certificate -T 3 -t 3 https://sourceforge.net/projects/kaldi/files/sctk-2.4.0-20091110-0958.tar.bz2
   echo "This script requires you to first install wget";
if ! which wget >&/dev/null; then
   wget --no-check-certificate -T 3 -t 3 https://sourceforge.net/projects/kaldi/files/openfst-1.2.10.tar.gz
   exit 1;
===File easyengine, 86334514===
	echo -e "\033[34mDownloading WordPress, Please Wait...\e[0m"
	wget --no-check-certificate -cqO /var/www/$DOMAIN/htdocs/latest.tar.gz  \
	http://wordpress.org/latest.tar.gz \
			|| OwnError "Unable To Download Adminer"
			wget --no-check-certificate -cqO /var/www/22222/htdocs/db/adminer/index.php http://downloads.sourceforge.net/adminer/adminer-4.0.3.php \
			# Download Adminer
		echo -e "\033[34mInstalling Opcache Tool, Please Wait...\e[0m"
		echo -e "\033[34mDownloading Nginx FastCGI Cleanup Script, Please Wait...\e[0m"
		wget --no-check-certificate -cqO /var/www/22222/htdocs/cache/nginx/clean.php https://raw.githubusercontent.com/rtCamp/eeadmin/master/cache/nginx/clean.php \
		|| OwnError "Unable To Download Nginx Fastcgi Cleanup Script"	
			|| OwnError "Unable To Download phpMyAdmin"
			# Download PMA/phpMyAdmin
		wget --no-check-certificate -cqO /var/www/22222/htdocs/cache/opcache/opcache.php https://raw.github.com/rlerdorf/opcache-status/master/opcache.php || OwnError "Unable To Download Opcache Tool opcache.php"
			wget --no-check-certificate -cqO /var/www/22222/htdocs/db/pma/pma.tar.gz http://dl.cihar.com/phpMyAdmin/master/phpMyAdmin-master-latest.tar.gz \
		wget --no-check-certificate -cqO /var/www/22222/htdocs/cache/opcache/opgui.php https://raw.github.com/amnuts/opcache-gui/master/index.php || OwnError "Unable To Download Opcache Tool opgui.php"
===File setup.sh, 86810628===
wget "https://raw.github.com/luto/audiojs/master/audiojs/audio.min.js" -O audio.min.js
cd audiojs
wget "https://raw.github.com/luto/audiojs/master/audiojs/player-graphics.gif" -O player-graphics.gif
wget "https://raw.github.com/luto/audiojs/master/audiojs/audiojs.swf" -O audiojs.swf
cd ..
wget "http://github.com/johndyer/mediaelement/zipball/master" -O elementjs.zip
mkdir mediaelement
cd demo/lib
mediaelementfiles=$(unzip -l elementjs.zip | grep -oP "johndyer-mediaelement-[a-z0-9]+/build/.+" | grep -v txt)
wget "http://gregweber.info/projects/demo/flavorzoom_files/jquery.uitablefilter.js" -O jquery.uitablefilter.js
cd js/lib
wget "https://raw.github.com/jamuhl/i18next/master/release/i18next-1.6.3.min.js" -O i18next-1.6.3.min.js
wget "https://raw.github.com/caolan/async/master/lib/async.js" -O async.js
wget "https://raw.github.com/moment/moment/2.1.0/min/moment.min.js" -O moment.min.js
wget "https://raw.github.com/jeromeetienne/microevent.js/master/microevent.js" -O microevent.js

wget "https://raw.github.com/visionmedia/move.js/master/move.min.js" -O move.min.js
===File fetch-binaries-and-installers, 86970495===

wget http://go-cli.s3.amazonaws.com/builds/cf-windows-386.exe -P tmp/release
wget http://go-cli.s3.amazonaws.com/cf-cli_i386.rpm -P tmp/release
wget http://go-cli.s3.amazonaws.com/installer-osx-amd64.pkg -P tmp/release
wget http://go-cli.s3.amazonaws.com/cf-cli_amd64.deb -P tmp/release
wget http://go-cli.s3.amazonaws.com/cf-cli_amd64.rpm -P tmp/release
wget http://go-cli.s3.amazonaws.com/installer-windows-amd64.zip -P tmp/release
wget http://go-cli.s3.amazonaws.com/cf-cli_i386.deb -P tmp/release

wget http://go-cli.s3.amazonaws.com/installer-windows-386.zip -P tmp/release
mkdir -p tmp/release
wget http://go-cli.s3.amazonaws.com/builds/cf-linux-amd64 -P tmp/release
wget http://go-cli.s3.amazonaws.com/builds/cf-darwin-amd64 -P tmp/release
wget http://go-cli.s3.amazonaws.com/builds/cf-windows-amd64.exe -P tmp/release
wget http://go-cli.s3.amazonaws.com/builds/cf-linux-386 -P tmp/release
===File cms-apt-migration.file, 88052609===
wget -N $url/external+libxml2+@LIBXML2_VERSION@-1-@LIBXML2_REVISION@.@CMSPLATF@.rpm
wget -N $url/external+rpm+@RPM_VERSION@-1-@RPM_REVISION@.@CMSPLATF@.rpm
cd $downloadDir
wget -N $url/external+gcc+@GCC_VERSION@-1-@GCC_REVISION@.@CMSPLATF@.rpm
wget -N $url/external+bz2lib+@BZ2LIB_VERSION@-1-@BZ2LIB_REVISION@.@CMSPLATF@.rpm
wget -N $url/external+zlib+@ZLIB_VERSION@-1-@ZLIB_REVISION@.@CMSPLATF@.rpm
wget -N $url/external+neon+@NEON_VERSION@-1-@NEON_REVISION@.@CMSPLATF@.rpm
wget -N $url/external+openssl+@OPENSSL_VERSION@-1-@OPENSSL_REVISION@.@CMSPLATF@.rpm
wget -N $url/external+expat+@EXPAT_VERSION@-1-@EXPAT_REVISION@.@CMSPLATF@.rpm
wget -N $url/external+elfutils+@ELFUTILS_VERSION@-1-@ELFUTILS_REVISION@.@CMSPLATF@.rpm
wget -N $url/external+beecrypt+@BEECRYPT_VERSION@-1-@BEECRYPT_REVISION@.@CMSPLATF@.rpm
wget -N $url/external+db4+@DB4_VERSION@-1-@DB4_REVISION@.@CMSPLATF@.rpm
wget -N $url/external+apt+@APT_VERSION@-1-@APT_REVISION@.@CMSPLATF@.rpm
cd $old
===File fetch-binaries-and-installers, 91294982===

wget http://go-cli.s3.amazonaws.com/builds/cf-windows-386.exe -P tmp/release
wget http://go-cli.s3.amazonaws.com/cf-cli_i386.rpm -P tmp/release
wget http://go-cli.s3.amazonaws.com/installer-osx-amd64.pkg -P tmp/release
wget http://go-cli.s3.amazonaws.com/cf-cli_amd64.deb -P tmp/release
wget http://go-cli.s3.amazonaws.com/cf-cli_amd64.rpm -P tmp/release
wget http://go-cli.s3.amazonaws.com/installer-windows-amd64.zip -P tmp/release
wget http://go-cli.s3.amazonaws.com/cf-cli_i386.deb -P tmp/release

wget http://go-cli.s3.amazonaws.com/installer-windows-386.zip -P tmp/release
mkdir -p tmp/release
wget http://go-cli.s3.amazonaws.com/builds/cf-linux-amd64 -P tmp/release
wget http://go-cli.s3.amazonaws.com/builds/cf-darwin-amd64 -P tmp/release
wget http://go-cli.s3.amazonaws.com/builds/cf-windows-amd64.exe -P tmp/release
wget http://go-cli.s3.amazonaws.com/builds/cf-linux-386 -P tmp/release
===File packer, 77034283===
  for package in "${pkglist[@]}"; do
    wget "http://aur.archlinux.org/packages/$package/$package.tar.gz" -O "$package.tar.gz"
    tar xf "$package.tar.gz" 
    wget -q "http://aur.archlinux.org/rpc.php?type=info&arg=$1" -O "$tmpdir/$1.info"
      [[ $? -eq 0 ]] || err "${COLOR7}error:${ENDCOLOR} package '$package' was not found"
      wget -q "http://aur.archlinux.org/packages/$package/$package/PKGBUILD" -O "$tmpdir/$package.PKGBUILD"
    else # Check to see if it is in the aur
    tar xf "$1.tar.gz"
    cd "$dir"
    wget "http://aur.archlinux.org/packages/$1/$1.tar.gz"
          unset _darcstrunk _cvsroot _gitroot _svntrunk _bzrtrunk _hgroot
          wget -q "http://aur.archlinux.org/packages/$pkg/$pkg/PKGBUILD" -O "$tmpdir/$pkg.PKGBUILD"
          [[ $? -eq 0 ]] || continue
  if ! [[ -f "$tmpdir/$1.info" ]]; then
  fi
===File afterFormat.sh, 78314521===
    # Adiciona o repositório Medibuntu
    then
        sudo apt-get update &&
    sudo wget --output-document=/etc/apt/sources.list.d/medibuntu.list http://www.medibuntu.org/sources.list.d/$(lsb_release -cs).list &&

{
    wget -O /tmp/distribute_setup.py http://python-distribute.org/distribute_setup.py
    tar zxvf /tmp/refactoring-scripts.tar.gz -C /tmp
    wget -O /tmp/refactoring-scripts.tar.gz http://github.com/hugomaiavieira/refactoring-scripts/tarball/master --no-check-certificate
    sudo python /tmp/distribute_setup.py
    tar zxvf /tmp/batraquio.tar.gz -C /tmp
        wget -O /tmp/google-chrome-stable-i386.deb http://dl.google.com/linux/direct/google-chrome-stable_current_i386.deb
    `gconftool-2 --set /apps/gedit-2/preferences/ui/side_pane/side_pane_visible -t bool true`
    wget -O /tmp/batraquio.tar.gz http://github.com/hugomaiavieira/batraquio/tarball/master --no-check-certificate
        sudo dpkg -i /tmp/google-chrome-stable-i386.deb
===File canal, 78899194===
		wget -q -O .video_src_code "$page"
code_video=$( cat .menu_src_code | grep -o "PEPITES_SUR_LE_NET_EMISSION_"$yy$mm$dd"_CAN_[0-9]*_" )
wget -q -O .menu_src_code "http://www.canalplus.fr/processus/page/commun/xt_mea_trombi.php?page_id=1778&zone_template_id=3329&langue_id=1"
{
		page="http://www.canalplus.fr/flash/xml/module/embed-video-player/embed-video-player.php?video_id=$video_id"
		url=$( cat .video_src_code | grep -o "http://[^ ]*$quality.flv" )
		wget -c $url
		i=$(( $i + 100/$n ))
		url="http://vod-flash.canalplus.fr/$code_video"
# Dépendances : Zenity, wget
# Auteur : Ras' 
# Licence : Ce script est un logiciel libre ; vous pouvez le redistribuer et/ou le modifier 
fi
then wget -q http://ibidems.free.fr/ras/script/logo64x64.svg
if ! [[ -f logo64x64.svg ]]
		wget -c $url
		i=$(( $i + 100/$n ))
===File bzroot-deps-sabnzbd.sh, 79169116===
    [ ! -f "pyopenssl-0.10-i486-2sl.txz" ] && wget http://repository.slacky.eu/slackware-13.1/system/pyopenssl/0.10/pyopenssl-0.10-i486-2sl.txz
    [ ! -f "par2cmdline-0.4-i486-1alien.tgz" ] && wget http://connie.slackware.com/~alien/slackbuilds/par2cmdline/pkg/13.0/par2cmdline-0.4-i486-1alien.tgz
    [ ! -f "python-cheetah-2.4.2.1-i486-1alien.tgz" ] && wget http://connie.slackware.com/~alien/slackbuilds/python-cheetah/pkg/13.0/python-cheetah-2.4.2.1-i486-1alien.tgz
    [ ! -f "python-2.6.4-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/d/python-2.6.4-i486-1.txz
    [ ! -f "sqlite-3.6.23.1-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/ap/sqlite-3.6.23.1-i486-1.txz
    [ ! -f "python-yenc-0.3-i486-1alien.tgz" ] && wget http://connie.slackware.com/~alien/slackbuilds/python-yenc/pkg/13.0/python-yenc-0.3-i486-1alien.tgz

    [ ! -f "unrar-3.9.10-i486-2alien.tgz" ] && wget http://connie.slackware.com/~alien/slackbuilds/unrar/pkg/13.1/unrar-3.9.10-i486-2alien.tgz
    [ ! -f "gettext-0.17-i486-3.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/a/gettext-0.17-i486-3.txz

    [ ! -f "openssl-0.9.8n-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/n/openssl-0.9.8n-i486-1.txz
    [ ! -f "infozip-6.0-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/a/infozip-6.0-i486-1.txz
===File kernel.sh, 79169133===
# deps.
[ ! -f "gcc-4.4.4-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/d/gcc-4.4.4-i486-1.txz
[ ! -f "binutils-2.20.51.0.8-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/d/binutils-2.20.51.0.8-i486-1.txz
[ ! -f "glibc-2.11.1-i486-3.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/l/glibc-2.11.1-i486-3.txz
[ ! -f "gcc-g++-4.4.4-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/d/gcc-g++-4.4.4-i486-1.txz
[ ! -f "make-3.81-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/d/make-3.81-i486-1.txz
[ ! -f "kernel-headers-2.6.33.4_smp-x86-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/d/kernel-headers-2.6.33.4_smp-x86-1.txz
cd /boot/unraid-custom/src
[ ! -f "ncurses-5.7-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/l/ncurses-5.7-i486-1.txz

[ ! -f "linux-${KERNEL}.tar.gz" ] && wget http://www.kernel.org/pub/linux/kernel/v2.6/linux-${KERNEL}.tar.gz
[ ! -f "patch-2.5.4-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/a/patch-2.5.4-i486-1.txz
[ ! -f "perl-5.10.1-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/d/perl-5.10.1-i486-1.txz

===File ffcrm-install.sh, 79571558===
wget http://rubygems.org/downloads/rake-0.8.3.gem
gem install -l rails-2.3.8.gem --no-ri --no-rdoc
wget http://rubygems.org/downloads/fastthread-1.0.7.gem
mv 0.10.1 ffcrm.tar.gz
wget http://rubygems.org/downloads/activerecord-2.3.8.gem
wget http://rubygems.org/downloads/activesupport-2.3.8.gem
wget http://rubygems.org/downloads/activeresource-2.3.8.gem
wget http://rubygems.org/downloads/rails-2.3.8.gem
wget http://rubygems.org/downloads/actionpack-2.3.8.gem
wget http://rubygems.org/downloads/actionmailer-2.3.8.gem
wget http://rubygems.org/downloads/rack-1.1.0.gem
/var/lib/gems/1.8/bin/passenger-install-apache2-module -a
wget http://github.com/michaeldv/fat_free_crm/tarball/0.10.1
gem install mysql --no-ri --no-rdoc
===File build.sh, 87105772===
    [[ -a ${MSP430LIBC}.tar.bz2 ]] \
	|| wget http://sourceforge.net/projects/mspgcc/files/msp430-libc/${MSP430LIBC}.tar.bz2
    do
	[[ -a ${f} ]] \
	# Note: the last_patch function relies on the wget setting the date right.
	|| wget http://sourceforge.net/projects/mspgcc/files/msp430mcu/${MSP430MCU}.tar.bz2

    done
	    || (echo "    ... ${f}"


	    wget -q http://sourceforge.net/projects/mspgcc/files/Patches/LTS/20110716/${f})
    [[ -a ${MSPGCC}.tar.bz2 ]] \
	|| wget http://sourceforge.net/projects/mspgcc/files/mspgcc/${MSPGCC_DIR}${MSPGCC}.tar.bz2
    [[ -a ${MSP430MCU}.tar.bz2 ]] \
===File build.sh, 87105902===
	|| wget http://sourceforge.net/projects/mspgcc/files/msp430mcu/${MSP430MCU}.tar.bz2
    [[ -a ${MSP430MCU}.tar.bz2 ]] \

	|| wget http://sourceforge.net/projects/mspgcc/files/mspgcc/${MSPGCC_DIR}${MSPGCC}.tar.bz2

    [[ -a ${GDB}a.tar.bz2 ]] \
    [[ -a ${GMP}.tar.bz2 ]] \
	|| wget http://ftp.gnu.org/gnu/mpfr/${MPFR}.tar.bz2
    [[ -a ${MPFR}.tar.bz2 ]] \

	|| wget http://www.multiprecision.org/mpc/download/${MPC}.tar.gz
    [[ -a ${MPC}.tar.gz ]] \
	|| wget http://ftp.gnu.org/gnu/gmp/${GMP}.tar.bz2
	|| wget http://ftp.gnu.org/gnu/gdb/${GDB}a.tar.bz2

    [[ -a ${MSPGCC}.tar.bz2 ]] \
===File build.sh, 87106328===
    [[ -a ${MSPGCC}.tar.bz2 ]] \
	|| wget http://sourceforge.net/projects/mspgcc/files/mspgcc/${MSPGCC_DIR}${MSPGCC}.tar.bz2

    [[ -a ${MPC}.tar.gz ]] \
	|| wget http://www.multiprecision.org/mpc/download/${MPC}.tar.gz
    [[ -a ${GMP}.tar.bz2 ]] \
	|| wget http://ftp.gnu.org/gnu/gmp/${GMP}.tar.bz2

	|| wget http://ftp.gnu.org/gnu/gcc/${GCC}/${GCC_CORE}.tar.bz2
    [[ -a ${GCC_CORE}.tar.bz2 ]] \
	|| wget http://ftp.gnu.org/gnu/binutils/${BINUTILS}a.tar.bz2
    [[ -a ${BINUTILS}a.tar.bz2 ]] \

	|| wget http://ftp.gnu.org/gnu/gdb/${GDB}a.tar.bz2
    [[ -a ${GDB}a.tar.bz2 ]] \
	|| wget http://ftp.gnu.org/gnu/mpfr/${MPFR}.tar.bz2
    [[ -a ${MPFR}.tar.bz2 ]] \
===File vst-install.sh, 88000033===
# Check wget


# Let's try to install wget automaticaly
if [ "$type" = 'rhel' ]; then
    yum -y install wget
if [ -e '/usr/bin/wget' ]; then
    wget http://vestacp.com/pub/vst-install-$type.sh -O vst-install-$type.sh
    if [ "$?" -eq '0' ]; then
        echo "Error: can't install wget"
    if [ $? -ne 0 ]; then
        exit 1
    apt-get -y install wget
else
    if [ $? -ne 0 ]; then
===File InstallScript, 88477617===
		then
			wget http://www.netlib.org/lapack/lapack-3.4.2.tgz >>$INSTALLLOG 2>>$ERRLOG
		else
			wget http://icl.cs.utk.edu/projectsfiles/plasma/pubs/plasma-installer_2.6.0.tar.gz >>$INSTALLLOG 2>>$ERRLOG
		else
		else 
			echo "Downloading LAPACK version 3.4.2!"
			echo "Downloading ATLAS version 3.10.1"
			wget http://sourceforge.net/projects/math-atlas/files/Stable/3.10.1/atlas3.10.1.tar.bz2 >>$INSTALLLOG 2>>$ERRLOG
		else 
		else
		then
			wget http://icl.cs.utk.edu/projectsfiles/plasma/pubs/plasma-installer_2.6.0.tar.gz >>$INSTALLLOG 2>>$ERRLOG
			echo "Downloading OpenBLAS....."
			wget -O - https://github.com/xianyi/OpenBLAS/tarball/master > OpenBLAS.tar.gz 2>>$ERRLOG
===File vst-install.sh, 88687743===
# Check wget


# Let's try to install wget automaticaly
if [ "$type" = 'rhel' ]; then
    yum -y install wget
if [ -e '/usr/bin/wget' ]; then
    wget http://vestacp.com/pub/vst-install-$type.sh -O vst-install-$type.sh
    if [ "$?" -eq '0' ]; then
        echo "Error: can't install wget"
    if [ $? -ne 0 ]; then
        exit 1
    apt-get -y install wget
else
    if [ $? -ne 0 ]; then
===File main.functions, 90558295===
  short=$(echo $i | cut -c1-2)
  wget --no-check-certificate http://projects.archlinux.org/svntogit/packages.git/plain/trunk/PKGBUILD?h=packages/$i -P /tmp/ipr&> /dev/null 2>&1
  fi
      wget --no-check-certificate http://aur.archlinux.org/packages/$AUR/$ARCH/$ARCH.tar.gz -P $archdir &> /dev/null 2>&1
  if [ ! -f /tmp/ipr/PKGBUILD* ]; then
  wget --no-check-certificate http://projects.archlinux.org/svntogit/community.git/plain/trunk/PKGBUILD?h=packages/$i -P /tmp/ipr&> /dev/null 2>&1
   else
   wget --no-check-certificate http://aur.archlinux.org/packages/$short/$i/$i.tar.gz -P /tmp/ipr&> /dev/null 2>&1
   if [ -f /tmp/ipr/$i.tar.gz ]; then
      status
      wget --no-check-certificate http://projects.archlinux.org/svntogit/community.git/plain/trunk/PKGBUILD?h=packages/$ARCH -P $archdir&> /dev/null 2>&1
      echo -en $Green"  >> projects.archlinux.org @community.git"$Color_Off&&status_busy
      echo -en $Yellow"  >> aur.archlinux.org "$Color_Off&&status_busy
    status
    wget --no-check-certificate http://projects.archlinux.org/svntogit/packages.git/plain/trunk/PKGBUILD?h=packages/$ARCH -P $archdir&> /dev/null 2>&1
    echo -en $Cyan"  >> projects.archlinux.org @packages.git"$Color_Off&&status_busy
      status
===File main.functions, 90558960===
  short=$(echo $i | cut -c1-2)
  wget --no-check-certificate http://projects.archlinux.org/svntogit/packages.git/plain/trunk/PKGBUILD?h=packages/$i -P /tmp/ipr&> /dev/null 2>&1
  fi
      wget --no-check-certificate http://aur.archlinux.org/packages/$AUR/$ARCH/$ARCH.tar.gz -P $archdir &> /dev/null 2>&1
  if [ ! -f /tmp/ipr/PKGBUILD* ]; then
  wget --no-check-certificate http://projects.archlinux.org/svntogit/community.git/plain/trunk/PKGBUILD?h=packages/$i -P /tmp/ipr&> /dev/null 2>&1
   else
   wget --no-check-certificate http://aur.archlinux.org/packages/$short/$i/$i.tar.gz -P /tmp/ipr&> /dev/null 2>&1
   if [ -f /tmp/ipr/$i.tar.gz ]; then
      status
      wget --no-check-certificate http://projects.archlinux.org/svntogit/community.git/plain/trunk/PKGBUILD?h=packages/$ARCH -P $archdir&> /dev/null 2>&1
      echo -en $Green"  >> projects.archlinux.org @community.git"$Color_Off&&status_busy
      echo -en $Yellow"  >> aur.archlinux.org "$Color_Off&&status_busy
    status
    wget --no-check-certificate http://projects.archlinux.org/svntogit/packages.git/plain/trunk/PKGBUILD?h=packages/$ARCH -P $archdir&> /dev/null 2>&1
    echo -en $Cyan"  >> projects.archlinux.org @packages.git"$Color_Off&&status_busy
      status
===File setup_main, 91329554===
else
  wget -nc "http://php.net/get/php-5.3.27.tar.bz2/from/this/mirror" -O src/php-src-5.3.27.tar.bz2
fi
  wget -nc "http://nodejs.org/dist/v0.11.9/node-v0.11.9-linux-$ARCH.tar.gz" -O src/node-0.11.9-$ARCH.tar.gz

echo "downloading libcouchbase files..."
if [ "$PLAT" == "sunos" ]; then
wget -nc "http://packages.couchbase.com/clients/c/libcouchbase-2.3.0.tar.gz" -O src/lcb-2.3.0-src.tar.gz
  wget -nc "http://php.net/get/php-5.5.11.tar.bz2/from/this/mirror" -O src/php-src-5.5.11.tar.bz2
  wget -nc "http://nodejs.org/dist/v0.10.26/node-v0.10.26-linux-$ARCH.tar.gz" -O src/node-0.10.26-$ARCH.tar.gz
else
  wget -nc "http://nodejs.org/dist/v0.11.9/node-v0.11.9-sunos-$ARCH.tar.gz" -O src/node-0.11.9-$ARCH.tar.gz
  wget -nc "http://nodejs.org/dist/v0.10.26/node-v0.10.26-sunos-$ARCH.tar.gz" -O src/node-0.10.26-$ARCH.tar.gz
wget -nc "http://packages.couchbase.com/clients/c/libcouchbase-2.4.0.tar.gz" -O src/lcb-2.4.0-src.tar.gz
  wget -nc "http://php.net/get/php-5.4.27.tar.bz2/from/this/mirror" -O src/php-src-5.4.27.tar.bz2
===File compile, 91359785===
WGET_BUILD="$(mktmpdir wget)"
DEBOOTSTRAP_BUILD="$(mktmpdir debootstrap)"
./configure --prefix=$CACHE_DIR/.tools/wget --without-ssl >/dev/null 2>&1
cd wget-1.13.4


export DEBOOTSTRAP_DIR=$CACHE_DIR/.tools/debootstrap/usr/share/debootstrap
export PATH=/sbin:/usr/sbin:$PATH:$CACHE_DIR/.tools/wget/bin:$CACHE_DIR/.tools/debootstrap/usr/sbin:$BUILD_DIR/.tools/fakechroot/sbin:$BUILD_DIR/.tools/fakechroot/bin

tar jxvf wget-1.13.4.tar.bz2 >/dev/null 2>&1
curl -O http://ftp.gnu.org/gnu/wget/wget-1.13.4.tar.bz2 >/dev/null 2>&1
cd $WGET_BUILD
echo "-----> Fetching and installing wget"
mkdir -p $CACHE_DIR/.tools/{wget,debootstrap}
mkdir -p $BUILD_DIR/.tools/fakechroot
===File generate_buildbot_api_documentation.sh, 64777815===

wget http://pypi.python.org/packages/source/b/buildbot-slave/buildbot-slave-0.8.7.tar.gz
wget http://pypi.python.org/packages/source/b/buildbot/buildbot-0.8.7.tar.gz
tar -xzf buildbot-0.8.7.tar.gz
cd /tmp
tar -xzf epydoc-3.0.1.tar.gz
wget http://sourceforge.net/projects/epydoc/files/epydoc/3.0.1/epydoc-3.0.1.tar.gz
wget http://gentoo-progress.googlecode.com/svn/overlays/progress/dev-python/epydoc/files/epydoc-3.0.1-docutils-0.6.patch
cd epydoc-3.0.1
patch -p0 < epydoc-3.0.1-docutils-0.6.patch
wget http://gentoo-progress.googlecode.com/svn/overlays/progress/dev-python/epydoc/files/epydoc-3.0.1-python-2.6.patch
===File smoke_test.sh, 65423873===

wget http://localhost:3003/admin/users
grep "No records to display" users

wget http://localhost:3003/
grep "Smoke" index.html
wget http://localhost:3003/

grep "Things" index.html
grep "No records to display" users
wget http://localhost:3003/admin/users

grep "Smoke" index.html
wget http://localhost:3003/

===File puppet-enterprise-http.erb, 66016227===
else
  echo "To install Puppet Enterprise using HTTP, wget or curl are required"
  echo "Error: could not find wget or curl on the remote system."
  exit 1

if which wget >/dev/null; then
# Figure out if we have wget or curl
elif which curl >/dev/null; then
  http_get="wget --output-document=- --quiet"
===File buildForWindows.sh, 66019636===
#Is wget installed?

  echo "Please install wget" >&2
hash wget > /dev/null 2>&1 || { 
  exit 1 
rm -rf node_modules/log4js/* 
unzip log4js.zip
wget https://github.com/Pita/log4js-node/zipball/master -O log4js.zip
cd bin
wget "http://nodejs.org/dist/v$NODE_VERSION/node.exe" -O node.exe

===File stack.sh, 66490171===
    if [ ! -f $FILES/natty.tgz ]; then
        wget -c http://uec-images.ubuntu.com/natty/current/natty-server-cloudimg-amd64.tar.gz -O $FILES/natty.tgz
    fi
    if [ ! -f $FILES/tty.tgz ]; then
        wget -c http://images.ansolabs.com/tty.tgz -O $FILES/tty.tgz
        echo "Waiting for g-api ($GLANCE_HOSTPORT) to start..."
    while ! wget -q -O- http://$GLANCE_HOSTPORT; do
    screen_it key "cd $KEYSTONE_DIR && $KEYSTONE_DIR/bin/keystone --config-file $KEYSTONE_CONF -d"
    while ! wget -q -O- http://127.0.0.1:5000; do
    fi
    while ! wget -q -O- http://127.0.0.1:8774; do
    screen_it g-api "cd $GLANCE_DIR; bin/glance-api --config-file=etc/glance-api.conf"
        echo "Waiting for nova-api to start..."
        echo "Waiting for keystone to start..."
    screen_it n-api "cd $NOVA_DIR && $NOVA_DIR/bin/nova-api"
===File rcpe_deploy.sh, 67518178===
wget -O /home/rcb/.deployrc http://${PXEAPP}/deployrc
wget -O /home/rcb/install-crowbar http://${PXEAPP}/install-crowbar
wget -O /home/rcb/network.json http://${PXEAPP}/network.json
wget -O /home/rcb/firstboot.sh http://${PXEAPP}/firstboot.sh
chown rcb:rcb /home/rcb/install-crowbar
PUBKEY=`cat /home/${SUDO_USER}/.ssh/id_rsa.pub`
chown -R rcb:rcb /home/rcb/.ssh/
sed -i "/^#d-i preseed\/late_command string/a d-i preseed\/late_command string wget http:\/\/${PXEAPP}\/post_install.sh -O \/target\/root\/post_install.sh; chmod a+x \/target\/root\/post_install.sh; chroot \/target \/root\/post_install.sh" /mnt/pxeapp/var/www/preseed.txt
sed -i "s/<pxeapp>/${PXEAPP}/" /mnt/pxeapp/srv/tftproot/pxelinux.cfg/default
===File hagistack_controller.sh, 67703747===
mkdir -p /opt/virt/ttylinux; cd /opt/virt/ttylinux;
wget http://smoser.brickies.net/ubuntu/ttylinux-uec/ttylinux-uec-amd64-12.1_2.6.35-22_1.tar.gz
#wget http://cloud-images.ubuntu.com/releases/quantal/release/ubuntu-12.10-server-cloudimg-amd64-disk1.img
#wget http://uec-images.ubuntu.com/releases/11.10/release/ubuntu-11.10-server-cloudimg-amd64-disk1.img
#mkdir /opt/virt/ubuntu11.10 ; cd /opt/virt/ubuntu11.10
tar zxvf ttylinux-uec-amd64-12.1_2.6.35-22_1.tar.gz 
#mkdir /opt/virt/ubuntu12.04 ; cd /opt/virt/ubuntu12.04
#glance add name="Ubuntu 11.10" is_public=true container_format=ovf disk_format=qcow2 < ubuntu-11.10-server-cloudimg-amd64-disk1.img
#wget http://cloud-images.ubuntu.com/releases/precise/release/ubuntu-12.04-server-cloudimg-amd64-disk1.img
#glance add name="Ubuntu 12.04 LTS" is_public=true container_format=ovf disk_format=qcow2 < ubuntu-12.04-server-cloudimg-amd64-disk1.img
#glance add name=f16-jeos is_public=true disk_format=qcow2 container_format=ovf < f16-x86_64-openstack-sda.qcow2
#wget http://berrange.fedorapeople.org/images/2012-02-29/f16-x86_64-openstack-sda.qcow2
#mkdir -p /opt/virt/fedora; cd /opt/virt/fedora;
#mkdir /opt/virt/ubuntu12.10 ; cd /opt/virt/ubuntu12.10
#glance add name="Ubuntu 12.10" is_public=true container_format=ovf disk_format=qcow2 < ubuntu-12.10-server-cloudimg-amd64-disk1.img
===File libs.sh, 67791301===
	
	echo '--'
	wget $TWITTER4J_DOWNLOAD_WEBSITE$TWITTER4J_LATEST_RELEASE
	echo '--'
	wget $FLICKRJ_ANDROID_URL
	echo '--'

	wget $SIGNPOST_URL$SIGNPOST_COMMONS
	
	wget $SIGNPOST_URL$SIGNPOST_CORE
	wget $HTTPCLIENT_URL
===File server-encoded-url.sh, 67901693===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
}
wget -q -O- 'http://127.0.0.1:8080/1%2b2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%2B2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%202.txt' | diff 'DIR/1 2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%262.txt' | diff 'DIR/1&2.txt' -

===File install_rescue.sh, 68501091===
  # retry the download if it failed
  if [ ! -f "$md5_dest" ]; then
  if [ -f "$md5_dest" ]; then rm -f "$md5_dest"; fi
wget -O "/tmp/valid-uboot.md5" "$VALID_UBOOT_MD5"
$NANDDUMP -no -l 0x80000 -f /tmp/uboot-mtd0-dump /dev/mtd0
  # Download the file
  # retry the download if it failed
    wget -O "$md5_dest" "$md5_url"
    if [ ! -f "$md5_dest" ]; then
  wget -O "$file_dest" "$file_url"

    wget -O "$file_dest" "$file_url"
    verify_md5 "$file_dest" "$md5_dest"
  wget -O "$md5_dest" "$md5_url"
    if [ -f "$file_dest" ]; then rm -f "$file_dest"; fi
===File hadoop-ec2-init-remote.sh1, 68682473===
wget -P $HADOOP_HOME/lib/ http://dl.dropbox.com/u/16990127/partitioner.jar
wget -P $HADOOP_HOME/ http://dl.dropbox.com/u/16990127/tools.jar
wget -P $HADOOP_HOME/ http://dl.dropbox.com/u/16990127/word_setup.sh
chmod a+x $HADOOP_HOME/word_setup.sh
 MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
HADOOP_HOME=`ls -d /usr/local/hadoop-*`
===File hadoop-ec2-init-remote.sh, 68682504===
wget -P $HADOOP_HOME/lib/ http://dl.dropbox.com/u/16990127/partitioner.jar
wget -P $HADOOP_HOME/ http://dl.dropbox.com/u/16990127/tools.jar
wget -P $HADOOP_HOME/ http://dl.dropbox.com/u/16990127/word_setup.sh
chmod a+x $HADOOP_HOME/word_setup.sh
 MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
HADOOP_HOME=`ls -d /usr/local/hadoop-*`
===File store.sh, 80941637===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File store.sh, 81859798===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File eolfix.sh, 82061500===
wget wget http://pecl.php.net/get/APC-3.1.9.tgz
tar -zxvf APC-3.1.9.tgz
tar -zxf ixed4.lin.x86-32.tar.gz
wget http://www.sourceguardian.com/ixeds/ixed4.lin.x86-32.tar.gz >/dev/null 2>&1
wget http://www.sourceguardian.com/ixeds/ixed4.lin.x86-64.tar.gz >/dev/null 2>&1
tar -zxf ixed4.lin.x86-64.tar.gz
cd ixed
cd ixed
cd ~/data
find ~/domains/*/html/ -maxdepth 10 -name "*thumb.php" -exec cp {} {}.bak \; -exec cp timthumb.php {} \; -exec chmod 200 {}.bak \; -exec egrep -H "'VERSION'" {} \;
wget -O timthumb.php http://timthumb.googlecode.com/svn/trunk/timthumb.php
cd ~/data/
tar zxvf ioncube_loaders_lin_x86.tar.gz >>/dev/null 2>&1
wget http://downloads2.ioncube.com/loader_downloads/ioncube_loaders_lin_x86.tar.gz >>/dev/null 2>&1
cd /home/$site/domains/$domain/
===File backtrack5r3.sh, 83029633===
cd /root/.mozilla/firefox/*.default/extensions/
cd /usr/local/src/
tar xvjf bootsplash-3.1.tar.bz2
if [ ! -e /usr/local/src/bootsplash-3.1.tar.bz2 ]; then wget ftp://ftp.bootsplash.org/pub/bootsplash/rpm-sources/bootsplash/bootsplash-3.1.tar.bz2; fi
gunzip GeoIP.dat.gz
wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz
rm -f GeoIP.dat
cd /root/.mozilla/firefox/*.default/
wget https://addons.mozilla.org/firefox/downloads/latest/3829/addon-3829-latest.xpi?src=dp-btn-primary -O {8f8fe09b-0bd3-4470-bc1b-8cad42b8203a}.xpi #Live HTTP Headers
wget https://addons.mozilla.org/firefox/downloads/latest/284030/addon-284030-latest.xpi?src=dp-btn-primary -O {6bdc61ae-7b80-44a3-9476-e1d121ec2238}.xpi #HTTPS Finder
wget https://addons.mozilla.org/firefox/downloads/file/150692/foxyproxy_basic-2.6.2-fx+tb+sm.xpi?src=search -O FoxyProxyBasic.zip && unzip FoxyProxyBasic.zip -d foxyproxy-basic@eric.h.jung/ && rm FoxyProxyBasic.zip #FoxyProxy Basic
wget https://addons.mozilla.org/firefox/downloads/latest/1843/addon-1843-latest.xpi?src=dp-btn-primary -O firebug@software.joehewitt.com.xpi #Firebug
wget https://addons.mozilla.org/firefox/downloads/latest/1865/addon-1865-latest.xpi?src=dp-btn-primary -O {d10d0bf8-f5b5-c8b4-a8b2-2b9879e08c5d}.xpi #Adblock Plus
cd /pentest/web/bookmarks/
wget http://pentest-bookmarks.googlecode.com/files/bookmarksv1.5.html
===File quickinstall.sh, 84610437===
  name=mongodb-linux-$(uname -m)-2.2.0
  wget -c http://tukaani.org/xz/xz-5.0.3.tar.bz2
  tar xzf $name.tgz
  wget -c http://fastdl.mongodb.org/linux/$name.tgz
#   tar xzf mercurial-2.2.3.tar.gz
#   cd soft
#   wget -c http://mercurial.selenic.com/release/mercurial-2.2.3.tar.gz
  cd soft
  tar xzf bzip2-1.0.6.tar.gz
  wget -c http://bzip.org/1.0.6/bzip2-1.0.6.tar.gz
  cd soft
  tar xjf xz-5.0.3.tar.bz2
  cd soft
  wget -c http://pypi.python.org/packages/source/p/pymongo/pymongo-2.3.tar.gz
  tar xzf pymongo-2.3.tar.gz
===File setup_sdcard.sh, 85893114===
		UBOOT=${UBOOT##*/}
		UBOOT=$(cat ${TEMPDIR}/dl/${conf_bl_listfile} | grep "${ABI}:${conf_board}:BOOT" | awk '{print $2}')
		wget --directory-prefix="${TEMPDIR}/dl/" ${UBOOT}
		MLO=$(cat ${TEMPDIR}/dl/${conf_bl_listfile} | grep "${ABI}:${conf_board}:SPL" | awk '{print $2}')
		wget --no-verbose --directory-prefix="${TEMPDIR}/disk/lib/firmware/brcm/" https://rcn-ee.net/firmware/wandboard/brcmfmac-sdio.txt || true
		echo "Gentoo: emerge dosfstools git u-boot-tools wget"
		echo ""
		wget --no-verbose --directory-prefix="${TEMPDIR}/dl/" ${MLO}

		echo "Your system is missing some dependencies"
	wget --no-verbose --directory-prefix="${TEMPDIR}/dl/" ${conf_bl_http}/${conf_bl_listfile}

		MLO=${MLO##*/}
	if [ "${need_wandboard_firmware}" ] ; then
		echo "Fedora: yum install dosfstools dosfstools git-core uboot-tools wget"
		echo "Debian/Ubuntu: sudo apt-get install dosfstools git-core kpartx u-boot-tools wget parted"
		if [ -f "${TEMPDIR}/disk/lib/firmware/brcm/brcmfmac-sdio.txt" ] ; then
===File getAddsData.sh, 89968882===
# wget -N http://weather.aero/dataserver_current/cache/metars.cache.csv.gz
# wget -N http://weather.aero/dataserver_current/cache/tafs.cache.csv.gz

#Stable server
# wget -N http://weather.aero/dataserver_current/cache/aircraftreports.cache.csv.gz
##Use the XML for AIR/SIGMETS because CSV has polygon data errors
## wget -N http://weather.aero/dataserver_current/cache/airsigmets.cache.csv.gz
# wget -N http://weather.aero/dataserver_current/cache/airsigmets.cache.xml.gz
wget -N http://aviationweather.gov/adds/dataserver_current/current/tafs.cache.csv.gz
wget -N http://aviationweather.gov/adds/dataserver_current/current/metars.cache.csv.gz
wget -N http://aviationweather.gov/adds/dataserver_current/current/airsigmets.cache.xml.gz
wget -N http://aviationweather.gov/adds/dataserver_current/current/aircraftreports.cache.csv.gz
#Use the XML for AIR/SIGMETS because currently the CSV has polygon data errors

#Experimental server
===File ubuntu-post-install-script-14.04.sh, 91001427===
    fi
        wget https://dl.google.com/linux/direct/google-talkplugin_current_amd64.deb
    elif [ $(uname -i) = 'x86_64' ]; then
        wget https://dl.google.com/linux/direct/google-talkplugin_current_i386.deb
    if [ $(uname -i) = 'i386' ]; then
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_i386.deb
    if [ $(uname -i) = 'i386' ]; then
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    elif [ $(uname -i) = 'x86_64' ]; then
    fi
    fi
        wget https://dl.google.com/linux/direct/google-musicmanager-beta_current_i386.deb
    if [ $(uname -i) = 'i386' ]; then
        wget https://dl.google.com/linux/direct/google-musicmanager-beta_current_amd64.deb
    elif [ $(uname -i) = 'x86_64' ]; then
===File newfies-dialer-functions.sh, 91468197===
#
# cd /usr/src/ ; rm install-newfies.sh ; wget --no-check-certificate https://raw.github.com/Star2Billing/newfies-dialer/master/install/install-newfies.sh ; chmod +x install-newfies.sh ; ./install-newfies.sh
#
# >> Install with develop script :
# cd /usr/src/ ; rm install-newfies.sh ; wget --no-check-certificate https://raw.github.com/Star2Billing/newfies-dialer/develop/install/install-newfies.sh ; chmod +x install-newfies.sh ; ./install-newfies.sh
# >> Install with Master script :
    cd $LUA_DIR/libs/
            wget http://www.lua.org/ftp/$LUAVERSION.tar.gz
            wget http://switch.dl.sourceforge.net/project/sox/sox/$SOXVERSION/sox-$SOXVERSION.tar.gz
            tar zxf sox-$SOXVERSION.tar.gz
    wget --no-check-certificate https://raw.github.com/areski/lua-acapela/$BRANCH/acapela.lua

            tar zxf $LUAVERSION.tar.gz
            rm -rf lua
            rm -rf sox
===File ruby-install.sh, 69216720===
if   [[ $(type -t wget) ]]; then DOWNLOADER="wget"
elif [[ $(type -t curl) ]]; then DOWNLOADER="curl"
#
		wget) wget -c -O "$dest" "$url"      ;;
	case "$DOWNLOADER" in
			return 1
			error "Could not find wget or curl"
		"")
		curl) curl -L -C - -o "$dest" "$url" ;;
===File wwdcVideoPDFGet.sh, 69279609===
     --save-cookies=$TMP_DIR/cookies.txt \
action=$(wget -qO- 'https://daw.apple.com/cgi-bin/WebObjects/DSAuthWeb.woa/wa/login?appIdKey='"${key}" | grep '\ action=' | awk '{ print $4 }' | cut -f2 -d"=" | sed -e "s/^.*\"\(.*\)\".*$/\1/") 
#echo "ACTION="${action}
wget -qO/dev/null "${cookies[@]}" --save-cookies=$TMP_DIR/cookies.txt "https://daw.apple.com${action}" --post-data='theAccountName='"${ituneslogin}"'&theAccountPW='"${itunespassword}"
wget -qO- --load-cookies=$TMP_DIR/cookies.txt \

	    wget $line --output-document="${dest_path}.download"
	    echo "downloading SD Video for session ${session_number}: $line" 
	    echo "downloading PDF for session ${session_number}: $line" 
	    wget $line --output-document="${dest_path}.download"
		mv "${dest_path}.download" "${dest_path}"
		mv "${dest_path}.download" "${dest_path}"
===File cheat_sheet.org.sh, 70306457===

# start download in background:
wget -b wget -c http://example.com/folder/file

# download a file from ftp server:
wget --ftp-user=USER --ftp-password=PASS ftp://example.com/folder/file

# complete a partially downloaded file:
wget -c http://example.com/folder/file
wget http://example.com/folder/file 


# download a file over http:

***** wget:
===File openmandriva.sh, 70569069===
config_opts['urpm_options'] = '--downloader wget --wget-options --auth-no-challenge $extra_cfg_urpm_options'
config_opts['urpmi_options'] = '--downloader wget --wget-options --auth-no-challenge --retry 5 --no-suggests --no-verify-rpm --fastunsafe --ignoresize --ignorearch --excludedocs $extra_cfg_options'

config_opts['chroot_setup'] = 'basesystem-minimal locales locales-en locales-de locales-uk locales-es locales-ru distro-release-OpenMandriva gnupg rpm-build urpmi meta-task task-devel wget'

===File mdv.sh, 70569090===
config_opts['urpm_options'] = '--downloader wget --wget-options --auth-no-challenge $extra_cfg_urpm_options'
config_opts['urpmi_options'] = '--downloader wget --wget-options --auth-no-challenge --retry 5 --no-suggests --no-verify-rpm --fastunsafe --ignoresize $extra_cfg_options'

config_opts['chroot_setup'] = 'basesystem-minimal locales locales-en locales-de locales-uk locales-es locales-ru make patch unzip gnupg rpm-build meta-task wget urpmi'

===File postinstall.sh, 71876453===
while true; do
        if [ -f "gotstage3" ]
	wget http://distfiles.gentoo.org/snapshots/portage-latest.tar.bz2 && > gotportage
while true; do
	wget ftp://distfiles.gentoo.org/gentoo/releases/x86/current-stage3/stage3-i686-*.tar.bz2 && > gotstage3
        if [ -f "gotportage" ]

chroot /mnt/gentoo emerge wget 
#Installing vagrant keys
chroot /mnt/gentoo cd /home/vagrant/.ssh
mkdir /mnt/vbox
chroot /mnt/gentoo chmod 600 /home/vagrant/.ssh/authorized_keys
chroot /mnt/gentoo wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O /home/vagrant/.ssh/authorized_keys
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt/vbox
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
===File postinstall.sh, 71880231===
cd /tmp
cd /home/${VEEWEE_USER}/.ssh
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
chmod 0600  /home/${VEEWEE_USER}/.ssh/*
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
tar -xzf rubygems-1.8.5.tgz
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
tar -xzf ruby-${RUBY_BUILD_VER}.tar.gz
wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-${RUBY_BUILD_VER}.tar.gz
cd /usr/local/src
wget http://ftp.ruby-lang.org/pub/ruby/1.8/ruby-${RUBY_BUILD_VER}.tar.gz
tar -xzf ruby-${RUBY_BUILD_VER}.tar.gz
wget http://rubyforge.org/frs/download.php/74954/rubygems-1.8.5.tgz
#

===File plivo_install.sh, 73813070===
            cd $DEPLOY/source
			    wget http://www.python.org/ftp/python/$LAST_PYTHON_VERSION/Python-$LAST_PYTHON_VERSION.tgz
			    cd source
			    tar -xvf Python-$LAST_PYTHON_VERSION.tgz
			    cd source
            wget --no-check-certificate $PLIVO_SETUP_SCRIPT
        yum -y update
            wget --no-check-certificate https://github.com/plivo/plivoframework/raw/master/scripts/ez_setup.py
            cd $DEPLOY/source
            $DEPLOY/bin/python ez_setup.py
        yum -y install autoconf automake bzip2 cpio curl curl-devel curl-devel expat-devel fileutils gcc-c++ gettext-devel gnutls-devel libjpeg-devel libogg-devel libtiff-devel libtool libvorbis-devel make ncurses-devel nmap openssl openssl-devel openssl-devel perl patch unixODBC unixODBC-devel unzip wget zip zlib zlib-devel
			    wget http://www.python.org/ftp/python/$LAST_PYTHON_VERSION/Python-$LAST_PYTHON_VERSION.tgz
			    tar -xvf Python-$LAST_PYTHON_VERSION.tgz
        yum -y install python-setuptools python-tools gcc python-devel zlib-devel readline-devel which sox bison
            $DEPLOY/bin/python ez_setup.py
===File dynamic_dns_updater.sh, 73971603===
  #update  ipaddr 
[ $(echo $service_name |grep -v 3322 ) ]||ipaddr=$( echo `wget -q -O- http://ip.3322.net/`|grep -o "$ip_regex")
 
    
  echo "wget -q -O- $update_url" 
  }
[ $(echo $service_name |grep -v dyndns ) ]|| ipaddr=$(echo `wget -q -O- http://checkip.dyndns.org/`|grep -o "$ip_regex")

  nowtime=`date +%c`
#echo `wget -q -O- http://checkip.dyndns.org/`|grep -o "$ip_regex"
  wget -t 2 -T 10 -q -O- $update_url 
===File inxi, 74521235===
			xiin_download="$( wget -q -O - http://inxi.googlecode.com/svn/branches/xiin/$xiin_file )"
			# if nothing got downloaded kick out error, otherwise we'll use an older version
			# -Nc is creating really weird download anomolies, so using -O instead

			;;
	ip=$( wget -q -O - http://smxi.org/opt/ip.php | gawk -F 'is: ' '{
	eval $LOGFS
		#gsub("\n","",$2")
	print_screen_output "Starting $SCRIPT_NAME self updater."
	# get ip using wget redirect to stdout. This is a clean, text only IP output url.
	local wget_error=0 file_contents=''

	# then do the actual download
	file_contents="$( wget -q -O - $1$SCRIPT_NAME )" || wget_error=$?
			;;
		8)	error_message="the self-updater failed, wget exited with error: $2.\nYou probably need to be root.\nHint, to make for easy updates without being root, do: chown <user name> $SCRIPT_PATH/$SCRIPT_NAME"
===File setup_sdcard.sh, 75595307===
	wget --quiet -P "${TEMPDIR}/dl/" ${conf_bl_http}/${conf_bl_listfile}

		MLO=$(cat ${TEMPDIR}/dl/${conf_bl_listfile} | grep "${ABI}:${conf_board}:SPL" | awk '{print $2}')
		MLO=${MLO##*/}
		UBOOT=${UBOOT##*/}

		wget -P "${TEMPDIR}/dl/" ${UBOOT}
		UBOOT=$(cat ${TEMPDIR}/dl/${conf_bl_listfile} | grep "${ABI}:${conf_board}:BOOT" | awk '{print $2}')
		wget --quiet -P "${TEMPDIR}/dl/" ${MLO}
		echo "Your system is missing some dependencies"
		echo ""
		echo "Gentoo: emerge dosfstools parted git u-boot-tools wget"
		echo "Fedora: yum install dosfstools dosfstools git-core parted uboot-tools wget"
		echo "Debian/Ubuntu: sudo apt-get install dosfstools git-core kpartx parted u-boot-tools wget"
		echo "Angstrom: opkg install dosfstools git util-linux parted wget"
===File tve-setup.sh, 76740358===
		fi
			wget -q -O - "$1"
# Find the network utility
		if [ -n "$2" ]; then
		else
			wget --header="$1" -q -O - "$2"
	post2stdout() {
if cmdexists wget 1>&2; then
	}
		wget --post-data="$2" -q -O - "$1"
		if [ -n "$2" ]; then
			wget --header="$1" -q "$2"
		else
			wget -q "$1"
		fi
===File store.sh, 77831171===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File store.sh, 78177310===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File store.sh, 78768652===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File store.sh, 79035323===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File store.sh, 79294939===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File store.sh, 80367295===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File dl.sh, 80501450===
wget ftp://ftp.fec.gov/FEC/webk02.zip
wget ftp://ftp.fec.gov/FEC/webk04.zip
# presidental election donations 2012


wget ftp://ftp.fec.gov/FEC/Presidential_Map/2012/P00000001/P00000001-ALL.zip
wget ftp://ftp.fec.gov/FEC/Presidential_Map/2012/P00000001/P00000001D-ALL.zip
# presidential election expenses 2012

wget ftp://ftp.fec.gov/FEC/webl12.zip
# House/Senate candidate data 2012
# PAC data

wget ftp://ftp.fec.gov/FEC/webk10.zip
wget ftp://ftp.fec.gov/FEC/webk12.zip
wget ftp://ftp.fec.gov/FEC/webk06.zip
wget ftp://ftp.fec.gov/FEC/webk08.zip
===File store.sh, 80598641===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File store.sh, 80608310===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File nginx, 81535085===
	else
	elif
    ocf_log err "could not find a http client; make sure that either wget or curl is available"
  then
	return $OCF_ERR_CONFIGURED
		echo "wget"
		curl|wget) echo ${test_httpclient}_func;;  #these are supported
	case "$test_httpclient" in
          which wget >/dev/null 2>&1
        then
For example, you can set this paramter to "wget" if you prefer that to curl.
If not specified, the RA will try to find one on the system.
Currently, wget and curl are supported, with curl being preferred.
WGETOPTS="-O- -q -L --no-proxy --bind-address=127.0.0.1"
CURLOPTS="-o - -Ss -L --interface lo"
		*) echo userdefined;;
# safe to connect from the local interface.
===File download.sh, 82693800===
wget -c ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByExp/litesra/SRX/SRX060/SRX060173/SRR192337/SRR192337.lite.sra
cd /home/workshop/soumya/lung_cancer/data/SRR192337
wget -c ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByExp/litesra/SRX/SRX060/SRX060174/SRR192338/SRR192338.lite.sra
cd /home/workshop/soumya/lung_cancer/data/SRR192338
wget -c ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByExp/litesra/SRX/SRX060/SRX060175/SRR192339/SRR192339.lite.sra
cd /home/workshop/soumya/lung_cancer/data/SRR192339
cd /home/workshop/soumya/lung_cancer/data/SRR192340
wget -c ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByExp/litesra/SRX/SRX060/SRX060169/SRR192333/SRR192333.lite.sra
cd /home/workshop/soumya/lung_cancer/data/SRR192333
wget -c ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByExp/litesra/SRX/SRX060/SRX060170/SRR192334/SRR192334.lite.sra
cd /home/workshop/soumya/lung_cancer/data/SRR192334
wget -c ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByExp/litesra/SRX/SRX060/SRX060171/SRR192335/SRR192335.lite.sra
cd /home/workshop/soumya/lung_cancer/data/SRR192335
wget -c ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sra-instant/reads/ByExp/litesra/SRX/SRX060/SRX060172/SRR192336/SRR192336.lite.sra
cd /home/workshop/soumya/lung_cancer/data/SRR192336
===File nginx, 82818663===
	else
	elif
    ocf_log err "could not find a http client; make sure that either wget or curl is available"
  then
	return $OCF_ERR_CONFIGURED
		echo "wget"
		curl|wget) echo ${test_httpclient}_func;;  #these are supported
	case "$test_httpclient" in
          which wget >/dev/null 2>&1
        then
For example, you can set this paramter to "wget" if you prefer that to curl.
If not specified, the RA will try to find one on the system.
Currently, wget and curl are supported, with curl being preferred.
WGETOPTS="-O- -q -L --no-proxy --bind-address=127.0.0.1"
CURLOPTS="-o - -Ss -L --interface lo"
		*) echo userdefined;;
# safe to connect from the local interface.
===File oab-java.sh, 83682453===
    echo "  cd ~/"
    echo "  wget https://github.com/flexiondotorg/oab-java6/raw/${VER}/`basename ${0}` -O `basename ${0}`"
wget "http://www.oracle.com/technetwork/java/javase/downloads/index.html" -O /tmp/oab-index.html >> "$log" 2>&1 &
    if [ "${JAVA_UPSTREAM}" == "sun-java6" ]; then
        wget http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-javase6-419409.html -O /tmp/oab-download.html >> "$log" 2>&1 &
    else
        wget http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-javase7-521261.html -O /tmp/oab-download.html >> "$log" 2>&1 &    
    fi
pid=$!;progress $pid
    echo "  chmod +x `basename ${0}`"
ncecho " [x] Getting current release download page "
    ncecho " [x] Downloading ${JAVA_BIN} : ${DOWNLOAD_SIZE} "
wget http://www.oracle.com/${DOWNLOAD_INDEX} -O /tmp/oab-download.html >> "$log" 2>&1 &
    wget --no-check-certificate --header="Cookie: ${COOKIES}" -c "${DOWNLOAD_URL}" -O ${WORK_PATH}/pkg/${JAVA_BIN} >> "$log" 2>&1 &
pid=$!;progress $pid
ncecho " [x] Getting Java SE download page "
    pid=$!;progress_loop $pid
===File nginx, 84868662===
	else
	elif
    ocf_log err "could not find a http client; make sure that either wget or curl is available"
  then
	return $OCF_ERR_CONFIGURED
		echo "wget"
		curl|wget) echo ${test_httpclient}_func;;  #these are supported
	case "$test_httpclient" in
          which wget >/dev/null 2>&1
        then
For example, you can set this paramter to "wget" if you prefer that to curl.
If not specified, the RA will try to find one on the system.
Currently, wget and curl are supported, with curl being preferred.
WGETOPTS="-O- -q -L --no-proxy --bind-address=127.0.0.1"
CURLOPTS="-o - -Ss -L --interface lo"
		*) echo userdefined;;
# safe to connect from the local interface.
===File backtrack5r3.sh, 87510148===
cd /root/.mozilla/firefox/*.default/extensions/
cd /usr/local/src/
tar xvjf bootsplash-3.1.tar.bz2
if [ ! -e /usr/local/src/bootsplash-3.1.tar.bz2 ]; then wget ftp://ftp.bootsplash.org/pub/bootsplash/rpm-sources/bootsplash/bootsplash-3.1.tar.bz2; fi
gunzip GeoIP.dat.gz
wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz
rm -f GeoIP.dat
cd /root/.mozilla/firefox/*.default/
wget https://addons.mozilla.org/firefox/downloads/latest/3829/addon-3829-latest.xpi?src=dp-btn-primary -O {8f8fe09b-0bd3-4470-bc1b-8cad42b8203a}.xpi #Live HTTP Headers
wget https://addons.mozilla.org/firefox/downloads/latest/284030/addon-284030-latest.xpi?src=dp-btn-primary -O {6bdc61ae-7b80-44a3-9476-e1d121ec2238}.xpi #HTTPS Finder
wget https://addons.mozilla.org/firefox/downloads/file/150692/foxyproxy_basic-2.6.2-fx+tb+sm.xpi?src=search -O FoxyProxyBasic.zip && unzip FoxyProxyBasic.zip -d foxyproxy-basic@eric.h.jung/ && rm FoxyProxyBasic.zip #FoxyProxy Basic
wget https://addons.mozilla.org/firefox/downloads/latest/1843/addon-1843-latest.xpi?src=dp-btn-primary -O firebug@software.joehewitt.com.xpi #Firebug
wget https://addons.mozilla.org/firefox/downloads/latest/1865/addon-1865-latest.xpi?src=dp-btn-primary -O {d10d0bf8-f5b5-c8b4-a8b2-2b9879e08c5d}.xpi #Adblock Plus
cd /pentest/web/bookmarks/
wget http://pentest-bookmarks.googlecode.com/files/bookmarksv1.5.html
===File downloadDatasets.sh, 88788584===
  else
  fi
    wget http://www.cl.cam.ac.uk/Research/DTG/attarchive/pub/data/att_faces.zip
    else
      wget $dlpath
  fi
  else
    fi
    wget ftp://ftp.uni-erlangen.de/pub/facedb/BioID-FaceDatabase-V1.2.zip
    wget "$prefix/annotations.zip"
  fi
  fi
    wget http://pascal.inrialpes.fr/data/human/INRIAPerson.tar
  else
  else
===File store.sh, 89053559===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store/DIR > /dev/null
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:1\\//g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" | sed "s/,1/,2/g" > TMP
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
json_cmp store-unreachable-source-urls.expected.json DIR/jscoverage.json
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
===File provision.sh, 89774303===
## download hadoop packages from s3
cd /opt && { curl -O "http://hadoop-etu.s3.amazonaws.com/iso_hadoop/{wget-1.12-1.11.el6_5.x86_64.rpm,make-3.81-20.el6.x86_64.rpm,openssl-1.0.1e-16.el6_5.7.x86_64.rpm}" ; cd -; }
## add bigtop repo
#wget -O /etc/yum.repos.d/bigtop.repo http://archive.apache.org/dist/bigtop/stable/repos/centos6/bigtop.repo
## install wget


#yum install -y wget
rpm -Uvh --replacepkgs /opt/wget-1.12-1.11.el6_5.x86_64.rpm

rpm -Uvh --replacepkgs /opt/make-3.81-20.el6.x86_64.rpm
rpm -Uvh --replacepkgs /opt/openssl-1.0.1e-16.el6_5.7.x86_64.rpm
wget $lahman2012_csv_dataset_url -O /tmp/lahman2012-csv.zip
## run hive test case
( cd /tmp; unzip /tmp/lahman2012-csv.zip )

===File provision-yum.sh, 89774326===
## download hadoop packages from s3
#cd /opt && { curl -O "http://hadoop-etu.s3.amazonaws.com/iso_hadoop/{wget-1.12-1.11.el6_5.x86_64.rpm,make-3.81-20.el6.x86_64.rpm,openssl-1.0.1e-16.el6_5.7.x86_64.rpm}" ; cd -; }
## add bigtop repo
wget -O /etc/yum.repos.d/bigtop.repo http://archive.apache.org/dist/bigtop/stable/repos/centos6/bigtop.repo
## install wget


yum install -y wget
#rpm -Uvh --replacepkgs /opt/wget-1.12-1.11.el6_5.x86_64.rpm

#rpm -Uvh --replacepkgs /opt/make-3.81-20.el6.x86_64.rpm
#rpm -Uvh --replacepkgs /opt/openssl-1.0.1e-16.el6_5.7.x86_64.rpm
wget $lahman2012_csv_dataset_url -O /tmp/lahman2012-csv.zip
## run hive test case
( cd /tmp; unzip /tmp/lahman2012-csv.zip )

===File ubuntu-11.04-postinstall.sh, 91007792===
  #echo -e "\n## GetDeb\ndeb http://archive.getdeb.net/ubuntu $UBUNTUVERSION-getdeb apps\n" >> /etc/apt/sources.list
  echo -e "\n## GetDeb\ndeb http://mirrors.dotsrc.org/getdeb/ubuntu lucid-getdeb apps\ndeb-src http://mirrors.dotsrc.org/getdeb/ubuntu lucid-getdeb apps\n" >> /etc/apt/sources.list
  #wget -q -O- http://archive.getdeb.net/getdeb-archive.key | apt-key add -
wget http://www.fortunes-fr.org/data/personnalites
strfile personnalites personnalites.dat
wget http://gnome-look.org/CONTENT/content-files/133268-hotot.zip
strfile proverbes proverbes.dat
wget http://www.fortunes-fr.org/data/proverbes
wget http://www.fortunes-fr.org/data/litterature_francaise
strfile litterature_francaise litterature_francaise.dat
strfile sciences sciences.dat
wget http://www.fortunes-fr.org/data/sciences
strfile philosophie philosophie.dat
wget http://www.fortunes-fr.org/data/philosophie
cd ~
unzip 133268-hotot.zip
cd /usr/share/games/fortunes/
===File downloadDatasets.sh, 91790899===
  else
  fi
    wget http://www.cl.cam.ac.uk/Research/DTG/attarchive/pub/data/att_faces.zip
    else
      wget $dlpath
  fi
  else
    fi
    wget ftp://ftp.uni-erlangen.de/pub/facedb/BioID-FaceDatabase-V1.2.zip
    wget "$prefix/annotations.zip"
  fi
  fi
    wget http://pascal.inrialpes.fr/data/human/INRIAPerson.tar
  else
  else
===File mk_mmc.sh, 75144317===
		MLO=${MLO##*/}
	check_for_command mkfs.vfat dosfstools
		MLO=$(cat ${TEMPDIR}/dl/${conf_bl_listfile} | grep "${ABI}:${conf_board}:SPL" | awk '{print $2}')
		UBOOT=${UBOOT##*/}
		wget --directory-prefix=${TEMPDIR}/dl/ ${UBOOT}
		UBOOT=$(cat ${TEMPDIR}/dl/${conf_bl_listfile} | grep "${ABI}:${conf_board}:BOOT" | awk '{print $2}')
		wget --no-verbose --directory-prefix=${TEMPDIR}/dl/ ${MLO}
	check_for_command wget wget
	check_for_command parted parted
		echo "Fedora: as root: yum install uboot-tools wget dosfstools parted dpkg patch"
		echo "Ubuntu/Debian: sudo apt-get install uboot-mkimage wget dosfstools parted"

		echo "Your system is missing some dependencies"

	wget --no-verbose --directory-prefix=${TEMPDIR}/dl/ ${conf_bl_http}/${conf_bl_listfile}
		echo ""
		echo "Gentoo: emerge u-boot-tools wget dosfstools parted dpkg"
===File install.sh, 77792023===
tar xvjf Twisted-${TW_VER}.tar.bz2 && \
wget http://pypi.python.org/packages/source/s/simplejson/simplejson-2.0.9.tar.gz && \
(
wget http://tmrc.mit.edu/mirror/twisted/Twisted/8.2/Twisted-${TW_VER}.tar.bz2 && \
tar xvzf simplejson-${SJ_VER}.tar.gz && \
tar xvzf setuptools-${ST_VER}.tar.gz && \
wget http://pypi.python.org/packages/source/s/setuptools/setuptools-${ST_VER}.tar.gz && \
(
tar xvzf hashlib-${HL_VER}.tar.gz && \
wget http://code.krypto.org/python/hashlib/hashlib-${HL_VER}.tar.gz && \
(
(
tar xvjf git-${GIT_VER}.tar.bz2 && \
(
wget http://kernel.org/pub/software/scm/git/git-${GIT_VER}.tar.bz2 && \
===File install-all-cdr-stats-freeswitch.sh, 78042520===
cd /usr/src/
# To download and run the script on your server :
#
# cd /usr/src/ ; wget --no-check-certificate https://raw.github.com/Star2Billing/cdr-stats/master/install/install-all-cdr-stats-freeswitch.sh -O install-all-cdr-stats-freeswitch.sh; bash install-all-cdr-stats-freeswitch.sh
wget https://raw.github.com/Star2Billing/cdr-stats/master/install/install-freeswitch.sh -O install-freeswitch.sh
bash install-freeswitch.sh
wget https://raw.github.com/Star2Billing/cdr-stats/master/install/bash-common-functions.sh -O bash-common-functions.sh
cd /usr/src/
bash install-mongodb.sh
        tar zxfv sox*
        wget http://switch.dl.sourceforge.net/project/sox/sox/14.3.2/sox-14.3.2.tar.gz
        cd /usr/src/
wget https://raw.github.com/Star2Billing/cdr-stats/master/install/cdr-stats-functions.sh -O cdr-stats-functions.sh

cd /usr/src/
wget https://raw.github.com/Star2Billing/cdr-stats/master/install/install-mongodb.sh -O install-mongodb.sh
===File install-freeswitch.sh, 78042560===
    	#Install init.d script
       	chmod 0755 /etc/init.d/freeswitch
       	wget --no-check-certificate $FS_INIT_PATH/centos/freeswitch -O /etc/init.d/freeswitch
# To download and run the script on your server :


# cd /usr/src/ ; wget --no-check-certificate https://raw.github.com/Star2Billing/cdr-stats/master/install/install-freeswitch.sh -O install-freeswitch.sh ; bash install-freeswitch.sh
wget --no-check-certificate https://raw.github.com/Star2Billing/cdr-stats/master/install/bash-common-functions.sh -O bash-common-functions.sh
        chmod 0755 /etc/init.d/freeswitch
        #Install init.d script
        wget --no-check-certificate $FS_INIT_PATH/debian/freeswitch -O /etc/init.d/freeswitch
        chmod 0755 /etc/init.d/freeswitch
        #Install init.d script
        wget --no-check-certificate $FS_INIT_PATH/centos/freeswitch -O /etc/init.d/freeswitch
#Get Scripts dependencies
===File backup, 78691634===
			else
				# wget is borked in some versions of busybox so 
				# after all that it can still fail o_O
		ECHO -l -n "Downloading needed files for $SCRIPT_NAME $VERSION ... "
		$BB chmod 755 /system/xbin/zip
		$BB wget -q $ZIP_URL -O /system/xbin/zip
			$BB wget -q $ERI_URL -O $WORKPLACE/eri/tmp/res/xml/eri.xml
			ECHO -l "done"
			ECHO -l "done."
			$BB mkdir -p $WORKPLACE/eri/tmp/res/xml
			fi
			$BB wget -q $HOSTS_URL/$1 -O $INTERNAL_DIR/Hosts/$1
			ECHO -l -n "Downloading $1 ... "
				$BB wget $BOOTANIMATION_URL/$1/bootanimation.zip -O $BOOTANIMATION_DIR/$1/bootanimation.zip
				$BB mkdir -p $BOOTANIMATION_DIR/$1
===File glidein_startup.sh, 78929544===
    fi

wget_nocache_flag=""
###################################
# Find out what kind of wget I have
    if [ "$ffb_file_type" == "nocache" ]; then
          ffb_nocache_str="$wget_nocache_flag"
  fi
    warn "Unknown kind of wget, cannot disable caching" 1>&2
  if [ $? -eq 0 ]; then
  wget --help |grep -q "\-\-cache="
  else
    wget_nocache_flag="--cache=off"
if [ $? -eq 0 ]; then
wget --help |grep -q "\-\-no-cache "
else
  wget_nocache_flag="--no-cache"
===File tvheadend.sh, 79169072===
    [ ! -f "curl-7.20.1-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/n/curl-7.20.1-i486-1.txz
    [ ! -f "binutils-2.20.51.0.8-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/d/binutils-2.20.51.0.8-i486-1.txz
    [ ! -f "git-1.7.1-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/d/git-1.7.1-i486-1.txz
    [ ! -f "gcc-4.4.4-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/d/gcc-4.4.4-i486-1.txz
    [ ! -f "kernel-headers-2.6.33.4_smp-x86-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/d/kernel-headers-2.6.33.4_smp-x86-1.txz
    [ ! -f "glibc-2.11.1-i486-3.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/l/glibc-2.11.1-i486-3.txz
    [ ! -f "pkg-config-0.23-i486-2.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/d/pkg-config-0.23-i486-2.txz
    [ ! -f "openssl-0.9.8n-i486-1.txz" ] && wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/n/openssl-0.9.8n-i486-1.txz

    # deps.
===File server-ip-address.sh, 4366===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid



wget -q -O- http://127.0.0.1:${server_port}/ > /dev/null

wget -q -O- http://127.0.0.1:${server_port}/ > /dev/null
===File store-escaped-characters.sh, 4416===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=store-escaped-characters.json -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
shutdown() {

json_cmp store-escaped-characters.expected.json DIR/jscoverage.json
cat store-escaped-characters.expected.json | sed s/1,/2,/g > TMP
wget --post-file=store-escaped-characters.json -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
===File ctools-installer.sh, 96252===
do


wget --no-check-certificate 'https://raw.github.com/pmalves/ctools-installer/master/ctools-installer.sh' -P .tmp -o /dev/null

for reqcmd in zip unzip wget
	WGET_CTOOL="$1"
download_file () {
	if [ ! -z "$OFFLINE_REPOSITORY" -a -e "$OFFLINE_REPOSITORY/$BASERVER_VERSION/$BRANCH/$WGET_CTOOL/$WGET_FILE" ]; then
		echo $ECHO_FLAG "Found $WGET_CTOOL in offline repository. "
		cp "$OFFLINE_REPOSITORY/$BASERVER_VERSION/$BRANCH/$WGET_CTOOL/$WGET_FILE" "$WGET_TARGET_DIR"
	WGET_URL="$2"
	WGET_FILE="$3"
	WGET_TARGET_DIR="$4"
	mkdir -p "$WGET_TARGET_DIR"
===File build-avr-ada-gcc-4.3.x.sh, 823174===
    $WGET "http://www.mpfr.org/mpfr-current/$FILE_MPFR.tar.bz2"

    $WGET "http://mirror.dknss.com/nongnu/avr-libc/$FILE_LIBC.tar.bz2"
    display
    $WGET "ftp://anonymous:fireftp@mirrors.kernel.org/gnu/binutils/$FILE_BINUTILS.tar.bz2"
    display
    display
    $WGET "ftp://ftp.gnu.org/gnu/gmp/$FILE_GMP.tar.bz2"

    display
    display

    $WGET "ftp://anonymous:fireftp@mirrors.kernel.org/gnu/gcc/$FILE_GCC/$FILE_GCC.tar.bz2"


===File getpages.sh, 888284===
	FILENAME=$(grep "saved" outputlog.txt | head -1 | sed -e "s/.*\`\(.*\)\'.*/\1/")
	#figure out where/what the index file for this page is from the wget output log
	../../wget-1.10-css-parser/src/wget -p -k -H -E -erobots=off --no-check-certificate -U "Mozilla/5.0 (firefox)" --restrict-file-names=windows $URL -o outputlog.txt
	cd $CLEANURL
===File factor.sh, 917929===
    ensure_program_installed gcc
set_downloader() {
install_deps_linux() {
    check_ret sudo
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev gtk2-engines-pixbuf libgtkglext1-dev wget git-core git-doc rlwrap gcc make
    ensure_program_installed git
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
    ensure_program_installed wget curl
===File factor.sh, 1590723===
set_downloader() {
install_build_system_apt() {
    check_ret sudo
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev wget git-core git-doc rlwrap gcc make
    ensure_program_installed git
    ensure_program_installed wget curl
    ensure_program_installed gcc
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
===File factor.sh, 2144622===
install_deps_linux() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev gtk2-engines-pixbuf libgtkglext1-dev wget git git-doc rlwrap gcc make
    check_ret sudo
    else
        DOWNLOADER=wget
    if [[ $? -ne 0 ]] ; then
    test_program_installed wget curl
set_downloader() {
    ensure_program_installed clang gcc
    ensure_program_installed git
    ensure_program_installed wget curl
===File server-ip-address.sh, 2203713===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid



wget -q -O- http://127.0.0.1:${server_port}/ > /dev/null

wget -q -O- http://127.0.0.1:${server_port}/ > /dev/null
===File store-escaped-characters.sh, 2203763===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=store-escaped-characters.json -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
shutdown() {

json_cmp store-escaped-characters.expected.json DIR/jscoverage.json
cat store-escaped-characters.expected.json | sed s/1,/2,/g > TMP
wget --post-file=store-escaped-characters.json -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
===File server-ip-address.sh, 2204945===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid



wget -q -O- http://127.0.0.1:${server_port}/ > /dev/null

wget -q -O- http://127.0.0.1:${server_port}/ > /dev/null
===File store-escaped-characters.sh, 2204995===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=store-escaped-characters.json -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
shutdown() {

json_cmp store-escaped-characters.expected.json DIR/jscoverage.json
cat store-escaped-characters.expected.json | sed s/1,/2,/g > TMP
wget --post-file=store-escaped-characters.json -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
===File factor.sh, 2239813===
install_deps_linux() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev gtk2-engines-pixbuf libgtkglext1-dev wget git git-doc rlwrap gcc make
    check_ret sudo
    else
        DOWNLOADER=wget
    if [[ $? -ne 0 ]] ; then
    test_program_installed wget curl
set_downloader() {
    ensure_program_installed clang gcc
    ensure_program_installed git
    ensure_program_installed wget curl
===File factor.sh, 2337831===
install_deps_linux() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev gtk2-engines-pixbuf libgtkglext1-dev wget git-core git-doc rlwrap gcc make
    check_ret sudo
set_downloader() {
    ensure_program_installed git
    ensure_program_installed wget curl
    ensure_program_installed gcc
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
===File perlbrew-install, 2398928===
  exit 1
elif type wget >/dev/null 2>&1; then
  PERLBREWDOWNLOAD="wget --no-check-certificate -nv -O $LOCALINSTALLER $PERLBREWURL"
else
  echo "Need wget or curl to use $0"
  PERLBREWDOWNLOAD="curl -k -f -sS -Lo $LOCALINSTALLER $PERLBREWURL"
===File get_sample_data.sh, 2402636===
	wget "$F" -N
do
done
# Download sample data for MSG
#wget "https://github.com/tinathu/msg/raw/master/example/barcodes_file" --no-check-certificate -O barcodes_file.txt
#wget "https://github.com/tinathu/msg/raw/master/example/msg.cfg" --no-check-certificate -O msg.cfg

===File factor.sh, 2555212===
set_downloader() {
install_build_system_apt() {
    check_ret sudo
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev wget git-core git-doc rlwrap gcc make
    ensure_program_installed git
    ensure_program_installed wget curl
    ensure_program_installed gcc
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
===File get_all.bash, 2683720===
# in that line below and commenting out the wget one.
# The Mac does not have a built-in wget, so use curl instead by commenting
downloader="wget -c"

# downloader="curl -O"
# 
===File install_pplacer.sh, 2724942===
wget -O- $CDN/godi-rocketboost-20110811.tar.gz | tar xzf -
cd godi-rocketboost-20110811
# install ocaml via GODI.
# build pplacer.
    -O- | tar xzf -
ocaml odb.ml \
wget $CDN/odb.ml
# build batteries, camomile, and ocaml-csv.
wget --no-check-certificate http://github.com/matsen/pplacer/tarball/master \
===File factor.sh, 2802942===
    check_ret sudo
set_downloader() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev libgtkglext1-dev wget git-core git-doc rlwrap gcc make
install_deps_linux() {
    ensure_program_installed git
    ensure_program_installed wget curl
    ensure_program_installed gcc
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
===File factor.sh, 2946539===
set_downloader() {
install_deps_linux() {
    check_ret sudo
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev libgtkglext1-dev wget git-core git-doc rlwrap gcc make
    ensure_program_installed git
    ensure_program_installed wget curl
    ensure_program_installed gcc
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
===File minecraft, 3000199===

	as_user "cd $MCPATH && wget -q -O $MCPATH/craftbukkit.jar.update $(get_cb_release_channel)"
	if [ -r "$MCPATH/craftbukkit.jar.update" ]
check_update_vanilla() {
	MC_SERVER_URL=`wget -q -O - http://minecraft.net/download | grep minecraft_server.jar\ | cut -d \" -f 6`

	echo "Checking for update for minecraft_server.jar (Vanilla)"
	as_user "cd $MCPATH && wget -q -O $MCPATH/minecraft_server.jar.update $MC_SERVER_URL"

===File generate-autotools, 3023895===
AM_VER=`head ./Makefile.in | grep -i automake | sed -e 's/.*tomake //' -e 's/ .*//' -e 's/\.$//'`
tar -zxvf libtool-$LT_VER.tar.gz
wget http://ftp.gnu.org/gnu/autoconf/autoconf-$AC_VER.tar.gz
AC_VER=`head ./configure | grep -i autoconf | sed -e 's/.*toconf //' -e 's/ .*//' -e 's/\.$//'`
tar -zxvf autoconf-$AC_VER.tar.gz
wget http://ftp.gnu.org/gnu/libtool/libtool-$LT_VER.tar.gz
LT_VER=`head -50 ./ltmain.sh | grep "VERSION=" | sed -e 's/^VERSION=//'`
wget http://ftp.gnu.org/gnu/automake/automake-$AM_VER.tar.gz
tar -zxvf automake-$AM_VER.tar.gz
===File factor.sh, 3058925===
install_deps_linux() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev gtk2-engines-pixbuf libgtkglext1-dev wget git git-doc rlwrap gcc make
    check_ret sudo
    else
        DOWNLOADER=wget
    if [[ $? -ne 0 ]] ; then
    test_program_installed wget curl
set_downloader() {
    ensure_program_installed clang gcc
    ensure_program_installed git
    ensure_program_installed wget curl
===File download_sample_marmot_data, 3069668===
then curl "http://www.regiment.us/marmotdata/6sec_marmot_sample.raw" -o 6sec_marmot_sample.raw
elif [ `which curl` ];
fi 
else echo NEITHER CURL NOR WGET AVAILABLE!!; exit 1

then wget www.regiment.us/marmotdata/6sec_marmot_sample.raw
if [ `which wget` ];
===File factor.sh, 3084373===
set_downloader() {
install_build_system_apt() {
    check_ret sudo
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev wget git-core git-doc rlwrap gcc make
    ensure_program_installed git
    ensure_program_installed wget curl
    ensure_program_installed gcc
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
===File factor.sh, 3205119===
install_deps_linux() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev gtk2-engines-pixbuf libgtkglext1-dev wget git git-doc rlwrap gcc make
    check_ret sudo
    else
        DOWNLOADER=wget
    if [[ $? -ne 0 ]] ; then
    test_program_installed wget curl
set_downloader() {
    ensure_program_installed clang gcc
    ensure_program_installed git
    ensure_program_installed wget curl
===File factor.sh, 3270588===
    check_ret sudo
set_downloader() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev libgtkglext1-dev wget git-core git-doc rlwrap gcc make
install_deps_linux() {
    ensure_program_installed git
    ensure_program_installed wget curl
    ensure_program_installed gcc
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
===File prepare_guest.sh, 3389387===
chroot $STAGING_DIR pip install xenapi
chroot $STAGING_DIR apt-get install -y curl wget ssh openssh-server python-pip git vim-nox sudo
chroot $STAGING_DIR apt-get install -y cracklib-runtime curl wget ssh openssh-server tcpdump ethtool
cp $XEGUEST $STAGING_DIR/root
wget http://images.ansolabs.com/xen/$XEGUEST -O $XEGUEST
XEGUEST=xe-guest-utilities_5.6.100-651_amd64.deb
chroot $STAGING_DIR apt-get install -y linux-image-$KERNEL_VERSION
===File factor.sh, 3522350===
    ensure_program_installed gcc
    ensure_program_installed git
    ensure_program_installed wget curl
    else
        DOWNLOADER=wget
    if [[ $? -ne 0 ]] ; then
    test_program_installed wget curl
set_downloader() {
    ensure_program_installed yes
    check_ret sudo
    yes | sudo apt-get install sudo libc6-dev libfreetype6-dev libx11-dev xorg-dev glutg3-dev wget git-core git-doc rlwrap gcc make
===File runtests, 3660986===

yum -y install rsync
yum -y install wget

wget http://snoosnoo.uk.xensource.com/~jludlam/test_log.js
wget http://snoosnoo.uk.xensource.com/~jludlam/test.css
cd /tmp/rt
===File factor.sh, 3819531===
    check_ret sudo
set_downloader() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev libgtkglext1-dev wget git-core git-doc rlwrap gcc make
install_deps_linux() {
    ensure_program_installed git
    ensure_program_installed wget curl
    ensure_program_installed gcc
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
===File setup-debian.sh, 4056614===
    wget -O - http://wordpress.org/latest.tar.gz | \
        tar zxf - -C /tmp/wordpress.$$
function install_wordpress {
    mkdir /tmp/wordpress.$$
    if [ -z "$1" ]
    check_install wget wget
===File factor.sh, 4435458===
install_deps_linux() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev gtk2-engines-pixbuf libgtkglext1-dev wget git git-doc rlwrap gcc make
    check_ret sudo
    else
        DOWNLOADER=wget
    if [[ $? -ne 0 ]] ; then
    test_program_installed wget curl
set_downloader() {
    ensure_program_installed clang gcc
    ensure_program_installed git
    ensure_program_installed wget curl
===File factor.sh, 4543454===
set_downloader() {
install_deps_linux() {
    check_ret sudo
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev libgtkglext1-dev wget git-core git-doc rlwrap gcc make
    ensure_program_installed git
    ensure_program_installed wget curl
    ensure_program_installed gcc
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
===File vcap_dev_setup, 4791955===
  wget -qO - http://apt.opscode.com/packages@opscode.com.gpg.key | sudo apt-key add -
which wget > /dev/null
  echo "deb http://apt.opscode.com/ `lsb_release -cs`-0.10 main" | sudo tee /etc/apt/sources.list.d/opscode.list
if [ $? == 0 ]; then
  echo chef chef/chef_server_url select none | sudo /usr/bin/debconf-set-selections
  wget -q -T 2 -t 2 -O - http://api.cloudfoundry.com/info | grep "Cloud Application Platform" > /dev/null
  echo "Checking web connectivity."
  if [ $? != 0 ]; then
# Check if we have access to the web
===File factor.sh, 5005394===
    check_ret sudo
set_downloader() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev libgtkglext1-dev wget git-core git-doc rlwrap gcc make
install_deps_linux() {
    ensure_program_installed git
    ensure_program_installed wget curl
    ensure_program_installed gcc
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
===File factor.sh, 5208348===
    check_ret sudo
set_downloader() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev libgtkglext1-dev wget git-core git-doc rlwrap gcc make
install_deps_linux() {
    ensure_program_installed git
    ensure_program_installed wget curl
    ensure_program_installed gcc
    else
        DOWNLOADER=wget
    test_program_installed wget curl
    if [[ $? -ne 0 ]] ; then
===File arm-toolchain-build.sh, 5546654===
	    COMMAND=wget
	    ;;
	wget)
	    cd "$ARCHIVES"
	    echo wget -c $URL_OPTIONS "$URL/$ARCHIVE" >${CMD}
	    echo -n "Downloading $ARCHIVE ... "
	    ;;
	    wget -c $URL_OPTIONS "$URL/$ARCHIVE" >${LOG} 2>${ERR} || die
	http://*)
	    ;;
    case $COMMAND in
	    COMMAND=wget
	ftp://*)
===File update.sh, 12780235===
# Look for either wget or curl to download GemStone
    exit 1
    echo "[Error] Neither wget nor curl is available. Install one of them and rerun this script."
else

elif [ -e "`which curl 2>/dev/null`" ]; then
if [ -e "`which wget 2>/dev/null`" ]; then
    cmd="`which wget` --quiet"
===File bootstrap.sh, 14451416===
WGET=${WGET:-wget}
GHC_PKG=${GHC_PKG:-ghc-pkg}
CURL=${CURL:-curl}
  elif which ${WGET} > /dev/null
    ${CURL} -C - -O ${URL} || die "Failed to download ${PKG}."
    die "Failed to find a downloader. 'wget' or 'curl' is required."
  else
    ${WGET} -c ${URL} || die "Failed to download ${PKG}."
  then
  fi
===File udown.sh, 14704907===

LOG_WGET="$DIR_SCRIPT/$CONFIG_NAME.log"

# Local e arquivo de log gerado pelo wget

wget -c -v --progress=dot:mega --user-agent="Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)" ќproxy=on -o $LOG_WGET -t 8 $URL_DOWN -P $SAVE_TO -O $SAVE_TO/$FILE_NAME
# -P Especifica o local onde serр salvo o arquivo 
# -o local e nome do log gerado pelo wget
EmailLog
# Anexa o conteЩdo do arquivo LOG_WGET ao fim do arquivo LOG_MAIL

# Envia email com o log do wget
# -user-agent Mozilla/4.0 Simula se tratar de um browser Mozilla
# -t n Estabelece a quantidade de tentativas de download
cat $LOG_WGET >> $LOG_MAIL

===File leech.sh, 14762196===
cd "$WORKING"
# wget --continue --no-parent --recursive --no-directories --level=1 --retry-connrefused $BASE
rm -f "index.html"

rm -f href*.html
#wget "$BASE" --verbose -O index.html
:<<NOTES
NOTES
wget --force-directories --continue --referrer="$referrer" $file
  done
    wget --no-verbose --force-directories --continue --referrer="$referrer" $file
    # --force-directories will build a nice directory tree for me.  Sweet.
===File utility-install-filetools.sh, 14840888===
fi
echo "Installing File Tools (wget, unzip, zip...)"

# if a file does not exist...

then
if [ ! -f /usr/bin/wget ];
    yum -y install wget
    echo "Installing wget"
===File install_mac_dev_suite.sh, 14847326===
declare SKIP_WGET=`which wget`
declare SKIP_TREE=`which tree`
declare SKIP_ASPELL=`which aspell`
if [ $SKIP_WGET ]; then

fi
	echo $SUDO_PASS | sudo -S  port install wget
    printf "\n%s\n" ":: Installed Macports wget ::"
	printf "%s\n" "Skipping Installation of wget"
else
===File sbt, 14998471===
elif [ -n "$(which wget)" ]; then
    case "$tool" in
elif [ -n "$(which curl)" ]; then
    tool="wget"
            ;;
        "wget"*)
            wget "$url" -O "./$sbt"
    echo -n
===File bootstrap.sh, 15011121===
WGET=${WGET:-wget}
GHC_PKG=${GHC_PKG:-ghc-pkg}
CURL=${CURL:-curl}
  elif which ${WGET} > /dev/null
  then
    ${CURL} -C - -O ${URL} || die "Failed to download ${PKG}."
    die "Failed to find a downloader. 'wget' or 'curl' is required."
  fi
    ${WGET} -c ${URL} || die "Failed to download ${PKG}."
  else
===File getextip_web, 15016054===
####
CURL=
# and takes into account different versions of awk (can be run
# Made the script more portable, it uses either wget or curl
	GET="$WGET --no-cache -q -O - -t 1 -T 10"
else
# Look for wget or curl
if WGET=$(which wget 2>/dev/null); then
		echo "Could not find wget or curl, bailing out." >&2

	else
		exit 1
GET=
WGET=
===File user_data.sh, 15109482===
dpkg -i riak_0.14.0-1_i386.deb
wget http://downloads.basho.com/riak/riak-0.14/riak_0.14.0-1_i386.deb
sudo wget "https://riak-cluster-chef.s3.amazonaws.com/app.config"

cat app.config > /etc/riak/app.config
sudo wget "https://riak-cluster-chef.s3.amazonaws.com/vm.args"


apt-get install -y wget
===File hadoop-cassandra-hybrid-ec2-init-remote.sh, 15272571===


  INSTANCE_TYPE=`wget -q -O - http://169.254.169.254/latest/meta-data/instance-type`
for role in $(echo "$ROLES" | tr "," "\n"); do

        then
            INSTANCE_TYPE=`wget -q -O - http://169.254.169.254/latest/meta-data/instance-type`
            case $INSTANCE_TYPE in
  SETTINGS_FILE=$CASSANDRA_HOME_WITH_VERSION/bin/cassandra.in.sh
  INSTANCE_TYPE=`wget -q -O - http://169.254.169.254/latest/meta-data/instance-type`
SELF_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/public-hostname`
  # configure the cassandra.in.sh script based on instance type
===File admen.install, 15320112===
		exit3
	if [ "$?" == "0" ]; then
		echo "success (wget)"
	else	
		ADMEN_INSTALL_DOWNLOAD_COMMAND="wget -qO-"
		echo "No client to download found (curl|wget)"
		echo "error"
else
	which wget &>/dev/null
===File ifconfig-me, 15438231===
    esac
	'p') wget -q -O - http://ifconfig.me/port ;;
	'h') wget -q -O - http://ifconfig.me/host ;;
	'u') wget -q -O - http://ifconfig.me/ua ;;
	'i') wget -q -O - http://ifconfig.me/ip ;;
    case $op in
===File lib.sh, 15506703===
  _url="${_url}/?num=${_num}&min=${_min}&max=${_max}&col=${_col}&base=${_bas}${sp_g_rnd_opts}"
}
  wget -T ${_x} -qO- "${_url}"
  _url="${_url}/?min=${_min}&max=${_max}&col=${_col}${sp_g_rnd_opts}"
  wget -T ${_x} -qO- "${_url}"
}
    return $?
    wget -T ${_x} -qO- "${_url}"
    _url="${_url}/?num=${_num}&len=${_len}&digits=${_dig}&upperalpha=${_ual}&loweralpha=${_lal}&unique=${_uni}${sp_g_rnd_opts}"
  wget -T ${_x} -qO- "${_url}"
  _url="${_url}/?${_ip}format=plain"
}
===File icinga_install_aws.sh, 15745328===
        show_banner "Downloading ${PKG} version ${VERSION}"
        show_banner "Dowloading ${PKG}-core version $VERSION"
            ${SF_BASE}/icinga-reporting/${VERSION}/${PKG}-${VERSION}.tar.gz/download
        wget -O ${PKG}-${VERSION}.tar.gz \
        wget -O ${PKG}-${VERSION}.tar.gz \
        ${SF_BASE}/${PKG}/${VERSION}/${PKG}-${VERSION}.tar.gz/download
        wget -O ${PKG}-${VERSION}.tar.gz \
        show_banner "Downloading ${PKG} version ${VERSION}"
        show_banner "Downloading ${PKG} version ${VERSION}"
        ${SF_BASE}/${PKG}/${VERSION}/${PKG}-${VERSION}.tar.gz/download
        wget -O ${PKG}-${VERSION}.zip \
        ${SF_BASE}/${PKG}/${VERSION}/${PKG}-${VERSION}.zip/download
===File download-lm.sh, 15831122===
	fi
fi
	    wget "$issue_url"/$pdf_url -O "$outdir"/$pdf_fn --user="$user" --password="$pass" --no-check-certificate -q
	if test $verbose = off; then
	    wget "$issue_url"/$pdf_url -O "$outdir"/$pdf_fn --user="$user" --password="$pass" --no-check-certificate
	else
    wget "$portal_url" -O "$portal_html" --user="$user" --password="$pass" --no-check-certificate -q | tee "$portal_log" >/dev/null
if test $verbose = off; then
    wget "$portal_url" -O "$portal_html" --user="$user" --password="$pass" --no-check-certificate | tee "$portal_log"
else
===File run_tests.sh, 15849863===
wget https://github.com/downloads/ISA-tools/Configuration-Files/isaconfig-MISFISHIE-rodent-january-2011.zip --no-check-certificate
wget https://github.com/downloads/ISA-tools/Configuration-Files/isaconfig-default_v2011-02-18-MIMARKS-water_v2011-02-18.zip --no-check-certificate

cd Configurations
wget https://github.com/downloads/ISA-tools/Configuration-Files/isaconfig-default_v2011-02-18-MIMARKS-soil_v2011-02-18.zip --no-check-certificate
wget https://github.com/downloads/ISA-tools/Configuration-Files/isaconfig-default_v2011-02-18.zip --no-check-certificate
===File 5.14-stable.sh, 16225374===
fi
	wget http://patches.cross-lfs.org/dev/gcc-4.6.0-mips_fix-1.patch
then
fi
	wget http://patches.cross-lfs.org/dev/gcc-4.6.0-branch_update-1.patch
then
fi
	wget ftp://gcc.gnu.org/pub/gcc/releases/gcc-4.6.0/gcc-4.6.0.tar.bz2
then
fi
	wget http://patches.cross-lfs.org/dev/gcc-4.6.0-specs-1.patch
then
===File 5.14-kernel.org.sh, 16225405===
fi
	wget http://patches.cross-lfs.org/dev/gcc-4.6.0-mips_fix-1.patch
then
fi
	wget http://patches.cross-lfs.org/dev/gcc-4.6.0-branch_update-1.patch
then
fi
	wget ftp://gcc.gnu.org/pub/gcc/releases/gcc-4.6.0/gcc-4.6.0.tar.bz2
then
fi
	wget http://patches.cross-lfs.org/dev/gcc-4.6.0-specs-1.patch
then
===File multicd.sh, 16346650===
		if $VERBOSE;then
			wget -O- http://memtest.org/download/4.20/memtest86+-4.20.bin.gz|gzip -cd>memtest
		else
			wget -qO- http://memtest.org/download/4.20/memtest86+-4.20.bin.gz|gzip -cd>memtest
		fi
			echo "Error: could not download SYSLINUX. Please update the URL in $0."
		if ! wget -t 1 -O syslinux.tar.gz https://www.kernel.org/pub/linux/utils/boot/syslinux/syslinux-$RECENT_SYSLINUX.tar.gz;then
		#Both of these need to be changed when a new version of syslinux comes out.
			echo "Error: could not download SYSLINUX. Please update the URL in $0."
		if ! wget -t 1 -qO syslinux.tar.gz https://www.kernel.org/pub/linux/utils/boot/syslinux/syslinux-$RECENT_SYSLINUX.tar.gz;then
	else
===File daily_software_install.sh, 16537142===
#sudo apt-get update && sudo apt-get install w64codecs
#cd install_flash_player_9_linux/ && ./flashplayer-installer
#sudo wget http://www.medibuntu.org/sources.list.d/hardy.list -O /etc/apt/sources.list.d/medibuntu.list
#然后在命令行下，下载gnp key：
wget http://www.telemail.fi/mlind/ubuntu/937215FF.gpg -O- | sudo apt-key add -

#wget http://download.adobe.com/pub/adobe/reader/unix/7x/7.0.8/misc/FontPack708_chs_i386-linux.tar.gz
#tar zxvf FontPack708_chs_i386-linux.tar.gz
#tar -zxvf install_flash_player_9_linux.tar.gz
#再下载其中文语言包
apt-get install xpdf-chinese-simplified xpdf-chinese-traditional poppler-data --force-yes -y
#wget http://ubuntu:ubuntuftp@ftp.ubuntu.org.cn/home/dbzhang800/wiki/install_flash_player_9_linux.tar.gz
===File allinstall.sh, 16713905===
tar zxvf readline-5.2.tar.gz
# Install readline
wget ftp://ftp.gnu.org/gnu/readline/readline-5.2.tar.gz
wget ftp://ftp.ruby-lang.org/pub/ruby/1.8/$RUBYVER.tar.gz
RUBYVER=ruby-1.8.7-p174
GEMSVER=rubygems-1.3.5
tar zxvf $GEMSVER.tgz
tar zxvf $RUBYVER.tar.gz
wget http://rubyforge.org/frs/download.php/60718/$GEMSVER.tgz
tar xvzf onig-5.9.1.tar.gz 
wget http://www.geocities.jp/kosako3/oniguruma/archive/onig-5.9.1.tar.gz
cd ~/packages
===File installgcc.sh, 17021714===
#Next, we will download, build, and install gcc together with newlib.
wget ftp://ftp.nluug.nl/mirror/languages/gcc/releases/gcc-4.5.2/gcc-core-4.5.2.tar.bz2
wget ftp://ftp.nluug.nl/mirror/languages/gcc/releases/gcc-4.5.2/gcc-4.5.2.tar.bz2
tar xjf gcc-4.5.2.tar.bz2
wget ftp://sources.redhat.com/pub/newlib/newlib-1.19.0.tar.gz
wget http://ftp.gnu.org/gnu/binutils/binutils-2.21.1.tar.bz2
PREFIX=/home/m/renesas
tar xjf binutils-2.21.1.tar.bz2
===File lxc-create-ubuntu-image, 17242234===
natty_packages=dialog,apt,apt-utils,resolvconf,iproute,inetutils-ping,dnsutils,isc-dhcp-client,isc-dhcp-common,ssh,lsb-release,gnupg,netbase,lxcguest,sudo,ruby,rubygems1.8,ruby-dev,libruby,build-essential,wget,ssl-cert
lucid_packages=dialog,apt,apt-utils,resolvconf,iproute,inetutils-ping,dnsutils,dhcp3-client,ssh,lsb-release,wget,gpgv,gnupg,sudo,ruby,rubygems1.8,ruby-dev,libopenssl-ruby,build-essential,ssl-cert
squeeze_packages=$lenny_packages
lenny_packages=ifupdown,locales,libui-dialog-perl,netbase,net-tools,dialog,apt,apt-utils,resolvconf,iproute,inetutils-ping,dnsutils,dhcp3-client,ssh,lsb-release,wget,gpgv,gnupg,sudo,ruby,rubygems1.8,ruby-dev,libopenssl-ruby,build-essential,ssl-cert

oneiric_packages=$natty_packages
===File getAndRebaseJOGLWebstart, 17246517===
# Download JNLPs
	$JOGAMP_WEBSTART/jogl-all-awt.jnlp \
wget -P $OUTPUT_DIR \
	$JOGAMP_WEBSTART/jar/jogl.all.jar \
wget -P $OUTPUT_DIR/jar \
		$JOGAMP_WEBSTART/jar/jogl-all-natives-$P.jar \
	wget -P $OUTPUT_DIR/jar \
do 
# Download JARs
===File setup.sh, 17428304===
wget http://www.zope.org/Products/ZopeInterface/3.3.0/zope.interface-3.3.0.tar.gz -O - | tar -xz
rm -rf zope.interface-3.3.0
wget http://tmrc.mit.edu/mirror/twisted/Twisted/2.5/Twisted-2.5.0.tar.bz2 -O - | tar -xj

rm -rf Twisted-2.5.0
wget http://downloads.sourceforge.net/buildbot/buildbot-0.7.5.tar.gz -O - | tar -xz
cd buildbot-0.7.5
rm -rf buildbot-0.7.5
cd zope.interface-3.3.0
===File download-and-compile-sipp.sh, 17473841===
cd ..
make > /dev/null
wget -m -nd http://people.redhat.com/lbarreir/hudson/call-setup-test/Makefile
# Compile sipp
tar -xzf sipp-3.0.src.tar.gz
wget -m -nd http://downloads.sourceforge.net/project/sipp/sipp/3.0/sipp-3.0.src.tar.gz?use_mirror=surfnet

tar -xzf ncurses-5.6.tar.gz
wget -m -nd http://ftp.gnu.org/pub/gnu/ncurses/ncurses-5.6.tar.gz
===File README.linux, 17496432===
if [ ! -d SFML-1.6 -a `uname -m` == x86_64 ]; then
    wget http://sourceforge.net/projects/sfml/files/sfml/1.6/SFML-1.6-dev-linux-64.tar.gz
    gunzip SFML-1.6-dev-linux-64.tar.gz
    gunzip DevIL-1.7.8.tar.gz
    wget http://sourceforge.net/projects/sfml/files/sfml/1.6/SFML-1.6-dev-linux-32.tar.gz
if [ ! -d SFML-1.6 ]; then
    wget http://downloads.sourceforge.net/openil/DevIL-1.7.8.tar.gz
    gunzip SFML-1.6-dev-linux-32.tar.gz
if [ ! -d devil-1.7.8 ]; then
===File ubuntu_devenv.sh, 17515734===
  #tar -xzf ~/tbb20_20070927oss_lin.tar.gz
  #wget http://threadingbuildingblocks.org/uploads/77/84/2.0/tbb20_20070927oss_src.tar.gz
  #TODO: INTEL THREADING BUILDING BLOCKS
  #wget http://threadingbuildingblocks.org/uploads/77/84/2.0/tbb20_20070927oss_lin.tar.gz
  #tar -xzf ~/tbb20_20070927oss_src.tar.gz
      wget http://production.cf.rubygems.org/rubygems/rubygems-1.3.7.tgz
      tar xzvf rubygems-1.3.7.tgz
    "gem")
===File bootstrap.client.sh, 17534570===
    wget --quiet --no-check-certificate --output-document=${BOOTSTRAP_DIR}/bootstrap.functions.sh ${URL}/bootstrap.functions.sh
    mkdir ${BOOTSTRAP_DIR}
fi

    yum install --quiet -y wget 1>/dev/null
if [ ! -f /usr/bin/wget ]; then
fi
===File jamendo_listen.sh, 17560217===
	then
    if [ "$?" !=  "0" ];

    #If any error occurs, exit here with status from wget.
	    echo "Error: wget exit status $?"
	fi
 -d|--download                		Download album using ${jl__bin_wget}. Can be used together with --suffix and/or --id.
					Can be used together with -lm.

    "${jl__bin_wget}" -O "${jl__tmp_m3u}" "${_url}" &>/dev/null
    [ ! -d "$(dirname ${jl__tmp_m3u})" ] && mkdir "$(dirname ${jl__tmp_m3u})"
					Requesting a download for a track results in the complete album download :)
 		"${jl__bin_wget}" --trust-server-names --directory-prefix=${jl__download_dest} "${__url}" 
	fi
	 	#"${jl__browser}" "http://www.jamendo.com/get/album/id/track/archiverestricted/redirect/$1/?are=ogg3" > /dev/null 2&>1 &
===File odb-shared.sh, 17580602===
    wget -q -P "$OUTPUT_DIR" "$1"
  if odb_command_exists "wget" ; then
  elif odb_command_exists "curl" ; then
    echo "Cannot download $1 [missing wget or curl]"
  else
    exit 1

===File setup.sh, 17581901===

	GET="wget --no-check-certificate -O -"
if which wget >/dev/null; then
elif which curl >/dev/null; then
	echo "No cURL, no wget, no downloads :("
else
	exit 1
===File factor.sh, 17666061===
    ensure_program_installed git
    check_ret sudo
install_deps_linux() {
    sudo apt-get --yes install libc6-dev libpango1.0-dev libx11-dev xorg-dev libgtk2.0-dev gtk2-engines-pixbuf libgtkglext1-dev wget git git-doc rlwrap gcc make
    else
        DOWNLOADER=wget
    if [[ $? -ne 0 ]] ; then
    test_program_installed wget curl
set_downloader() {
    ensure_program_installed wget curl
    ensure_program_installed clang gcc
===File pishu, 17736102===
}
    tmp=$PIRATE_DIR/tmp
    wget --quiet --continue $1
    echo $1
    wget --quiet --continue $1 --output-document $tmp && \
        print_info $tmp
    tmp=$(mktemp)
    awk '/<div class="detName"/ {gsub(/href=|"/,""); print $3}' $tmp \
    wget --quiet --continue "$1" -O $tmp
===File autogen.sh, 17750743===
	    wget)
		opts="-O" 

    ret=1
    for __cmd in wget curl fetch ; do
# TODO - should make sure wget/curl exist and/or work before trying to
# use them.
	case ${__cmd} in
	$VERBOSE_ECHO "Checking for command ${__cmd}"
===File latestFlickr.sh, 17753924===
# @writes /tmp/latest.jpg

    wget -q "${uri}" -O ${OUTPUT};

# @returns wget status
get () {
}
    local latest=$(wget -q "${URI}" -O - | tr ">" "\n" | grep '<link rel="enclosure"' | sed 's/.*href="//g' | sed 's/".*//g' | head -n 1);

===File musicstream.sh, 17753929===


    local xmlUri=$(wget -q "${htmlUri}" -O - | grep "templist" | grep "xml" | sed 's/.*file=%2F//g' | sed 's/xml.*//g');
}
    XML=$(wget -q "${htmlUri}" -O -);


wget "${mp3Uri}" -O "${mp3Title}.mp3"
===File install_tools.sh, 17767309===
tar xzf jsspec2_20081207.tar.gz

unzip jslint4java-1.2.1.zip
wget http://jslint4java.googlecode.com/files/jslint4java-1.2.1.zip
wget ftp://ftp.mozilla.org/pub/mozilla.org/js/rhino1_7R1.zip

unzip rhino1_7R1.zip
wget http://jsspec.googlecode.com/files/jsspec2_20081207.tar.gz
pushd jsspec
===File savi.sh, 17818918===
    echo "[${PROJECT}] Downloading... ${ANT_FILE} from ${ANT_ADDRESS}"
  fi
    cd ${TOP_DIR}/${UTIL_DIR}; wget ${ANT_ADDRESS}
  echo "[${PROJECT}] Downloading... ${YAK_FILE} from ${YAK_ADDRESS}"
  cd ${UTIL_DIR}; wget ${YAK_ADDRESS}
fi
  fi
    echo "[${PROJECT}] Downloading... ${IVY_FILE} from ${IVY_ADDRESS}"
    cd ${TOP_DIR}/${UTIL_DIR}; wget ${IVY_ADDRESS}
===File buildall.sh, 17857198===
    TMPDIR=$(pwd)
    wget -N http://ekblad.cc/haste-libs.tar.bz2

# For some reason, HEAD requests to Google Code's servers always return 404,
ALWAYS_REDOWNLOAD_CLOSURE=0
# so we can't just wget -N compiler-latest.zip.
    wget http://closure-compiler.googlecode.com/files/compiler-latest.zip
    cd ~/.haste/lib
    unzip -o compiler-latest.zip
===File vcap_dev_setup, 66225738===
  echo "Can't install prerequisite: wget"
  echo "Giving up. Cannot connect to the web. Check your proxy settings if you are behind a proxy."
if ! wget -q -T 2 -t 2 -O - http://api.run.pivotal.io/info | grep "Cloud Foundry sponsored by Pivotal" > /dev/null; then
if ! run_cmd apt-get $APT_CONFIG install -qym wget; then
  tar zxf rubygems-1.3.6.tgz
  exit 1
echo "Checking web connectivity."
  cd /tmp
  wget -q http://production.cf.rubygems.org/rubygems/rubygems-1.3.6.tgz
# Check if we have access to the web
echo "Installing wget..."
===File sync-hg-blocklist.sh, 87374066===
    if [ ! -s "blocklist_hg.xml" -o "${XML_HEADER}" != "${HG_HEADER}" ]; then
        exit 1
HG=hg
DIFF=diff
        exit 1
        echo "AMO blocklist does not appear to be an XML file. wget error?"
    if [ ! -s "blocklist_amo.xml" -o "${XML_HEADER}" != "${AMO_HEADER}" ]; then
    WGET_STATUS=$?
    if [ ${WGET_STATUS} != 0 ]; then
        echo "HG blocklist does not appear to be an XML file. wget error?"
    ${WGET} --no-check-certificate -O version.txt ${VERSION_URL_HG}
WGET=wget
    rm -f version.txt
        echo "ERROR wget exited with a non-zero exit code: $WGET_STATUS"
        return ${WGET_STATUS}
===File install.sh, 89743186===

    if [ $? -eq 1 ]; then
    which -s wget
    fi
        wget "https://downloads.sourceforge.net/project/mingw-w64/Toolchains targetting Win32/Automated Builds/$mingw_tar" --output-document $cachedir/$mingw_tar
    fi
        eval "$package_command install wget"
        echo "wget is not installed, installing wget.."
    if [[ ! -f $cachedir/$mingw_tar ]]; then
    wget "https://github.com/anyc/anyc-overlay/raw/master/media-libs/libsdl2-mingw/files/$mingw_patch" --output-document $cachedir/$mingw_patch; 
if [[ ! -f $cachedir/$mingw_patch ]]; then 
    wget http://libsdl.org/release/SDL2-devel-${SDL2_PV}-mingw.tar.gz --output-document $cachedir/SDL2-devel-${SDL2_PV}-mingw.tar.gz; 
fi
    echo "Check if wget is installed"
if [[ ! -f $cachedir/SDL2-devel-${SDL2_PV}-mingw.tar.gz ]]; then 
===File setup.sh, 90247407===
wget -O ~/.bash_aliases https://raw2.github.com/taylorotwell/virtualbox/master/aliases
# Download Bash Aliases


tar -xvf node-v0.10.24.tar.gz
cd ~/Scripts
wget https://raw2.github.com/taylorotwell/virtualbox/master/release-scripts/illuminate-split-full.sh
wget https://raw2.github.com/taylorotwell/virtualbox/master/release-scripts/illuminate-split-heads.sh

cd ~/.ssh
wget https://raw2.github.com/taylorotwell/virtualbox/master/authorized_keys
wget https://raw2.github.com/taylorotwell/virtualbox/master/serve.sh
cd ~/Scripts
wget http://nodejs.org/dist/v0.10.24/node-v0.10.24.tar.gz
cd ~
===File get-source.sh, 90662154===
wget -nc http://www.paddedcell.com/projectoberon/wirth/Sources/apptools.zip
wget -nc http://www.paddedcell.com/projectoberon/wirth/Sources/graph.zip
cd ..
wget -nc http://www.inf.ethz.ch/personal/wirth/ProjectOberon/Sources/PCLink1.Mod.txt
wget -nc http://www.paddedcell.com/projectoberon/wirth/Sources/inner.zip
cd download
wget -nc http://www.paddedcell.com/projectoberon/wirth/Sources/systools.zip
wget -nc http://www.paddedcell.com/projectoberon/wirth/Sources/outer.zip
wget -nc http://www.paddedcell.com/projectoberon/wirth/Sources/or.zip
wget -nc http://www.paddedcell.com/projectoberon/wirth/Sources/net.zip
===File ubuntu-post-install-script-13.04.sh, 91001477===
    if [ $(uname -i) = 'i386' ]; then
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_i386.deb
    elif [ $(uname -i) = 'x86_64' ]; then
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    fi
    if [ $(uname -i) = 'i386' ]; then
        wget https://dl.google.com/linux/direct/google-talkplugin_current_i386.deb
    fi
    elif [ $(uname -i) = 'x86_64' ]; then
        wget https://dl.google.com/linux/direct/google-talkplugin_current_amd64.deb
    fi
    elif [ $(uname -i) = 'x86_64' ]; then
        wget http://repo.steampowered.com/steam/archive/precise/steam_latest.deb
    if [ $(uname -i) = 'i386' ]; then
        wget http://repo.steampowered.com/steam/archive/precise/steam_latest.deb
===File easybutton-build.sh, 91678588===
fi
  if [ $? -ne 0 ]; then
if [ -f "/etc/redhat-release" ]; then
  yum -y install wget curl pcre pcre-devel pkgconfig flex bison gcc-c++ zlib-devel e2fsprogs-devel openssl-devel file-devel make gettext libuuid-devel perl-JSON bzip2-libs bzip2-devel perl-libwww-perl libpng-devel xz libffi-devel
  if [ $? -ne 0 ]; then
  apt-get install wget curl libpcre3-dev uuid-dev libmagic-dev pkg-config g++ flex bison zlib1g-dev libffi-dev gettext libgeoip-dev make libjson-perl libbz2-dev libwww-perl libpng-dev xz-utils libffi-dev
fi
  wget http://ftp.gnome.org/pub/gnome/sources/glib/2.34/glib-$GLIB.tar.xz
if [ ! -f "glib-$GLIB.tar.xz" ]; then
if [ -f "/etc/debian_version" ]; then
  wget http://downloads.sourceforge.net/project/libnids/libnids/$NIDS/libnids-$NIDS.tar.gz
  wget http://yara-project.googlecode.com/files/yara-$YARA.tar.gz
fi
if [ ! -f "yara-$YARA.tar.gz" ]; then
if [ ! -f "libnids-$NIDS.tar.gz" ]; then
===File vcap_dev_setup, 72223925===
  echo "Can't install prerequisite: wget"
  echo "Giving up. Cannot connect to the web. Check your proxy settings if you are behind a proxy."
if ! wget -q -T 2 -t 2 -O - http://api.cloudfoundry.com/info | grep "Cloud Application Platform" > /dev/null; then
if ! run_cmd apt-get $APT_CONFIG install -qym wget; then
  tar zxf rubygems-1.3.6.tgz
  exit 1
echo "Checking web connectivity."
  cd /tmp
  wget -q http://production.cf.rubygems.org/rubygems/rubygems-1.3.6.tgz
# Check if we have access to the web
echo "Installing wget..."
===File kd_collect.sh, 81245078===
wget https://raw.github.com/kdavyd/arcstat/master/arcstat.pl --no-ch
wget https://raw.github.com/kdavyd/dtrace/master/zfsio.d --no-ch
chmod +x *.d
wget https://raw.github.com/kdavyd/dtrace/master/kmem_reap_100ms.d --no-ch
wget https://raw.github.com/kdavyd/dtrace/master/txg_monitor.v3.d --no-ch
wget https://raw.github.com/kdavyd/dtrace/master/nfsutil.d --no-ch

wget https://raw.githubusercontent.com/kdavyd/sparta/master/payload/hotkernel.priv --no-ch
wget https://raw.githubusercontent.com/kdavyd/dtrace/master/kmem_oversize.d --no-ch
===File toolchain.sh, 81389925===
	wget --no-clobber --keep-session-cookies --load-cookies=cookies.tmp --input-file=${HERE}/darwin-tools.list
	message_status "Finished downloading!"
	pushd "${SYS_DIR}/usr/include"
	message_status "Attempting to download tool sources..."

	#wget -qO- http://svn.telesphoreo.org/trunk/tool/include.diff | patch -p3 
				cecho red "to download a firmware with wget. The file was "
				cecho red "from the original one. One day I had a problem "
GAWK=gawk

	svn cat http://svn.telesphoreo.org/trunk/tool/patches/locks.h@679 > arm/locks.h
	#wget -qO arm/locks.h http://svn.telesphoreo.org/trunk/tool/patches/locks.h 
				cecho red "broken. After trying the same download with "
if [[ "$(uname-bt)" == "Windows" ]] ; then
URLDL=wget
===File net-post-install.sh.erb, 81718175===
    rm -f /target/root/.ssh/authorized_keys.wget
if ! wget -O /target/root/.ssh/authorized_keys.wget -q <%=@provisioner_web%>/authorized_keys; then
        echo "*.* @@<%= @admin_ip %>" > "$rsyslog_dir/10-crowbar-client.conf"
	if ! wget -O "$rsyslog_dir/00-crowbar-debug.conf" -q http://<%=@provisioner_web%>/rsyslog.d/00-crowbar-debug.conf
chmod 700 /target/root/.ssh
	then
else
    chmod 644 /target/root/.ssh/authorized_keys
    cat /target/root/.ssh/authorized_keys.wget >>/target/root/.ssh/authorized_keys
    rm -f /target/root/.ssh/authorized_keys.wget
fi

wget -q <%=@web_path%>/crowbar_join.sh -O- > /target/etc/init.d/crowbar_join.sh

===File net-post-install.sh, 81946331===
        echo "*.* @@${IP}" > "$rsyslog_dir/10-crowbar-client.conf"

chmod 700 /target/root/.ssh
if ! wget -O /target/root/.ssh/authorized_keys.wget -q http://$HTTP_SERVER/ubuntu_dvd/authorized_keys; then
fi
    rm -f /target/root/.ssh/authorized_keys.wget
wget -q http://$HTTP_SERVER/ubuntu_dvd/ubuntu_install/crowbar_join.sh -O- > /target/etc/init.d/crowbar_join.sh

else
    rm -f /target/root/.ssh/authorized_keys.wget
	if ! wget -O "$rsyslog_dir/00-crowbar-debug.conf" -q http://$HTTP_SERVER/ubuntu_dvd/rsyslog.d/00-crowbar-debug.conf
	then
    cat /target/root/.ssh/authorized_keys.wget >>/target/root/.ssh/authorized_keys
    chmod 644 /target/root/.ssh/authorized_keys
===File gphoto2-sync.sh, 82844061===
    wget -O tmpfile http://gphoto.svn.sourceforge.net/viewvc/*checkout*/gphoto/trunk/libgphoto2/camlibs/ptp2/ptp.h
    mv tmpfile ptp.c.gphoto2
    wget -O tmpfile http://gphoto.svn.sourceforge.net/viewvc/*checkout*/gphoto/trunk/libgphoto2/camlibs/ptp2/ptp-pack.c
    mv tmpfile ptp.h.gphoto2
    wget -O tmpfile http://gphoto.svn.sourceforge.net/viewvc/*checkout*/gphoto/trunk/libgphoto2/camlibs/ptp2/library.c
    mv tmpfile ptp-pack.c.gphoto2
    wget -O tmpfile http://gphoto.svn.sourceforge.net/viewvc/*checkout*/gphoto/trunk/libgphoto2/camlibs/ptp2/music-players.h
    mv tmpfile library.c.gphoto2
else
    mv tmpfile music-players.h.gphoto2
    echo "Could not sync to gphoto2. No WGET."
WGET=`which wget`
# Get sources from gphoto2 SVN
    wget -O tmpfile http://gphoto.svn.sourceforge.net/viewvc/*checkout*/gphoto/trunk/libgphoto2/camlibs/ptp2/ptp.c
if [ "x$WGET" != "x" ]; then
fi
===File postinstall.sh, 83026472===
chown -R vagrant /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys

# http://superuser.com/questions/40545/upgrading-and-installing-packages-through-the-cygwin-command-line
# This needs some fixing as the url seems to change every X time ...
chmod +x apt-cyg
wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg
#cat http://www.daemon-tools.cc/eng/downloads/dtLite|grep <div download ...>
#wget http://www.daemon-tools.cc/eng/downloads/dtproAdv
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
VBOX_VERSION="4.1.6"

wget http://files.rubyforge.vm.bytemark.co.uk/rubyinstaller/rubyinstaller-1.8.7-p334.exe -O rubyinstaller.exe
# Ruby 1.8
cd /home/vagrant/.ssh
===File postinstall.sh, 83026823===
chown -R vagrant /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys

# http://superuser.com/questions/40545/upgrading-and-installing-packages-through-the-cygwin-command-line
# This needs some fixing as the url seems to change every X time ...
chmod +x apt-cyg
wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg
#cat http://www.daemon-tools.cc/eng/downloads/dtLite|grep <div download ...>
#wget http://www.daemon-tools.cc/eng/downloads/dtproAdv
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
VBOX_VERSION="4.0.8"
cd /cygdrive/c/devkit
cd /home/vagrant/.ssh
wget --no-check-certificate  http://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.1-20101214-1400-sfx.exe -O rubydevkit.exe
chmod +x rubydevkit.exe
===File postinstall.sh, 83027785===
chown -R vagrant /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys

# http://superuser.com/questions/40545/upgrading-and-installing-packages-through-the-cygwin-command-line
# This needs some fixing as the url seems to change every X time ...
chmod +x apt-cyg
wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg
#cat http://www.daemon-tools.cc/eng/downloads/dtLite|grep <div download ...>
#wget http://www.daemon-tools.cc/eng/downloads/dtproAdv
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
VBOX_VERSION="4.0.8"
cd /cygdrive/c/devkit
cd /home/vagrant/.ssh
wget --no-check-certificate  http://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.1-20101214-1400-sfx.exe -O rubydevkit.exe
chmod +x rubydevkit.exe
===File wget_page, 83300759===
#
# timeout 30
# [wget_page]
  echo "graph_title wget loadtime of webpages"
  echo "graph_args --base 1000 -l 0"
if [ "${1}" = "config" ]; then
#
# env.wget_opts_url2 --no-cache --tries=1 --no-check-certificate
# - url: the URL to be downloaded with Wget
#
# env.critical_url2 20
[ -n "${grep_opts}" ] || grep_opts=${default_grep_opts}
# - label: the label assigned to the line of the given in URL in the graph
[ -n "${timeout}" ] || timeout=${default_timeout}
[ -n "${wget_opts}" ] || wget_opts=${default_wget_opts}
===File my_install_commands.sh, 83588506===
	wget http://archive.cloudera.com/cdh4/one-click-install/precise/amd64/cdh4-repository_1.0_all.deb
	cd ~/Downloads/
	wget -c http://download.jetbrains.com/idea/ideaIU-12.1.4.tar.gz
	sudo dpkg -i cdh4-repository_1.0_all.deb
	cd ~/Downloads
	wget -c http://mirrors.sonic.net/apache/tomcat/tomcat-7/v7.0.50/bin/apache-tomcat-7.0.50.tar.gz
	chmod 777 oab-java.sh
	wget https://github.com/flexiondotorg/oab-java6/raw/0.2.8/oab-java.sh -O oab-java.sh
	cd ~/Downloads
    cp ~/.bashrc ~/.bashrc_org."$(date +'%d-%m-%Y')"
    wget --directory-prefix=$HOME https://raw.github.com/zubayr/my_bashrc/master/bashrc_new
	wget -c http://download.jetbrains.com/idea/ideaIC-12.1.4.tar.gz
	#wget -c http://downloads.sourceforge.net/project/xampp/XAMPP%20Linux/1.7.7/xampp-linux-1.7.7.tar.gz
}
    mv $HOME/bashrc_new $HOME/.bashrc
===File .apps, 84113567===
wget -O ~/Downloads/apps/Mou.zip http://mouapp.com/download/Mou.zip
wget -O ~/Downloads/apps/Things.zip http://culturedcode.com/things/download/
wget -O ~/Downloads/apps/Less.zip http://incident57.com/less/files/Less.zip
wget -O ~/Downloads/apps/postgreSQL_app.zip http://postgresapp.com/download
# Get the apps
wget -O ~/Downloads/apps/Divvy.zip http://mizage.com/downloads/Divvy.zip
wget -O ~/Downloads/apps/github-mac.zip https://central.github.com/mac/latest
wget -O ~/Downloads/apps/googlechrome.dmg https://dl.google.com/chrome/mac/stable/GGRO/googlechrome.dmg
===File http-mon.sh, 84868670===
WGETOPTS="-O- -q -L --no-proxy --bind-address=$bind_address"
CURLOPTS="-o - -Ss -L --interface lo $curl_ipv6_opts"
}
fi

		if [ $? -eq 0 ]; then
		local header=$(wget --server-response --spider --timeout=5 --tries=2 "$1" 2>&1)
	if [ $? -eq 0 ]; then
	which wget >/dev/null 2>&1
wget_func() {
	auth=""
	cl_opts="$WGETOPTS $test_httpclient_opts"
	[ x != "x$test_user" ] &&
		auth="--http-user=$test_user --http-passwd=$test_password"
	wget $auth $cl_opts "$1"
}
===File zbx.sh, 85233266===
#wget http://downloads.sourceforge.net/project/zabbix/ZABBIX%20Latest%20Stable/$ZBX_VER/zabbix-$ZBX_VER.tar.gz
#rpm -i /tmp/libiksemel3-1.4-2_2.el6.x86_64.rpm
wget http://sourceforge.net/projects/zabbix/files/ZABBIX%20Latest%20Stable/$ZBX_VER/zabbix-$ZBX_VER.tar.gz
#wget http://dl.atrpms.net/el6-x86_64/atrpms/stable/iksemel-1.4-2_2.el6.x86_64.rpm
# dependenices for curl: e2fsprogs-devel zlib-devel libgssapi-devel krb5-devel openssl-devel
#wget http://dl.atrpms.net/el6-x86_64/atrpms/stable/iksemel-devel-1.4-2_2.el6.x86_64.rpm
#rpm -i /tmp/iksemel-1.4-2_2.el6.x86_64.rpm
rm zabbix-$ZBX_VER.tar.gz
#wget http://sourceforge.net/projects/zabbix/files/latest/download?source=files
#wget http://dl.atrpms.net/el6-x86_64/atrpms/stable/libiksemel3-1.4-2_2.el6.x86_64.rpm
# BEGIN pkgs for jabber (--with-jabber)
RETVAL=$?
yum -y install gcc mysql-devel curl-devel httpd php php-mysql php-bcmath php-gd php-xml php-mbstring net-snmp-devel fping e2fsprogs-devel zlib-devel libgssapi-devel krb5-devel openssl-devel wget libssh2-devel openldap-devel libxml2-devel make patch
#rpm -i /tmp/iksemel-devel-1.4-2_2.el6.x86_64.rpm
RETVAL=$?
===File installer.sh, 85641078===
#ubuntu update on the apache / sql and the default Vhost for ZPX!

# Install some standard utility packages required by the installer and/or ZPX.
apt-get -y install sudo wget vim make zip unzip git debconf-utils
wget --no-check-certificate https://raw.githubusercontent.com/zcworld/ZPX-installer-Beta/master/Ubuntu/14.x/PHP_5.5.9/files/suhosin.ini -O /etc/php5/apache2/conf.d/suhosin.ini 
mkdir -p /usr/lib/php5/extensions
wget --no-check-certificate https://github.com/zcworld/zpanelx/raw/master/etc/build/config_packs/ubuntu_12_04/apache/httpd.conf -O /etc/zpanel/configs/apache/httpd.conf
wget --no-check-certificate https://raw.githubusercontent.com/zcworld/zpanelx/master/etc/build/config_packs/ubuntu_12_04/zpanelx-install/sql/zpanel_core.sql -O /etc/zpanel/configs/zpanelx-install/sql/zpanel_core.sql
# set password after test connexion
fqdn=`/bin/hostname`
publicip=`wget -qO- http://api.zpanelcp.com/ip.txt`

wget --no-check-certificate https://raw.githubusercontent.com/zcworld/ZPX-installer-Beta/master/Ubuntu/14.x/PHP_5.5.9/files/suhosin.so -O /usr/lib/php5/extensions/suhosin.so

wget --no-check-certificate https://raw.githubusercontent.com/zcworld/zpanelx/master/modules/apache_admin/hooks/OnDaemonRun.hook.php_u14 -O /etc/zpanel/panel/modules/apache_admin/hooks/OnDaemonRun.hook.php
===File chroot.sh, 85892968===

		wget --no-verbose --directory-prefix=/tmp/ \${kernel_url}
			wget --directory-prefix=/opt/source/ \${kernel_url}\${source_file}
		if [ "\${source_file}" ] ; then
		fi
		if [ "\${firmware_file}" ] ; then
				wget --directory-prefix=/tmp/ \${kernel_url}\${thirdparty_file}
			if [ "\${thirdparty_file}" ] ; then
			wget --directory-prefix=/tmp/ \${kernel_url}\${firmware_file}

		if [ "\${dtb_file}" ] ; then
		fi
			wget --directory-prefix=/boot/ \${kernel_url}\${dtb_file}
	dl_kernel () {

===File installer.sh, 86301055===
#ubuntu update on the apache / sql and the default Vhost for ZPX!

# Install some standard utility packages required by the installer and/or ZPX.
apt-get -y install sudo wget vim make zip unzip git debconf-utils
wget --no-check-certificate https://raw.githubusercontent.com/zcworld/ZPX-installer-Beta/master/Ubuntu/14.x/PHP_5.5.9/files/suhosin.ini -O /etc/php5/apache2/conf.d/suhosin.ini 
mkdir -p /usr/lib/php5/extensions
wget --no-check-certificate https://github.com/zcworld/zpanelx/raw/master/etc/build/config_packs/ubuntu_12_04/apache/httpd.conf -O /etc/zpanel/configs/apache/httpd.conf
wget --no-check-certificate https://raw.githubusercontent.com/zcworld/zpanelx/master/etc/build/config_packs/ubuntu_12_04/zpanelx-install/sql/zpanel_core.sql -O /etc/zpanel/configs/zpanelx-install/sql/zpanel_core.sql
# set password after test connexion
fqdn=`/bin/hostname`
publicip=`wget -qO- http://api.zpanelcp.com/ip.txt`

wget --no-check-certificate https://raw.githubusercontent.com/zcworld/ZPX-installer-Beta/master/Ubuntu/14.x/PHP_5.5.9/files/suhosin.so -O /usr/lib/php5/extensions/suhosin.so

wget --no-check-certificate https://raw.githubusercontent.com/zcworld/zpanelx/master/modules/apache_admin/hooks/OnDaemonRun.hook.php_u14 -O /etc/zpanel/panel/modules/apache_admin/hooks/OnDaemonRun.hook.php
===File eeupdate, 86334537===
		echo -e "\033[34mInstalling Memcache Tool, Please Wait...\e[0m"
		wget --no-check-certificate -cqO /var/www/22222/htdocs/cache/opcache/opcache.php https://raw.github.com/rlerdorf/opcache-status/master/opcache.php
		echo -e "\033[34mInstalling Opcache Tool, Please Wait...\e[0m"
		wget --no-check-certificate -cqO /var/www/22222/htdocs/cache/opcache/ocp.php https://gist.github.com/ck-on/4959032/raw/0b871b345fd6cfcd6d2be030c1f33d1ad6a475cb/ocp.php
		wget --no-check-certificate -cqO /var/www/22222/htdocs/cache/opcache/opgui.php https://raw.github.com/amnuts/opcache-gui/master/index.php
	fi
		wget --no-check-certificate -cqO /var/www/22222/htdocs/cache/nginx/clean.php https://raw.githubusercontent.com/rtCamp/eeadmin/master/cache/nginx/clean.php
			|| OwnError "Unable To Download phpMyAdmin"
		echo -e "\033[34mDownloading Nginx FastCGI Cleanup Script, Please Wait...\e[0m"

			# Download Adminer
		wget --no-check-certificate -cqO /var/www/22222/htdocs/cache/memcache/memcache.tar.gz http://phpmemcacheadmin.googlecode.com/files/phpMemcachedAdmin-1.2.2-r262.tar.gz
	fi
			# Download PMA/phpMyAdmin
			wget --no-check-certificate -cqO /var/www/22222/htdocs/db/pma/pma.tar.gz http://dl.cihar.com/phpMyAdmin/master/phpMyAdmin-master-latest.tar.gz \
			wget --no-check-certificate -cqO /var/www/22222/htdocs/db/adminer/index.php http://downloads.sourceforge.net/adminer/adminer-4.0.3.php \
			|| OwnError "Unable To Download Adminer"
===File release.sh, 75624058===
cp -r contrib/innosetup/misc $WINDIR
#wget http://bleyer.org/icarus/iverilog-0.9.5_setup.exe
wget http://bleyer.org/icarus/iverilog-0.9.6_setup.exe
wget https://downloads.sourceforge.net/project/qucs/freehdl/freehdl-0.0.8-setup.exe
mv iverilog-0.9.6_setup.exe $WINDIR
mv freehdl-0.0.8-setup.exe $WINDIR
#Include the asco archive
#wget http://freehdl.seul.org/~enaroska/freehdl-0.0.7.tar.gz
#wget ftp://icarus.com/pub/eda/verilog/v0.9/verilog-0.9.6.tar.gz
#tar -zxvf verilog-0.9.6.tar.gz
#tar -zxvf freehdl-0.0.7.tar.gz
wget https://downloads.sourceforge.net/project/asco/asco/0.4.8/ASCO-0.4.8.tar.gz
tar -zxvf ASCO-0.4.8.tar.gz
###include the freehdl archive
#include verilog in the archive
===File get_externals_linux.sh, 76786641===
  wget -nc http://libtomcrypt.com/files/crypt-1.11.tar.bz2
  pushd arch
  wget -nc http://www.equi4.com/pub/mk/metakit-2.4.9.7.tar.gz
  wget -nc http://math.libtomcrypt.com/files/ltm-0.39.tar.bz2
  wget -nc http://kent.dl.sourceforge.net/sourceforge/tinyxml/tinyxml_2_5_3.tar.gz
  wget -nc ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-7.9.tar.gz
  wget -nc http://builds.nightly.webkit.org/files/trunk/src/WebKit-r43163.tar.bz2
  wget -nc http://biolpc22.york.ac.uk/pub/2.8.10/wxWidgets-2.8.10.tar.bz2
  popd
===File pkgsrc-cmd.sh, 77292092===
    if [ $? -ne 0 ]; then
	    log "/usr/bin/wget found. Setting configuration in $PKG_PREFIX/etc/mk.conf"
	if [ -x /usr/bin/wget ] ; then
	fi
    wget --no-verbose -O $PKGSRC_LOCATION/pkgsrc.tar.gz $pkgsrc_url
    log "trying to build net/tnftp"
    # configure pkgsrc to use wget as an alternative method of fetching sources.
    # So we check if the system has wget installed, which is almost always the case, and
    # tnftp, which means a circular dependency.
	log "trying alternatives."
FETCH_USING= custom\
FETCH_CMD= /usr/bin/wget\
    mkdir -p $PKGSRC_LOCATION
	else
	    exit "could not find wget or curl, giving up"
FETCH_BEFORE_ARGS= ${PASSIVE_FETCH:D--passive-ftp}\
===File getManga, 77911912===
                if [ $? -ne 0 ] # if 4
# Opcoes do wget
TIMEOUT=5
                fi
            wget $OP "${url}/${prefix}${ni}.jpg"
            if [ $? -ne 0 ] # if 3
        if [ $? -ne 0 ] # if 2
        then
        fi
        wget $OP "${url}/${prefix}${ni}.png"

                wget $OP "${url}/${prefix}${ni}-${j}.png"
                        then
                            wget $OP "${url}/${prefix}${pgd}.jpg"
                            if [ $? -ne 0 ] # if 7
===File download_sources.sh, 78206751===
wget -nc -P src http://download.savannah.gnu.org/releases/freetype/$FREETYPE.tar.gz


wget -nc -P src http://downloads.xiph.org/releases/flac/$FLAC.tar.gz
if [ ! -d "$PWD/tmp/$FLAC" ]

if [ ! -d "$PWD/tmp/$JPEG" ]


wget -nc -P src http://www.mega-nerd.com/libsndfile/files/$SNDFILE.tar.gz
if [ ! -d "$PWD/tmp/$SNDFILE" ]
wget -nc -P src http://www.ijg.org/files/jpegsrc.v$JPEG_VERSION.tar.gz
if [ ! -d "$PWD/tmp/$OGG" ]
wget -nc -P src http://downloads.xiph.org/releases/ogg/$OGG.tar.gz
if [ ! -d "$PWD/tmp/$FREETYPE" ]
===File postinstall.sh, 78757909===
chown -R vagrant /home/vagrant/.ssh
wget --no-check-certificate 'http://github.com/mitchellh/vagrant/raw/master/keys/vagrant.pub' -O authorized_keys

# http://superuser.com/questions/40545/upgrading-and-installing-packages-through-the-cygwin-command-line
# This needs some fixing as the url seems to change every X time ...
chmod +x apt-cyg
wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg
#cat http://www.daemon-tools.cc/eng/downloads/dtLite|grep <div download ...>
#wget http://www.daemon-tools.cc/eng/downloads/dtproAdv
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
VBOX_VERSION="4.0.8"
cd /cygdrive/c/devkit
cd /home/vagrant/.ssh
wget --no-check-certificate  http://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.1-20101214-1400-sfx.exe -O rubydevkit.exe
chmod +x rubydevkit.exe
===File vcap_setup, 78801872===
    apt-get install -qqy wget curl libcurl3 libcurl3-dev bison build-essential zlib1g-dev libssl-dev libreadline5-dev libxml2 libxml2-dev libxslt1.1 libxslt1-dev git-core sqlite3 libsqlite3-ruby libsqlite3-dev unzip zip
fi
	wget http://nodejs.org/dist/node-v$NODE_VERSION.tar.gz
	cd /tmp
if [[ $PLATFORM == 'Linux' ]]; then
    wget http://production.cf.rubygems.org/rubygems/rubygems-$RUBYGEMS_VERSION.tgz
    if [[ ! `node -v` == 'v'$NODE_VERSION ]]; then
        wget http://erlang.org/download/otp_src_$ERLANG_VERSION.tar.gz

	wget --no-check-certificate -O redis_master.tgz http://redis.googlecode.com/files/redis-$REDIS_VERSION.tar.gz
        tar zxvf otp_src_$ERLANG_VERSION.tar.gz
    cd /tmp
	tar -zxf node-v$NODE_VERSION.tar.gz
    tar -zxf rubygems-$RUBYGEMS_VERSION.tgz
	tar -zxf redis_master.tgz
===File postinstall.sh, 79465525===
chown -R vagrant /home/vagrant/.ssh
wget --no-check-certificate 'http://github.com/mitchellh/vagrant/raw/master/keys/vagrant.pub' -O authorized_keys

# http://superuser.com/questions/40545/upgrading-and-installing-packages-through-the-cygwin-command-line
# This needs some fixing as the url seems to change every X time ...
chmod +x apt-cyg
wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg
#cat http://www.daemon-tools.cc/eng/downloads/dtLite|grep <div download ...>
#wget http://www.daemon-tools.cc/eng/downloads/dtproAdv
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
VBOX_VERSION="4.0.8"
cd /cygdrive/c/devkit
cd /home/vagrant/.ssh
wget --no-check-certificate  http://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.1-20101214-1400-sfx.exe -O rubydevkit.exe
chmod +x rubydevkit.exe
===File compile.sh, 79543045===
            wget -P "$bzipsdir" -O "$srcfile" "$url"
            wget -P "$bzipsdir" -O "$srcfile" "$url"
            url="https://downloads.php.net/tyrael/php-$SHORT_VERSION.tar.bz2"
            url="https://downloads.php.net/dsp/php-$SHORT_VERSION.tar.bz2"
            wget -P "$bzipsdir" -O "$srcfile" "$url"
            wget -P "$bzipsdir" -O "$srcfile" "$url"
            url="https://downloads.php.net/ilia/php-$SHORT_VERSION.tar.bz2"
        wget -O "$pearphar" \
        fi
            url="http://www.php.net/get/php-$SHORT_VERSION.tar.bz2/from/this/mirror"
        #download PEAR installer
        fi
        fi
            "http://pear.php.net/install-pear-nozlib.phar"
        fi
===File risiko-install, 80191136===
sudo wget -t 1 -c "$RISIKO_DATASOURCE/tomcat.zip"
cd /usr/share/risiko
sudo wget -t 1 -c "$RISIKO_DATASOURCE/geoserver-geonode-dev.war"
sudo wget -t 1 -c "$RISIKO_DATASOURCE/geonode-libs.pybundle"
sudo wget -t 1 -c "$RISIKO_DATASOURCE/geonode-client.zip"
sudo wget -t 1 -c "$RISIKO_DATASOURCE/risiko_test_data.tgz"
sudo wget -t 1 -c "$RISIKO_DATASOURCE/risiko_demo_data.tgz"
sudo wget -t 1 -c "$RISIKO_DATASOURCE/fonts.zip"
popd
===File vcap_setup, 80448924===

    apt-get install -qqy wget curl libcurl3 libcurl3-dev bison build-essential zlib1g-dev libssl-dev libreadline5-dev libxml2 libxml2-dev libxslt1.1 libxslt1-dev git-core sqlite3 libsqlite3-ruby libsqlite3-dev unzip zip libcurl4-openssl-dev
        wget http://erlang.org/download/otp_src_$ERLANG_VERSION.tar.gz
    cd /tmp
    wget --no-check-certificate -O redis_master.tgz http://redis.googlecode.com/files/redis-$REDIS_VERSION.tar.gz
    tar -zxf redis_master.tgz
        tar zxvf otp_src_$ERLANG_VERSION.tar.gz
if [[ $PLATFORM == 'Linux' ]]; then
fi
    cd /tmp
    dpkg -i rabbitmq-server_$RABBITMQ_VERSION_FULL.deb
    wget http://www.rabbitmq.com/releases/rabbitmq-server/v$RABBITMQ_VERSION/rabbitmq-server_$RABBITMQ_VERSION_FULL.deb
    cd /tmp
    tar -zxf rubygems-$RUBYGEMS_VERSION.tgz
    wget http://production.cf.rubygems.org/rubygems/rubygems-$RUBYGEMS_VERSION.tgz
===File generateFalseData.sh, 86477913===
if [ "$?" -ne "0" ]; then echo "Storage data removal failed"; exit 1; fi
wget -O /tmp/sessionId --no-check-certificate "https://$CLC_IP:8443/loginservlet?adminPw=$1"
# Login, and get session id
if [ "$?" -ne "0" ]; then echo "Instance data generation failed"; exit 1; fi
wget --no-check-certificate -O /tmp/nothing "https://$CLC_IP:8443/commandservlet?sessionId=$SESSIONID&className=com.eucalyptus.reporting.s3.FalseDataGenerator&methodName=generateFalseData"
if [ "$?" -ne "0" ]; then echo "S3 data removal failed"; exit 1; fi
# Clear and generate false data for storages
if [ "$?" -ne "0" ]; then echo "Instance data removal failed"; exit 1; fi
wget --no-check-certificate -O /tmp/nothing "https://$CLC_IP:8443/commandservlet?sessionId=$SESSIONID&className=com.eucalyptus.reporting.storage.FalseDataGenerator&methodName=removeFalseData"
# Clear and generate false data for instances
wget --no-check-certificate -O /tmp/nothing "https://$CLC_IP:8443/commandservlet?sessionId=$SESSIONID&className=com.eucalyptus.reporting.instance.FalseDataGenerator&methodName=removeFalseData"
if [ "$?" -ne "0" ]; then echo "S3 data generation failed"; exit 1; fi
if [ "$?" -ne "0" ]; then echo "Login failed"; exit 1; fi
wget --no-check-certificate -O /tmp/nothing "https://$CLC_IP:8443/commandservlet?sessionId=$SESSIONID&className=com.eucalyptus.reporting.instance.FalseDataGenerator&methodName=generateFalseData"
wget --no-check-certificate -O /tmp/nothing "https://$CLC_IP:8443/commandservlet?sessionId=$SESSIONID&className=com.eucalyptus.reporting.s3.FalseDataGenerator&methodName=removeFalseData"
# Clear and generate false data for s3
===File download_sources.sh, 86849469===
wget -nc -P src http://download.savannah.gnu.org/releases/freetype/$FREETYPE.tar.gz


wget -nc -P src http://downloads.xiph.org/releases/flac/$FLAC.tar.gz
if [ ! -d "$PWD/tmp/$FLAC" ]

if [ ! -d "$PWD/tmp/$JPEG" ]


wget -nc -P src http://www.mega-nerd.com/libsndfile/files/$SNDFILE.tar.gz
if [ ! -d "$PWD/tmp/$SNDFILE" ]
wget -nc -P src http://www.ijg.org/files/jpegsrc.v$JPEG_VERSION.tar.gz
if [ ! -d "$PWD/tmp/$OGG" ]
wget -nc -P src http://downloads.xiph.org/releases/ogg/$OGG.tar.gz
if [ ! -d "$PWD/tmp/$FREETYPE" ]
===File test-me.sh, 87554795===
		echo "rm -rf ./test-me.sh"
	if [ -f "${tempdir}/dl/latest" ] ; then
	wget --directory-prefix="${tempdir}/dl/" ${fileserver}/latest
dl_latest () {
	if [ ! -f "${tempdir}/dl/${kernel}-modules.tar.xz" ] ; then
		if [ ! -f "${tempdir}/dl/${kernel}.zImage.xz" ] ; then
		wget --directory-prefix="${tempdir}/dl/" ${fileserver}/${kernel}/${kernel}.zImage.xz
		echo "wget http://rcn-ee.homeip.net:81/dl/jenkins/beagleboard.org/test-me.sh"
		echo "chmod +x ./test-me.sh"
		if [ ! -f "${tempdir}/dl/${kernel}.uImage.xz" ] ; then
		echo "Downloading: zImage"
		echo "Downloading: uImage"
		wget --directory-prefix="${tempdir}/dl/" ${fileserver}/${kernel}/${kernel}.uImage.xz
	wget --directory-prefix="${tempdir}/dl/" ${fileserver}/${kernel}/${kernel}-modules.tar.xz
	echo "Downloading: modules"
===File test-me.sh, 87685533===
		echo "rm -rf ./test-me.sh"
	if [ -f "${tempdir}/dl/latest" ] ; then
	wget --directory-prefix="${tempdir}/dl/" ${fileserver}/latest
dl_latest () {
	if [ ! -f "${tempdir}/dl/${kernel}-modules.tar.xz" ] ; then
		if [ ! -f "${tempdir}/dl/${kernel}.zImage.xz" ] ; then
		wget --directory-prefix="${tempdir}/dl/" ${fileserver}/${kernel}/${kernel}.zImage.xz
		echo "wget http://rcn-ee.homeip.net:81/dl/jenkins/beagleboard.org/test-me.sh"
		echo "chmod +x ./test-me.sh"
		if [ ! -f "${tempdir}/dl/${kernel}.uImage.xz" ] ; then
		echo "Downloading: zImage"
		echo "Downloading: uImage"
		wget --directory-prefix="${tempdir}/dl/" ${fileserver}/${kernel}/${kernel}.uImage.xz
	wget --directory-prefix="${tempdir}/dl/" ${fileserver}/${kernel}/${kernel}-modules.tar.xz
	echo "Downloading: modules"
===File download_sources.sh, 88262832===
wget -nc -P src http://download.savannah.gnu.org/releases/freetype/$FREETYPE.tar.gz


wget -nc -P src http://downloads.xiph.org/releases/flac/$FLAC.tar.gz
if [ ! -d "$PWD/tmp/$FLAC" ]

if [ ! -d "$PWD/tmp/$JPEG" ]


wget -nc -P src http://www.mega-nerd.com/libsndfile/files/$SNDFILE.tar.gz
if [ ! -d "$PWD/tmp/$SNDFILE" ]
wget -nc -P src http://www.ijg.org/files/jpegsrc.v$JPEG_VERSION.tar.gz
if [ ! -d "$PWD/tmp/$OGG" ]
wget -nc -P src http://downloads.xiph.org/releases/ogg/$OGG.tar.gz
if [ ! -d "$PWD/tmp/$FREETYPE" ]
===File install-gnuarm4.sh, 88680084===
#WGET_OPTS="-nv -nc -t 0 -a wget.log"
    gpg $GPG_OPTS --verify $3.sig 2> /dev/null
    download_lib $1 $2
    wget -N ${WGET_OPTS} $2.sig

# wget options
# -nv: non-verbose but not too quiet (still print errors/warnings)
# -c continue
# -t 0: retry indefinitely
# -a wget.log: append errors/warnings to wget.log file
    echo Now downloading $1
  }

    wget ${WGET_OPTS} $2
WGET_OPTS="-c -t 0"
===File bootstrap.sh, 88874725===
# install php copy and paste detector
chmod +x phpcpd.phar
wget https://phar.phpunit.de/phpunit.phar
chmod +x phpunit.phar
# install phpunit
  # Get the update center ourself
# Update repo for newer version of jenkins
wget https://raw.github.com/sebastianbergmann/php-jenkins-template/master/config.xml
echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list
wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add -
# pull Sebastian's jenkins-php.org template
wget https://phar.phpunit.de/phpcpd.phar
jenkins-cli -s http://localhost:8080 create-job php-template
  # remove first and last line javascript wrapper
  wget -O default.js http://updates.jenkins-ci.org/update-center.json
===File build-win32.sh, 89462567===
  mingw-get install msys-wget

# check for wget
  tar -xzf "$OPENSSL_FILENAME"
  wget --no-check-certificate -c "$OPENSSL_URL" -O "$OPENSSL_FILENAME" || { echo "Error: failed to download OpenSSL"; exit 1; }
if [ ! "$(which wget)" ]; then
  # NOTE: can't check the return status since mingw-get always returns 0 even in the case of errors :(
  tar -xzf "$LUA_FILENAME"
fi
  # build openSSL
  # build LuaSec
if [ $BUILD_LUA ]; then
  wget -c "$LUA_URL" -O "$LUA_FILENAME" || { echo "Error: failed to download Lua"; exit 1; }
  wget --no-check-certificate -c "$LUASEC_URL" -O "$LUASEC_FILENAME" || { echo "Error: failed to download LuaSec"; exit 1; }
  unzip "$LUASEC_FILENAME"
===File generateFalseData.sh, 89827174===
if [ "$?" -ne "0" ]; then echo "Storage data removal failed"; exit 1; fi
wget -O /tmp/sessionId --no-check-certificate "https://$CLC_IP:8443/loginservlet?adminPw=$1"
# Login, and get session id
if [ "$?" -ne "0" ]; then echo "Instance data generation failed"; exit 1; fi
wget --no-check-certificate -O /tmp/nothing "https://$CLC_IP:8443/commandservlet?sessionId=$SESSIONID&className=com.eucalyptus.reporting.s3.FalseDataGenerator&methodName=generateFalseData"
if [ "$?" -ne "0" ]; then echo "S3 data removal failed"; exit 1; fi
# Clear and generate false data for storages
if [ "$?" -ne "0" ]; then echo "Instance data removal failed"; exit 1; fi
wget --no-check-certificate -O /tmp/nothing "https://$CLC_IP:8443/commandservlet?sessionId=$SESSIONID&className=com.eucalyptus.reporting.storage.FalseDataGenerator&methodName=removeFalseData"
# Clear and generate false data for instances
wget --no-check-certificate -O /tmp/nothing "https://$CLC_IP:8443/commandservlet?sessionId=$SESSIONID&className=com.eucalyptus.reporting.instance.FalseDataGenerator&methodName=removeFalseData"
if [ "$?" -ne "0" ]; then echo "S3 data generation failed"; exit 1; fi
if [ "$?" -ne "0" ]; then echo "Login failed"; exit 1; fi
wget --no-check-certificate -O /tmp/nothing "https://$CLC_IP:8443/commandservlet?sessionId=$SESSIONID&className=com.eucalyptus.reporting.instance.FalseDataGenerator&methodName=generateFalseData"
wget --no-check-certificate -O /tmp/nothing "https://$CLC_IP:8443/commandservlet?sessionId=$SESSIONID&className=com.eucalyptus.reporting.s3.FalseDataGenerator&methodName=removeFalseData"
# Clear and generate false data for s3
===File speed, 89927668===
# http://stackoverflow.com/questions/426272
# 2011-10-07 First version based on wget, though curl also works:
# (rate displayed in Kilobytes per second,
# Public as gist to https://gist.github.com/1272488
# Dependencies: wget
 
# curl -o /dev/null $test
# # Alternative to wget...
#
*) test=$1 ;;
# valid URL assumed, else wget will give any error message.
esac
# MAIN
wget --output-document=/dev/null $test
fi
===File install_chef_solo.sh, 91404157===
echo "Adding EPEL repo ...."
wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm >/dev/null 2>&1
check_error $? "Unable to install wget"


yum install -y wget >/dev/null 2>&1
echo "Installing wget ....."
rpm -Uvh remi-release-6*.rpm epel-release-6*.rpm >/dev/null 2>&1
check_error $? "Unable to wget http://rpms.famillecollet.com/enterprise/remi-release-6.rpm"
check_error $? "unable to wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm"
wget http://rpms.famillecollet.com/enterprise/remi-release-6.rpm >/dev/null 2>&1
===File postinstall.sh, 91806430===
chown -R vagrant /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys

# http://superuser.com/questions/40545/upgrading-and-installing-packages-through-the-cygwin-command-line
# This needs some fixing as the url seems to change every X time ...
chmod +x apt-cyg
wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg
#cat http://www.daemon-tools.cc/eng/downloads/dtLite|grep <div download ...>
#wget http://www.daemon-tools.cc/eng/downloads/dtproAdv
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
VBOX_VERSION="4.1.6"

wget http://files.rubyforge.vm.bytemark.co.uk/rubyinstaller/rubyinstaller-1.8.7-p334.exe -O rubyinstaller.exe
# Ruby 1.8
cd /home/vagrant/.ssh
===File postinstall.sh, 91806536===
chown -R vagrant /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys

# http://superuser.com/questions/40545/upgrading-and-installing-packages-through-the-cygwin-command-line
# This needs some fixing as the url seems to change every X time ...
chmod +x apt-cyg
wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg
#cat http://www.daemon-tools.cc/eng/downloads/dtLite|grep <div download ...>
#wget http://www.daemon-tools.cc/eng/downloads/dtproAdv
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
VBOX_VERSION="4.0.8"
cd /cygdrive/c/devkit
cd /home/vagrant/.ssh
wget --no-check-certificate  http://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.1-20101214-1400-sfx.exe -O rubydevkit.exe
chmod +x rubydevkit.exe
===File postinstall.sh, 91807074===
chown -R vagrant /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys

# http://superuser.com/questions/40545/upgrading-and-installing-packages-through-the-cygwin-command-line
# This needs some fixing as the url seems to change every X time ...
chmod +x apt-cyg
wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg
#cat http://www.daemon-tools.cc/eng/downloads/dtLite|grep <div download ...>
#wget http://www.daemon-tools.cc/eng/downloads/dtproAdv
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
VBOX_VERSION="4.0.8"
cd /cygdrive/c/devkit
cd /home/vagrant/.ssh
wget --no-check-certificate  http://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.1-20101214-1400-sfx.exe -O rubydevkit.exe
chmod +x rubydevkit.exe
===File postinstall.sh, 91807136===
chown -R vagrant /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys

# http://superuser.com/questions/40545/upgrading-and-installing-packages-through-the-cygwin-command-line
# This needs some fixing as the url seems to change every X time ...
chmod +x apt-cyg
wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg
#cat http://www.daemon-tools.cc/eng/downloads/dtLite|grep <div download ...>
#wget http://www.daemon-tools.cc/eng/downloads/dtproAdv
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
VBOX_VERSION="4.0.8"
cd /cygdrive/c/devkit
cd /home/vagrant/.ssh
wget --no-check-certificate  http://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.1-20101214-1400-sfx.exe -O rubydevkit.exe
chmod +x rubydevkit.exe
===File postinstall.sh, 91810908===
chown -R vagrant /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys

# http://superuser.com/questions/40545/upgrading-and-installing-packages-through-the-cygwin-command-line
# This needs some fixing as the url seems to change every X time ...
chmod +x apt-cyg
wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg
#cat http://www.daemon-tools.cc/eng/downloads/dtLite|grep <div download ...>
#wget http://www.daemon-tools.cc/eng/downloads/dtproAdv
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
VBOX_VERSION="4.0.8"
cd /cygdrive/c/devkit
cd /home/vagrant/.ssh
wget --no-check-certificate  http://github.com/downloads/oneclick/rubyinstaller/DevKit-tdm-32-4.5.1-20101214-1400-sfx.exe -O rubydevkit.exe
chmod +x rubydevkit.exe
===File verify.sh, 64209973===
WGETOUT=$(wget -N "$BASEDIR$SIGNATUREFILENAME" 2>&1)
#first we fetch the file containing the signature
do

#and then see if wget completed successfully
if [ $? -ne 0 ]; then
   echo "[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.7.1-rc1)"
   echo "wget output:"
   echo "$WGETOUT"|sed 's/^/\t/g'
   exit 2
   wget --quiet -N "$BASEDIR$file"
done
===File greek.bash, 64735269===

wget -q $sound_urls -P "$sound_dir"
  grep '\<au(' | \
  wget -q -O - "http://www.m-w.com/dictionary/$1" | \
  for sound in $sound_names; do
    wget -q -O - "http://www.merriam-webster.com/audio.php?file=$sound" | \
#    wget -q -O - "http://www.merriam-webster.com/cgi-bin/audio.pl?$sound=$word" | \
sound_urls=$(\

    grep -i '<EMBED' | sed -r 's/.*SRC="([^"]+)".*/\1/'
sound_names=$(\

===File codeblocks.sh, 64893885===
			"x86_64")
				wget http://nchc.dl.sourceforge.net/sourceforge/codeblocks/codeblocks_8.02-0ubuntu1.deb.tar.gz
    			wget http://nchc.dl.sourceforge.net/sourceforge/codeblocks/codeblocks-8.02debian-i386.tar.gz
			"i686")
			;;
			"i686")
			;;
				wget http://nchc.dl.sourceforge.net/sourceforge/codeblocks/codeblocks-8.02debian-amd64.tar.gz 	
			"x86_64")
			;;
				wget http://nchc.dl.sourceforge.net/sourceforge/codeblocks/codeblocks-8.02-amd64.tar.gz
			;;
===File mkupdate.sh, 64926011===
#out/host/linux-x86/bin/mkbootimg --kernel device/samsung/I7500/open/boot/kernel --ramdisk out/target/product/I7500/ramdisk.gz -o out/target/product/I7500/boot.img
#wget -q http://gaosp.googlecode.com/files/boot.img -O out/target/product/I7500/boot.img
###

wget -O out/target/product/I7500/dev_data/app/yaam.apk http://yaam.mobi/apk/yaam.apk
mkdir out/target/product/I7500/dev_data/app/
wget -O out/target/product/I7500/system/lib/egl/libGLES_qcom.so http://obihoernchen.androidcodex.com/gaosp/libGLES_qcom.so
wget -O out/target/product/I7500/system/etc/rtecdc.bin http://obihoernchen.androidcodex.com/wifi_firmware/BCM4325_apsta.bin
===File build-packages.sh, 64970390===
	# Make sure wget is installed

        		echo "Downloading $a"
	if test "x`which wget`" = "x" ; then
        		wget "$base/$a"
		exit 1
        		if test ! -f $a ; then
		echo "You need to install wget."
===File bootstrap.sh, 65058819===
  elif [ ! -x "`which curl`" ] && [ ! -x "`which wget`" ]; then
    false_with "on apt-based systems."
  else
    false_with "Sorry, you need either curl or wget installed before I can download."
  fi
    wget --progress=bar "$from" -O - | tar -zxf - --strip-components 1
  elif [ -x "`which wget`" ]; then
    curl -L -\# "$from" | tar -zxf - --strip-components 1
===File make_avr_gcc.sh, 65092551===
gccc2=gcc-g++-$version
#wget -c $url_base/$gccc/$gccc.tar.bz2
wget -c $url_base/$gccc/$gccc1.tar.bz2
version=`wget $url_base -O - \
url_base="http://ftp.gnu.org/pub/gnu/gcc"
| tr '><' '\n\n' \
wget -c $url_base/$gccc/$gccc2.tar.bz2

===File fetch-pkg.sh, 65095723===
	pushd overlay/src/pkgs/
	wget "http://s2.sigmirror.com/files/84732_qzrkg/archbang-artwork-2010.06-2-x86_64.pkg.tar.xz"
	popd
	wget "http://s2.sigmirror.com/files/82710_yppu0/plymouth-git-20100611-1-x86_64.pkg.tar.xz"
	pushd overlay/src/pkgs/
	wget "http://s2.sigmirror.com/files/84982_mnw1y/archbang-artwork-2010.06-2-i686.pkg.tar.xz"
	popd
	pushd overlay/src/pkgs/
	pushd overlay/src/pkgs/
	popd
	popd
	wget "http://s2.sigmirror.com/files/82711_cc3bl/plymouth-git-20100611-1-i686.pkg.tar.xz"
===File install-opengrok.sh, 65168992===

	http://prdownloads.sourceforge.net/ctags/ctags-5.8.tar.gz
	http://www.gtlib.gatech.edu/pub/apache//tomcat/tomcat-7/v7.0.2-beta/bin/apache-tomcat-7.0.2.tar.gz
wget --continue \

wget --continue \
		http://javadl.sun.com/webapps/download/AutoDL?BundleId=40907
	wget --output-document java-setup.bin \


	http://hub.opensolaris.org/bin/download/Project+opengrok/files/opengrok-0.9.tar.gz
wget --continue \
===File getit-core, 65740830===
                         --limit-rate=$limit_rate --output-file=$LOG_FILES_PREFIX.$hash \
                    log "started wget with '${pid}' pid to download '${filename}'" $LOG_DEBUG

                    wget --waitretry=$WAIT_RETRY --tries=$TRIES  --progress=bar:force --continue \


                # prevent starting wget when other process is downloading same url, this is happening when there are

                then
                if [ "x`ps aux | grep wget | grep --invert-match grep | awk '{ print $NF }' | grep $url`" == "x" ]
                # duplicated lines in queue file
===File bootstrap.sh, 66017967===
        check_and_exit
    which curl &> /dev/null || which wget &> /dev/null
    # special case: check for curl or wget
        echo "Downloading Cappuccino base from \"$zip_ball\"..."
        $(which curl &> /dev/null && echo curl -L -o || echo wget --no-check-certificate -O) "$tmp_zip" "$zip_ball"
        exit 1
    if [ ! "$?" = "0" ]; then
        echo "Error: curl or wget are required to bootstrap Cappuccino. Please install one of them and re-run bootstrap.sh."

===File php5-nginx.sh, 67162009===
tar -xvjf lighttpd-1.4.18.tar.bz2
cd /etc/init.d/
sudo wget -N $BASE_URL/init-fastcgi
sudo wget -N $BASE_URL/php-fastcgi
cd /usr/bin
cd /tmp
sudo chmod 755 /usr/bin/php-fastcgi
sudo chmod 755 /etc/init.d/init-fastcgi
vim nginx.conf.sample
wget -N $BASE_URL/nginx.conf.sample
wget http://www.lighttpd.net/download/lighttpd-1.4.18.tar.bz2
cd /tmp
===File install-crowbar, 67518215===
#wget https://github.com/pmullaney/barclamp-deployer/raw/62fa46f53460fb7ff220d28915aff26f2c25e155/chef/cookbooks/ohai/files/default/plugins/crowbar.rb -O /mnt/crowbar/opt/dell/barclamps/deployer/chef/cookbooks/ohai/files/default/plugins/crowbar.rb



    # cheeseburger
    wget -O /opt/rcb/crowbar/crowbar.qcow2 http://10.127.52.9/crowbar.qcow2

    # wget -O ~rcb/crowbar.qcow2 http://c271871.r71.cf1.rackcdn.com/crowbar.qcow2
fi
    # Cloud Files Location for use in production...
    # wget http://build.monkeypuppetlabs.com/crowbar.qcow2 -O ~rcb/crowbar.qcow2
    # Fresh build location
===File update_vim_script.sh, 67597540===
# 2. awk retains all the download links (for all versions of the script)
# 4. xargs appends relative download path to the vim.org url (defined above) and downloads the script
wget -O - "${url}/script.php?script_id=$script_id" \

# 1. wget gets the main download page of the script
| xargs -Ireplace wget -O ${script_name} ${url}/replace
| awk '/download_script.php\?src_id=/' \
| sed -e '2,$d' -e 's/.*href="\([^"]*\)".*/\1/' \
# the wget though (without having intermediate files and doubling step 1. and 2.).
# obtained during step 3. already contains the name. I don't know how to pass it to

===File medianav.sh, 67637976===

	wget -q --post-data="<?xml version="1.0" encoding="utf-8"?><s:Envelope s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"><s:Body><u:GetPositionInfo xmlns:u="urn:schemas-upnp-org:service:AVTransport:1"> <InstanceID>0</InstanceID></u:GetPositionInfo></s:Body></s:Envelope>" $localip:$upnpport/MediaRenderer_AVTransport/control --header='SOAPACTION: "urn:schemas-upnp-org:service:AVTransport:1#GetPositionInfo"' --bind-address=$localip --output-document=$GPOSRESULTFILE
GetPosition() {
SeekTo() {

wget -q --post-data="<?xml version="1.0" encoding="utf-8"?><s:Envelope s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"><s:Body><u:GetTransportInfo xmlns:u="urn:schemas-upnp-org:service:AVTransport:1"> <InstanceID>0</InstanceID></u:GetTransportInfo></s:Body></s:Envelope>" $localip:$upnpport/MediaRenderer_AVTransport/control --header='SOAPACTION: "urn:schemas-upnp-org:service:AVTransport:1#GetTransportInfo"' --bind-address=$localip --output-document=$PBRESULTFILE
GetPBStatus() {
wget -q --post-data="<?xml version="1.0" encoding="utf-8"?><s:Envelope s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"><s:Body><u:Play xmlns:u="urn:schemas-upnp-org:service:AVTransport:1"><InstanceID>0</InstanceID><Speed>1</Speed></u:Play></s:Body></s:Envelope>" $localip:$upnpport/MediaRenderer_AVTransport/control --header='SOAPACTION: "urn:schemas-upnp-org:service:AVTransport:1#Play"' --bind-address=$localip --output-document=$PLAYRESULTFILE
}
Play() {
}
wget -q --post-data="<?xml version="1.0" encoding="utf-8"?><s:Envelope s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"><s:Body><u:Seek xmlns:u="urn:schemas-upnp-org:service:AVTransport:1"><InstanceID>0</InstanceID><Unit>REL_TIME</Unit><Target>$1</Target></u:Seek></s:Body></s:Envelope>" $localip:$upnpport/MediaRenderer_AVTransport/control --header='SOAPACTION: "urn:schemas-upnp-org:service:AVTransport:1#Seek"' --bind-address=$localip --output-document=$SEEKRESULTFILE
===File hagistack_controller.sh, 67703398===
yum install -y ntp man wget openssh-clients
service ntpd start
#glance add name="Ubuntu 11.10" is_public=true container_format=ovf disk_format=qcow2 < ubuntu-11.10-server-cloudimg-amd64-disk1.img
#dependency package for common
mkdir -p /opt/virt/fedora; cd /opt/virt/fedora;
#mkdir /opt/virt/ubuntu12.04 ; cd /opt/virt/ubuntu12.04
#wget http://cloud-images.ubuntu.com/releases/precise/release/ubuntu-12.04-server-cloudimg-amd64-disk1.img
#glance add name="Ubuntu 12.04 LTS" is_public=true container_format=ovf disk_format=qcow2 < ubuntu-12.04-server-cloudimg-amd64-disk1.img
wget http://berrange.fedorapeople.org/images/2012-02-29/f16-x86_64-openstack-sda.qcow2
glance add name=f16-jeos is_public=true disk_format=qcow2 container_format=ovf < f16-x86_64-openstack-sda.qcow2
#wget http://uec-images.ubuntu.com/releases/11.10/release/ubuntu-11.10-server-cloudimg-amd64-disk1.img
#mkdir /opt/virt/ubuntu11.10 ; cd /opt/virt/ubuntu11.10
===File hagistack_controller.sh, 67704113===
#mkdir -p /opt/virt/fedora; cd /opt/virt/fedora;
#wget http://berrange.fedorapeople.org/images/2012-02-29/f16-x86_64-openstack-sda.qcow2
#glance add name=f16-jeos is_public=true disk_format=qcow2 container_format=ovf < f16-x86_64-openstack-sda.qcow2
#glance add name="Ubuntu 11.10" is_public=true container_format=ovf disk_format=qcow2 < ubuntu-11.10-server-cloudimg-amd64-disk1.img
#wget http://uec-images.ubuntu.com/releases/11.10/release/ubuntu-11.10-server-cloudimg-amd64-disk1.img
#glance add name="Ubuntu 12.04 LTS" is_public=true container_format=ovf disk_format=qcow2 < ubuntu-12.04-server-cloudimg-amd64-disk1.img
#wget http://cloud-images.ubuntu.com/releases/precise/release/ubuntu-12.04-server-cloudimg-amd64-disk1.img
#mkdir /opt/virt/ubuntu12.04 ; cd /opt/virt/ubuntu12.04
mkdir -p /opt/virt/ttylinux; cd /opt/virt/ttylinux;
#mkdir /opt/virt/ubuntu11.10 ; cd /opt/virt/ubuntu11.10
wget http://smoser.brickies.net/ubuntu/ttylinux-uec/ttylinux-uec-amd64-12.1_2.6.35-22_1.tar.gz
tar zxvf ttylinux-uec-amd64-12.1_2.6.35-22_1.tar.gz 
===File hagistack_controller.sh, 67704204===
wget http://smoser.brickies.net/ubuntu/ttylinux-uec/ttylinux-uec-amd64-12.1_2.6.35-22_1.tar.gz
tar zxvf ttylinux-uec-amd64-12.1_2.6.35-22_1.tar.gz
mkdir -p /opt/virt/ttylinux; cd /opt/virt/ttylinux;
#glance add name=f16-jeos is_public=true disk_format=qcow2 container_format=ovf < f16-x86_64-openstack-sda.qcow2
#glance add name="Ubuntu 12.04 LTS" is_public=true container_format=ovf disk_format=qcow2 < ubuntu-12.04-server-cloudimg-amd64-disk1.img
#mkdir -p /opt/virt/fedora; cd /opt/virt/fedora;
#wget http://cloud-images.ubuntu.com/releases/precise/release/ubuntu-12.04-server-cloudimg-amd64-disk1.img
#mkdir /opt/virt/ubuntu12.04 ; cd /opt/virt/ubuntu12.04
#mkdir /opt/virt/ubuntu11.10 ; cd /opt/virt/ubuntu11.10
#wget http://berrange.fedorapeople.org/images/2012-02-29/f16-x86_64-openstack-sda.qcow2
#glance add name="Ubuntu 11.10" is_public=true container_format=ovf disk_format=qcow2 < ubuntu-11.10-server-cloudimg-amd64-disk1.img
#wget http://uec-images.ubuntu.com/releases/11.10/release/ubuntu-11.10-server-cloudimg-amd64-disk1.img
===File ece, 68006858===
    local url=$(get_escenic_admin_url)/do/publication/clearallcaches
    wget $wget_auth \
        -O - \
        run cd $tmp_dir;
    else
        wget $wget_auth \
            -O - \
        grep "\[\[" | \
        run wget $wget_auth $url -O ${resource}
        wget_auth="--http-user $http_user --http-password $http_password"
    if [[ -n "$http_user" && -n "$http_password" ]]; then
        md5sum ${resource} > ${resource}.md5sum
    wget $wget_auth -O - $url  2>/dev/null | \
    print "Installed on the ${type} running on ${host}:${port} is:"
        curl_auth="-u ${http_user}:${http_password}"
===File check_nginx.sh, 68098785===
    else        
        out2=`wget ${wget_opts} http://${hostname}:${port}/${status_page}`
        out1=`wget ${wget_opts} http://${hostname}:${port}/${status_page}`
        wget_opts="-O- -q -t 3 -T 3 --http-user=${auth_user} --http-password=${auth_password}"
        sleep 1
        out1=`wget ${wget_opts} http://${hostname}:${port}/${status_page}`
    fi
        wget_opts="-O- -q -t 3 -T 3 --no-check-certificate --http-user=${auth_user} --http-password=${auth_password}"
    then
        out2=`wget ${wget_opts} http://${hostname}:${port}/${status_page}`
        sleep 1
===File install-piaf-on-existing-centos-v1.04.sh, 68256527===
fi
else
	wget $PIAFLOC32
	wget $PIAFLOC64
fi
	yum -y install GConf2.i386 MAKEDEV.i386 NetworkManager.i386 NetworkManager-glib.i386 ORBit2.i386 OpenIPMI.i386 OpenIPMI-libs.i386 SDL.i386 SysVinit.i386 acpid.i386 alsa-lib.i386 alsa-lib-devel.i386 alsa-utils.i386 amtu.i386 anacron.i386 apmd.i386 apr.i386 apr-util.i386 arts.i386 arts-devel.i386 aspell.i386 aspell-en.i386 at.i386 atk.i386 atk-devel.i386 attr.i386 audiofile.i386 audiofile-devel.i386 audit.i386 audit-libs.i386 audit-libs-python.i386 authconfig.i386 authconfig-gtk.i386 autoconf.noarch autofs.i386 automake.noarch avahi.i386 avahi-compat-libdns_sd.i386 avahi-glib.i386 basesystem.noarch bash.i386 bc.i386 bind.i386 bind-libs.i386 bind-utils.i386 binutils.i386 bison.i386 bitstream-vera-fonts.noarch bluez-gnome.i386 bluez-libs.i386 bluez-utils.i386 bzip2.i386 bzip2-libs.i386 cairo.i386 cairo-devel.i386 ccid.i386 centos-release.i386 centos-release-notes.i386 chkconfig.i386 chkfontpath.i386 comps-extras.noarch conman.i386 coolkey.i386 coreutils.i386 cpio.i386 cpp.i386 cpuspeed.i386 cracklib.i386 cracklib-dicts.i386 crash.i386 crontabs.noarch cryptsetup-luks.i386 cups.i386 cups-libs.i386 curl.i386 curl-devel.i386 cvs.i386 cyrus-sasl.i386 cyrus-sasl-lib.i386 cyrus-sasl-plain.i386 db4.i386 dbus.i386 dbus-glib.i386 dbus-libs.i386 dbus-python.i386 dejavu-lgc-fonts.noarch desktop-backgrounds-basic.noarch desktop-file-utils.i386 device-mapper.i386 device-mapper-event.i386 device-mapper-multipath.i386 dhclient.i386 dhcp.i386 dhcpv6-client.i386 dialog.i386 diffutils.i386 dmidecode.i386 dmraid.i386 dmraid-events.i386 dnsmasq.i386 docbook-dtds.noarch dos2unix.i386 dosfstools.i386 dump.i386 e2fsprogs.i386 e2fsprogs-devel.i386 e2fsprogs-libs.i386 ed.i386 eject.i386 elfutils.i386 elfutils-libelf.i386 elfutils-libs.i386 esound.i386 esound-devel.i386 ethtool.i386 expat.i386 fbset.i386 file.i386 filesystem.i386 findutils.i386 finger.i386 fipscheck.i386 fipscheck-lib.i386 firstboot.i386 firstboot-tui.i386 flex.i386 flite.i386 flite-devel.i386 fontconfig.i386 fontconfig-devel.i386 freetype.i386 freetype-devel.i386 ftp.i386 gamin.i386 gamin-python.i386 gawk.i386 gcc.i386 gcc-c++.i386 gd.i386 gdbm.i386 gettext.i386 glib2.i386 glib2-devel.i386 glibc.i686 glibc-common.i386 glibc-devel.i386 glibc-headers.i386 gmp.i386 gnome-doc-utils.noarch gnome-keyring.i386 gnome-mime-data.i386 gnome-mount.i386 gnome-python2.i386 gnome-python2-bonobo.i386 gnome-python2-canvas.i386 gnome-python2-gconf.i386 gnome-python2-gnomevfs.i386 gnome-vfs2.i386 gnupg.i386 gnutls.i386 gpm.i386 grep.i386 groff.i386 grub.i386 gtk2.i386 gtk2-devel.i386 gtk2-engines.i386 gzip.i386 hal.i386 hesiod.i386 hicolor-icon-theme.noarch hmaccalc.i386 htmlview.noarch httpd.i386 hwdata.noarch ibmasm.i386 ifd-egate.i386 imake.i386 info.i386 initscripts.i386 iproute.i386 ipsec-tools.i386 iptables.i386 iptables-ipv6.i386 iptstate.i386 iputils.i386 irda-utils.i386 irqbalance.i386 jack-audio-connection-kit.i386 joe.i386 jwhois.i386 kbd.i386 kernel.i686 kernel-devel.i686 kernel-headers.i386 keyutils-libs.i386 keyutils-libs-devel.i386 kpartx.i386 krb5-devel.i386 krb5-libs.i386 krb5-workstation.i386 ksh.i386 kudzu.i386 lcms.i386 less.i386 lftp.i386 libFS.i386 libICE.i386 libIDL.i386 libSM.i386 libX11.i386 libX11-devel.i386 libXTrap.i386 libXau.i386 libXau-devel.i386 libXaw.i386 libXcursor.i386 libXcursor-devel.i386 libXdmcp.i386 libXdmcp-devel.i386 libXext.i386 libXext-devel.i386 libXfixes.i386 libXfixes-devel.i386 libXfont.i386 libXfontcache.i386 libXft.i386 libXft-devel.i386 libXi.i386 libXi-devel.i386 libXinerama.i386 libXinerama-devel.i386 libXmu.i386 libXpm.i386 libXrandr.i386 libXrandr-devel.i386 libXrender.i386 libXrender-devel.i386 libXres.i386 libXt.i386 libXtst.i386 libXv.i386 libXxf86dga.i386 libXxf86misc.i386 libXxf86vm.i386 libacl.i386 libaio.i386 libart_lgpl.i386 libart_lgpl-devel.i386 libattr.i386 libbonobo.i386 libbonoboui.i386 libcap.i386 libdaemon.i386 libdmx.i386 libdrm.i386 libfontenc.i386 libgcc.i386 libgcrypt.i386 libglade2.i386 libgnome.i386 libgnomecanvas.i386 libgnomeui.i386 libgomp.i386 libgpg-error.i386 libidn.i386 libidn-devel.i386 libjpeg.i386 libmng.i386 libnotify.i386 libogg.i386 libogg-devel.i386 libpcap.i386 libpng.i386 libpng-devel.i386 libselinux.i386 libselinux-devel.i386 libselinux-python.i386 libselinux-utils.i386 libsemanage.i386 libsepol.i386 libsepol-devel.i386 libstdc++.i386 libstdc++-devel.i386 libsysfs.i386 libtermcap.i386 libtermcap-devel.i386 libtiff.i386 libtiff-devel.i386 libtool-ltdl.i386 libtool-ltdl-devel.i386 libusb.i386 libusb-devel.i386 libuser.i386 libutempter.i386 libvolume_id.i386 libvorbis.i386 libvorbis-devel.i386 libwnck.i386 libxkbfile.i386 libxml2.i386 libxml2-devel.i386 libxml2-python.i386 libxslt.i386 lm_sensors.i386 logrotate.i386 logwatch.noarch lsof.i386 lvm2.i386 m2crypto.i386 m4.i386 mailcap.noarch mailx.i386 make.i386 man.i386 man-pages.noarch mc.i386 mcstrans.i386 mdadm.i386 mesa-libGL.i386 mesa-libGL-devel.i386 metacity.i386 mgetty.i386 microcode_ctl.i386 mingetty.i386 mkbootdisk.i386 mkinitrd.i386 mkisofs.i386 mktemp.i386 mlocate.i386 mod_perl.i386 module-init-tools.i386 mtools.i386 mtr.i386 mysql.i386 mysql-devel.i386 mysql-server.i386 nano.i386 nas.i386 nash.i386 nc.i386 ncurses.i386 ncurses-devel.i386 neon.i386 net-snmp-libs.i386 net-tools.i386 newt.i386 newt-devel.i386 nmap.i386 notification-daemon.i386 notify-python.i386 nscd.i386 nspr.i386 nss.i386 nss-tools.i386 nss_db.i386 nss_ldap.i386 ntp.i386 ntsysv.i386 numactl.i386 oddjob.i386 oddjob-libs.i386 openjade.i386 openldap.i386 opensp.i386 openssh.i386 openssh-clients.i386 openssh-server.i386 openssl.i686 openssl-devel.i386 pam.i386 pam_ccreds.i386 pam_krb5.i386 pam_passwdqc.i386 pam_pkcs11.i386 pam_smb.i386 pango.i386 pango-devel.i386 paps.i386 parted.i386 passwd.i386 patch.i386 pax.i386 pciutils.i386 pcmciautils.i386 pcre.i386 pcsc-lite.i386 pcsc-lite-libs.i386 perl.i386 perl-BSD-Resource.i386 perl-Compress-Zlib.i386 perl-Convert-ASN1.noarch perl-DBD-mysql.i386 perl-DBI.i386 perl-DateManip.noarch perl-Digest-HMAC.noarch perl-Digest-SHA1.i386 perl-HTML-Parser.i386 perl-HTML-Tagset.noarch perl-Net-DNS.i386 perl-String-CRC32.i386 perl-URI.noarch perl-XML-Parser.i386 perl-libwww-perl.noarch perl-suidperl.i386 php.i386 php-cli.i386 php-common.i386 php-devel.i386 php-gd.i386 php-mbstring.i386 php-mysql.i386 php-pdo.i386 php-pear.noarch php-pear-DB.noarch piafdl.noarch piafxtras.noarch pinfo.i386 pirut.noarch pkgconfig.i386 pkinit-nss.i386 pm-utils.i386 policycoreutils.i386 popt.i386 portmap.i386 postgresql-libs.i386 ppp.i386 prelink.i386 procmail.i386 procps.i386 psacct.i386 psmisc.i386 pulseaudio-libs.i386 pycairo.i386 pygobject2.i386 pygtk2.i386 pygtk2-libglade.i386 pyorbit.i386 python.i386 python-elementtree.i386 python-iniparse.noarch python-numeric.i386 python-sqlite.i386 python-urlgrabber.noarch pyxf86config.i386 qt.i386 quota.i386 rdate.i386 rdist.i386 readahead.i386 readline.i386 redhat-artwork.i386 redhat-logos.noarch redhat-lsb.i386 redhat-menus.noarch redhat-rpm-config.noarch rhpl.i386 rhpxl.i386 rmt.i386 rng-utils.i386 rp-pppoe.i386 rpm.i386 rpm-build.i386 rpm-libs.i386 rpm-python.i386 rsh.i386 rsync.i386 samba.i386 screen.i386 scrollkeeper.i386 sed.i386 selinux-policy.noarch selinux-policy-targeted.noarch sendmail.i386 sendmail-cf.i386 setarch.i386 setup.noarch setuptool.i386 sgml-common.noarch sgpio.i386 shadow-utils.i386 shared-mime-info.i386 slang.i386 slang-devel.i386 smartmontools.i386 sos.noarch sox.i386 specspo.noarch sqlite.i386 startup-notification.i386 stunnel.i386 subversion.i386 sudo.i386 symlinks.i386 sysfsutils.i386 sysklogd.i386 syslinux.i386 system-config-date.noarch system-config-display.noarch system-config-keyboard.noarch system-config-language.noarch system-config-network.noarch system-config-network-tui.noarch system-config-securitylevel.i386 system-config-securitylevel-tui.i386 system-config-soundcard.noarch system-config-users.noarch talk.i386 tar.i386 tcl.i386 tcp_wrappers.i386 tcpdump.i386 tcsh.i386 telnet.i386 termcap.noarch tftp-server.i386 time.i386 tmpwatch.i386 traceroute.i386 tree.i386 ttmkfdir.i386 tzdata.i386 udev.i386 unix2dos.i386 unixODBC.i386 unzip.i386 usbutils.i386 usermode.i386 usermode-gtk.i386 util-linux.i386 vconfig.i386 vim-minimal.i386 vixie-cron.i386 vsftpd.i386 webmin.noarch wget.i386 which.i386 wireless-tools.i386 words.noarch wpa_supplicant.i386 xinetd.i386 xkeyboard-config.noarch xml-common.noarch xorg-x11-apps.i386 xorg-x11-drivers.i386 xorg-x11-drv-acecad.i386 xorg-x11-drv-aiptek.i386 xorg-x11-drv-apm.i386 xorg-x11-drv-ark.i386 xorg-x11-drv-ast.i386 xorg-x11-drv-ati.i386 xorg-x11-drv-calcomp.i386 xorg-x11-drv-chips.i386 xorg-x11-drv-cirrus.i386 xorg-x11-drv-citron.i386 xorg-x11-drv-cyrix.i386 xorg-x11-drv-digitaledge.i386 xorg-x11-drv-dmc.i386 xorg-x11-drv-dummy.i386 xorg-x11-drv-dynapro.i386 xorg-x11-drv-elo2300.i386 xorg-x11-drv-elographics.i386 xorg-x11-drv-evdev.i386 xorg-x11-drv-fbdev.i386 xorg-x11-drv-fpit.i386 xorg-x11-drv-glint.i386 xorg-x11-drv-hyperpen.i386 xorg-x11-drv-i128.i386 xorg-x11-drv-i740.i386 xorg-x11-drv-i810.i386 xorg-x11-drv-jamstudio.i386 xorg-x11-drv-joystick.i386 xorg-x11-drv-keyboard.i386 xorg-x11-drv-magellan.i386 xorg-x11-drv-magictouch.i386 xorg-x11-drv-mga.i386 xorg-x11-drv-microtouch.i386 xorg-x11-drv-mouse.i386 xorg-x11-drv-mutouch.i386 xorg-x11-drv-neomagic.i386 xorg-x11-drv-nsc.i386 xorg-x11-drv-nv.i386 xorg-x11-drv-palmax.i386 xorg-x11-drv-penmount.i386 xorg-x11-drv-rendition.i386 xorg-x11-drv-s3.i386 xorg-x11-drv-s3virge.i386 xorg-x11-drv-savage.i386 xorg-x11-drv-siliconmotion.i386 xorg-x11-drv-sis.i386 xorg-x11-drv-sisusb.i386 xorg-x11-drv-spaceorb.i386 xorg-x11-drv-summa.i386 xorg-x11-drv-tdfx.i386 xorg-x11-drv-tek4957.i386 xorg-x11-drv-trident.i386 xorg-x11-drv-tseng.i386 xorg-x11-drv-ur98.i386 xorg-x11-drv-v4l.i386 xorg-x11-drv-vesa.i386 xorg-x11-drv-vga.i386 xorg-x11-drv-via.i386 xorg-x11-drv-vmmouse.i386 xorg-x11-drv-vmware.i386 xorg-x11-drv-void.i386 xorg-x11-drv-voodoo.i386 xorg-x11-filesystem.noarch xorg-x11-font-utils.i386 xorg-x11-fonts-ISO8859-1-75dpi.noarch xorg-x11-fonts-Type1.noarch xorg-x11-fonts-base.noarch xorg-x11-proto-devel.i386 xorg-x11-server-Xorg.i386 xorg-x11-server-utils.i386 xorg-x11-utils.i386 xorg-x11-xauth.i386 xorg-x11-xfs.i386 xorg-x11-xinit.i386 xorg-x11-xkb-utils.i386 xsri.i386 xulrunner.i386 yelp.i386 yp-tools.i386 ypbind.i386 yum.noarch yum-fastestmirror.noarch yum-metadata-parser.i386 yum-updatesd.noarch zip.i386 zlib.i386 zlib-devel.i386
	# Install the 32 bit PIAF Dependencies.
else
	yum -y install GConf2.x86_64 MAKEDEV.x86_64 NetworkManager.x86_64 NetworkManager-glib.x86_64 ORBit2.x86_64 SDL.x86_64 SysVinit.x86_64 acpid.x86_64 alsa-lib.x86_64 alsa-lib-devel.x86_64 alsa-utils.x86_64 amtu.x86_64 anacron.x86_64 apr.x86_64 apr-util.x86_64 arts.x86_64 arts-devel.x86_64 aspell.x86_64 aspell-en.x86_64 at.x86_64 atk.x86_64 atk-devel.x86_64 attr.x86_64 audiofile.x86_64 audiofile-devel.x86_64 audit.x86_64 audit-libs.x86_64 audit-libs-python.x86_64 authconfig.x86_64 authconfig-gtk.x86_64 autoconf.noarch autofs.x86_64 automake.noarch automake14.noarch automake15.noarch automake16.noarch automake17.noarch avahi.x86_64 avahi-compat-libdns_sd.x86_64 avahi-glib.x86_64 basesystem.noarch bash.x86_64 bc.x86_64 bind.x86_64 bind-libs.x86_64 bind-utils.x86_64 binutils.x86_64 bison.x86_64 bitstream-vera-fonts.noarch bluez-gnome.x86_64 bluez-libs.x86_64 bluez-utils.x86_64 bzip2.x86_64 bzip2-libs.x86_64 cairo.x86_64 ccid.x86_64 centos-release.x86_64 centos-release-notes.x86_64 chkconfig.x86_64 chkfontpath.x86_64 comps-extras.noarch conman.x86_64 coolkey.x86_64 coreutils.x86_64 cpio.x86_64 cpp.x86_64 cpuspeed.x86_64 cracklib.x86_64 cracklib-dicts.x86_64 crash.x86_64 crontabs.noarch cryptsetup-luks.x86_64 cups.x86_64 cups-libs.x86_64 curl.x86_64 curl-devel.x86_64 cvs.x86_64 cyrus-sasl.x86_64 cyrus-sasl-lib.x86_64 cyrus-sasl-plain.x86_64 db4.x86_64 dbus.x86_64 dbus-glib.x86_64 dbus-libs.x86_64 dbus-python.x86_64 dejavu-lgc-fonts.noarch desktop-backgrounds-basic.noarch desktop-file-utils.x86_64 device-mapper.x86_64 device-mapper-event.x86_64 device-mapper-multipath.x86_64 dhclient.x86_64 dhcp.x86_64 dhcpv6-client.x86_64 dialog.x86_64 diffutils.x86_64 dmidecode.x86_64 dmraid.x86_64 docbook-dtds.noarch dos2unix.x86_64 dosfstools.x86_64 dump.x86_64 e2fsprogs.x86_64 e2fsprogs-devel.x86_64 e2fsprogs-libs.x86_64 ed.x86_64 eject.x86_64 elfutils.x86_64 elfutils-libelf.x86_64 elfutils-libs.x86_64 esound.x86_64 esound-devel.x86_64 ethtool.x86_64 expat.x86_64 fbset.x86_64 file.x86_64 filesystem.x86_64 findutils.x86_64 finger.x86_64 fipscheck.x86_64 fipscheck-lib.x86_64 firstboot.x86_64 firstboot-tui.x86_64 flex.x86_64 flite.x86_64 flite-devel.x86_64 fontconfig.x86_64 freetype.x86_64 freetype-devel.x86_64 ftp.x86_64 gamin.x86_64 gamin-python.x86_64 gawk.x86_64 gcc.x86_64 gcc-c++.x86_64 gd.x86_64 gdbm.x86_64 gettext.x86_64 glib2.x86_64 glib2-devel.x86_64 glibc.i686 glibc.x86_64 glibc-common.x86_64 glibc-devel.x86_64 glibc-headers.x86_64 gmp.x86_64 gnome-doc-utils.noarch gnome-keyring.x86_64 gnome-mime-data.x86_64 gnome-mount.x86_64 gnome-python2.x86_64 gnome-python2-bonobo.x86_64 gnome-python2-canvas.x86_64 gnome-python2-gconf.x86_64 gnome-python2-gnomevfs.x86_64 gnome-vfs2.x86_64 gnupg.x86_64 gnutls.x86_64 gpm.x86_64 grep.x86_64 groff.x86_64 grub.x86_64 gtk2.x86_64 gtk2-devel.x86_64 gtk2-engines.x86_64 gzip.x86_64 hal.x86_64 hesiod.x86_64 hicolor-icon-theme.noarch htmlview.noarch httpd.x86_64 hwdata.noarch ifd-egate.x86_64 imake.x86_64 info.x86_64 initscripts.x86_64 iproute.x86_64 ipsec-tools.x86_64 iptables.x86_64 iptables-ipv6.x86_64 iptstate.x86_64 iputils.x86_64 irda-utils.x86_64 irqbalance.x86_64 jack-audio-connection-kit.x86_64 joe.x86_64 jwhois.x86_64 kbd.x86_64 kernel.x86_64 kernel-devel.x86_64 kernel-headers.x86_64 keyutils-libs.x86_64 keyutils-libs-devel.x86_64 kpartx.x86_64 krb5-devel.x86_64 krb5-libs.x86_64 krb5-workstation.x86_64 ksh.x86_64 kudzu.x86_64 lcms.x86_64 less.x86_64 lftp.x86_64 libFS.x86_64 libICE.x86_64 libIDL.x86_64 libSM.x86_64 libX11.x86_64 libX11-devel.x86_64 libXTrap.x86_64 libXau.x86_64 libXaw.x86_64 libXcursor.x86_64 libXdmcp.x86_64 libXext.x86_64 libXfixes.x86_64 libXfont.x86_64 libXfontcache.x86_64 libXft.x86_64 libXi.x86_64 libXinerama.x86_64 libXmu.x86_64 libXpm.x86_64 libXrandr.x86_64 libXrender.x86_64 libXres.x86_64 libXt.x86_64 libXtst.x86_64 libXv.x86_64 libXxf86dga.x86_64 libXxf86misc.x86_64 libXxf86vm.x86_64 libacl.x86_64 libaio.x86_64 libart_lgpl.x86_64 libart_lgpl-devel.x86_64 libattr.x86_64 libbonobo.x86_64 libbonoboui.x86_64 libcap.x86_64 libdaemon.x86_64 libdmx.x86_64 libdrm.x86_64 libevent.x86_64 libfontenc.x86_64 libgcc.x86_64 libgcrypt.x86_64 libglade2.x86_64 libgnome.x86_64 libgnomecanvas.x86_64 libgnomeui.x86_64 libgomp.x86_64 libgpg-error.x86_64 libgssapi.x86_64 libhugetlbfs.x86_64 libidn.x86_64 libidn-devel.x86_64 libjpeg.x86_64 libmng.x86_64 libnotify.x86_64 libogg.x86_64 libogg-devel.x86_64 libpcap.x86_64 libpng.x86_64 libselinux.x86_64 libselinux-devel.x86_64 libselinux-python.x86_64 libsemanage.x86_64 libsepol.x86_64 libsepol-devel.x86_64 libstdc++.x86_64 libstdc++-devel.x86_64 libsysfs.x86_64 libtermcap.x86_64 libtermcap-devel.x86_64 libtiff.x86_64 libtiff-devel.x86_64 libtool-ltdl.x86_64 libtool-ltdl-devel.x86_64 libusb.x86_64 libusb-devel.x86_64 libuser.x86_64 libutempter.x86_64 libvolume_id.x86_64 libvorbis.x86_64 libvorbis-devel.x86_64 libwnck.x86_64 libxkbfile.x86_64 libxml2.x86_64 libxml2-devel.x86_64 libxml2-python.x86_64 libxslt.x86_64 lm_sensors.x86_64 lockdev.x86_64 lockdev-devel.x86_64 logrotate.x86_64 logwatch.noarch lsof.x86_64 lvm2.x86_64 m2crypto.x86_64 m4.x86_64 mailcap.noarch mailx.x86_64 make.x86_64 man.x86_64 man-pages.noarch mc.x86_64 mcelog.x86_64 mcstrans.x86_64 mdadm.x86_64 mesa-libGL.x86_64 mesa-libGL-devel.x86_64 metacity.x86_64 mgetty.x86_64 microcode_ctl.x86_64 mingetty.x86_64 mkbootdisk.x86_64 mkinitrd.x86_64 mkisofs.x86_64 mktemp.x86_64 mlocate.x86_64 module-init-tools.x86_64 mtools.x86_64 mtr.x86_64 mysql.x86_64 mysql-devel.x86_64 mysql-server.x86_64 nano.x86_64 nas.x86_64 nash.x86_64 nc.x86_64 ncurses.x86_64 ncurses-devel.x86_64 neon.x86_64 net-tools.x86_64 newt.x86_64 newt-devel.x86_64 nfs-utils.x86_64 nfs-utils-lib.x86_64 notification-daemon.x86_64 notify-python.x86_64 nscd.x86_64 nspr.x86_64 nss.x86_64 nss-tools.x86_64 nss_db.x86_64 nss_ldap.x86_64 ntp.x86_64 ntsysv.x86_64 numactl.x86_64 oddjob.x86_64 oddjob-libs.x86_64 openjade.x86_64 openldap.x86_64 openldap-devel.x86_64 opensp.x86_64 openssh.x86_64 openssh-clients.x86_64 openssh-server.x86_64 openssl.x86_64 openssl-devel.x86_64 pam.x86_64 pam_ccreds.x86_64 pam_krb5.x86_64 pam_passwdqc.x86_64 pam_pkcs11.x86_64 pam_smb.x86_64 pango.x86_64 paps.x86_64 parted.x86_64 passwd.x86_64 patch.x86_64 pax.x86_64 pciutils.x86_64 pcmciautils.x86_64 pcre.x86_64 pcsc-lite.x86_64 pcsc-lite-libs.x86_64 perl.x86_64 perl-Compress-Zlib.x86_64 perl-DBD-MySQL.x86_64 perl-DBI.x86_64 perl-DateManip.noarch perl-Digest-HMAC.noarch perl-Digest-SHA1.x86_64 perl-HTML-Parser.x86_64 perl-HTML-Tagset.noarch perl-Net-DNS.x86_64 perl-Net-IP.noarch perl-String-CRC32.x86_64 perl-URI.noarch perl-XML-Parser.x86_64 perl-libwww-perl.noarch perl-suidperl.x86_64 pfmon.x86_64 php.x86_64 php-cli.x86_64 php-common.x86_64 php-devel.x86_64 php-gd.x86_64 php-ldap.x86_64 php-mbstring.x86_64 php-mysql.x86_64 php-pdo.x86_64 php-pear.noarch php-pear-DB.noarch piafdl.noarch piafxtras.noarch pinfo.x86_64 pirut.noarch pkgconfig.x86_64 pkinit-nss.x86_64 pm-utils.x86_64 policycoreutils.x86_64 popt.x86_64 portmap.x86_64 postgresql-libs.x86_64 ppp.x86_64 procmail.x86_64 procps.x86_64 psacct.x86_64 psmisc.x86_64 pulseaudio-libs.x86_64 pycairo.x86_64 pygobject2.x86_64 pygtk2.x86_64 pygtk2-libglade.x86_64 pyorbit.x86_64 python.x86_64 python-elementtree.x86_64 python-iniparse.noarch python-numeric.x86_64 python-sqlite.x86_64 python-urlgrabber.noarch pyxf86config.x86_64 qt.x86_64 quota.x86_64 rdate.x86_64 rdist.x86_64 readahead.x86_64 readline.x86_64 readline-devel.x86_64 redhat-artwork.x86_64 redhat-logos.noarch redhat-lsb.x86_64 redhat-menus.noarch rhpl.x86_64 rhpxl.x86_64 rmt.x86_64 rng-utils.x86_64 rootfiles.noarch rp-pppoe.x86_64 rpm.x86_64 rpm-build.x86_64 rpm-libs.x86_64 rpm-python.x86_64 rsh.x86_64 rsync.x86_64 scrollkeeper.x86_64 sed.x86_64 selinux-policy.noarch sendmail.x86_64 setarch.x86_64 setup.noarch setuptool.x86_64 sgml-common.noarch shadow-utils.x86_64 shared-mime-info.x86_64 slang.x86_64 slang-devel.x86_64 smartmontools.x86_64 sos.noarch sox.x86_64 specspo.noarch sqlite.x86_64 startup-notification.x86_64 stunnel.x86_64 subversion.x86_64 sudo.x86_64 symlinks.x86_64 sysfsutils.x86_64 sysklogd.x86_64 syslinux.x86_64 system-config-date.noarch system-config-network.noarch system-config-network-tui.noarch system-config-securitylevel-tui.x86_64 talk.x86_64 tar.x86_64 tcp_wrappers.x86_64 tcpdump.x86_64 tcsh.x86_64 telnet.x86_64 termcap.noarch tftp-server.x86_64 time.x86_64 tmpwatch.x86_64 traceroute.x86_64 tree.x86_64 ttmkfdir.x86_64 tzdata.x86_64 udev.x86_64 unix2dos.x86_64 unixODBC.x86_64 unzip.x86_64 usbutils.x86_64 usermode.x86_64 usermode-gtk.x86_64 util-linux.x86_64 vconfig.x86_64 vim-minimal.x86_64 vixie-cron.x86_64 webmin.noarch wget.x86_64 which.x86_64 wireless-tools.x86_64 words.noarch wpa_supplicant.x86_64 xinetd.x86_64 xml-common.noarch xorg-x11-drv-evdev.x86_64 xorg-x11-drv-keyboard.x86_64 xorg-x11-drv-mouse.x86_64 xorg-x11-drv-vesa.x86_64 xorg-x11-drv-void.x86_64 xorg-x11-filesystem.noarch xorg-x11-font-utils.x86_64 xorg-x11-fonts-base.noarch xorg-x11-server-Xorg.x86_64 xorg-x11-server-utils.x86_64 xorg-x11-twm.x86_64 xorg-x11-utils.x86_64 xorg-x11-xauth.x86_64 xorg-x11-xfs.x86_64 xorg-x11-xinit.x86_64 xorg-x11-xkb-utils.x86_64 xulrunner.x86_64 yelp.x86_64 yp-tools.x86_64 ypbind.x86_64 yum.noarch yum-metadata-parser.x86_64 yum-updatesd.noarch yum-utils.noarch zip.x86_64 zlib.x86_64 zlib-devel.x86_64
	# Install the 64 bit PIAF Dependencies.
if [ $KERNELARCH = "x86_64" ]; then
===File minecraft.erb, 68339012===
		echo "Updating minecraft_server.jar...."
		MC_SERVER_URL=`wget -q -O - http://www.minecraft.net/download | grep minecraft_server.jar\  | cut -d \" -f 6`
		as_user "cd $MCPATH && wget -q -O $MCPATH/minecraft_server.jar.update $MC_SERVER_URL"
		if [ -f $MCPATH/minecraft_server.jar.update ]
		if [ -f $MCPATH/craftbukkit.jar.update ]
				CB_DEV_URL="http://dl.bukkit.org/downloads/craftbukkit/list/dev/"
				CB_SERVER_URL=$CB_URL`wget -q -O - $CB_DEV_URL | grep -m 1 .jar | cut -d \" -f 2`
				;;
		esac
		as_user "cd $MCPATH && wget -q -O $MCPATH/craftbukkit.jar.update $CB_SERVER_URL"
===File eaccelerator, 68481698===
#
# - installed wget 
WGET_FLAGS="-Yoff"; # refer to wget manual, you may set extra parameters like disable proxy
#
#
WGET=`which wget`;
#   if you see the plain text and all values are zero then probalby eaccelerator is not enabled.
# run the sript
    if [ -x $WGET ]; then
#            quiet                 output to stdout
	wget -q $WGET_FLAGS "$URL" -O -
	exit 0
===File x, 68595927===
		if [ -n "$keyurl" ]; then
#
	deb=$(mktemp) || die "Geçici dosya oluşturulamadı"
	if wget "$url" -O"$deb" 2>/dev/null; then
	printf >&2 "Lütfen bu programı Bash ile çalıştırın.  Örneğin:\n\n"
	printf >&2 "\twget x.ondokuz.biz -qO- | bash\n"
	exit 1
		if [ ! -f "$deb" ]; then
		fi
			wget "$keyurl" -qO- 2>/dev/null | sudo apt-key add - ||:
# 19 önyükleme (boot) betiği → wget ondokuz.biz/x -qO-| bash
#
#
# 	wget ondokuz.biz/x -qO-| bash [sonra]
#
===File fetch.sh, 68850245===
# If you need to pass any specific flags to any specific fetcher, set
# WGET_FLAGS, CURL_FLAGS, or GET_FLAGS in your environment accordingly.
if which wget > /dev/null 2>&1 ; then
elif which curl > /dev/null 2>&1 ; then
  exec wget $WGET_FLAGS -O "$OUTPUT" "$URL"
  fi
    WGET_FLAGS="${WGET_FLAGS} --no-check-certificate"
  # Check if wget is a shitty version
  if ! wget -O /dev/null -q https://github.com/ ; then
===File setup_fabric.sh, 80802245===
    echo "Please install either curl or wget. Exiting!"
    exit
    curl -o /root/fabric.tgz https://nodeload.github.com/fabric/fabric/tarball/master
elif [ -n `which wget` ]; then
    wget -O /root/fabric.tgz https://nodeload.github.com/fabric/fabric/tarball/master
else
elif [ -n `which wget` ]; then
    curl -o /root/epel-release-5-4.noarch.rpm http://dl.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm
else
    wget -O /root/epel-release-5-4.noarch.rpm http://dl.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm
    exit
    echo "Please install either curl or wget. Exiting!"
===File download-pms-binaries-source.sh, 81323870===
# sed, git, subversion, wget (for Linux) or curl (for Mac OS X)
# REQUIREMENTS
#
It seems you are missing "wget", which is required to run this script.
else
You can install Wget with following command on Debian based systems (Debian, Ubuntu, etc):


    sudo apt-get install wget
    WGET=`check_binary wget`
    fi

fi
    else
        $WGET $URL
        wget)
            cat >&2 << EOM
===File oab-java6.sh, 81434883===
    echo "Downloading common.sh"
    pid=$!;progress_loop $pid
    wget --no-check-certificate -q "https://github.com/flexiondotorg/common/raw/master/common.sh" -O /tmp/common.sh
    ncecho " [x] Getting current release download page "
ncecho " [x] Getting Java SE download page"
wget "http://www.oracle.com/technetwork/java/javase/downloads/index.html" -O /tmp/oab-index.html >> "$log" 2>&1 &
pid=$!;progress $pid
    ncecho " [x] Downloading ${JAVA_BIN} : ${DOWNLOAD_SIZE} "
    wget --no-check-certificate --header="Cookie: ${COOKIES}" -c "${DOWNLOAD_URL}" -O /var/local/oab/pkg/${JAVA_BIN} >> "$log" 2>&1 &
    wget http://www.oracle.com/${DOWNLOAD_INDEX} -O /tmp/oab-download.html >> "$log" 2>&1 &
    chmod 666 /tmp/common.sh
    pid=$!;progress $pid
    wget http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-javase6-419409.html -O /tmp/oab-download.html >> "$log" 2>&1 &
    ncecho " [x] Getting previous releases download page "
    pid=$!;progress $pid    
===File n, 81616673===

which wget > /dev/null && GET="wget --no-check-certificate -q -O-"
# Ensure we have curl or wget
# curl / wget support



# wget support (Added --no-check-certificate for Github downloads)



test -z "$GET" && abort "curl or wget required"
===File vcap_setup, 81650828===
    wget http://www.rabbitmq.com/releases/rabbitmq-server/v$RABBITMQ_VERSION/rabbitmq-server_$RABBITMQ_VERSION_FULL.deb
    apt-get install -qqy wget curl libcurl3 libcurl3-dev bison build-essential zlib1g-dev libssl-dev libreadline5-dev libxml2 libxml2-dev libxslt1.1 libxslt1-dev git-core sqlite3 libsqlite3-ruby libsqlite3-dev unzip zip
if [[ $PLATFORM == 'Linux' ]]; then
    tar -zxf rubygems-$RUBYGEMS_VERSION.tgz
	tar -zxf node-v$NODE_VERSION.tar.gz
    wget http://production.cf.rubygems.org/rubygems/rubygems-$RUBYGEMS_VERSION.tgz
    cd /tmp
    cd /tmp
	tar -zxvf $mongodb.tgz
fi
    if [[ ! `node -v` == 'v'$NODE_VERSION ]]; then
	wget http://nodejs.org/dist/node-v$NODE_VERSION.tar.gz
    dpkg -i rabbitmq-server_$RABBITMQ_VERSION_FULL.deb
	cd /tmp
	wget http://fastdl.mongodb.org/linux/$mongodb.tgz
===File update-source.sh, 82149926===
	contents=$(wget -q -O - "http://omahaproxy.appspot.com/?os=linux&channel=dev")
else
	rev=$(wget -q -O - http://commondatastorage.googleapis.com/chromium-browser-continuous/Linux/LAST_CHANGE)
	rev64=$(wget -q -O - http://commondatastorage.googleapis.com/chromium-browser-continuous/Linux_x64/LAST_CHANGE)
	wget http://commondatastorage.googleapis.com/chromium-browser-continuous/Linux/$rev/chrome-linux.zip -c -O chromium-browser32-r$rev.zip

if [ ! -f chromium-browser32-r$rev.zip ]; then
	wget http://commondatastorage.googleapis.com/chromium-browser-continuous/Linux_x64/$rev/chrome-linux.zip -c -O chromium-browser64-r$rev.zip
if [ ! -f chromium-browser64-r$rev.zip ]; then
	rev=$(echo "$contents" | awk -F, '/^linux/{print $7}')
	upload_64="chromium-browser64-r$rev.zip"
	echo "Fetching latest revno... "
		echo REV=$rev >> VERSION.sh
		wget -q -O VERSION.sh http://src.chromium.org/viewvc/chrome/trunk/src/chrome/VERSION?revision=$rev
	if [ -z "$version" ]; then
===File ss-deploy.sh, 82715221===

	wget --no-check-certificate https://dl-ssl.google.com/dl/linux/direct/mod-pagespeed-beta_current_amd64.deb --output-document=/opt/mod-pagespeed-beta_current_amd64.deb
wget --no-check-certificate $SSHKEYURL --output-document=/tmp/ss-ssh.pub
touch /root/.ssh/authorized_keys
wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add -
cat /tmp/ss-ssh.pub >> /root/.ssh/authorized_keys
then
apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db
wget -q -O - http://www.dotdeb.org/dotdeb.gpg | apt-key add -
echo "deb http://packages.dotdeb.org squeeze all" >> /etc/apt/sources.list

apt-get -f --yes install apachetop build-essential apache2 apache2-threaded-dev apache2.2-common curl htop rsync patch diffutils cron git git-core wget openssh-blacklist-extra denyhosts libmcrypt4 mariadb-server-5.5 mariadb-server-core-5.5 mariadb-client-5.5 mariadb-client-core-5.5 libmariadbclient18 libmysqlclient18 memcached jenkins daemon openjdk-6-jre procmail jmeter jmeter-http

	dpkg -i /opt/mod-pagespeed-beta_current_amd64.deb

===File pre_install_add_sipwise_repos.sh, 82814001===
wget -O - http://deb.sipwise.com/autobuild/680FBA8A.asc | apt-key add -

# make sure we can rely on wget being present for checks
type wget >/dev/null 2>&1 || apt-get --allow-unauthenticated -y install wget

echo "** Setting up http://deb.sipwise.com/autobuild/680FBA8A.asc for apt-get usage ***"
       [ -n "$distribution" ] || distribution="wheezy"
       wget -O - http://deb.sipwise.com/autobuild/EE5E097D.asc | apt-key add -
  echo "*** Testing availability of Debian repository for release $release ***"
  if wget -O /dev/null http://deb.sipwise.com/spce/${release}/dists/${distribution}/main/binary-amd64/Packages ; then

    echo "*** Repository for release $release seems to be available, accepting. ***"
       echo "*** Installing autobuild signing key for release-trunk repository ***"
===File wimax_test.sh, 82973984===
NEEDED_UTILS="touch rm grep wc killall ping tail head sed cut awk sort wget time tee" 

BUSYBOX="$BUSYBOX_HOME/busybox"
    # Note you can also do:
    if [ $PRINT_DEBUG -eq 1 ]; then
    else
        log_error "wget_get failed to retrieve"
    echo "FTP Get Test Using wget" | tee -a $LOGFILE
    # A small file from 195.42.170.128:21
    time wget $FTP_FILE -O $FTP_TARGET  2> $FTPGTRF
    if [ -e $FTPGTRF ]; then
    touch $FTPGTRF
    # which might be easier than hunting down some anyonymous ftp site
    # wget http://www.google.com -O /tmp/foo.html
    if [ $BYTES -eq 0 ]; then
===File freeswitch, 83163715===
  cd ~/src
  wget -N -c http://opensource.sotelips.net/~stephane/${ARCH}/freeswitch_${FREESWITCH}_${ARCH}.deb
  wget -N -c http://opensource.sotelips.net/~stephane/${ARCH}/freeswitch-lang-en_${FREESWITCH}_${ARCH}.deb
  wget -N -c http://opensource.sotelips.net/~stephane/${ARCH}/freeswitch-perl_${FREESWITCH}_${ARCH}.deb

  # wget -N -c http://opensource.sotelips.net/~stephane/${ARCH}/freeswitch-codec-passthru-g729_${FREESWITCH}_${ARCH}.deb
  wget -N -c http://opensource.sotelips.net/~stephane/${ARCH}/freeswitch-lua_${FREESWITCH}_${ARCH}.deb
  # wget -N -c http://opensource.sotelips.net/~stephane/${ARCH}/freeswitch-sounds-en-us-callie-8000_${FREESWITCH}_${ARCH}.deb
===File freebsd, 83685827===
if [ -e "${couchpotato_conf}" ]; then

if [ ! -x "${WGET}" ]; then
WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown CouchPotato.

  exit 1
# Check for wget and refuse to start without it.
    ${WGET} -O - -q "http://${HOST}:${PORT}/api/${CPAPI}/app.shutdown/" >/dev/null
    verify_couchpotato_pid
  warn "couchpotato not started: You need wget to safely shut down CouchPotato."
    if [ -n "${pid}" ]; then
===File bootstrap.sh, 84133640===
tar jxf Python-2.7.3.tar.bz2
wget http://python.org/ftp/python/2.7.3/Python-2.7.3.tar.bz2

wget http://pypi.python.org/packages/source/s/setuptools/setuptools-0.6c11.tar.gz
tar xjf geos-3.3.5.tar.bz2
wget http://download.osgeo.org/geos/geos-3.3.5.tar.bz2
tar xzf proj-4.8.0.tar.gz
cd $OPENSHIFT_TMP_DIR
wget http://download.osgeo.org/proj/proj-4.8.0.tar.gz
cd $OPENSHIFT_TMP_DIR
cd $OPENSHIFT_TMP_DIR
wget ftp://ftp.remotesensing.org/gdal/gdal-1.9.1.tar.gz
tar zxf gdal-1.9.1.tar.gz
tar zxf setuptools-0.6c11.tar.gz

===File n, 84214501===

which wget > /dev/null && GET="wget --no-check-certificate -q -O-"
# Ensure we have curl or wget
# curl / wget support



# wget support (Added --no-check-certificate for Github downloads)



test -z "$GET" && abort "curl or wget required"
===File init.freebsd, 84244375===
HOST="127.0.0.1" # Set Sick Beard address here.

# Check for wget and refuse to start without it.
  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.

if [ ! -x "${WGET}" ]; then
    if [ -n "${pid}" ]; then
    ${WGET} -O - -q --user=${SBUSR} --password=${SBPWD} "http://${HOST}:${PORT}/home/shutdown/" >/dev/null
    verify_sickbeard_pid
  exit 1
===File debian_ubuntu_aws.sh, 84255630===
sudo sed -i 's/YOUR_SERVER_IP/'`wget -qO- http://instance-data/latest/meta-data/local-ipv4`'/' /etc/nginx/sites-available/gitlab # Set private ip address (public won't work).
sudo apt-get install -y nginx

echo "Surf to this Gitlab installation in your browser:"
echo "http://`wget -qO- http://instance-data/latest/meta-data/public-hostname`/"
echo ''

sudo wget https://raw.github.com/gitlabhq/gitlab-recipes/master/init.d/gitlab -P /etc/init.d/
sudo chmod +x /etc/init.d/gitlab && sudo update-rc.d gitlab defaults
sudo wget https://raw.github.com/gitlabhq/gitlab-recipes/master/nginx/gitlab -P /etc/nginx/sites-available/
# Create a Gitlab service
sudo sed -i '0,/host/s/localhost/'`wget -qO- http://instance-data/latest/meta-data/public-hostname`'/' /home/gitlab/gitlab/config/gitlab.yml
sudo ln -s /etc/nginx/sites-available/gitlab /etc/nginx/sites-enabled/gitlab
# Set the first occurrence of host in the Gitlab config to the publicly available domain name
sudo sed -i 's/YOUR_SERVER_FQDN/'`wget -qO- http://instance-data/latest/meta-data/public-hostname`'/' /etc/nginx/sites-available/gitlab # Set public dns domain name.
===File mint-12-postinstall.sh, 84280470===
wget -O $HOME/.conkyrc https://raw.github.com/nicolargo/ubuntupostinstall/master/conkyrc
# -- Nord
# Conky theme
chown -R $USERNAME:$USERNAME ~/.config/terminator
wget -O ~/.config/terminator/config https://raw.github.com/nicolargo/ubuntupostinstall/master/config.terminator

# Vimrc
wget -O - https://raw.github.com/vgod/vimrc/master/auto-install.sh | sh

mkdir -p ~/.config/terminator
wget http://www.deviantart.com/download/214295138/gnome_shell__nord_by_0rax0-d3jl36q.zip
unzip gnome_shell__nord_by_0rax0-d3jl36q.zip
mkdir $HOME/.icons
apt-get install faenza-icon-theme faenza-icons-mono
wget http://www.deviantart.com/download/255099649/faience_icon_theme_by_tiheum-d47vo5d.zip
===File airodump-ng-oui-update, 84550634===
		echo "[*] Please install curl or wget to install OUI list"

		${WGET} ${OUI_DOWNLOAD_URL} -O ${OUI_IEEE} >/dev/null 2>/dev/null
	else

if [ ${CURL} ] || [ ${WGET} ]; then
	fi
CURL=`which curl 2>/dev/null`
	# Delete previous partially downloaded file (if the script was aborted)
OUI_DOWNLOAD_URL="http://standards.ieee.org/regauth/oui/oui.txt"
WGET=`which wget 2>/dev/null`
		echo "[*] Please install curl or wget to update OUI list"
	if [ ${WGET} ]; then
	else 
	if [ -f "${OUI}" ]; then
===File setup, 86137820===
wget http://jogamp.org/deployment/archive/jogl-old-1.1.1/jogl.jar
wget http://jogamp.org/deployment/archive/gluegen-old-1.0b6/gluegen-rt.jar

wget http://jogamp.org/deployment/jogl-next/gluegen-rt.jar

echo "downloading JOGL 2..."
echo "downloading old JOGL 1.1.1 build..."
wget http://jogamp.org/deployment/jogl-next/jogl.awt.jar
wget http://jogamp.org/deployment/jogl-next/jogl.all.jar
wget http://bitbucket.org/jlahoda/jackpot30/downloads/jackpotc.zip
echo "downloading Jackpot..."
unzip -oj jackpotc.zip
===File buildpackage.sh, 68924183===
then
then
    wget "$XULRUNNER_DNL_URL/$XULRUNNER_PACK_NAME.win32.zip"
then
    wget "$XULRUNNER_DNL_URL/$XULRUNNER_PACK_NAME.linux-i686.tar.bz2"
fi
fi
    wget "$XULRUNNER_DNL_URL/$XULRUNNER_PACK_NAME.mac.tar.bz2"
then
    wget "$XULRUNNER_DNL_URL/$XULRUNNER_PACK_NAME.linux-x86_64.tar.bz2"
fi
fi
===File postinstall.sh, 68966525===
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.17.tgz
tar xzf rubygems-1.8.17.tgz
# Install RubyGems 1.8.17
tar xvzf ruby-1.8.7-p334.tar.gz
wget http://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p334.tar.gz
# Ruby 1.9 yet.
cd /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
chmod 600 /home/vagrant/.ssh/authorized_keys
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
cd /tmp
===File postinstall.sh, 68967552===
# can install their own Rubies using packages or however.
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
# Install RubyGems 1.7.2
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
cd /tmp
tar xzf rubygems-1.8.11.tgz
wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.11.tgz
wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.2-p290.tar.gz
tar xvzf ruby-1.9.2-p290.tar.gz
chmod 600 /home/vagrant/.ssh/authorized_keys
cd /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
===File postinstall.sh, 68969016===
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.17.tgz
tar xzf rubygems-1.8.17.tgz
# Install RubyGems 1.8.17
tar xvzf ruby-1.8.7-p334.tar.gz
wget http://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p334.tar.gz
# Ruby 1.9 yet.
chmod 600 /home/vagrant/.ssh/authorized_keys
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
cd /home/vagrant/.ssh
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
cd /tmp
===File runltp, 69077285===
        cat "${TMP}/wgetcmdfile" >> ${TMP}/alltests || \
        {
            echo "FATAL: error while getting the command file with wget (address $CMDFILEADDR)"
        if [ $? -ne 0 ]; then
        wget -q "${CMDFILEADDR}" -O ${TMP}/wgetcmdfile
    {
        fi
            exit 1
#               - now -s does the grep at the selected command files (default,
#               - added a new option, that the user can pass the address of
#               the command file, and it'll use wget to get it (-w)
    -T REPETITION   Execute the testsuite for REPETITION no. of times
    -w CMDFILEADDR  Uses wget to get the user's list of testcases.
    -x INSTANCES    Run multiple instances of this testsuite.
===File setup-web2py-fedora.sh, 69080741===


yum install httpd mod_ssl mod_wsgi wget python
# Install required packages
    wget http://modwsgi.googlecode.com/files/mod_wsgi-3.3.tar.gz

    tar -xzf mod_wsgi-3.3.tar.gz
        # Download and install
        tar -xzf Python-2.6.4.tgz
        wget http://www.python.org/ftp/python/2.6.4/Python-2.6.4.tgz
wget http://web2py.com/examples/static/web2py_src.zip
unzip web2py_src.zip
===File lame, 69082043===
                wget "${POUNDER_CACHE}${S_TARNAME}"
        if [ $USE_CACHE -eq 1 ]; then
        	fi
        	if [ $USE_CACHE -eq 1 ]; then
                	wget "${POUNDER_CACHE}${NASM_TAR}"
        if [ ! -f "$S_TARNAME" ]; then
        fi
        fi
                wget "http://tech9.net/rml/schedutils/packages/$VERSION/$S_TARNAME"
	fi
		wget "${POUNDER_CACHE}${TARNAME}"
	if [ $USE_CACHE -eq 1 ]; then
===File sync.sh, 69188320===
	then
	    wget http://ubu.com/aspen/aspen3/images/flipbookImages/buzzards$i.gif
	fi
	fi
	    wget http://ubu.com/aspen/aspen3/images/flipbookImages/buzzards0$i.gif
	then
	fi
	    wget http://ubu.com/aspen/aspen7/images/diary/diary$i.gif
	   wget http://ubu.com/aspen/aspen3/images/flipbookImages/kiss0$i.gif
	then
	then
	fi
===File auto_detection_test.sh, 69216558===
test_DOWNLOADER_with_wget()
{
	[[ $(type -t wget) ]] || return


	[[ ! $(type -t wget) && $(type -t curl) ]] || return
{
test_DOWNLOADER_without_wget_but_with_curl()

	assertEquals "did not detect wget" "wget" "$DOWNLOADER" 
}

===File cli.sh, 69280337===
wget -q http://localhost:9615/ -O $JSON_FILE
cat $JSON_FILE | grep "HttpInterface.js" > /dev/null
OUT=`cat $JSON_FILE | grep -o "restart_time\":1" | wc -l`
wget -q http://localhost:9615/ -O $JSON_FILE
sleep 0.3
sleep 0.3
OUT=`cat $JSON_FILE | grep -o "restart_time\":1" | wc -l`

cat $JSON_FILE | grep "restart_time\":0" > /dev/null
wget -q http://localhost:9615/ -O $JSON_FILE
sleep 0.3
wget -q http://localhost:9615/ -O $JSON_FILE
===File cli.sh, 69321093===
cat $JSON_FILE | grep "HttpInterface.js" > /dev/null
OUT=`cat $JSON_FILE | grep -o "restart_time\":1" | wc -l`
wget -q http://localhost:9615/ -O $JSON_FILE

OUT=`cat $JSON_FILE | grep -o "restart_time\":1" | wc -l`
cat $JSON_FILE | grep "restart_time\":0" > /dev/null
sleep 0.3
sleep 0.3
wget -q http://localhost:9615/ -O $JSON_FILE
wget -q http://localhost:9615/ -O $JSON_FILE
wget -q http://localhost:9615/ -O $JSON_FILE
sleep 0.3
===File install.sh, 69358360===
elif [ -x "/usr/bin/wget" ]; then
	echo "No web download program available: Please install curl, wget, or fetch"
else
printf "Checking for HTTP client..."
# Check for wget or curl or fetch
	download="/usr/bin/curl -s -O "
	download="/usr/bin/wget -nv"

	echo "and try again."
elif [ -x "/usr/bin/fetch" ]; then
===File mc-update, 69645559===
  ;;
  'craftbukkit-beta')
    wget --no-check-certificate "https://dl.bukkit.org/latest-beta/craftbukkit-beta.jar" -O /opt/local/minecraft/${JAR_FILE}
    wget --no-check-certificate "https://s3.amazonaws.com/Minecraft.Download/versions/1.7.9/minecraft_server.1.7.9.jar" -O /opt/local/minecraft/${JAR_FILE}
  ;;
  'minecraft')
  'craftbukkit-rb')
  ;;
  ;;
    wget --no-check-certificate "https://dl.bukkit.org/latest-rb/craftbukkit.jar" -O /opt/local/minecraft/${JAR_FILE}
    wget --no-check-certificate "$1" -O /opt/local/minecraft/${JAR_FILE}
  'user-provided')
===File mailcount.sh, 69946016===

		# Check for wget before proceeding.
		which wget 2>&1 > /dev/null
		if [ $? -ne 0 ]; then
			echo "This script requires wget." 1>&2
			return 1

		mail=$(wget -q -O - https://mail.google.com/a/${TMUX_POWERLINE_SEG_MAILCOUNT_GMAIL_SERVER}/feed/atom --http-user="${TMUX_POWERLINE_SEG_MAILCOUNT_GMAIL_USERNAME}@${TMUX_POWERLINE_SEG_MAILCOUNT_GMAIL_SERVER}" --http-password="${TMUX_POWERLINE_SEG_MAILCOUNT_GMAIL_PASSWORD}" --no-check-certificate | grep fullcount | sed 's/<[^0-9]*>//g')

===File cvw, 69999379===

if [ $NEED_WGET == 'Yes' ]
    rm -rf $VIR_WIN_TGT_VFD_PATH/*
    wget $URL_QXL_W7_X64   -O $VIR_WIN_VFS_RESOURCE_PATH/QXL_W7_X64.zip 2>&1 >/dev/null
    wget $URL_VIRT_WIN_ZIP -O $VIR_WIN_RESOURCE_PATH/virt_win.zip       2>&1 >/dev/null
    wget $URL_QXL_XP_X86   -O $VIR_WIN_VFS_RESOURCE_PATH/QXL_XP_X86.zip 2>&1 >/dev/null
    wget $URL_QXL_W7_X86   -O $VIR_WIN_VFS_RESOURCE_PATH/QXL_W7_X86.zip 2>&1 >/dev/null
    
then
ROOT_PATH=${P_PATH:=$PWD}
NEED_WGET=${DOWNLOAD:-'Yes'}
UPDATE_NFS=${UPDATE_NFS:-'No'}
===File wpwizard, 70198736===
    fi
    wget http://wordpress.org/latest.tar.gz

USECURL=$(command -v wget);

    fi
        wget -q http://downloads.wordpress.org/plugin/$plugin.zip
fi
    else
else
        wget -q http://downloads.wordpress.org/plugin/$plugin.zip
    else
===File opencv2_4_1.sh, 70288053===
echo "Installing OpenCV 2.4.1"
echo "Downloading x264"
wget ftp://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-20120528-2245-stable.tar.bz2
echo "Installing v4l"
wget -O OpenCV-2.4.1.tar.bz2 http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.4.1/OpenCV-2.4.1.tar.bz2/download
echo "Downloading ffmpeg"
echo "Downloading OpenCV 2.4.1"
tar -xvf x264-snapshot-20120528-2245-stable.tar.bz2
echo "Installing ffmpeg"
wget http://ffmpeg.org/releases/ffmpeg-0.9.2.tar.bz2
echo "Downloading v4l"
wget http://www.linuxtv.org/downloads/v4l-utils/v4l-utils-0.8.4.tar.bz2
===File opencv2_4_3.sh, 70288079===
tar -xvf x264-snapshot-20121114-2245-stable.tar.bz2
wget -O OpenCV-2.4.3.tar.bz2 http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.4.3/OpenCV-2.4.3.tar.bz2/download
echo "Downloading x264"
wget http://www.linuxtv.org/downloads/v4l-utils/v4l-utils-0.8.9.tar.bz2
echo "Installing v4l"
echo "Downloading OpenCV 2.4.3"
echo "Downloading v4l"
echo "Installing OpenCV 2.4.3"
wget ftp://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-20121114-2245-stable.tar.bz2
echo "Installing ffmpeg"
wget http://ffmpeg.org/releases/ffmpeg-0.11.2.tar.bz2
echo "Downloading ffmpeg"
===File opencv2_4_2.sh, 70288096===
echo "Installing OpenCV 2.4.2"
echo "Downloading x264"
wget ftp://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-20120528-2245-stable.tar.bz2
echo "Installing v4l"
wget -O OpenCV-2.4.2.tar.bz2 http://sourceforge.net/projects/opencvlibrary/files/opencv-unix/2.4.2/OpenCV-2.4.2.tar.bz2/download
echo "Downloading ffmpeg"
echo "Downloading OpenCV 2.4.2"
tar -xvf x264-snapshot-20120528-2245-stable.tar.bz2
echo "Installing ffmpeg"
wget http://ffmpeg.org/releases/ffmpeg-0.11.1.tar.bz2
echo "Downloading v4l"
wget http://www.linuxtv.org/downloads/v4l-utils/v4l-utils-0.8.8.tar.bz2
===File verify.sh, 70335000===
WGETOUT=$(wget -N "$BASEDIR$SIGNATUREFILENAME" 2>&1)
#first we fetch the file containing the signature
do

#and then see if wget completed successfully
if [ $? -ne 0 ]; then
   echo "[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.7.1-rc1)"
   echo "wget output:"
   echo "$WGETOUT"|sed 's/^/\t/g'
   exit 2
   wget --quiet -N "$BASEDIR$file"
done
===File sbt, 70608393===
elif [ -n "$(which wget)" ]; then
    case "$tool" in
elif [ -n "$(which curl)" ]; then
    tool="wget"
            unzip -p sbt.zip sbt/bin/sbt-launch.jar > "./$sbt"
        "wget"*)
            wget "$url" -O ./sbt.zip
    echo -n
===File custom-command.sh, 70727178===
##  patch -i $GEOS_NAME-ARM.bug222.patch -p0
#tar xjf $GEOS_NAME.tar.bz2
#  #GET and apply patch for http://trac.osgeo.org/geos/ticket/534
#wget -c http://download.osgeo.org/geos/$GEOS_NAME.tar.bz2
##  wget -c http://trac.osgeo.org/geos/raw-attachment/ticket/222/$GEOS_NAME-ARM.patch -O $GEOS_NAME-ARM.bug222.patch
##  #GET and apply patch for http://trac.osgeo.org/geos/ticket/222
##  patch -i int64_crosscomp.patch -p1
##  wget -c http://trac.osgeo.org/geos/raw-attachment/ticket/534/int64_crosscomp.patch
#cd $SRC_DIR/
#  svn checkout http://svn.osgeo.org/geos/tags/$GEOS_VERSION/  $GEOS_NAME
#  tar xjf $GEOS_NAME.tar.bz2
#  wget -c http://download.osgeo.org/geos/$GEOS_NAME.tar.bz2
===File auto_build.sh, 70746383===
mkdir -p doc/manual/en
mv otrs_admin_book.pdf doc/manual/en
wget "$MANUAL_EN" || exit 1;
#mkdir -p doc/manual/de
#mv otrs_admin_book.pdf doc/manual/de
#wget "$MANUAL_DE" || exit 1;
if test $SUPPORT_PACKAGE; then
    wget "$SUPPORT_PACKAGE" || exit 1;
    mv Support*.opm var/packages/
    mv iPhoneHandle*.opm var/packages/
    wget "$IPHONE_PACKAGE" || exit 1;
if test $IPHONE_PACKAGE; then
===File ubuntu_server_1204.sh, 71032293===
sudo apt-get install -y wget curl build-essential checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev zlib1g-dev libicu-dev redis-server openssh-server git-core libyaml-dev

sudo apt-get update
tar xfvz ruby-1.9.3-p327.tar.gz
wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p327.tar.gz
#==
sudo apt-get install -y nginx
sudo wget https://raw.github.com/gitlabhq/gitlab-recipes/4-0-stable/nginx/gitlab -P /etc/nginx/sites-available/
sudo chmod +x /etc/init.d/gitlab
sudo wget https://raw.github.com/gitlabhq/gitlab-recipes/4-0-stable/init.d/gitlab -P /etc/init.d/

sudo ln -s /etc/nginx/sites-available/gitlab /etc/nginx/sites-enabled/gitlab
===File .travis_before.bash, 71209413===
wget https://dl.google.com/linux/direct/google-chrome-stable_current_i386.deb -O google-chrome.deb
sudo apt-get install libxss1 xdg-utils -y

sudo dpkg -i google-chrome.deb
unzip chromedriver.zip
wget https://chromedriver.googlecode.com/files/chromedriver_linux32_26.0.1383.0.zip -O chromedriver.zip
#tar -xjf firefox-19.0.tar.bz2
wget http://selenium.googlecode.com/files/selenium-server-standalone-2.31.0.jar -O selenium-server.jar
java -jar selenium-server.jar > /dev/null &

# http://code.google.com/p/selenium/issues/detail?id=4814
#wget http://download.cdn.mozilla.net/pub/mozilla.org/firefox/releases/19.0/linux-i686/en-US/firefox-19.0.tar.bz2
===File ubuntu.sh, 71440024===
    wget -NP $sublime_installer_path/src http://c758482.r82.cf2.rackcdn.com/Sublime%20Text%202.0.1.tar.bz2 >> $log_file 2>&1
  else
    wget -NP $sublime_installer_path/src http://c758482.r82.cf2.rackcdn.com/Sublime%20Text%202.0.1%20x64.tar.bz2 >> $log_file 2>&1
  fi
  if [[ $krnl = 'i386' ]] ; then
  wget http://sublime.wbond.net/Package%20Control.sublime-package -NP $sublime_installer_path/src >> $log_file 2>&1
  echo -e "\n=> Downloading Package Control..."
  echo -e "==> done..."
  echo -e "==> done..."
  echo -e "\n=> Downloading Emmet..."
  wget --no-check-certificate https://github.com/sergeche/emmet-sublime/archive/master.zip -NP $sublime_installer_path/src >> $log_file 2>&1
===File http-connect.sh, 71499224===
  HTTP_CONNECT_OPTIONS="--verbose --silent --insecure"
  exit 1
  echo "error: missing either 'curl' or 'wget' command" 1>&2
    ${HTTP_CONNECT} ${HTTP_CONNECT_OPTIONS} $1
  HTTP_CONNECT_OPTIONS="--debug --no-check-certificate"
  elif [ "curl" == "${HTTP_CONNECT}" ]; then
    # TODO: Add Host header for wget...
  HTTP_CONNECT="wget"
else
elif [ ! -z "$(which wget)" ]; then
===File aws-automate.sh, 71627667===

wget -c -P $HOME/amazon/ami http://codincafe.com/downloads/ec2-ami-tools.zip
cd $HOME/amazon/ami/

cd $HOME/amazon/cw/
wget -c -P $HOME/amazon/as http://codincafe.com/downloads/AutoScaling-2011-01-01.zip
cd $HOME/amazon/as/

wget -c -P $HOME/amazon/ec2 http://codincafe.com/downloads/ec2-api-tools.zip
cd $HOME/amazon/ec2/
wget -c -P $HOME/amazon/cw http://codincafe.com/downloads/CloudWatch-2010-08-01.zip

===File ruby-build, 71815228===
  wget -nv -O- "$1"
}

http_get_wget() {
    exit 1
    echo "error: please install \`curl\` or \`wget\` and try again" >&2

http_head_wget() {
  elif type wget &>/dev/null; then
    "http_${method}_curl" "$url"
  else
    "http_${method}_wget" "$url"
  wget -q --spider "$1" >&4 2>&1
}
===File postinstall.sh, 71873172===
/usr/bin/wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
cd /export/home/vagrant/.ssh
chown -R vagrant /export/home/vagrant/.ssh
#bash-3.00# gtar xvf ruby-enterprise-1.8.6-20080507.tar.gz
cd /tmp
/usr/bin/wget http://download.virtualbox.org/virtualbox/4.0.6/VirtualBox-4.0.6-71344-SunOS.tar.gz
/usr/gnu/bin/tar -xzvf VirtualBox-4.0.6-71344-SunOS.tar.gz
PATH=$PATH:/opt/csw/bin
wget http://rubyforge.org/frs/download.php/71096/ruby-enterprise-1.8.7-2010.02.tar.gz
tar xzvf ruby-enterprise-1.8.7-2010.02.tar.gz
#bash-3.00# wget http://rubyforge.org/frs/download.php/38084/ruby-enterprise-1.8.6-20080507.tar.gz
#
===File postinstall.sh, 71873406===
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
wget http://production.cf.rubygems.org/rubygems/rubygems-1.7.2.tgz
tar xzf rubygems-1.7.2.tgz
# Install RubyGems 1.7.2
tar xvzf ruby-1.8.7-p334.tar.gz
wget http://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p334.tar.gz
# Ruby 1.9 yet.
cd /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
chmod 600 /home/vagrant/.ssh/authorized_keys
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
cd /tmp
===File postinstall.sh, 71874360===
cd /home/vagrant/.ssh
msiexec /qb /i 7z922-x64.msi
chown -R vagrant /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
# 7zip will allow us to extract a file from an ISO
# http://superuser.com/questions/40545/upgrading-and-installing-packages-through-the-cygwin-command-line
wget http://downloads.sourceforge.net/sevenzip/7z922-x64.msi
chmod +x apt-cyg
wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso

VBOX_VERSION="4.1.8" #"4.0.8"
===File postinstall.sh, 71874877===
cd /home/vagrant/.ssh
msiexec /qb /i 7z922-x64.msi
chown -R vagrant /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
# 7zip will allow us to extract a file from an ISO
# http://superuser.com/questions/40545/upgrading-and-installing-packages-through-the-cygwin-command-line
wget http://downloads.sourceforge.net/sevenzip/7z922-x64.msi
chmod +x apt-cyg
wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso

VBOX_VERSION="4.1.8" #"4.0.8"
===File postinstall.sh, 71875993===
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
# can install their own Rubies using packages or however.
wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.11.tgz
tar xzf rubygems-1.8.11.tgz
# Install RubyGems 1.7.2
tar xvzf ruby-1.9.2-p290.tar.gz
wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.2-p290.tar.gz
cd /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
chmod 600 /home/vagrant/.ssh/authorized_keys
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
cd /tmp
===File postinstall.sh, 71876825===

#Get wget
cd /usr/ports/ftp/wget
chown -R vagrant /home/vagrant/.ssh
/usr/local/bin/wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
cd /home/vagrant/.ssh
wget http://home.bluelife.at/ports/virtualbox-cft-20110218.tar.gz
cd /usr/ports
make install -DBATCH
cd /tmp
===File postinstall.sh, 71876915===
RUBYGEMS_VERSION=1.8.25
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
cd /tmp
tar xvzf ruby-$RUBY_VERSION.tar.gz
RUBY_VERSION=1.9.3-p385
wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-$RUBY_VERSION.tar.gz
chmod 600 /home/vagrant/.ssh/authorized_keys
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
cd /home/vagrant/.ssh
wget http://production.cf.rubygems.org/rubygems/rubygems-$RUBYGEMS_VERSION.tgz
tar xzf rubygems-$RUBYGEMS_VERSION.tgz
===File postinstall.sh, 71876947===
wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.11.tgz
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
cd /tmp
tar xvzf ruby-1.9.2-p290.tar.gz
# Install RubyGems 1.7.2
# can install their own Rubies using packages or however.
wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.2-p290.tar.gz
chmod 600 /home/vagrant/.ssh/authorized_keys
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
cd /home/vagrant/.ssh
tar xzf rubygems-1.8.11.tgz
===File postinstall.sh, 71878313===
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
cd /tmp
wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.11.tgz
tar xzf rubygems-1.8.11.tgz
# Install RubyGems 1.7.2
tar xvzf ruby-1.8.7-p334.tar.gz
wget http://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p334.tar.gz
# Ruby 1.9 yet.
cd /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
chmod 600 /home/vagrant/.ssh/authorized_keys
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
===File postinstall.sh, 71878731===
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.2-p290.tar.gz
cd src
tar xzf rubygems-1.8.10.tgz
cd /tmp/src
wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.10.tgz
tar xvf ruby-1.9.2-p290.tar.gz
cd /home/vagrant/.ssh
wget --no-check-certificate 'http://github.com/mitchellh/vagrant/raw/master/keys/vagrant.pub' -O authorized_keys
chmod 600 /home/vagrant/.ssh/authorized_keys
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
cd /tmp
===File postinstall.sh, 71880431===
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
wget http://production.cf.rubygems.org/rubygems/rubygems-1.7.2.tgz
tar xzf rubygems-1.7.2.tgz
# Install RubyGems 1.7.2
tar xvzf ruby-1.8.7-p352.tar.gz
wget http://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p352.tar.gz
# Ruby 1.9 yet.
cd /home/vagrant/.ssh
wget --no-check-certificate 'http://github.com/mitchellh/vagrant/raw/master/keys/vagrant.pub' -O authorized_keys
chmod 600 /home/vagrant/.ssh/authorized_keys
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
cd /tmp
===File postinstall.sh, 71882609===
bash-3.00# wget http://rubyforge.org/frs/download.php/38084/ruby-enterprise-1.8.6-20080507.tar.gz
chown -R vagrant /export/home/vagrant/.ssh
/usr/bin/wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
cd /export/home/vagrant/.ssh

cd /tmp
/usr/bin/wget http://download.virtualbox.org/virtualbox/4.0.6/VirtualBox-4.0.6-71344-SunOS.tar.gz
/usr/gnu/bin/tar -xzvf VirtualBox-4.0.6-71344-SunOS.tar.gz
tar xzvf ruby-enterprise-1.8.7-2010.02.tar.gz
PATH=$PATH:/opt/csw/bin
wget http://rubyforge.org/frs/download.php/71096/ruby-enterprise-1.8.7-2010.02.tar.gz
bash-3.00# gtar xvf ruby-enterprise-1.8.6-20080507.tar.gz
===File postinstall.sh, 71883249===
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.17.tgz
tar xzf rubygems-1.8.17.tgz
# Install RubyGems 1.8.17
tar xvzf ruby-1.8.7-p334.tar.gz
wget http://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p334.tar.gz
# Ruby 1.9 yet.
chmod 600 /home/vagrant/.ssh/authorized_keys
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
usermod -a -G admin vagrant
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
cd /tmp
===File postinstall.sh, 71883716===
cd /home/vagrant/.ssh
msiexec /qb /i 7z922.msi
chown -R vagrant /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
# 7zip will allow us to extract a file from an ISO
# http://superuser.com/questions/40545/upgrading-and-installing-packages-through-the-cygwin-command-line
wget http://downloads.sourceforge.net/sevenzip/7z922.msi
chmod +x apt-cyg
wget http://apt-cyg.googlecode.com/svn/trunk/apt-cyg
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso

VBOX_VERSION="4.1.8" #"4.0.8"
===File demo-setup.sh, 72008406===

wget $DATASET_LOC
sudo apt-get -y install unzip
wget http://archive.cloudera.com/cm4/ubuntu/lucid/amd64/cm/pool/contrib/o/oracle-j2sdk1.6/oracle-j2sdk1.6_1.6.0+update31_amd64.deb
# Install java6 JDK
# Installing java might return a non-zero return code because of missing dependencies. This will be fixed by the next
wget https://raw.github.com/apache/bigtop/master/bigtop-packages/src/common/hadoop/init-hdfs.sh
chmod 755 init-hdfs.sh
# Install init-hdfs script it's only present starting Bigtop 0.6 (BIGTOP-547)
URLS=`curl http://bigtop01.cloudera.org:8080/job/Bigtop-0.5.0/label=lucid//lastSuccessfulBuild/artifact/output/apt/dists/bigtop/contrib/binary-amd64/Packages | sed -ne '/^Filename:/s#^Filename: #'"http://bigtop01.cloudera.org:8080/job/Bigtop-0.5.0/label=lucid//lastSuccessfulBuild/artifact/output/apt/"'#p' | grep $OR_SEPARATED`
wget $URLS
cd ..
===File postinstall.sh, 72027231===
# Ruby 1.9 yet.
wget http://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p334.tar.gz
tar xvzf ruby-1.8.7-p334.tar.gz
chmod 600 /home/vagrant/.ssh/authorized_keys
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
tar xzf rubygems-1.7.2.tgz
cd /home/vagrant/.ssh
# Install RubyGems 1.7.2
cd /tmp
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
wget http://production.cf.rubygems.org/rubygems/rubygems-1.7.2.tgz
===File configure, 72063519===
            automatic install."
    wget $1 -O $2
  else
  fi
  # detect wget
function download_file {
  if [ -z `which wget` ] ; then
  echo "Downloading $2 from $1 ..."
      echo "Unable to find either curl or wget! Cannot proceed with 
    if [ -z `which curl` ] ; then
===File fetch-upstream-kyotocabinet.sh, 72299858===
#wget http://fallabs.com/kyotocabinet/pkg/old/kyotocabinet-${VERSION}.tar.gz
#wget http://lil.fr.distfiles.macports.org/kyotocabinet/1.2.16_3/kyotocabinet-${VERSION}.tar.gz
#wget http://lil.fr.distfiles.macports.org/kyotocabinet/${VERSION}_0/kyotocabinet-${VERSION}.tar.gz

wget http://fallabs.com/kyotocabinet/pkg/kyotocabinet-${VERSION}.tar.gz
# fetch new tarball
===File setup.sh, 72357147===
    for DEB in ${DEBS[@]}; do
  fi
      $PKGMGR wget
  if ! command -v wget >/dev/null && [ -n "$PKGMGR" ]; then
  mkdir -p jazzlib && cd jazzlib
      wget $DEBS_DOMAIN/$DEB
      ar p $DEB data.tar.gz | tar zx
  wget -q "http://downloads.sourceforge.net/project/jazzlib/jazzlib/0.07/jazzlib-binary-0.07-juz.zip"
  unzip -qq "jazzlib-binary-0.07-juz.zip"
===File ubuntu_server_1204.sh, 73067938===
sudo apt-get install -y wget curl build-essential checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libreadline6-dev libc6-dev libssl-dev zlib1g-dev libicu-dev redis-server openssh-server git-core libyaml-dev

sudo apt-get update
tar xfvz ruby-1.9.3-p327.tar.gz
wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p327.tar.gz
#==
sudo apt-get install -y nginx
sudo wget https://raw.github.com/gitlabhq/gitlab-recipes/master/nginx/gitlab -P /etc/nginx/sites-available/
sudo chmod +x /etc/init.d/gitlab
sudo wget https://raw.github.com/gitlabhq/gitlab-recipes/master/init.d/gitlab -P /etc/init.d/

sudo ln -s /etc/nginx/sites-available/gitlab /etc/nginx/sites-enabled/gitlab
===File mail_count_gmail.sh, 73389018===
			return 1
		which wget 2>&1 > /dev/null
		# Check for wget before proceeding.
			echo "This script requires wget." 1>&2
		if [ $? -ne 0 ]; then


		mail=$(wget -q -O - https://mail.google.com/a/${TMUX_POWERLINE_SEG_MAILCOUNT_GMAIL_SERVER}/feed/atom --http-user="${TMUX_POWERLINE_SEG_MAILCOUNT_GMAIL_USERNAME}@${TMUX_POWERLINE_SEG_MAILCOUNT_GMAIL_SERVER}" --http-password="${TMUX_POWERLINE_SEG_MAILCOUNT_GMAIL_PASSWORD}" --no-check-certificate | grep fullcount | sed 's/<[^0-9]*>//g')

===File libfs.sh, 73662381===
		SIZE=`wget -S --spider --no-check-certificate $1 2>&1 | grep Content-Length  | cut -d':' -f2`
		error=$?
	http://*|https://*)
		BASE_URL=${1%%/download}
			#URL is from market place
			SIZE=`wget -S --spider --no-check-certificate $1 2>&1 | grep Content-Length  | cut -d':' -f2`
			#Not a marketplace URL
		else
			SIZE=`wget -O - -S --no-check-certificate $BASE_URL 2>&1|grep -E "^ *\"size\": \"?[0-9]+\"?.$"|tr -dc 0-9`
		HEADERS=`wget -S --spider --no-check-certificate $BASE_URL 2>&1`

		fi
===File build_geonames.sh, 73685175===
wget -N --timestamping --progress=dot:mega "http://download.geonames.org/export/zip/${POSTALCODES}"
unzip -o ${POSTALCODES} US.txt
    # Get most recent file(s). Use wget's inherent timestamp check.  If remote file 
do
# work with any country postal codes. Again, uses wget to check timesamps.
# This has only been tested with US postal codes (i.e., US.zip) though should 
    case "$i" in 
cd ${POSTALCODEDIR}
    wget -N --timestamping --progress=dot:mega "http://download.geonames.org/export/dump/$i" 
    # is new clobber existing, otherwise leave it alone.   
===File postinstall.sh, 73798189===
tar xvzf ruby-1.9.2-p290.tar.gz
wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.2-p290.tar.gz
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.11.tgz
tar xzf rubygems-1.8.11.tgz
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
# Install RubyGems 1.7.2
# can install their own Rubies using packages or however.
cd /tmp
cd /home/vagrant/.ssh
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
chmod 600 /home/vagrant/.ssh/authorized_keys
===File install.sh, 73813083===
[ -f default.xml ] && mv default.xml default.xml.bak

        if [ "$VERS" = "6" ]
        COMMON_PKGS=" autoconf automake bzip2 cpio curl curl-devel curl-devel expat-devel fileutils gcc-c++ gettext-devel gnutls-devel libjpeg-devel libogg-devel libtiff-devel libtool libvorbis-devel make ncurses-devel nmap openssl openssl-devel openssl-devel perl patch unixODBC unixODBC-devel unzip wget zip zlib zlib-devel bison sox"

wget --no-check-certificate $FS_CONF_PATH/conf/public.xml -O public.xml
[ -f public.xml ] && mv public.xml public.xml.bak

wget --no-check-certificate $FS_CONF_PATH/conf/conference.conf.xml -O conference.conf.xml
[ -f conference.conf.xml ] && mv conference.conf.xml conference.conf.xml.bak
wget --no-check-certificate $FS_CONF_PATH/conf/default.xml -O default.xml

===File mail_count_gmail.sh, 73825527===
    	which wget 2>&1 > /dev/null
    	# Check for wget before proceeding.

    	if [ $? -ne 0 ]; then
        	echo "This script requires wget." 1>&2
        	exit 1

    	mail=$(wget -q -O - https://mail.google.com/a/${server}/feed/atom --http-user="${username}@${server}" --http-password="${password}" --no-check-certificate | grep fullcount | sed 's/<[^0-9]*>//g')

===File wget_unpack.sh, 74414815===
usage(){
${retry} --stderr-regexp 'ERROR 404: Not Found' --fail-if-match wget -O wget_unpack.tar.gz ${1}/${2}
    echo  "        URL:             url where files are located"
    echo "Usage: wget_unpack.sh URL EXPECTED_PACK FILE_LIST..."
# We will need the return codes from wget. If wget fails we have other logic to execute.
set +e
#stop the attempts if we get a 404, we will try something else in that case

tar -xzvf wget_unpack.tar.gz


        ${retry} --stderr-regexp 404 --fail-if-match wget -O ${back} ${1}/${front}
    done
fi
rm wget_unpack.tar.gz


===File postinstall.sh, 74556907===
# Ruby 1.9 yet.
wget http://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p370.tar.gz
tar xvzf ruby-1.8.7-p370.tar.gz
chmod 600 /home/vagrant/.ssh/authorized_keys
wget --no-check-certificate 'http://github.com/mitchellh/vagrant/raw/master/keys/vagrant.pub' -O authorized_keys
cd /home/vagrant/.ssh
tar xzf rubygems-1.8.24.tgz
wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.24.tgz
# Install RubyGems 1.7.2
cd /tmp
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
===File install.sh, 75156604===
    wget "https://github.com/LaVieEstUnJeu/Public-API/raw/master/examples/ocaml/apiTypes.ml" && \
    wget "https://raw.github.com/db0company/Ocsitools/master/otools.mli" && \
    return 0
    wget "https://github.com/LaVieEstUnJeu/Public-API/raw/master/examples/ocaml/apiRsp.ml" && \
    wget "https://raw.github.com/db0company/OcsiTools/master/tools.eliom" && \
    delete_files
    wget "https://raw.github.com/db0company/OcsiTools/master/otools.ml" && \
    wget "https://raw.github.com/db0company/OcsiTools/master/tools.eliomi" && \
===File mingw-w64-build-3.5.8.local, 75317691===
    wget -nv -O "mingw-w64-$mingw_w64_release_ver.tar.bz2" http://downloads.sourceforge.net/project/mingw-w64/mingw-w64/mingw-w64-release/mingw-w64-v${mingw_w64_release_ver}.tar.bz2
    printf 'Extracting mingw-w64-%s.tar.bz2 archive... ' "$mingw_w64_release_ver"
else
  wget -nv http://www.mpfr.org/mpfr-"$mpfr_release_ver"/allpatches
    rm -f "mingw-w64-$mingw_w64_release_ver.tar.bz2" "mingw-w64-$mingw_w64_release_ver"
  wget -nv -t 5 "$download_url" || continue
if [[ ! -f "$archive" ]]; then
fi
    tar -x"$archive_type"f "$archive"
    rm -rf "$archive" "$package_name"
    wget -nv "$download_url"
  cd "./mpfr-$mpfr_release_ver" || exit 1
wget -nv -O config.guess 'http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD' || { ping -c 1 git.savannah.gnu.org >/dev/null 2>&1 || printf '\nsavannah.gnu.org seems to be offline right now and is needed to download the file "config.guess", please try again later.\n\n'; rm -f 'config.guess' && exit 1; }
rm -fr 'config.guess'
system_type="$(sh config.guess)"
===File ubuntu-setup.bash, 77357376===


    && echo "Installed wget.." ; }
test wget || { echo "Installing wget.." && sudo apt-get install wget \
# Check if wget is installed 
        wget http://production.cf.rubygems.org/rubygems/rubygems-1.3.7.tgz
        cd /tmp
        echo "."
===File ubuntu-setup.bash, 77409592===
# Check if wget is installed 


    && echo "Installed wget.." ; }
test wget || { echo "Installing wget.." && sudo apt-get install wget \
        echo "."
        wget http://production.cf.rubygems.org/rubygems/rubygems-1.3.7.tgz
        cd /tmp
===File webcache.sh, 77463005===

which wget 1>/dev/null || echo "Please install wget" && exit 3
which curl 1>/dev/null || echo "Please install curl" && exit 2
wget http://www.mutt.org/doc/manual.txt \

mkdir -p $top/cs/mutt && cd $_ 
     http://www.mutt.org/doc/man_page.html \
# We use the directory ~/webcache, the curl program,

# and our own wget-mirror script which calls wget.
mirror="wget --mirror -p --convert-links"
top=~/webcache
===File update.sh, 77484514===
tar -xzf ckeditor_3.6.2.tar.gz
wget http://download.cksource.com/CKEditor/CKEditor/CKEditor%203.6.2/ckeditor_3.6.2.tar.gz

tar -xzf sfDoctrineGuardPlugin-5.0.0.tgz

wget http://plugins.symfony-project.org/get/sfDoctrineGuardPlugin/sfDoctrineGuardPlugin-5.0.0.tgz
unzip fullcalendar-1.5.zip
wget http://arshaw.com/fullcalendar/downloads/fullcalendar-1.5.zip
mkdir iCalcreator
tar -xzf htmlpurifier-4.4.0.tar.gz
wget http://htmlpurifier.org/releases/htmlpurifier-4.4.0.tar.gz


wget -O iCalcreator.zip http://www.kigkonsult.se/downloads/dl.php?f=iCalcreator-2.10.5

===File test.sh, 77847900===
fi
if [ ! -e /tmp/GeoIPASNum.dat ]; then
  wget $ASN
  wget $GEOIP
if [ ! -e /tmp/GeoIP.dat ]; then
if [ ! -e /tmp/GeoIPOrg.dat ]; then
fi
  wget $GEOLITECITY
if [ ! -e /tmp/GeoLiteCity.dat ]; then
  wget $ORG  
fi
fi
  wget $REGION
if [ ! -e /tmp/GeoIPRegion.dat ]; then
fi
===File browser.plugin.bash, 77997242===
#
            wget -qO- $1 | /usr/bin/mate

# wget into a pipe into TextMate and force Tidy (you can undo in textmate)
        if [ -n "$1" ]; then
        else
# e.g.

Usage: wmate google.com
wget into a pipe into TextMate and force Tidy (you can undo in textmate)
# wget into a temp file and pump it into your browser
# Usage: wmate
        if [ -n "$1" ]; then
            wget -qO- $1 | browser
# Usage: raw google.com
===File vcap_setup, 78212724===
    wget http://www.rabbitmq.com/releases/rabbitmq-server/v$RABBITMQ_VERSION/rabbitmq-server_$RABBITMQ_VERSION_FULL.deb
    apt-get install -qqy wget curl libcurl3 libcurl3-dev bison build-essential zlib1g-dev libssl-dev libreadline5-dev libxml2 libxml2-dev libxslt1.1 libxslt1-dev git-core sqlite3 libsqlite3-ruby libsqlite3-dev unzip zip
if [[ $PLATFORM == 'Linux' ]]; then
    tar -zxf rubygems-$RUBYGEMS_VERSION.tgz
	tar -zxf node-v$NODE_VERSION.tar.gz
    wget http://production.cf.rubygems.org/rubygems/rubygems-$RUBYGEMS_VERSION.tgz
    cd /tmp
    cd /tmp
	tar -zxvf $mongodb.tgz
fi
    if [[ ! `node -v` == 'v'$NODE_VERSION ]]; then
	wget http://nodejs.org/dist/node-v$NODE_VERSION.tar.gz
    dpkg -i rabbitmq-server_$RABBITMQ_VERSION_FULL.deb
	cd /tmp
	wget http://fastdl.mongodb.org/linux/$mongodb.tgz
===File update.sh, 78434012===
wget -nv https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js      -O jquery.min.js
# load jQuery

wget -nv https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.js          -O jquery.js
wget -nv https://ajax.googleapis.com/ajax/libs/jqueryui/1/jquery-ui.min.js -O jquery-ui.min.js
# load jQuery-UI

wget -nv https://ajax.googleapis.com/ajax/libs/jqueryui/1/jquery-ui.js     -O jquery-ui.js
mkdir -p jquery-ui-theme/images
do
done
    wget -nv https://ajax.googleapis.com/ajax/libs/jqueryui/1/themes/smoothness/$img -O jquery-ui-theme/$img
wget -nv https://ajax.googleapis.com/ajax/libs/jqueryui/1/themes/smoothness/jquery-ui.css -O jquery-ui-theme/smoothness.css
images=`gawk 'match($0, /url\((images\/[^\)]+)\)/, m) { print m[1] }' jquery-ui-theme/smoothness.css`
===File install.sh, 78543482===
sudo apt-get install build-essential g++ cmake python-setuptools wget subversion git-core mercurial python3.1-dev python-yaml libyaml-dev ruby rubygems doxygen 
# sh install.sh
#wget http://download.blender.org/release/Blender2.57/blender-2.57b-linux-glibc27-i686.tar.bz2
#sudo apt-get install python3.2-dev # http://packages.ubuntu.com/natty/python3.2-dev
#wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
#sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu lucid main" > /etc/apt/sources.list.d/ros-latest.list'
#sudo apt-get install ros-diamondback-desktop-full ros-diamondback-orocos-toolchain-ros 
## Dependencies ( 'git-core' because 'git' doesnt exists for lucid )
#tar jxf blender-2.57b-linux-glibc27-i686.tar.bz2
  if [ ! -f $BLENDER.tar.bz2 ]; then
    wget http://download.blender.org/release/Blender2.56abeta/$BLENDER.tar.bz2
  fi
# wget https://github.com/pierriko/proteus/raw/master/install.sh
# cd ~/workspace 
#sudo apt-get upgrade
===File init.freebsd, 78895819===
HOST="127.0.0.1" # Set Sick Beard address here.

# Check for wget and refuse to start without it.
  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.

if [ ! -x "${WGET}" ]; then
    if [ -n "${pid}" ]; then
    ${WGET} -O - -q --user=${SBUSR} --password=${SBPWD} "http://${HOST}:${PORT}/home/shutdown/" >/dev/null
    verify_sickbeard_pid
  exit 1
===File fetch_py_releases.sh, 79207677===
wget http://www.python.org/ftp/python/2.7.2/python-2.7.2-macosx10.6.dmg
# 2.7
# 3.1.x does not provide 64 bit versions for some reasons, so skip...

#wget http://www.python.org/ftp/python/3.1.2/Python-3.1.2.tar.bz2
#wget http://www.python.org/ftp/python/3.1.3/python-3.1.3-macosx10.3.dmg
# 3.2

wget http://www.python.org/ftp/python/3.2.1/python-3.2.1-macosx10.6.dmg
wget http://www.python.org/ftp/python/2.5.4/python-2.5.4-macosx.dmg
# 2.5.4 (2.5.5 did not provide binaries)
# 2.6.6


wget http://www.python.org/ftp/python/2.6.6/python-2.6.6-macosx10.3.dmg
===File toolchain-mingw.sh, 79241778===
		wget http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/pkg-config_0.25-1_win32.zip
	if [ ! -f /usr/bin/pkg-config ]; then 
		wget http://www.mr511.de/software/libelf-0.8.13.tar.gz
		tar -zxvf libelf-0.8.13.tar.gz
		wget http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/gettext-runtime_0.18.1.1-2_win32.zip
	if [ ! -f /mingw/include/libelf.h ]; then 
	fi
	if [ ! -f /usr/bin/intl.dll ]; then 	
	if [ ! -f /usr/bin/wget ]; then 
		INSTALL_PACKAGES+="msys-wget "
	fi	
		unzip -o gettext-runtime_0.18.1.1-2_win32.zip bin/*.dll -d /usr > NUL
	if [ ! -f /usr/bin/libglib-2.0-0.dll ]; then 
		wget http://ftp.gnome.org/pub/gnome/binaries/win32/glib/2.26/glib_2.26.1-1_win32.zip
		unzip -o glib_2.26.1-1_win32.zip bin/*.dll -d /usr > NUL
		unzip -o pkg-config_0.25-1_win32.zip bin/*.exe -d /usr > NUL
===File init.freebsd, 79607412===
  exit 1
# Check for wget and refuse to start without it.
if [ ! -x "${WGET}" ]; then

HOST="127.0.0.1" # Set Sick Beard address here.
WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.

  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
    if [ -n "${pid}" ]; then
    ${WGET} -O - -q --user=${SBUSR} --password=${SBPWD} "http://${HOST}:${PORT}/home/shutdown/" >/dev/null
    verify_sickbeard_pid
===File ffmpegupdate8.sh, 80417782===
wget http://downloads.xiph.org/releases/theora/libtheora-1.1.1.tar.gz 2>> $LOG >> $LOG
tar xzvf libtheora-1.1.1.tar.gz 2>> $LOG >> $LOG
cd $INSTALL 2>> $LOG >> $LOG
wget http://downloads.sourceforge.net/project/lame/lame/3.98.4/lame-3.98.4.tar.gz 2>> $LOG >> $LOG
tar xzvf lame-3.98.4.tar.gz 2>> $LOG >> $LOG
cd $INSTALL 2>> $LOG >> $LOG
source ffmpegversion.txt 2>> $LOG >> $LOG
wget http://x264-ffmpeg-up-to-date.googlecode.com/files/ffmpegversion.txt 2>> $LOG >> $LOG
	echo "chmod a+x ffmpegupdate$CURRENT.sh" >> updateffmpegupdate.sh
	echo "wget http://x264-ffmpeg-up-to-date.googlecode.com/files/ffmpegupdate$CURRENT.sh" >> updateffmpegupdate.sh
wget http://www.tortall.net/projects/yasm/releases/yasm-1.1.0.tar.gz 2>> $LOG >> $LOG
tar xzvf yasm-1.1.0.tar.gz 2>> $LOG >> $LOG
	echo "rm ffmpegupdate.sh" >> updateffmpegupdate.sh

cd $INSTALL
===File get-payload-from-web.sh, 80524948===
#
if [ ! -e 26411-800-ANSI-C_source_code.zip ]; then

#
sudo apt-get install libaudio-dev python gcc ffmpeg wget imagemagick
#
# Step 1: Makes sure you have gcc, ffmpeg, wget, and python.
#  1. Makes sure you have gcc, ffmpeg, wget, imagemagick, and python.
if [ ! -e youtube-dl ]; then
  wget --no-check-certificate https://yt-dl.org/downloads/2014.06.04/youtube-dl
  chmod +x youtube-dl
#
  wget getpostdelete.com/26411-800-ANSI-C_source_code.zip

#
[ -e $cat ] || wget http://i.imgur.com/$cat

===File ece-install, 80579293===
    assert_pre_prequesite wget
    assert_pre_prequesite curl
    assert_pre_prequesite git
        cd $download_dir
        wget --continue \
            --http-user $technet_user \

        install_packages_if_missing $packages
        packages="curl $git_package wget unzip"
        wget --continue \
          sun-java6-jdk
        

          wget"
            --http-user $technet_user \
===File n, 80629147===

which wget > /dev/null && GET="wget --no-check-certificate -q -O-"
# Ensure we have curl or wget
# curl / wget support



# wget support (Added --no-check-certificate for Github downloads)



test -z "$GET" && abort "curl or wget required"
===File buildSDL-osx.sh, 7089119===
wget http://www.libsdl.org/release/SDL-1.2.13.tar.gz

tar -xzf SDL_mixer-1.2.8.tar.gz
tar -xzf SDL-1.2.13.tar.gz

wget http://www.libsdl.org/projects/SDL_mixer/release/SDL_mixer-1.2.8.tar.gz
===File install-gcc4.5_armel.sh, 7098659===
# Download them using wget

mkdir -p gcc-4.5-debs
for u in $URLS; do wget --directory-prefix=./gcc-4.5-debs $u; done

===File build-installer.sh.karmic-variant, 7099219===
	if [ "$?" -ne "0" ] || [ ! -f "$packageName" ] ; then

	wget -q $packageURL
	echo " -  Latest package: $latestPackage"
	wget -q "$repoURL$latestPackage"
	if [ "$?" -ne "0" ] || [ ! -f $latestPackage ] ; then
===File hadoop-ec2-init-remote.sh, 7175874===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File remote_tests.sh, 7251994===
	
		wget -O - -o /dev/null http://flourishlib.com/test_token.php?action=release\&token=$TOKEN

		TOKEN=$(wget -O - -o /dev/null http://flourishlib.com/test_token.php?action=obtain)
		
	if (( $CONCURRENT == 1 )); then
===File update.sh, 7574338===
rm -f index.html

wget -q http://rpm5.org/

wget -nv http://rpm5.org/files/rpm/rpm-${PV%.*}/${r}.tar.gz -P ${DISTDIR} -c
r=rpm-${PV}
===File update-hddtemp.db, 7613894===
wget http://download.savannah.nongnu.org/releases/hddtemp/hddtemp.db -O hddtemp.db -q || die "Failed to download new hddtemp.db file"

# that was installed by the ebuild.
cd /usr/share/hddtemp
if wget http://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/app-admin/hddtemp/files/hddgentoo.db -O hddtmp.db -q; then
	mv -f hddtmp.db hddgentoo.db
===File store-unwritable-json.sh, 7718064===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
===File proxy-bad-request-body.sh, 7718102===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $proxy_server_pid
  wait $origin_server_pid
===File store-server-closes-immediately.sh, 7718103===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
shutdown() {
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:8000\\//g" > TMP
json_cmp store-source-urls.expected.json DIR/jscoverage.json
===File store-server-bad-body.sh, 7718105===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
shutdown() {
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:8000\\//g" > TMP
json_cmp store-source-urls.expected.json DIR/jscoverage.json
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
===File store-unreadable-json.sh, 7718118===
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
  wait $server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
shutdown() {
===File store-bad-response-headers.sh, 7718125===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
shutdown() {
json_cmp store-source-urls.expected.json DIR/jscoverage.json
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:8000\\//g" > TMP
===File server-directory-listing.sh, 7718134===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
}
sort ACTUAL -o ACTUAL
wget -q -O- http://127.0.0.1:8080/ > ACTUAL
sort server-directory-listing.expected -o EXPECTED
===File store-source-not-found.sh, 7718135===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=store-source-not-found.json -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
shutdown() {

json_cmp store-source-not-found.expected.json DIR/jscoverage.json
===File server-verbose.sh, 7718168===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid


wget -q -O- http://127.0.0.1:8080/index.html | diff --strip-trailing-cr recursive/index.html -
===File jboss, 7831588===
        wget -t 1 -O /dev/null $STATUSURL 2>/dev/null
    fi

                 You have to have installed $WGETNAME for this to work.
        monitor  return TRUE if the jboss appears to be working.
    else
        # Retry message for restraint
    if [ -z "$1" ];then
        ocf_run -q -err wget -t 1 -O /dev/null $STATUSURL
===File update.sh, 7832344===
	wget http://www.istat.it/strumenti/definizioni/comuni/$file
	rm $file
done
	rm $file
	unzip $file
	wget http://www.istat.it/ambiente/cartografia/$file
===File fetch_TASClient.sh, 7929662===
if ! cmp -s TASClient.txt.cur TASClient.txt.old; then
		7z x -y TASClient.7z
	wget -q `awk '{print $2;}' < TASClient.txt.cur` -O TASClient.7z &&
[ -e TASClient.txt.cur ] && cp TASClient.txt.cur TASClient.txt.old

wget -q http://www.climachine.com/spring/TASClient.txt -O TASClient.txt.cur
===File store-unwritable-json.sh, 7989098===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
shutdown() {
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
===File proxy-bad-request-body.sh, 7989136===
shutdown_perl() {
  wget -q -O- --post-data= http://127.0.0.1:8000/perl-shutdown > /dev/null
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${proxy_server_port}/jscoverage-shutdown" > /dev/null
  wait $proxy_server_pid
  wait $origin_server_pid
===File store-server-closes-immediately.sh, 7989137===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
shutdown() {
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:8000\\//g" > TMP
json_cmp store-source-urls.expected.json DIR/jscoverage.json
===File store-server-bad-body.sh, 7989139===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
shutdown() {
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:8000\\//g" > TMP
json_cmp store-source-urls.expected.json DIR/jscoverage.json
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
===File store-unreadable-json.sh, 7989152===
cat store.expected.json | sed "s/@PREFIX@/\\//g" > TMP
  wait $server_pid
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
wget --post-file=TMP -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/\\//g" > TMP
shutdown() {
===File store-bad-response-headers.sh, 7989159===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
shutdown() {
json_cmp store-source-urls.expected.json DIR/jscoverage.json
wget --post-file=TMP -q -O- -e 'http_proxy=http://127.0.0.1:8080/' http://127.0.0.1:8000/jscoverage-store > /dev/null
cat store.json | sed "s/@PREFIX@/http:\\/\\/127.0.0.1:8000\\//g" > TMP
===File server-directory-listing.sh, 7989168===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
}
sort ACTUAL -o ACTUAL
wget -q -O- http://127.0.0.1:8080/ > ACTUAL
sort server-directory-listing.expected -o EXPECTED
===File store-source-not-found.sh, 7989169===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=store-source-not-found.json -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
shutdown() {

json_cmp store-source-not-found.expected.json DIR/jscoverage.json
===File server-verbose.sh, 7989204===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid


wget -q -O- http://127.0.0.1:8080/index.html | diff --strip-trailing-cr recursive/index.html -
===File latex-install.sh, 8071753===
# Download ku-forside
wget http://www.math.ku.dk/~m00cha/ku-forside.zip
unzip ku-forside.zip -d /usr/local/share/texmf/tex/latex
unzip oberdiek.tds.zip -d /usr/local/share/texmf
wget http://mirror.ctan.org/install/macros/latex/contrib/oberdiek.tds.zip
# Download listingsutf8
===File fetchupdate, 8134166===


wget -O machineinfo "http://martin-juhl.dk/bumblebee/?searchitem=`sudo dmidecode --string system-product-name`&search=1" 1>/dev/null 2>/dev/null
wget -O allmachineinfo "http://martin-juhl.dk/bumblebee/?searchitem=showall&search=1" 1>/dev/null 2>/dev/null
===File ironhide-submitsystem, 8134205===
IRONHIDEHOME=/usr/share/ironhide/
$WGET -q --tries=10 --timeout=5 http://www.google.com -O /tmp/index.google &> /dev/null
rm -rf "/tmp/index.google"
WGET=`which wget`
WHOAMI=`which whoami`
if [ ! -s /tmp/index.google ];then

wget -O /tmp/systemsubmitted "http://www.martin-juhl.dk/ironhide/?manufacturer=`echo $MANUFACTURER`&model=`echo $MODEL`&start=`echo $STARTUP`&shutdown=`echo $SHUTDOWN`&user=`echo $CONFIRMINGUSER`&distro=`echo $DISTRO`&addmachine=1" 1>/dev/null 2>/dev/null

===File ironhide-bugreport, 8134211===
LSMOD=`which lsmod`
LSPCI=`which lspci`
WGET=`which wget`
if [ ! -s /tmp/index.google ];then

wget -O /tmp/bugreportsubmitted "http://$BUGREPORTHOST/bugweb/?createreport=1&github_id=$github_id" 1>/dev/null 2>/dev/null

$WGET -O /tmp/github https://github.com/MrMEEE/ironhide/issues/$github_id 1>/dev/null 2>/dev/null
rm -rf "/tmp/index.google"
$WGET -q --tries=10 --timeout=5 http://www.google.com -O /tmp/index.google &> /dev/null
rm /tmp/github
if [[ `cat /tmp/github |grep -nir "state state-open" |wc -l` < 1 ]]; then
===File hadoop-ec2-init-remote.sh, 8155903===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File ffserver-regression.sh, 8312977===
        fi
        if [ $(expr $file : "a-*") != 0 ]; then
            wget $WGET_OPTIONS -O - http://localhost:9999/$file > ff-$file
        else
            wget $WGET_OPTIONS -O - http://localhost:9999/$file?date=19700101T000000Z | dd bs=1 count=20000 > ff-$file 2>/dev/null
    for file in $FILES; do
    WGET_OPTIONS="--user-agent=NSPlayer -q --proxy=off -e verbose=off -e server_response=off"
    rm -f ff-* ffserver.regression
===File install-gcc4.5_armel.sh, 8315703===
# Download them using wget

mkdir -p gcc-4.5-debs
for u in $URLS; do wget --directory-prefix=./gcc-4.5-debs $u; done

===File gendocs.sh, 8442473===
  $prog YOURMANUAL \"GNU YOURMANUAL - One-line description\"
  wget \"$templateurl\"
  wget \"$scripturl\"
  cd YOURPACKAGESOURCE/doc
===File no-update-server, 10959554===
    wget http://www.erikbolstad.no/nedlasting/postnummer-utf8.txt
    rm -f postnummer-utf8.txt postnummer-ekstra.csv
    su www-data -c "$mapit_manage import_bolstad_postcodes postnummer-utf8.txt"
    wget http://www.nuug.no/prosjekt/fiksgatami/postnummer-ekstra.csv
===File setup_tools.sh, 86604780===
      wget http://download.erlide.org/tools/jdk-6u45-linux-x64.bin
  fi
  if [ ! -f jdk-6u45-linux-x64.bin ] ; then
  fi
  if [ ! -f jruby-bin-1.7.12.tar.gz ] ; then
    wget http://download.erlide.org/tools/jruby-bin-1.7.12.tar.gz
  fi
    wget http://download.erlide.org/tools/apache-ant-1.9.2-bin.tar.gz
  if [ ! -f apache-ant-1.9.2-bin.tar.gz ] ; then
    wget http://download.erlide.org/tools/otp_src_R16B03.tar.gz
  if [ ! -f otp_src_R16B03.tar.gz ] ; then
    wget http://download.erlide.org/tools/otp_src_17.0.tar.gz
  if [ ! -f otp_src_17.0.tar.gz ] ; then
  fi
  fi
===File install_mac.sh, 86720117===
rm -fr ngx_lua-*
wget http://download.redis.io/releases/redis-$REDIS_VAR.tar.gz
wget https://github.com/dualface/lua-nginx-module/archive/fix-sockets.zip
tar zxf ngx_openresty-$OPENRESTY_VER.tar.gz
wget http://openresty.org/download/ngx_openresty-$OPENRESTY_VER.tar.gz
cd $BUILD_DIR
unzip fix-sockets.zip
tar zxf beanstalkd-$BEANSTALKD_VER.tar.gz
wget https://github.com/kr/beanstalkd/archive/v$BEANSTALKD_VER.tar.gz -O beanstalkd-$BEANSTALKD_VER.tar.gz
tar zxf yaml-$LIBYAML_VER.tar.gz
wget http://pyyaml.org/download/libyaml/yaml-$LIBYAML_VER.tar.gz
cd $BUILD_DIR
cd $BUILD_DIR
cd $BUILD_DIR
tar zxf redis-$REDIS_VAR.tar.gz
===File install_ubuntu.sh, 86720120===
tar zxf ngx_openresty-$OPENRESTY_VER.tar.gz
wget http://openresty.org/download/ngx_openresty-$OPENRESTY_VER.tar.gz
wget http://download.redis.io/releases/redis-$REDIS_VAR.tar.gz
wget https://github.com/dualface/lua-nginx-module/archive/fix-sockets.zip
cd $BUILD_DIR
unzip fix-sockets.zip
rm -fr ngx_lua-*
tar zxf beanstalkd-$BEANSTALKD_VER.tar.gz
wget https://github.com/kr/beanstalkd/archive/v$BEANSTALKD_VER.tar.gz -O beanstalkd-$BEANSTALKD_VER.tar.gz
tar zxf yaml-$LIBYAML_VER.tar.gz
wget http://pyyaml.org/download/libyaml/yaml-$LIBYAML_VER.tar.gz
cd $BUILD_DIR
cd $BUILD_DIR
cd $BUILD_DIR
tar zxf redis-$REDIS_VAR.tar.gz
===File dev-bootstrap.sh, 86785080===
wget http://www.bizdirusa.com/mirrors/apache/maven/maven-3/3.0.5/binaries/apache-maven-3.0.5-bin.tar.gz

tar zxvf apache-maven-3.0.5-bin.tar.gz
wget http://nodejs.org/dist/v0.10.25/node-v0.10.25-linux-x64.tar.gz


tar zxf node-v0.10.25-linux-x64.tar.gz

wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.63.tar.gz;

tar xvzf autoconf-2.63.tar.gz
zypper --non-interactive in gcc-c++
zypper --non-interactive in wget expect git
wget --no-check-certificate http://pypi.python.org/packages/2.6/s/setuptools/setuptools-0.6c11-py2.6.egg
sh setuptools-0.6c11-py2.6.egg --install-dir /usr/lib64/python2.6/site-packages/
===File install-sx.sh, 87031093===
        if [ "$ROOT_INSTALL" = 1 ]; then
            pkg-config libcurl4-openssl-dev libleveldb-dev \
        echo
        tar zxf zeromq-4.0.4.tar.gz
        wget http://download.zeromq.org/zeromq-4.0.4.tar.gz
        if [ "$ROOT_INSTALL" = 1 ]; then
            leveldb libconfig ncurses wget"
            gcc git autoconf libtool boost pkg-config curl openssl \
            libboost-all-dev pkg-config libcurl4-openssl-dev \
            libleveldb-dev libconfig++-dev libncurses5-dev wget"
        if [ "$ROOT_INSTALL" = 1 ]; then
            libconfig-devel ncurses-devel wget"
            libcurl-devel openssl-devel leveldb-devel libconfig \
        if [ "$ROOT_INSTALL" = 1 ]; then
            libconfig++8-dev libncurses5-dev libboost$U_BOOST-all-dev wget"
===File bootstrap.sh, 87155247===
	sudo wget http://www.openssl.org/source/openssl-1.0.1g.tar.gz


	sudo wget http://nginx.org/download/nginx-1.6.0.tar.gz
	sudo tar xvf nginx-1.6.0.tar.gz
	sudo wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.36.tar.gz


	sudo wget https://github.com/openresty/headers-more-nginx-module/archive/v0.25.tar.gz
	sudo tar xfz openssl-1.0.1g.tar.gz
	sudo tar xfz pcre-8.36.tar.gz
	sudo tar xfz v0.25.tar.gz
	
	wget -O /etc/init.d/nginx https://raw.githubusercontent.com/charleslieferando/vagrant/master/nodes/nginx/centos/nginx-startup-script.sh
	
===File init.freebsd, 87264525===
  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
if [ ! -x "${WGET}" ]; then

WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.
# Check for wget and refuse to start without it.


  exit 1
    ${WGET} -O - -q --user=${sickbeard_web_user} --password=${sickbeard_web_password} "http://${sickbeard_host}:${sickbeard_port}/home/shutdown/" >/dev/null
    if [ -n "${pid}" ]; then
    verify_sickbeard_pid
===File install, 87410939===
    wget) wget --output-document=- "$@";;
    curl) curl -s --location "$@";;
  esac ||
    fail "missing dependencies, please install one of: curl, wget"
  else
    DOWNLOADER=wget
  elif command -v wget >/dev/null; then
    DOWNLOADER=curl
  fi
  esac | tr -d '\r'
    wget) wget --server-response --quiet --output-document=/dev/null "$@" 2>&1;;
    curl) curl --head --silent "$@";;
===File KaliUpdate.sh, 87510108===
	dpkg -i ipscan_3.2_i386.deb &>/dev/null
	wget -N http://sourceforge.net/projects/ipscan/files/ipscan3-binary/3.2/ipscan_3.2_i386.deb &>/dev/null
else
	#64 bit system
	dpkg -i ipscan_3.2_amd64.deb &>/dev/null
	wget -N http://sourceforge.net/projects/ipscan/files/ipscan3-binary/3.2/ipscan_3.2_amd64.deb &>/dev/null
	bzip2 -cd unicornscan-0.4.7-2.tar.bz2 | tar xf - &>/dev/null
	#32 bit system
	wget -N download.oracle.com/otn-pub/java/jdk/7u21-b11/jdk-7u21-linux-i586.tar.gz &>/dev/null
	wget -N http://unicornscan.org/releases/unicornscan-0.4.7-2.tar.bz2 &>/dev/null
	cd /root/ &>/dev/null
# Get the THS Conky Script, but don't install.
wget -N http://pastebin.com/download.php?i=g1qGiVyP -o /etc/conky/ths-conky.conf &>/dev/null
# Need to figure out if i8 is supported
	tar -xzvf jdk-7u21-linux-i586.tar.gz &>/dev/null
===File install_seeks.sh, 87510159===

wget http://fallabs.com/tokyocabinet/tokyocabinet-1.4.47.tar.gz
wget http://curl.haxx.se/download/curl-7.20.1.tar.bz2
cd dl
wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.20.tar.bz2
wget ftp://xmlsoft.org/libxml2/libxml2-2.7.7.tar.gz
wget http://protobuf.googlecode.com/files/protobuf-2.4.0a.tar.bz2
wget http://monkey.org/~provos/libevent-2.0.12-stable.tar.gz
===File init.freebsd, 87562695===
  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
if [ ! -x "${WGET}" ]; then

WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.
# Check for wget and refuse to start without it.


  exit 1
    ${WGET} -O - -q --user=${sickbeard_web_user} --password=${sickbeard_web_password} "http://${sickbeard_host}:${sickbeard_port}/home/shutdown/" >/dev/null
    if [ -n "${pid}" ]; then
    verify_sickbeard_pid
===File init.freebsd, 87746707===
  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
if [ ! -x "${WGET}" ]; then

WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.
# Check for wget and refuse to start without it.


  exit 1
    ${WGET} -O - -q --user=${sickbeard_web_user} --password=${sickbeard_web_password} "http://${sickbeard_host}:${sickbeard_port}/home/shutdown/" >/dev/null
    if [ -n "${pid}" ]; then
    verify_sickbeard_pid
===File download-pms-binaries-source.sh, 87848938===
# sed, git, subversion, wget (for Linux) or curl (for Mac OS X)
# REQUIREMENTS
#
It seems you are missing "wget", which is required to run this script.
else
You can install Wget with following command on Debian based systems (Debian, Ubuntu, etc):


    sudo apt-get install wget
    WGET=`check_binary wget`
    fi

fi
    else
        $WGET $URL
        wget)
            cat >&2 << EOM
===File init.freebsd, 88133060===
  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
if [ ! -x "${WGET}" ]; then

WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.
# Check for wget and refuse to start without it.


  exit 1
    ${WGET} -O - -q --user=${sickbeard_web_user} --password=${sickbeard_web_password} "http://${sickbeard_host}:${sickbeard_port}/home/shutdown/" >/dev/null
    if [ -n "${pid}" ]; then
    verify_sickbeard_pid
===File shinken.conf, 88225443===
            export PYLIBSRHEL="paramiko:paramiko netifaces:netifaces multiprocessing:multiprocessing simplejson:simplejson pysqlite:sqlite3 MySQL-python:MySQLdb pyro:Pyro.core pymongo:pymongo kombu:kombu"
            export MONGOPKGS="mongodb-server pymongo"
	    	export YUMPKGS="gcc python26 sqlite-devel python26-devel git mysql-devel nmap wget unzip python-ldap"
	    	export YUMPKGS="gcc python sqlite-devel python-devel git mysql-devel python-setuptools nmap wget unzip python-ldap"
	    	export EPELVERS="5-4"
            export PYLIBSRHEL6="paramiko:paramiko pymongo:pymongo netifaces:netifaces simplejson:simplejson pysqlite:sqlite3 MySQL-python:MySQLdb pyro:Pyro.core kombu:kombu"
            export YUMPKGS="gcc python26 sqlite-devel python26-devel git mysql-devel nmap wget unzip python-ldap python-setuptools python-paramiko python-simplejson"
        then
		    #export YUMPKGS="gcc python26 sqlite-devel python26-devel git mysql-devel nmap wget unzip pymongo-gridfs pymongo"
            export MONGOPKGS="mongodb-server pymongo"
            export YUMPKGS="gcc python sqlite-devel python-devel git mysql-devel nmap wget unzip python-ldap python-setuptools python-paramiko python-simplejson python-pyro python-kombu python-sqlite3dbm python-netifaces MySQL-python "
        then
    		#export YUMPKGS="gcc python sqlite-devel python-devel git mysql-devel python-setuptools nmap wget unzip pymongo-gridfs pymongo"
		    export EPELVERS="6-7"
===File init.freebsd, 88300792===
  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
if [ ! -x "${WGET}" ]; then

WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.
# Check for wget and refuse to start without it.


  exit 1
    ${WGET} -O - -q --user=${sickbeard_web_user} --password=${sickbeard_web_password} "http://${sickbeard_host}:${sickbeard_port}/home/shutdown/" >/dev/null
    if [ -n "${pid}" ]; then
    verify_sickbeard_pid
===File setup_iphone.sh, 88318571===
wget http://www.syshalt.net/pub/iphone/gcc-iphone/fake-libgcc_1.0_iphoneos-arm.deb

apt-get install iphone-gcc
dpkg Đi fake-libgcc_1.0_iphoneos-arm.deb
tar -xvzf sdk-2.0-headers.tar.gz
wget http://www.syshalt.net/iphone/gcc-iphone/sdk-2.0-headers.tar.gz
#mkdir $SBT_HOME
tar -xvzf gcc_files.tar.gz
wget http://simple-build-tool.googlecode.com/files/sbt-launch-0.7.4.jar -O $SBT_HOME/sbt-launch.jar
echo 'java -server -XX:+UseParallelGC -XX:+DoEscapeAnalysis -XX:+UseCompressedOops -Xmx512M -jar' $SBT_HOME'/sbt-launch.jar "$@"' > $SBT_HOME/sbt
export MAVEN_VERSION=2.2.1
wget ftp://ftp.inria.fr/pub/Apache//maven/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz
tar zxvf apache-maven-$MAVEN_VERSION-bin.tar.gz
cd ..
wget http://www.syshalt.net/iphone/gcc-iphone/gcc_files.tar.gz
===File init-alt.freebsd, 88650949===
if [ -e "${headphones_conf}" ]; then

# Check for wget and refuse to start without it.
  warn "Headphones not started: You need wget to safely shut down Headphones."
WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Headphones.

if [ ! -x "${WGET}" ]; then
    
    ${WGET} -O - -q --user=${SBUSR} --password=${SBPWD} "http://${HOST}:${PORT}/shutdown/" >/dev/null
    verify_headphones_pid
  exit 1
===File ee_ven_install_utils.sh, 88832199===
			wget --no-check-certificate -cqO /var/www/22222/htdocs/cache/memcache/memcache.tar.gz http://phpmemcacheadmin.googlecode.com/files/phpMemcachedAdmin-1.2.2-r262.tar.gz \
			ee_lib_echo "Installing phpMemcachedAdmin, please wait..."
			|| ee_lib_error "Unable to download ocp.php"
			|| ee_lib_error "Unable to download phpMemcachedAdmin, exit status = " $?
			|| ee_lib_error "Unable to download nginx FastCGI cleanup script, exit status = " $?
			wget --no-check-certificate -cqO /var/www/22222/htdocs/cache/nginx/clean.php https://raw.githubusercontent.com/rtCamp/eeadmin/master/cache/nginx/clean.php \
			|| ee_lib_error "Unable to download opcache.php"
			wget --no-check-certificate -cqO /var/www/22222/htdocs/cache/opcache/opgui.php https://raw.github.com/amnuts/opcache-gui/master/index.php \
			ee_lib_echo "Downloading OPcache, please wait..."
			wget --no-check-certificate -cqO /var/www/22222/htdocs/cache/opcache/opcache.php https://raw.github.com/rlerdorf/opcache-status/master/opcache.php \
			|| ee_lib_error "Unable to download opgui.php"
			# Download pt-query-advisor Fixed #189
			wget -q http://bazaar.launchpad.net/~percona-toolkit-dev/percona-toolkit/2.1/download/head:/ptquerydigest-20110624220137-or26tn4expb9ul2a-16/pt-query-digest -O /usr/bin/pt-query-advisor \
			|| ee_lib_error "Unable to copy download pt-query-advisor, exit status = " $?
			wget --no-check-certificate -cqO /var/www/22222/htdocs/cache/opcache/ocp.php https://gist.github.com/ck-on/4959032/raw/0b871b345fd6cfcd6d2be030c1f33d1ad6a475cb/ocp.php \
			ee_lib_echo "Downloading nginx FastCGI cleanup script, please wait..."
===File installphp.sh, 89207081===
	wget "$PHPURL"
	echo "- using wget"

	echo "- aborting"
	echo "Could not find curl or wget." >&2;
if command -v wget &>/dev/null; then
echo -n "Downloading PHP 5.4"
# like os x bundle curl but not wget... use whatever is available
# Some debain-like systems bundle wget but not curl, some other systems
	exit 1;
elif command -v curl &>/dev/null; then
===File build-macosx.sh, 89462554===
  wget -c "$LUA_URL" -O "$LUA_FILENAME" || { echo "Error: failed to download Lua"; exit 1; }
if [ $BUILD_LUA ]; then
  tar -xzf "$LUA_FILENAME"
  wget --no-check-certificate -c "$LUASOCKET_URL" -O "$LUASOCKET_FILENAME" || { echo "Error: failed to download LuaSocket"; exit 1; }
  unzip "$LUASOCKET_FILENAME"
if [ $BUILD_LUASOCKET ]; then

# check for wget
  exit 1
if [ ! "$(which wget)" ]; then
  echo "Error: wget isn't found. Please install GNU Wget."
===File build-linux.sh, 89462574===
# check for wget
  echo "Error: wget isn't found. Please install GNU Wget."
  unzip "$LUASOCKET_FILENAME"
if [ $BUILD_LUASOCKET ]; then
  wget --no-check-certificate -c "$LUASOCKET_URL" -O "$LUASOCKET_FILENAME" || { echo "Error: failed to download LuaSocket"; exit 1; }
if [ $BUILD_LUA ]; then

  tar -xzf "$LUA_FILENAME"
  wget -c "$LUA_URL" -O "$LUA_FILENAME" || { echo "Error: failed to download Lua"; exit 1; }
  exit 1
if [ ! "$(which wget)" ]; then
===File reallyfastestmirror.sh, 89846677===
        echo "wget $repomd_xml_url"
        echo "wget $mirrorlist"
    if [ ! -r ${mirrorlist_file} ] ; then
    (
            --output-document ${mirrorlist_file}.0 \
        wget --quiet --user-agent="${WGETUA}" --timeout=20 \
        echo "-> ${mirrorlist_file}"
    if [ ! -r ${repomd_xml_file} ] ; then
        ulimit ${LIMIT_SIZE_KIB} ; wget --quiet --user-agent="${WGETUA}" --timeout=10 --tries=1 \
        echo "-> ${repomd_xml_file}"

    echo "wget ${primary_db_url}"
    echo "-> ${host_binary_file}"

            --output-document ${host_binary_file} \
LIMIT_SIZE_KIB=512
WGETUA="urlgrabber/3.9.1 yum/3.2.29"
===File init.freebsd, 90154850===
  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
if [ ! -x "${WGET}" ]; then

WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.
# Check for wget and refuse to start without it.


  exit 1
    ${WGET} -O - -q --user=${sickbeard_web_user} --password=${sickbeard_web_password} "http://${sickbeard_host}:${sickbeard_port}/home/shutdown/" >/dev/null
    if [ -n "${pid}" ]; then
    verify_sickbeard_pid
===File init-alt.freebsd, 90352143===
if [ -e "${headphones_conf}" ]; then

# Check for wget and refuse to start without it.
  warn "Headphones not started: You need wget to safely shut down Headphones."
WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Headphones.

if [ ! -x "${WGET}" ]; then
    
    ${WGET} -O - -q --user=${SBUSR} --password=${SBPWD} "http://${HOST}:${PORT}/shutdown/" >/dev/null
    verify_headphones_pid
  exit 1
===File init.freebsd, 90354165===
  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
if [ ! -x "${WGET}" ]; then

WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.
# Check for wget and refuse to start without it.


  exit 1
    ${WGET} -O - -q --user=${sickbeard_web_user} --password=${sickbeard_web_password} "http://${sickbeard_host}:${sickbeard_port}/home/shutdown/" >/dev/null
    if [ -n "${pid}" ]; then
    verify_sickbeard_pid
===File ad_block_update.sh, 90447390===
	if [ "$WGET_CHECK1" -eq "1" ] || [ "$WGET_CHECK2" -eq "1" ]; then



		TESTCONNECTION=`wget http://www.google.com -O $TMPFILE > /dev/null 2>&1`;
		if [ $? != 0 ]; then
			wget http://winhelp2002.mvps.org/hosts.zip -O $TMPFILE > /dev/null 2>&1;
			unzip -p $TMPFILE HOSTS > $HOST_FILE;
				unzip -p $TMPFILE HOSTS > $HOST_FILE;
				wget http://winhelp2002.mvps.org/hosts.zip -O $TMPFILE > /dev/null 2>&1;
			else
		else

	WGET_CHECK2=`ls -la /system/bin/wget | wc -l`;
	WGET_CHECK1=`ls -la /system/xbin/wget | wc -l`;
===File init.freebsd, 90609080===
HOST="127.0.0.1" # Set Sick Beard address here.

# Check for wget and refuse to start without it.
  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.

if [ ! -x "${WGET}" ]; then
    if [ -n "${pid}" ]; then
    ${WGET} -O - -q --user=${SBUSR} --password=${SBPWD} "http://${HOST}:${PORT}/home/shutdown/" >/dev/null
    verify_sickbeard_pid
  exit 1
===File shinken.conf, 90644578===
            export PYLIBSRHEL="paramiko:paramiko netifaces:netifaces multiprocessing:multiprocessing simplejson:simplejson pysqlite:sqlite3 MySQL-python:MySQLdb pyro:Pyro.core pymongo:pymongo kombu:kombu"
            export MONGOPKGS="mongodb-server pymongo"
	    	export YUMPKGS="gcc python26 sqlite-devel python26-devel git mysql-devel nmap wget unzip python-ldap"
	    	export YUMPKGS="gcc python sqlite-devel python-devel git mysql-devel python-setuptools nmap wget unzip python-ldap"
	    	export EPELVERS="5-4"
            export PYLIBSRHEL6="paramiko:paramiko pymongo:pymongo netifaces:netifaces simplejson:simplejson pysqlite:sqlite3 MySQL-python:MySQLdb pyro:Pyro.core kombu:kombu"
            export YUMPKGS="gcc python26 sqlite-devel python26-devel git mysql-devel nmap wget unzip python-ldap python-setuptools python-paramiko python-simplejson"
        then
		    #export YUMPKGS="gcc python26 sqlite-devel python26-devel git mysql-devel nmap wget unzip pymongo-gridfs pymongo"
            export MONGOPKGS="mongodb-server pymongo"
            export YUMPKGS="gcc python sqlite-devel python-devel git mysql-devel nmap wget unzip python-ldap python-setuptools python-paramiko python-simplejson python-pyro python-kombu python-sqlite3dbm python-netifaces MySQL-python "
        then
    		#export YUMPKGS="gcc python sqlite-devel python-devel git mysql-devel python-setuptools nmap wget unzip pymongo-gridfs pymongo"
		    export EPELVERS="6-7"
===File init.freebsd, 90996482===
  warn "Sickbeard not started: You need wget to safely shut down Sick Beard."
if [ ! -x "${WGET}" ]; then

WGET="/usr/local/bin/wget" # You need wget for this script to safely shutdown Sick Beard.
# Check for wget and refuse to start without it.


  exit 1
    ${WGET} -O - -q --user=${sickbeard_web_user} --password=${sickbeard_web_password} "http://${sickbeard_host}:${sickbeard_port}/home/shutdown/" >/dev/null
    if [ -n "${pid}" ]; then
    verify_sickbeard_pid
===File mint-12-postinstall.sh, 91007886===
wget -O $HOME/.conkyrc https://raw.github.com/nicolargo/ubuntupostinstall/master/conkyrc
# -- Nord
# Conky theme
chown -R $USERNAME:$USERNAME ~/.config/terminator
wget -O ~/.config/terminator/config https://raw.github.com/nicolargo/ubuntupostinstall/master/config.terminator

# Vimrc
wget -O - https://raw.github.com/vgod/vimrc/master/auto-install.sh | sh

mkdir -p ~/.config/terminator
wget http://www.deviantart.com/download/214295138/gnome_shell__nord_by_0rax0-d3jl36q.zip
unzip gnome_shell__nord_by_0rax0-d3jl36q.zip
mkdir $HOME/.icons
apt-get install faenza-icon-theme faenza-icons-mono
wget http://www.deviantart.com/download/255099649/faience_icon_theme_by_tiheum-d47vo5d.zip
===File install-freeswitch.sh, 91468185===
            chmod 0755 /etc/init.d/freeswitch
        'CENTOS')
#
# To download and run the script on your server :
            wget --no-check-certificate $FS_INIT_PATH/debian/freeswitch -O /etc/init.d/freeswitch
            chmod 0755 /etc/init.d/freeswitch
        'DEBIAN')
# cd /usr/src/ ; rm install-freeswitch.sh ; wget --no-check-certificate https://raw.github.com/Star2Billing/newfies-dialer/master/install/install-freeswitch.sh ; chmod +x install-freeswitch.sh ; ./install-freeswitch.sh
    #[ -f xml_cdr.conf.xml ] && mv xml_cdr.conf.xml xml_cdr.conf.xml.bak
    #create dir to store send error of CDR
    #wget --no-check-certificate $FS_CONF_PATH/xml_cdr.conf.xml -O xml_cdr.conf.xml
            yum -y install autoconf automake bzip2 cpio curl curl-devel curl-devel expat-devel fileutils gcc-c++ gettext-devel gnutls-devel libjpeg-devel libogg-devel libtiff-devel libtool libvorbis-devel make ncurses-devel nmap openssl openssl-devel openssl-devel perl patch unixODBC unixODBC-devel unzip wget zip zlib zlib-devel
            yum -y update
            wget --no-check-certificate $FS_INIT_PATH/centos/freeswitch -O /etc/init.d/freeswitch
            yum -y install git
===File install.sh, 91504187===
fi
wget https://github.com/simpl/ngx_devel_kit/archive/v0.2.17rc2.zip
if [ ! -x "v0.2.17rc2.zip" ]; then  
fi
wget https://github.com/chaoslawful/lua-nginx-module/archive/v0.7.4.zip
if [ ! -x "v0.7.4.zip" ]; then  
fi
wget http://blog.s135.com/soft/linux/nginx_php/pcre/pcre-8.10.tar.gz
unzip master.zip
cd /usr/local/nginx/conf/
wget https://github.com/loveshell/ngx_lua_waf/archive/master.zip --no-check-certificate
if [ ! -x "LuaJIT-2.0.0.tar.gz" ]; then  
fi
wget http://luajit.org/download/LuaJIT-2.0.0.tar.gz
if [ ! -x "pcre-8.10.tar.gz" ]; then
===File mkrepo.sh, 91821918===
       wget -O - ${repourl}/indices/override.${repodist}.extra.${repo} >> ${wrkdir}/override.precise.extra.main
                     egrep '[0-9a-f]{64}' | \
       packagesfile=`wget -qO - ${repourl}/dists/${repodist}/Release | \
       fi
       # Getting indices
         bz=${repourl}/dists/${repodist}/${repo}/debian-installer/binary-amd64/Packages
         wget -qO - $bz | sed -ne 's/^Package: //p' >> ${wrkdir}/UPackages.tmp
         wget -qO - $bz | bzip2 -cdq | sed -ne 's/^Package: //p' >> ${wrkdir}/UPackages.tmp
       else
       echo "deb ${repourl} ${repodist} ${repo}/debian-installer" >> ${wrkdir}/apt.tmp/sources/sources.list
         bz=${repourl}/dists/${repodist}/$packagesfile
     done
       wget -O - ${repourl}/indices/override.${repodist}.${repo} >> ${wrkdir}/override.precise.main
       wget -O - ${repourl}/indices/override.${repodist}.${repo}.debian-installer >> ${wrkdir}/override.precise.main.debian-installer
===File makedist, 2466911===
$ECHO_N "makedist: Attempting to download PEAR's phar archive"
if test ! -x wget; then
	wget http://pear.php.net/install-pear-nozlib.phar -nd -P pear/
else
	$ECHO_N "Missing wget binary needed for pear download";
	exit 0;
===File linux-build-dependencies.sh, 25149918===
# - wget or curl
# Prerequisites:
# - Qt4
  if [ ! -f curl-$version.tar.bz2 ]; then
    wget http://curl.haxx.se/download/curl-$version.tar.bz2
  fi
===File control, 25199062===

        echo "certificate authority. Either upgrade or set HTTP_CLIENT to insecure:"
        echo "  export HTTP_CLIENT=\"curl --insecure -f -L -o"
        echo "  export HTTP_CLIENT=\"wget --no-check-certificate -O\" # or"
if type -p curl >/dev/null 2>&1; then
HTTP_CLIENT=${HTTP_CLIENT:-"wget -O"}
===File cf9hf2.sh, 25204039===

wget -O "${HOTFIX_FILE1}" "${HOTFIX_URL1}"
wget -O "${HOTFIX_FILE2}" "${HOTFIX_URL2}"
mkdir -p "${HOTFIX_DIR}"
===File gendocs.sh, 25206684===
  $prog YOURMANUAL \"GNU YOURMANUAL - One-line description\"
  wget \"$templateurl\"
  wget \"$scripturl\"
  cd YOURPACKAGESOURCE/doc
===File get_cholesky_data.sh, 25250143===
# wget http://people.csail.mit.edu/~newton/haskell-cnc/datasets/cholesky_matrix_data.tbz


if ! [ -f $DAT ]; then
  tar xjvf $DAT
  wget http://cs.indiana.edu/~rrnewton/datasets/$DAT
===File installGit.sh, 25262914===
        rpm -Uvh epel-release-5-4.noarch.rpm
      *el6)
        wget http://download.fedoraproject.org/pub/epel/6/$(uname -i)/epel-release-6-7.noarch.rpm &&
      *el5)
        wget http://download.fedoraproject.org/pub/epel/5/$(uname -i)/epel-release-5-4.noarch.rpm &&
        rpm -Uvh epel-release-6-7.noarch.rpm 
===File test_install_git_scriptbuilder.sh, 25262939===
        wget http://download.fedoraproject.org/pub/epel/5/$(uname -i)/epel-release-5-4.noarch.rpm &&
      *el5)
        rpm -Uvh epel-release-5-4.noarch.rpm
        wget http://download.fedoraproject.org/pub/epel/6/$(uname -i)/epel-release-6-7.noarch.rpm &&
      *el6)
        rpm -Uvh epel-release-6-7.noarch.rpm 
===File install-dictionaries, 25266776===

# use curl or wget as appropriate
download()
    wget https://s3.amazonaws.com/rstudio-dictionaries/$1 -O $1
  else
  fi
===File install-mathjax, 25266777===

# use curl or wget as appropriate
download()
    wget https://s3.amazonaws.com/rstudio-buildtools/$1 -O $1
  else
  fi
===File sbt, 25302306===
      wget --quiet -O "$jar" "$url"
    fi
      curl --fail --silent "$url" --output "$jar"
    elif which wget >/dev/null; then
===File hadoop-ec2-init-remote.sh, 25691719===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25693283===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25694153===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25695041===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25695911===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25696799===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25698014===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25698896===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25700276===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25701184===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25702397===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25703228===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25703495===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25704502===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25707101===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25708124===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25709550===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25710530===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25711881===
 MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25712333===
 MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25713294===
 MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25713994===
  MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File hadoop-ec2-init-remote.sh, 25714629===
 MASTER_HOST=`wget -q -O - http://169.254.169.254/latest/meta-data/local-hostname`
fi
SECURITY_GROUPS=`wget -q -O - http://169.254.169.254/latest/meta-data/security-groups`
MASTER_HOST=%MASTER_HOST% # Interpolated before being sent to EC2 node
if [ "$IS_MASTER" == "true" ]; then
IS_MASTER=`echo $SECURITY_GROUPS | awk '{ a = match ($0, "-master$"); if (a) print "true"; else print "false"; }'`
===File ffserver-regression.sh, 26191343===
        fi
        if [ $(expr $file : "a-*") != 0 ]; then
            wget $WGET_OPTIONS -O - http://localhost:9999/$file > ff-$file
        else
            wget $WGET_OPTIONS -O - http://localhost:9999/$file?date=19700101T000000Z | dd bs=1 count=20000 > ff-$file 2>/dev/null
    for file in $FILES; do
    WGET_OPTIONS="--user-agent=NSPlayer -q --proxy=off -e verbose=off -e server_response=off"
    rm -f ff-* ffserver.regression
===File install-gcc4.5_armel.sh, 26201241===
# Download them using wget

mkdir -p gcc-4.5-debs
for u in $URLS; do wget --directory-prefix=./gcc-4.5-debs $u; done

===File fetch-all-v3, 26332067===
	if [ "$?" != 0 ]; then
for dirserver in $DIRSERVERS; do
	wget -q -O "$tmpdir/$TIME-consensus" http://$dirserver/tor/status-vote/current/consensus
	for dirserver in $DIRSERVERS; do
		wget -q -O "$dir/$TIME-vote-$vote" http://$dirserver/tor/status-vote/current/d/$vote
		if [ "$?" != 0 ]; then
===File fetch-all, 26332068===
		bzip2 "$authprefix$fp"
	authorities=$(wget -q -O - http://$dirserver/tor/status/all | egrep '^fingerprint ' | awk '{print $2}')
	if [ "$authorities" == "" ]; then
		wget -q -O "$authprefix$fp" http://$dirserver/tor/status/fp/"$fp"
for dirserver in $DIRSERVERS; do
	for fp in $authorities; do
===File cert_iopr.sh, 26705577===
#    ret=$?
#    echo wget -O $file http://${host}${filePath}
#    wget -O $file http://${host}${filePath}

===File download_mars.sh, 26761620===
    wget --no-check-certificate -q -O update.xml $update_url
    echo "Using  $update_url"

      fi
        wget --no-check-certificate -nv -O update/$patch_type.mar $URL 2>&1 
      else
===File setup.sh, 26890584===
ln -sf jetty-runner-8.1.9.v20130131.jar jetty-runner.jar
wget http://repo2.maven.org/maven2/org/mortbay/jetty/jetty-runner/8.1.9.v20130131/jetty-runner-8.1.9.v20130131.jar
apt-get update 
apt-get install openjdk-7-jre wget
===File lein, 26890763===
    else
    fi
        HTTP_CLIENT="wget -O"
    echo "to turn off certificate checks:"
    echo "  export HTTP_CLIENT=\"wget --no-check-certificate -O\" # or"
    echo "  export HTTP_CLIENT=\"curl --insecure -f -L -o\""
===File lein, 26890988===
    else
    fi
        HTTP_CLIENT="wget -O"
    echo "to turn off certificate checks:"
    echo "  export HTTP_CLIENT=\"wget --no-check-certificate -O\" # or"
    echo "  export HTTP_CLIENT=\"curl --insecure -f -L -o\""
===File lein, 26892325===
    else
    fi
        HTTP_CLIENT="wget -O"
    echo "to turn off certificate checks:"
    echo "  export HTTP_CLIENT=\"wget --no-check-certificate -O\" # or"
    echo "  export HTTP_CLIENT=\"curl --insecure -f -L -o\""
===File lein, 26894483===
    else
    fi
        HTTP_CLIENT="wget -O"
    echo "to turn off certificate checks:"
    echo "  export HTTP_CLIENT=\"wget --no-check-certificate -O\" # or"
    echo "  export HTTP_CLIENT=\"curl --insecure -f -L -o\""
===File server_init.sh, 26894813===

apt-get install -y ruby ruby1.8-dev libopenssl-ruby1.8 rdoc build-essential wget rsync libshadow-ruby1.8
wget http://rubyforge.org/frs/download.php/60718/rubygems-1.3.5.tgz
cd /tmp
tar zxf rubygems-1.3.5.tgz
apt-get upgrade -y
===File lein, 26895139===
    else
    fi
        HTTP_CLIENT="wget -O"
    echo "to turn off certificate checks:"
    echo "  export HTTP_CLIENT=\"wget --no-check-certificate -O\" # or"
    echo "  export HTTP_CLIENT=\"curl --insecure -f -L -o\""
===File gendocs.sh, 26980771===
  cd YOURPACKAGESOURCE/doc
  wget \"$scripturl\"
  $prog YOURMANUAL \"GNU YOURMANUAL - One-line description\"
  wget \"$templateurl\"
===File gendocs.sh, 26981926===
  cd YOURPACKAGESOURCE/doc
  wget \"$scripturl\"
  $prog YOURMANUAL \"GNU YOURMANUAL - One-line description\"
  wget \"$templateurl\"
===File .brew, 26984161===

brew install wget --enable-iri
# Install wget with IRI support

===File post_install_script.sh.erb, 80826849===
/usr/bin/wget /usr/bin/wget http://<%= @node[:netboot][:tftp_server_ip] %>/<%= @filename %>.pem -O client.pem
cd /etc/chef
#run chef client
/usr/bin/wget /usr/bin/wget http://<%= @node[:netboot][:tftp_server_ip] %>/client.rb
/usr/bin/wget http://<%= @node[:netboot][:tftp_server_ip] %>/ruby-enterprise_1.8.7-2010.01_amd64.deb
cd /tmp
/usr/bin/dpkg -i ruby-enterprise_1.8.7-2010.01_amd64.deb
===File server-encoded-url.sh, 80941734===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
}
wget -q -O- 'http://127.0.0.1:8080/1%2b2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%2B2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%202.txt' | diff 'DIR/1 2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%262.txt' | diff 'DIR/1&2.txt' -

===File run-tests-from-scratch, 81101562===
  echo "ERROR: wget must be installed and on the search path."
if [ $? != 0 ]; then
wget --version > /dev/null
# Validate whether wget exists.

create a separate file containing statements that export non-default values for
source it before you run this script in your CI project.
some or all of the following environment variables and then wget that and
  exit -1
  tar xvfz hadoop-${SPARK_HADOOP_VERSION}.tar.gz
  wget http://archive.apache.org/dist/hadoop/core/hadoop-${SPARK_HADOOP_VERSION}/hadoop-${SPARK_HADOOP_VERSION}.tar.gz
  # Download and unpack Hadoop and set env variable.
===File http-mon.sh, 81535113===
WGETOPTS="-O- -q -L --no-proxy --bind-address=$bind_address"
CURLOPTS="-o - -Ss -L --interface lo $curl_ipv6_opts"
wget_func() {
}
fi
findhttpclient() {
	# prefer wget (for historical reasons)
	wget $auth $cl_opts "$1"
}
	[ x != "x$test_user" ] &&
		auth="--http-user=$test_user --http-passwd=$test_password"
	auth=""
	cl_opts="$WGETOPTS $test_httpclient_opts"
		*) echo userdefined;;
		curl|wget) echo ${test_httpclient}_func;;  #these are supported
	case "$test_httpclient" in
	if [ "x$CLIENT" != x ] && which "$CLIENT" >/dev/null 2>&1; then
===File setLib.sh, 81587045===
wget -O continuations.jar http://search.maven.org/remotecontent?filepath=org/scala-lang/plugins/continuations/2.11.0-M7/continuations-2.11.0-M7.jar


wget -O scala-library.jar http://search.maven.org/remotecontent?filepath=org/scala-lang/scala-library/2.11.0-M7/scala-library-2.11.0-M7.jar 
cd lib
wget -O scala-reflect.jar http://search.maven.org/remotecontent?filepath=org/scala-lang/scala-reflect/2.11.0-M7/scala-reflect-2.11.0-M7.jar
wget -O scala-compiler.jar http://search.maven.org/remotecontent?filepath=org/scala-lang/scala-compiler/2.11.0-M7/scala-compiler-2.11.0-M7.jar
wget -O lift-json.jar http://search.maven.org/remotecontent?filepath=net/liftweb/lift-json_2.10/2.6-M2/lift-json_2.10-2.6-M2.jar

===File download-libs.sh, 81689820===
  wget http://www.zlib.net/${ZLIB}.tar.gz || \
  die "Unable to download ${ZLIB}"
if [ ! -e ${GIFLIB}.tar.gz ] ; then
  wget ftp://ftp.simplesystems.org/pub/libpng/png/src/${LIBPNG}.tar.bz2 || \
  die "Unable to download ${LIBPNG}"
if [ ! -e ${ZLIB}.tar.gz ] ; then
  die "Unable to download ${JPEGLIB}"
  wget http://quirkysoft.googlecode.com/files/${JPEGLIB}.tar.gz || \
if [ ! -e ${JPEGLIB}.tar.gz ] ; then
  die "Unable to download ${MATRIXLIB}"
  wget http://bunjalloo-deps.googlecode.com/files/${MATRIXLIB}.tar.gz || \
if [ ! -e ${MATRIXLIB}.tar.gz ] ; then
  die "Unable to download ${GIFLIB}"
if [ ! -e ${LIBPNG}.tar.bz2 ] ; then
  wget http://downloads.sourceforge.net/giflib/${GIFLIB}.tar.gz || \
===File server-encoded-url.sh, 81860020===
shutdown() {
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
}
wget -q -O- 'http://127.0.0.1:8080/1%2b2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%2B2.txt' | diff 'DIR/1+2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%202.txt' | diff 'DIR/1 2.txt' -
wget -q -O- 'http://127.0.0.1:8080/1%262.txt' | diff 'DIR/1&2.txt' -

===File plivo_install.sh, 81996575===
            cd $DEPLOY/source
			    wget http://www.python.org/ftp/python/$LAST_PYTHON_VERSION/Python-$LAST_PYTHON_VERSION.tgz
			    cd source
			    tar -xvf Python-$LAST_PYTHON_VERSION.tgz
			    cd source
            wget --no-check-certificate $PLIVO_SETUP_SCRIPT
        yum -y update
            wget --no-check-certificate https://github.com/plivo/plivoframework/raw/master/scripts/ez_setup.py
            cd $DEPLOY/source
            $DEPLOY/bin/python ez_setup.py
        yum -y install autoconf automake bzip2 cpio curl curl-devel curl-devel expat-devel fileutils gcc-c++ gettext-devel gnutls-devel libjpeg-devel libogg-devel libtiff-devel libtool libvorbis-devel make ncurses-devel nmap openssl openssl-devel openssl-devel perl patch unixODBC unixODBC-devel unzip wget zip zlib zlib-devel
			    wget http://www.python.org/ftp/python/$LAST_PYTHON_VERSION/Python-$LAST_PYTHON_VERSION.tgz
			    tar -xvf Python-$LAST_PYTHON_VERSION.tgz
        yum -y install python-setuptools python-tools gcc python-devel zlib-devel readline-devel which sox bison
            $DEPLOY/bin/python ez_setup.py
===File icetool, 82203080===
    RET=$?
  rm -f icetool.version
  RET=$?
    rm -f icetool.tgz
  wget "$URL" &>/dev/null
  rm -f hosts
    wget "$ICETOOL_URL" &>/dev/null
    wget "$URL"  &>/dev/null
    RET=$?
      wget "$URL"  &>/dev/null
      RET=$?
  wget "$ICETOOL_VERSION_URL"  >/dev/null 2>&1
      rm -f "$PKG"
  RET=$?
    rm -f "$APK"
===File soundcloud.sh, 82259542===
pages=`wget "$1" -q --user-agent 'Mozilla/5.0' -O - | tr '"' "\n" | grep "tracks?page=" | cut -d "=" -f 2 | sort -nu | tail -n 1`

	url=`echo "$songs" | sed -n "$songid"p`;

if [ "$pages" = "1" ]; then
	this=`wget -q --user-agent='Mozilla/5.0' $1 -O -`;
else
	this=`wget -q --user-agent='Mozilla/5.0' $1?page=$page -O -`;
fi
	wget -c -q --user-agent='Mozilla/5.0' -O "$title.mp3" $url;
done
echo "[i] soundcloud.com music downloader by http://360percents.com (wget version)";


===File buildouts.sh, 82354230===
if which wget &> /dev/null; then

    wget https://raw.github.com/seantis/seantis.dir.roadworks/master/buildout/versions.cfg -O versions.cfg
    wget https://raw.github.com/seantis/seantis.dir.roadworks/master/buildout/buildout.cfg -O buildout.cfg
    wget https://raw.github.com/seantis/seantis.dir.roadworks/master/buildout/izug.cfg -O izug.cfg
    wget https://raw.github.com/seantis/seantis.dir.roadworks/master/buildout/develop.cfg -O develop.cfg
fi
===File zabbix_deregister.sh.erb, 82510644===
AUTH=`wget --timeout=15 -q -O- --header="Content-Type: application/json" --post-data='{"jsonrpc":"2.0","method":"user.authenticate","params":{"user":"'"$USER"'","password":"'"$PASSWORD"'"},"id": 1}' "$URL" |sed -n 's/.*"result":"\([a-f0-9]*\)".*/\1/p'`
echo "-> Authenticating..."
GRPS=`wget --timeout=15 -q -O- --header="Content-Type: application/json" --post-data='{"jsonrpc":"2.0","method":"hostgroup.get","params":{"filter":{"name": ["'"$GROUP"'"]}},"id": 1,"auth":"'"$AUTH"'"}' "$URL" | sed -n 's/.*\[{"groupid":"\([0-9]*\)"}\].*/\1/p'`

#GROUPS is a reserved name for bash

echo "-> Searching hosts..."
wget --timeout=15 -q -O- --header="Content-Type: application/json" --post-data='{"jsonrpc":"2.0","method":"host.get","params":{"output":"extend","groupids":["'"$GRPS"'"],"filter":{"status":[0]}},"id": 1,"auth":"'"$AUTH"'"}' "$URL" | grep -o '"hostid":"[0-9]*"\|"host":"[^"]*"' | tr ' ' '\n' > $LISTAZABBIX
	echo $RESULT |


	RESULT=`wget --timeout=15 -q -O- --header="Content-Type: application/json" --post-data='{"jsonrpc":"2.0","method":"host.update","params":{"hostid": "'"$ID"'","status": 1},"auth":"'"$AUTH"'","id":1}' "$URL"`
#RESULT=`wget --timeout=15 -q -O- --header="Content-Type: application/json" --post-data='{"jsonrpc":"2.0","method":"host.delete","params":['"$DEL"'],"id": 1,"auth":"'"$AUTH"'"}' "$URL"`

###### IF YOU WANT TO DELETE THE MACHINE, USE THE LINE BELOW
===File oneStack.sh, 82605597===
## 这应该是ubuntu提供的最新的稳定的镜像。
##  expect -c "spawn /usr/bin/scp  yuan@192.168.139.84:/home/yuan/precise-server-cloudimg-amd64-disk1.img .; expect {
#wget http://cloud-images.ubuntu.com/precise/current/precise-server-cloudimg-amd64-disk1.img
glance add name="Ubuntu12.04-amd64" is_public=true container_format=ovf disk_format=qcow2 < precise-server-cloudimg-amd64-disk1.img
## wget http://www.hastexo.com/system/files/user/4/keystone_data.sh_.txt -O keystone_data.sh
## 这个比较有技术含量。通过修改devstack的keystone_data.sh 脚本。实现导入数据。如果你上面的设置都和我一样，那么其实直接运行这个脚本就可以。
## 上面的下载镜像移到这一步，可以去掉以下的步骤
## 安装iscsi客户端、安装rabbitmq
wget http://cloud-images.ubuntu.com/precise/current/precise-server-cloudimg-amd64-disk1.img
chmod +x gen_keystone_data.sh
wget http://onestack.googlecode.com/files/gen_keystone_data.sh -O gen_keystone_data.sh
## 7：设置Iscsi
apt-get install -y tgt ssh w3m unzip wget curl expect
===File http-mon.sh, 82818670===
WGETOPTS="-O- -q -L --no-proxy --bind-address=$bind_address"
CURLOPTS="-o - -Ss -L --interface lo $curl_ipv6_opts"
wget_func() {
}
fi
findhttpclient() {
	# prefer wget (for historical reasons)
	wget $auth $cl_opts "$1"
}
	[ x != "x$test_user" ] &&
		auth="--http-user=$test_user --http-passwd=$test_password"
	auth=""
	cl_opts="$WGETOPTS $test_httpclient_opts"
		*) echo userdefined;;
		curl|wget) echo ${test_httpclient}_func;;  #these are supported
	case "$test_httpclient" in
	if [ "x$CLIENT" != x ]; then
===File postinstall.sh, 83027142===
while true; do
        if [ -f "gotstage3" ]
	wget http://distfiles.gentoo.org/snapshots/portage-latest.tar.bz2 && > gotportage
while true; do
	wget ftp://distfiles.gentoo.org/gentoo/releases/x86/current-stage3/stage3-i686-*.tar.bz2 && > gotstage3
        if [ -f "gotportage" ]

chroot /mnt/gentoo emerge wget 
#Installing vagrant keys
chroot /mnt/gentoo cd /home/vagrant/.ssh
mkdir /mnt/vbox
chroot /mnt/gentoo chmod 600 /home/vagrant/.ssh/authorized_keys
chroot /mnt/gentoo wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O /home/vagrant/.ssh/authorized_keys
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt/vbox
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
===File postinstall.sh, 83027937===
cd /tmp
cd /home/${VEEWEE_USER}/.ssh
mount -o loop VBoxGuestAdditions_$VBOX_VERSION.iso /mnt
chmod 0600  /home/${VEEWEE_USER}/.ssh/*
wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O authorized_keys
tar -xzf rubygems-1.8.5.tgz
wget http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso
tar -xzf ruby-${RUBY_BUILD_VER}.tar.gz
wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-${RUBY_BUILD_VER}.tar.gz
cd /usr/local/src
wget http://ftp.ruby-lang.org/pub/ruby/1.8/ruby-${RUBY_BUILD_VER}.tar.gz
tar -xzf ruby-${RUBY_BUILD_VER}.tar.gz
wget http://rubyforge.org/frs/download.php/74954/rubygems-1.8.5.tgz
#

===File ubuntuCoreSetup.sh, 83239173===
wget -q -O "$core_image" "$core_path"/"$core_image"
  wget -q -O "$core_image" "$core_path"/"$core_image"
  echo "Trying to download $core_path/$core_image ..."
echo "Trying to download $core_path/$core_image ..."
  if [ $? -ne 0 ]; then
if [ $? -ne 0 ]; then
hash wget 2>&- || { echo >&2 "Script requires wget utility but it's not installed."; abort; }
# Verify 'head' is installed

# Verify 'wget' is installed
===File setup.shinc, 83488982===

    wget http://www.pabr.org/sixlinux/sixpair.c
    else
    wget -O QtSixA.tar.gz http://sourceforge.net/projects/qtsixa/files/QtSixA%201.5.1/QtSixA-1.5.1-src.tar.gz
    pushd $rootdir/supplementary/
    mkdir -p $rootdir/supplementary/sixpair/
    else
        wget ${DOWNLOAD_LOC}/linux-headers-rpi/linux-headers-`uname -r`_`uname -r`-2_armhf.deb
        wget ${DOWNLOAD_LOC}/db9-gpio-rpi-dkms_${DB9_VER}_all.deb
        dpkg -i gamecon-gpio-rpi-dkms_${GAMECON_VER}_all.deb
        wget ${DOWNLOAD_LOC}/gamecon-gpio-rpi-dkms_${GAMECON_VER}_all.deb
    tar xfvz QtSixA.tar.gz
        dpkg -i linux-headers-`uname -r`_`uname -r`-2_armhf.deb
        dpkg -i db9-gpio-rpi-dkms_${DB9_VER}_all.deb
    else
===File install_commands_single.sh, 83588514===
	cd ~/Downloads
	wget -c http://download.jetbrains.com/idea/ideaIU-12.1.4.tar.gz
	chmod 777 oab-java.sh
	wget https://github.com/flexiondotorg/oab-java6/raw/0.2.8/oab-java.sh -O oab-java.sh
	cd ~/Downloads/
	wget http://archive.cloudera.com/cdh4/one-click-install/precise/amd64/cdh4-repository_1.0_all.deb
	wget -c http://download.jetbrains.com/idea/ideaIC-12.1.4.tar.gz
	sudo dpkg -i cdh4-repository_1.0_all.deb
}
	cd ~/Downloads
	wget -c http://mirrors.sonic.net/apache/tomcat/tomcat-7/v7.0.50/bin/apache-tomcat-7.0.50.tar.gz
===File provision.sh, 83837837===
    done
         wget "$key" | sudo apt-key add -
wget () {
    command wget -q -O - "$1"
}
    sudo unzip -qq -d "$ELIXIR_DIR" "$ELIXIR_DOWNLOAD"

    for key in "$@"; do
  sudo rm -rf "$CARTON_DIR"
    wget "http://dl.dropbox.com/u/4934685/elixir/v${ELIXIR_VERSION}.zip" > "$ELIXIR_DOWNLOAD"
  wget "https://github.com/rejeep/carton/archive/v${CARTON_VERSION}.tar.gz" | \
    sudo tar xz -C /opt
    ELIXIR_DOWNLOAD="$(tempfile)"
===File puppet-enterprise-http.erb, 83862019===
else
  echo "To install Puppet Enterprise using HTTP, wget or curl are required"
  echo "Error: could not find wget or curl on the remote system."
  exit 1

if which wget >/dev/null; then
# Figure out if we have wget or curl
elif which curl >/dev/null; then
  http_get="wget --output-document=- --quiet"
===File getTilewithPathAndRowOnly.sh, 84032640===
			#wget ftp://ftp.glcf.umd.edu/glcf/Landsat/WRS2/p020/r032/p020r032_7dx20010821.ETM-GLS2000/* && echo exists || echo not exist
			#elaborate on code to check if directory is valid.
			break
			#wget --progress=dot $TILEDOWNLOADPATH && echo exist || echo not exist
			#quiet
#wget -r -nd --no-parent -P $TEMPDIR $TILEDOWNLOADPATH 
cd $TEMPDIR/
		
			wget -r -nd --no-parent -P $TEMPDIR $TILEDOWNLOADPATH 
wget -rq -nd --no-parent -P $TEMPDIR $TILEDOWNLOADPATH 
#
===File releasetest, 84405564===
wget http://localhost:8800/blog/index || exit
wget http://localhost:8800/blog/entry || exit

cd $WORKDIR

wget http://localhost:8800/blog/show/1 || exit


wget http://localhost:8800/blog/show/2 || exit

if ! grep "$RANDOMTXT" show1 >/dev/null 2>&1; then exit; fi
# update check
wget http://localhost:8800/blog/show/1 -O show1 || exit
===File run.sh, 84578717===
fi
                        wget http://phantomjs.googlecode.com/files/$f
                        d="${f%.tar.bz2}"
                        tar xf $f
if [ ! -r $jq ]; then
        wget http://code.jquery.com/jquery-1.8.3.min.js -O $jq
fi
        wget http://netdna.bootstrapcdn.com/twitter-bootstrap/2.2.2/css/bootstrap-combined.min.css -O $bscss
if [ ! -r $bscss ]; then
fi
if [ ! -r $bsjs ]; then
        wget http://netdna.bootstrapcdn.com/twitter-bootstrap/2.2.2/js/bootstrap.min.js  -O $bsjs
                        wget http://phantomjs.googlecode.com/files/$f
                        d="${f%.zip}"
                        unzip $f
===File plivo_install.sh, 84649834===
            cd $DEPLOY/source
			    wget http://www.python.org/ftp/python/$LAST_PYTHON_VERSION/Python-$LAST_PYTHON_VERSION.tgz
			    cd source
			    tar -xvf Python-$LAST_PYTHON_VERSION.tgz
			    cd source
            wget --no-check-certificate $PLIVO_SETUP_SCRIPT
        yum -y update
            wget --no-check-certificate https://github.com/plivo/plivoframework/raw/master/scripts/ez_setup.py
            cd $DEPLOY/source
            $DEPLOY/bin/python ez_setup.py
        yum -y install autoconf automake bzip2 cpio curl curl-devel curl-devel expat-devel fileutils gcc-c++ gettext-devel gnutls-devel libjpeg-devel libogg-devel libtiff-devel libtool libvorbis-devel make ncurses-devel nmap openssl openssl-devel openssl-devel perl patch unixODBC unixODBC-devel unzip wget zip zlib zlib-devel
			    wget http://www.python.org/ftp/python/$LAST_PYTHON_VERSION/Python-$LAST_PYTHON_VERSION.tgz
			    tar -xvf Python-$LAST_PYTHON_VERSION.tgz
        yum -y install python-setuptools python-tools gcc python-devel zlib-devel readline-devel which sox bison
            $DEPLOY/bin/python ez_setup.py
===File install.sh, 85084624===
  if has "wget"; then
if ! has "curl"; then
    curl() {
    # Emulate curl with wget
    }
      ARGS=${ARGS/-o /-O }
    exit 1
    echo >&2 "You need git, curl or wget to install nvm"
  else
    if ! has "curl"; then
      exit 1
      echo >&2 "You need curl or wget to install nvm"
      wget $ARGS
===File mapnik-osm-updater.sh, 85561040===
	    done
		wget_out=`wget -q  --level=0 -O - "$geofabrik_basedir/$sub_dir" | grep 'DIR' | grep -v Parent `
		new_dirs="$new_dirs `echo "$wget_out" | perl -ne 'm,href="(.*)/", && print "'$sub_dir'/$1 "'`"
	    --no-directories --directory-prefix=$planet_dir/
		#echo "Get dirs in Subdir: $sub_dir"

	sub_dirs=`echo "$wget_out" | perl -ne 'm,href="(.*)/",;print "$1 "'`
	wget_out=`wget --no-convert-links -q  --level=0 -O - "http://download.geofabrik.de/osm" | grep DIR | grep -v -i Parent `
		perl -ne 'm/.*href="([^"]+)\.osm.bz2"/;print "	'$sub_dir/'$1\n"'
	# Find all Subdirs in the first 3 levels
                # echo "WGET: '$wget_out'"
	for sub_dir in "" $sub_dirs ; do
	    wget -q  --level=0 -O - "$geofabrik_basedir/$sub_dir" | grep 'OpenStreetMap data' | \
	wget -v --mirror "$planet_source_file" \
	test -n "$verbose" && echo "----- Mirroring planet File $planet_source_file"
===File fast-sync.sh, 85574327===
http://xml.resource.org/public/rfc/bibxml3/
#wget -q -P draft -r -l 1 -A .xml -nd -N
}
  wget -q -nd -N -P "$prefix" -i -
# URLs of the files we actually want from that, then suck down those
# files.   We use wget options which should (in theory) prevent us from
# actually sucking down anything of which we have an up-to-date copy.
  wget -q -nd -N -P "$prefix" "$url"
  url="$2"
  sed -n '/^References/,${; /reference\..*\.xml$/s/^ *[0-9]*\. *//p; }' |
  echo "<BASE HREF=\"$url\">" |
#
http://xml.resource.org/public/rfc/bibxml/
#wget -q -P rfc   -r -l 1 -A .xml -nd -N
===File zpx1_p5512_su.sh, 85641072===
yum -y install sudo wget vim make zip unzip git chkconfig

# Install some standard utility packages required by the installer and/or ZPX.

cp ec/build/config_packs/centos_6_3/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo
wget --no-check-certificate https://raw.githubusercontent.com/zcworld/ZPX-installer-Beta/master/Centos/PHP5.5.12-X86_4/Files/suhosin.so -O /usr/lib64/php/modules/suhosin.so
wget https://raw.githubusercontent.com/zcworld/ZPX-installer-Beta/master/Centos/PHP5.5.12-X86_4/Files/suhosin.ini  -O /etc/php.d/suhosin.ini 



wget  --no-check-certificate https://raw.githubusercontent.com/zcworld/ZPX-installer-Beta/master/Centos/repos/iuscommunity.repo -O /etc/yum.repos.d/iuscommunity.repo
fqdn=`/bin/hostname`
publicip=`wget -qO- http://api.zpanelcp.com/ip.txt`
===File kafka.sh, 85918801===
url=archive.apache.org/dist/kafka
wget https://$url/$version/$release.tgz.asc
tar -xvf $release.tgz
wget https://$url/$version/$release.tgz.sh1
wget https://$url/$version/$release.tgz.sh2
wget https://$url/$version/$release.tgz
wget https://$url/$version/$release.tgz.md5
===File linux, 85993033===
  sudo dpkg -i /tmp/vagrant_1.6.2_x86_64.deb
fancy_echo "Installing vagrant ..."
  wget -O /tmp/vagrant_1.6.2_x86_64.deb https://dl.bintray.com/mitchellh/vagrant/vagrant_1.6.2_x86_64.deb
  sudo dpkg -i /tmp/sublime-text_build-3062_amd64.deb
  wget -O /tmp/sublime-text_build-3062_amd64.deb http://c758482.r82.cf2.rackcdn.com/sublime-text_build-3062_amd64.deb
fancy_echo "Installing sublime-text ..."
fancy_echo "Installing rcm, to manage your dotfiles ..."
  sudo dpkg -i /tmp/chefdk_0.1.0-1_amd64.deb
  wget -O /tmp/chefdk_0.1.0-1_amd64.deb https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/13.10/x86_64/chefdk_0.1.0-1_amd64.deb
fancy_echo "Installing Chef developer kit ..."
  wget -O /tmp/rcm_1.2.3-1_all.deb https://thoughtbot.github.io/rcm/debs/rcm_1.2.3-1_all.deb
  sudo dpkg -i /tmp/rcm_1.2.3-1_all.deb
  sudo aptitude update
  wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc -O- | sudo apt-key add -
  sudo bash -c "echo 'deb http://download.virtualbox.org/virtualbox/debian trusty contrib' > /etc/apt/sources.list.d/virtualbox.list"
===File functions.sh, 86044914===
            ;;
        wget)
            function downloader { wget "$1"; }
    [ "$downloader" == "" ] && which curl >&/dev/null && downloader="curl"
    [ "$downloader" == "" ] && which wget >&/dev/null && downloader="wget"
    case $downloader in
            ;;
            error "no downloader found (either curl or wget)"
            ;;
        *)
===File functions.sh, 86047427===
            ;;
        wget)
            function downloader { wget "$1"; }
    [ "$downloader" == "" ] && which curl >&/dev/null && downloader="curl"
    [ "$downloader" == "" ] && which wget >&/dev/null && downloader="wget"
    case $downloader in
            ;;
            error "no downloader found (either curl or wget)"
            ;;
        *)
===File retrieve-binaries, 86178644===

wget http://go-cli.s3.amazonaws.com/builds/cf-windows-386.exe -P out
mkdir -p out release
wget http://go-cli.s3.amazonaws.com/builds/cf-linux-amd64 -P out
wget http://go-cli.s3.amazonaws.com/builds/cf-darwin-amd64 -P out
wget http://go-cli.s3.amazonaws.com/builds/cf-windows-amd64.exe -P out
wget http://go-cli.s3.amazonaws.com/builds/cf-linux-386 -P out
===File install_portaudio.sh, 86253632===
    echo "Could not find portaudio tarball pa_stable_v19_20111121.tgz"

   wget -T 10 -t 3 http://www.portaudio.com/archives/pa_stable_v19_20111121.tgz
#(always assuming that you installed XCode, wget and 
#All this should make it compile fine for x86_64 under MacOS 10.7 
        echo "You can also just download pa_stable_v19_20111121.tgz from"
    if ! which wget >&/dev/null; then
        echo "This script requires you to first install wget"
    echo "Trying to download it via wget!"
    
#the Linux environment stuff on MacOS)

===File update-rsa-js, 86263334===
echo "// ==== File: rng.js" >> rsa.js
wget --quiet -O - http://www-cs-students.stanford.edu/~tjw/jsbn/rng.js >> rsa.js
echo "// ==== File: rsa.js" >> rsa.js
wget --quiet -O - http://www-cs-students.stanford.edu/~tjw/jsbn/rsa.js >> rsa.js
echo "// ==== File: jsbn.js" >> rsa.js
wget --quiet -O - http://www-cs-students.stanford.edu/~tjw/jsbn/jsbn.js >> rsa.js
echo "// ==== File: prng4.js" >> rsa.js
wget --quiet -O - http://www-cs-students.stanford.edu/~tjw/jsbn/prng4.js >> rsa.js

echo "// ==== File: base64.js" >> rsa.js
wget --quiet -O - http://www-cs-students.stanford.edu/~tjw/jsbn/base64.js >> rsa.js
===File zpx1_p5512_su.sh, 86301047===
yum -y install sudo wget vim make zip unzip git chkconfig

# Install some standard utility packages required by the installer and/or ZPX.

cp ec/build/config_packs/centos_6_3/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo
wget --no-check-certificate https://raw.githubusercontent.com/zcworld/ZPX-installer-Beta/master/Centos/PHP5.5.12-X86_4/Files/suhosin.so -O /usr/lib64/php/modules/suhosin.so
wget https://raw.githubusercontent.com/zcworld/ZPX-installer-Beta/master/Centos/PHP5.5.12-X86_4/Files/suhosin.ini  -O /etc/php.d/suhosin.ini 



wget  --no-check-certificate https://raw.githubusercontent.com/zcworld/ZPX-installer-Beta/master/Centos/repos/iuscommunity.repo -O /etc/yum.repos.d/iuscommunity.repo
fqdn=`/bin/hostname`
publicip=`wget -qO- http://api.zpanelcp.com/ip.txt`
===File install.sh, 86334399===
	apt-get -y install wget &>> $INSTALLLOG || OwnError "Unable To Install Wget"
fi

# Checking Wget
	echo -e "\033[31mWget Command Not Found\e[0m" | tee -ai $INSTALLLOG
	echo -e "\033[34mInstalling Wget, Please Wait...\e[0m" | tee -ai $INSTALLLOG
if [ ! -x  /usr/bin/wget ]
then
===File install.sh, 86389141===
  if has "wget"; then
if ! has "curl"; then
    curl() {
    # Emulate curl with wget
    }
      ARGS=${ARGS/-o /-O }
    exit 1
    echo >&2 "You need git, curl or wget to install nvm"
  else
    if ! has "curl"; then
      exit 1
      echo >&2 "You need curl or wget to install nvm"
      wget $ARGS
===File autogen.sh, 14470925===
		opts="-O" 
    for __cmd in wget curl fetch ; do
	case ${__cmd} in
	    wget)
	$VERBOSE_ECHO "Checking for command ${__cmd}"

# TODO - should make sure wget/curl exist and/or work before trying to
# use them.
    ret=1
===File docbookPrep.sh, 14604842===
if [ ${method} -eq ${METHOD_NONE} ]; then
[ $? -eq 0 ] && method=${METHOD_WGET}
curl=`which curl`
METHOD_WGET=1
METHOD_NONE=0

WGET_OPTS='-cq'
  esac
CURL_OPTS='-C - -Os'
    ${METHOD_CURL}) ${curl} ${CURL_OPTS} "${url}" ;;
    ${METHOD_WGET}) ${wget} ${WGET_OPTS} "${url}" ;;
method=${METHOD_NONE}
  echo "unable to locate wget or curl. cannot continue"
  exit 1
wget=`which wget`
METHOD_CURL=2
===File centos-setup.sh, 14846313===
tar xzvf git-1.7.1.tar.gz
wget http://download.lighttpd.net/lighttpd/releases-1.4.x/lighttpd-1.4.26.tar.gz
tar xzvf lighttpd-1.4.26.tar.gz
gem install mongrel_cluster --no-rdoc --no-ri
tar xzvf ruby-1.9.2-p0.tar.gz
wget ftp://ftp.ruby-lang.org//pub/ruby/1.9/ruby-1.9.2-p0.tar.gz
wget http://kernel.org/pub/software/scm/git/git-1.7.1.tar.gz
cd ../
source .bash_rc 
===File download.sh, 14888857===
########################################################
    wget -O "${save_location}" "${__download}" 2>&1 | sed -u 's/.* \([0-9]\+%\)\ \+\([0-9.]\+.\) \(.*\)/\1\n# Speed: \2\/s, ETA: \3/' | zenity --progress --title="Downloading" --window-icon=${lauf_app_icon} --width=${lauf_width} --auto-close --auto-kill
    _download=$lauf_exec2
    lauf_notify "Download" "${download} Complete!"
    lauf_notify "Download" "${download} Complete!"
    save_location=$(zenity --file-selection --save --window-icon="${lauf_app_icon}" --title="${lauf_app_name} - Where do you want to save the download?" $icon)
    wget -O "${save_location}" "${__download}" 2>&1 | sed -u 's/.* \([0-9]\+%\)\ \+\([0-9.]\+.\) \(.*\)/\1\n# Speed: \2\/s, ETA: \3/' | zenity --progress --title="Downloading" --window-icon=${lauf_app_icon} --width=${lauf_width} --auto-close --auto-kill
# wget #################################################
# Dependencies:                                        #
===File tweet.sh, 14888858===
########################################################
        wget -qO - --post-data="status=${tweet}" --http-user="$tweet_user" --http-password="$tweet_pass" http://api.supertweet.net/statuses/update.xml
        [ $count -gt 140 ] && zenity --error $lauf_app_icon --title=${lauf_app_name} --text="Your tweet was $count characters, the maximum is 140 characters!\nYour TWEET was NOT sent!" && exit
    lauf_notify "${lauf_app_name} - Twitter" "Status changed to: ${tweet}"
    [ $count -gt 140 ] && zenity --error $lauf_app_icon --title=${lauf_app_name} --text="Your tweet was $count characters, the maximum is 140 characters!\nYour TWEET was NOT sent!" && return
        lauf_notify "${lauf_app_name} - Twitter" "Status changed to: ${tweet}"
    wget -qO - --post-data="status=${tweet}" --http-user="$tweet_user" --http-password="$tweet_pass" http://api.supertweet.net/statuses/update.xml
# wget, supertweet.net account                                                 #
# Dependencies:                                        #
===File phpvms_install.sh, 15162906===

wget -q $DOWNLOAD_URL"/"$FILE_NAME --output-document $TMP_PATH"/"$FILE_NAME
echo "Downloading files..."
	   LATEST_VERSION=`wget -q --output-document - $DOWNLOAD_URL/release.version`
	   CURRENT_VERSION=`cat $VERSION_FILE`
  	   FILE_NAME="phpvms.update.tar.gz"
	   LATEST_VERSION=`wget -q --output-document - $DOWNLOAD_URL/beta.version`
	   FILE_NAME="phpvms.beta.tar.gz"
	   CURRENT_VERSION=`cat $VERSION_FILE`
===File bootstrap-haiku.sh, 15189500===
	url="$(grep -m1 'http:.*nightly-.*gcc2hybrid-raw.zip' "$tf" | sed 's/.*href="//;s/".*//')"
	wget -O $tf http://haiku-files.org/raw/ >/dev/null 2>&1 || error "wget error"
	tf=/tmp/haiku-files.org_raw_$$
	wget -c "$url" || error "cannot download latest revision"
	#fi
	log "Downloading latest revision: $file"
===File cassandra-ec2-init-remote.sh, 15272569===
DEFAULT_CASSANDRA_URL="http://mirror.cloudera.com/apache/cassandra/0.6.4/apache-cassandra-0.6.4-bin.tar.gz"
  # configure the cassandra.in.sh script based on instance type
  SETTINGS_FILE=$CASSANDRA_HOME_WITH_VERSION/bin/cassandra.in.sh
  INSTANCE_TYPE=`wget -q -O - http://169.254.169.254/latest/meta-data/instance-type`
PUBLIC_HOSTNAME=`wget -q -O - http://169.254.169.254/latest/meta-data/public-hostname`
CASSANDRA_HOME_ALIAS=/usr/local/apache-cassandra
            case $INSTANCE_TYPE in
            INSTANCE_TYPE=`wget -q -O - http://169.254.169.254/latest/meta-data/instance-type`
            fi
===File store-escaped-characters.sh, 15274906===
  wget -q -O- --post-data= "http://127.0.0.1:${server_port}/jscoverage-shutdown" > /dev/null
  wait $server_pid
wget --post-file=store-escaped-characters.json -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
shutdown() {

json_cmp store-escaped-characters.expected.json DIR/jscoverage.json
cat store-escaped-characters.expected.json | sed s/1,/2,/g > TMP
wget --post-file=store-escaped-characters.json -q -O- http://127.0.0.1:8080/jscoverage-store > /dev/null
===File ctools-installer.sh, 15312963===
download_file () {
for reqcmd in unzip wget

	mkdir -p "$WGET_TARGET_DIR"
	if [ ! -z "$OFFLINE_REPOSITORY" -a -e "$OFFLINE_REPOSITORY/$BRANCH/$WGET_CTOOL/$WGET_FILE" ]; then
wget --no-check-certificate 'https://raw.github.com/pmalves/ctools-installer/master/ctools-installer.sh' -P .tmp -o /dev/null

	WGET_CTOOL="$1"
	WGET_URL="$2"
		cp "$OFFLINE_REPOSITORY/$BRANCH/$WGET_CTOOL/$WGET_FILE" "$WGET_TARGET_DIR"
		echo $ECHO_FLAG "Found $WGET_CTOOL in offline repository. "

do
	WGET_TARGET_DIR="$4"
	WGET_FILE="$3"
===File uplink.sh, 15376263===
		http://phantom002.sakura.ne.jp/bbs2/$page 2>/dev/null
		http://konachan.com/post/popular_recent?period=1$1 2>/dev/null
	wget -o /dev/null -q -O $RAMDISK_DIR/typemoon_wallpaper_bbs.html \
	wait
	wget -nc -i $RAMDISK_DIR/wallpaper_link \
	echo "there are $(wc -l $RAMDISK_DIR/wallpaper_link | awk '{print $1}') files will be download"
		-P $WALLPAPER_DIR/ 2>/dev/null
	wget -o /dev/null -q -O $RAMDISK_DIR/konachan_wallpaper.html \

===File stresstest.sh, 15388286===
    data="$(wget -O- --post-data="session=${session}"                         \
                 --quiet "http://localhost:${PORT}/")"
    wget -O/dev/null --post-data="session=${session}&keys=${keys// /}"        \
                     --quiet "http://localhost:${PORT}/"
    [ -z "$i" ] && break
    local keys="$(echo -n "${i}" | od -tx1 -An -w1000)"
  local session="${data##*\"session\":\"}"
  local data="$(wget -O- --post-data='' --quiet "http://localhost:${PORT}/")"
session() {
===File functions.sh, 15496648===

    if [ ! -z "$WGET_RATE" ] ; then
    _UFILE=${3:-${_FILE##*=}}
function smart_wget() {
# usage:  smart_wget URL DESTDIR [DESTFILE]
    # Remove url garbage from filename that would not be removed by wget
    _FILE=`basename $1`
    _EXTRACT_UDIR=`unix_path $3`
    smart_wget $1 $2 $4
function wget_unpacked() {
# usage:  wget_unpacked URL DOWNLOAD_DIR UNPACK_DIR [DESTFILE]

            wget --passive-ftp -c $1 -P $TMP_UDIR
        fi
            wget --passive-ftp -c $1 -P $TMP_UDIR --limit-rate=$WGET_RATE
        else
===File create_cross_mingw.sh, 15496660===
            GCC_LANGS=${GCC_LANGS}",java"
            wget_unpacked "$GCC_OBJC_SRC_URL" "$DOWNLOAD_DIR" "$SRCDIR"
        fi
            GCC_LANGS=${GCC_LANGS}",objc"
        TARGET_FILE=${TARGET_FILE/-core-/-}
        wget_unpacked "$GCC_CORE_SRC_URL" "$DOWNLOAD_DIR" "$SRCDIR" $TARGET_FILE
        fi
            wget_unpacked "$GCC_G77_SRC_URL" "$DOWNLOAD_DIR" "$SRCDIR"
            GCC_LANGS=${GCC_LANGS}",f77"
            wget_unpacked "$GCC_JAVA_SRC_URL" "$DOWNLOAD_DIR" "$SRCDIR"
        fi
            wget_unpacked "$GCC_GPP_SRC_URL" "$DOWNLOAD_DIR" "$SRCDIR"
            GCC_LANGS=${GCC_LANGS}",c++"
        fi
        GCC_SRC_DIR=$_EXTRACT_UDIR
===File utils.sh, 15499832===
			torrdown=`cat $piratelinks |sed -n "${tname}p"`
			wget -q $torrdown -P $torrentdir
			echo -e \\n"Torrent saved to $torrentdir"\\n
	#downloads first page of searched item and push to file
	
	wget --quiet --continue $tpbsite/search/$sstring/$page/ -O $piratetmp
				--output-document=$piratedetails		
				wget --quiet --continue http://thepiratebay.org$funky \
				awk '{gsub(/href="/,""); print}' |cut -d '"' -f1 |sed -n "${dname}p"`
===File lib.sh, 15506700===
#/// \param _t CHARACTER(3) to language
#/// \param _x INTEGER wget timeout
sp_f_wbb() {
#/// URL http://ajax.googleapis.com/ajax/services/language/translate?v=1.0
  | ${sp_b_sede} -n 's/[[:alnum:]": {}]+"translatedText":"([^"]+)".*/\1/p' \
  local _r=""
  _r=$(wget -T ${_x} -qO- "${sp_g_gtu}&q=\"${_s}\"&langpair=${_f}|${_t}" \
#/// Calls Google translate api by wget
#///
===File house_use_bkgnd.sh, 15548163===

wget -O $TEMP/main_chart.png -q $mainChart
wget -O $TEMP/electric_chart.png -q $electricChart
### download charts
wget -O $TEMP/water_chart.png -q $waterChart 
===File create-elastic-grid-image-remote, 15689621===
wget http://ftp.freshrpms.net/pub/freshrpms/fedora/linux/4/freshrpms-release/freshrpms-release-1.1-1.fc.noarch.rpm
yum -y install rsync lynx screen httpd rlwrap
cd /usr/local/elastic-grid-$EG_VERSION
wget -nv http://elastic-grid-distributions.s3.amazonaws.com/elastic-grid-$EG_VERSION-bin.tar.gz
sh java.bin
wget -nv -O java.bin $JAVA_BINARY_URL
cd /usr/local
tar xzf elastic-grid-$EG_VERSION-bin.tar.gz
rpm -i freshrpms-release-1.1-1.fc.noarch.rpm
===File eg-init, 15689623===
source /tmp/user-data

wget -q -O - http://169.254.169.254/latest/user-data | tr ',' '\n' > /tmp/user-data
wget -q -O - http://169.254.169.254/2007-01-19/meta-data/public-hostname | tr ',' '\n' > /tmp/public-hostname
wget -q -O - http://169.254.169.254/2007-01-19/meta-data/security-groups | tr ',' '\n' > /tmp/security-groups
===File rebundle-ubuntu_11.04-rl-cloudstack.sh, 15701438===
wget "http://uec-images.ubuntu.com/releases/$codename/release/$image.tar.gz" -O "$download_dest/$image.tar.gz"
cd "$download_dest"
wget "http://mirror.rightscale.com/rightlink/$rightscale_release/ubuntu/rightscale_$rightscale_release-ubuntu_10.04-$arch.deb" -O "$mp_chroot/tmp/rightscale_$rightscale_release-ubuntu_10.04-$arch.deb"
tar zxvf "$download_dest/$image.tar.gz"
# install rightscale/rightlink
chroot "$mp_chroot" chmod +x /etc/init.d/rightimage
# install rightimage service
chroot "$mp_chroot" wget -q -O /etc/init.d/rightimage https://raw.github.com/rightscale/rightimage/master/cookbooks/rightimage/files/default/rightimage
chroot "$mp_chroot" dpkg -i "/tmp/rightscale_$rightscale_release-ubuntu_10.04-$arch.deb"
===File build.sh, 15726541===
  fi
    wget -q http://googletest.googlecode.com/files/gtest-1.1.0.tar.bz2 && succ || fail
    pushd "$INSTALL_DIR" >/dev/null 2>&1
    wget -q http://prdownloads.sourceforge.net/boost/boost-build-2.0-m12.tar.bz2 >>$LOG 2>&1 && succ || fail
    pushd "$INSTALL_DIR" >/dev/null 2>&1
# Requires:  wget, bash, gnu core-utils
#
#            Unless Boost.Build and GoogleTest are installed, an internet
  fi
===File wget_ftp_mirror, 15745322===



wget -c -m -P$MIRROR_DIR --dot-style=binary $FTP_SITE1 
#wget -c -m -P/mnt/tmp --dot-style=binary $FTP_SITE3 
#wget -c -m -P/mnt/tmp --dot-style=binary $FTP_SITE2
===File autogen.sh, 15749947===

# TODO - should make sure wget/curl exist and/or work before trying to
# use them.
	$VERBOSE_ECHO "Checking for command ${__cmd}"
	case ${__cmd} in
    for __cmd in wget curl fetch ; do
		opts="-O" 
	    wget)
    ret=1
===File installrails.sh, 15819001===

    adduser --no-create-home --disabled-password --disabled-login couchdb
    tar zxvf apache-couchdb-0.9.0.tar.gz
    wget http://linorg.usp.br/apache/couchdb/0.9.0/apache-couchdb-0.9.0.tar.gz
apt-get -y install curl wget vim vim-rails
apt-get -y install git-doc git-svn git-gui gitk
	wget -q -O - http://apt.brightbox.net/release.asc | apt-key add -
	apt-get update
	echo "deb http://apt.brightbox.net hardy main" > /etc/apt/sources.list.d/brightbox.list
===File save-webpage.sh, 15831143===
# PURPOSE: Save a webpage and all the files necessary to display properly.
#	   Note: at the moment this doesn't work very well... 
#	   The script is merely a shortcut to wget with appropriate options.
done
    wget -c -O $out $url
wget -c -H -k -K -p -P $dir --user "$username" --password "$password" "$1"


    mkdir -p $(dirname $out)
===File ruby.sh, 15849853===
      tar xfvz ruby-1.9.3-p429.tar.gz
      wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p429.tar.gz
      # Download and install Ruby 2.0.0
sudo apt-get install -y git-core wget curl gcc checkinstall libxml2-dev libxslt-dev sqlite3 libsqlite3-dev libcurl4-openssl-dev libc6-dev libssl-dev libmysql++-dev make build-essential zlib1g-dev libicu-dev redis-server nodejs openssh-server libreadline-dev libyaml-0-2 libyaml-dev libncurses5-dev zlib1g-dev libgdbm-dev 
      # Download and install Ruby 1.9.3
# Install the requisite Ubuntu packages
      wget ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p195.tar.gz
      tar xfvz ruby-2.0.0-p195.tar.gz

===File main.sh, 15921563===
sudo apt-get install -y --force-yes wget eagle gresistor gimp filezilla thunderbird git-cola eclipse glade audacity vlc cheese wine screen irssi vim vim-common vim-gnome vim-gui-common vim-runtime git git-gui git-doc google-chrome-beta google-talkplugin nautilus-dropbox sublime-text spotify-client-qt ubuntu-restricted-extras gnoduino iptraf python-gtk2 python-glade2 curl openjdk-6-jre wireshark compizconfig-settings-manager touchpad-indicator gtk2-engines-pixbuf nodejs python-wxgtk2.8 python-wxtools wx2.8-i18n tree firefox curl libmysqlclient-dev build-essential openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake libtool bison subversion netbeans tuxguitar rosegarden


###Install xampp###
sudo dpkg -i libavutil50_0.6.2-1ub ntu1.1_i386.deb libavformat52_0.6.2-1ubuntu1.1_i386.deb libavcodec52_0.6.2-1ubuntu1.1_i386.deb
wget http://adamtesting.netii.net/deb_pack/libavutil50_0.6.2-1ubuntu1.1_i386.deb http://adamtesting.netii.net/deb_pack/libavformat52_0.6.2-1ubuntu1.1_i386.deb http://adamtesting.netii.net/deb_pack/libavcodec52_0.6.2-1ubuntu1.1_i386.deb

sudo tar xvfz xampp-linux-1.8.0.tar.gz -C /opt
wget http://downloads.sourceforge.net/project/xampp/BETAS/xampp-linux-1.8.0.tar.gz
===File freenet.sh, 16219663===
	ports_pkgs_utils__configure_port wget "$darknets_freenet__apps_folder"
	ports_pkgs_utils__compile_port wget
		# wget is used by Freenet's update.sh, and therefore by scripts/maintenance.sh.


===File autogen.sh, 16220385===

# TODO - should make sure wget/curl exist and/or work before trying to
# use them.
	$VERBOSE_ECHO "Checking for command ${__cmd}"
	case ${__cmd} in
    for __cmd in wget curl fetch ; do
		opts="-O" 
	    wget)
    ret=1
===File 5.16.sh, 16225372===
fi
	wget http://patches.cross-lfs.org/dev/gcc-4.6.2-mips_fix-1.patch
then
fi
	wget ftp://gcc.gnu.org/pub/gcc/releases/gcc-4.6.2/gcc-4.6.2.tar.bz2
then
fi
	wget http://patches.cross-lfs.org/dev/gcc-4.6.2-specs-1.patch
then
===File 5.14.sh, 16225378===
fi
	wget http://patches.cross-lfs.org/dev/gcc-4.6.2-mips_fix-1.patch
then
fi
	wget ftp://gcc.gnu.org/pub/gcc/releases/gcc-4.6.2/gcc-4.6.2.tar.bz2
then
fi
	wget http://patches.cross-lfs.org/dev/gcc-4.6.2-specs-1.patch
then
===File 6.10.sh, 16225399===
fi
	wget http://patches.cross-lfs.org/dev/gcc-4.6.2-mips_fix-1.patch
then
fi
	wget ftp://gcc.gnu.org/pub/gcc/releases/gcc-4.6.2/gcc-4.6.2.tar.bz2
then
fi
	wget http://patches.cross-lfs.org/dev/gcc-4.6.2-specs-1.patch
then
===File install_vendors.sh, 16286776===
    svn co http://framework.zend.com/svn/framework/standard/trunk/library/Zend/Validate vendor/Zend/Validate
    wget http://framework.zend.com/svn/framework/standard/trunk/library/Zend/Exception.php -O vendor/Zend/Exception.php
    wget http://framework.zend.com/svn/framework/standard/trunk/library/Zend/Loader.php -O vendor/Zend/Loader.php
    wget http://framework.zend.com/svn/framework/standard/trunk/library/Zend/Uri.php -O vendor/Zend/Uri.php
fi
===File functions-for-tests.sh, 16332965===
(into exclude maybe be all lisps, and also: WGET EMACS SLIME REBUILD)"
exit 0
run-tests [ --exclude-wget | --exclude-emacs | --exclude-modern-lisps | --exclude-young-lisps | --exclude-obsolete-lisps | --exclude-rebuild | --exclude=\"...\" ]
echo "Using: 
run-tests --exclude-emacs --exclude-obsolete-lisps --exclude=\"WGET CCL\"
Example:
===File centos_l2tp.sh, 16347102===
cd /ztmp/l2tp
cd /ztmp/l2tp
tar zxvf rp-l2tp-0.4.tar.gz
wget http://mirror.zeddicus.com/sources/xl2tpd-1.2.4.tar.gz
tar zxvf xl2tpd-1.2.4.tar.gz
wget http://mirror.zeddicus.com/sources/rp-l2tp-0.4.tar.gz
cd /ztmp/l2tp
wget http://www.openswan.org/download/openswan-2.6.24.tar.gz
tar zxvf openswan-2.6.24.tar.gz
