Text,Selector,Metric,Present
"Select all <a> elements that are inside <div class=""featured"">. These queries work the same way as CSS stylesheets or jQuery. They are called CSS selectors, and are quite powerful.",div.featured a,1,TRUE
"Select all <a> elements that are inside <div class=""featured"">. These queries work the same way as CSS stylesheets or jQuery. They are called CSS selectors, and are quite powerful.",div.featured a,2,TRUE
"Select all <a> elements that are inside <div class=""featured"">. These queries work the same way as CSS stylesheets or jQuery. They are called CSS selectors, and are quite powerful.",div.featured a,3,TRUE
"Select all <a> elements that are inside <div class=""featured"">. These queries work the same way as CSS stylesheets or jQuery. They are called CSS selectors, and are quite powerful.",div.featured a,4,TRUE
"Select all <a> elements that are inside <div class=""featured"">. These queries work the same way as CSS stylesheets or jQuery. They are called CSS selectors, and are quite powerful.",div.featured a,5,FALSE
"Select all <a> elements that are inside <div class=""featured"">. These queries work the same way as CSS stylesheets or jQuery. They are called CSS selectors, and are quite powerful.",div.featured a,6,TRUE
"Select the first <strong> element inside <div id=""footer_inner"">.",div#footer_inner strong,1,FALSE
"Select the first <strong> element inside <div id=""footer_inner"">.",div#footer_inner strong,2,TRUE
"Select the first <strong> element inside <div id=""footer_inner"">.",div#footer_inner strong,3,FALSE
"Select the first <strong> element inside <div id=""footer_inner"">.",div#footer_inner strong,4,TRUE
"Select the first <strong> element inside <div id=""footer_inner"">.",div#footer_inner strong,5,FALSE
"Select the first <strong> element inside <div id=""footer_inner"">.",div#footer_inner strong,6,TRUE
"To obtain the links we will use a selector that captures the <a>elements inside each <div>with class video-summary-data. Since there are several <a>elements for each video we will filter them to include only those that point to a URL that begins with /video, which is unique to the individual video pages. The CSS selector that implements the above criteria is div.video-summary-data a[href^=/video]. The following snippet of code uses this selector with BeautifulSoup to obtain the <a>elements that point to video pages",div.video-summary-data a[href^=/video],1,FALSE
"To obtain the links we will use a selector that captures the <a>elements inside each <div>with class video-summary-data. Since there are several <a>elements for each video we will filter them to include only those that point to a URL that begins with /video, which is unique to the individual video pages. The CSS selector that implements the above criteria is div.video-summary-data a[href^=/video]. The following snippet of code uses this selector with BeautifulSoup to obtain the <a>elements that point to video pages",div.video-summary-data a[href^=/video],2,TRUE
"To obtain the links we will use a selector that captures the <a>elements inside each <div>with class video-summary-data. Since there are several <a>elements for each video we will filter them to include only those that point to a URL that begins with /video, which is unique to the individual video pages. The CSS selector that implements the above criteria is div.video-summary-data a[href^=/video]. The following snippet of code uses this selector with BeautifulSoup to obtain the <a>elements that point to video pages",div.video-summary-data a[href^=/video],3,TRUE
"To obtain the links we will use a selector that captures the <a>elements inside each <div>with class video-summary-data. Since there are several <a>elements for each video we will filter them to include only those that point to a URL that begins with /video, which is unique to the individual video pages. The CSS selector that implements the above criteria is div.video-summary-data a[href^=/video]. The following snippet of code uses this selector with BeautifulSoup to obtain the <a>elements that point to video pages",div.video-summary-data a[href^=/video],4,TRUE
"To obtain the links we will use a selector that captures the <a>elements inside each <div>with class video-summary-data. Since there are several <a>elements for each video we will filter them to include only those that point to a URL that begins with /video, which is unique to the individual video pages. The CSS selector that implements the above criteria is div.video-summary-data a[href^=/video]. The following snippet of code uses this selector with BeautifulSoup to obtain the <a>elements that point to video pages",div.video-summary-data a[href^=/video],5,TRUE
"To obtain the links we will use a selector that captures the <a>elements inside each <div>with class video-summary-data. Since there are several <a>elements for each video we will filter them to include only those that point to a URL that begins with /video, which is unique to the individual video pages. The CSS selector that implements the above criteria is div.video-summary-data a[href^=/video]. The following snippet of code uses this selector with BeautifulSoup to obtain the <a>elements that point to video pages",div.video-summary-data a[href^=/video],6,TRUE
The session title is obtained from the <h3>element inside the <div>with id videobox.,div#videobox h3,1,FALSE
The session title is obtained from the <h3>element inside the <div>with id videobox.,div#videobox h3,2,TRUE
The session title is obtained from the <h3>element inside the <div>with id videobox.,div#videobox h3,3,TRUE
The session title is obtained from the <h3>element inside the <div>with id videobox.,div#videobox h3,4,TRUE
The session title is obtained from the <h3>element inside the <div>with id videobox.,div#videobox h3,5,TRUE
The session title is obtained from the <h3>element inside the <div>with id videobox.,div#videobox h3,6,TRUE
The speaker names and YouTube links are obtained in a similar way to the links in the index page.,div#sidebar a[href^=/speaker],1,FALSE
The speaker names and YouTube links are obtained in a similar way to the links in the index page.,div#sidebar a[href^=/speaker],2,FALSE
The speaker names and YouTube links are obtained in a similar way to the links in the index page.,div#sidebar a[href^=/speaker],3,TRUE
The speaker names and YouTube links are obtained in a similar way to the links in the index page.,div#sidebar a[href^=/speaker],4,FALSE
The speaker names and YouTube links are obtained in a similar way to the links in the index page.,div#sidebar a[href^=/speaker],5,FALSE
The speaker names and YouTube links are obtained in a similar way to the links in the index page.,div#sidebar a[href^=/speaker],6,FALSE
The soup.select() calls above capture the stats for the video using selectors for the specific id names used in the YouTube page,.watch-view-count,1,FALSE
The soup.select() calls above capture the stats for the video using selectors for the specific id names used in the YouTube page,.watch-view-count,2,FALSE
The soup.select() calls above capture the stats for the video using selectors for the specific id names used in the YouTube page,.watch-view-count,3,FALSE
The soup.select() calls above capture the stats for the video using selectors for the specific id names used in the YouTube page,.watch-view-count,4,TRUE
The soup.select() calls above capture the stats for the video using selectors for the specific id names used in the YouTube page,.watch-view-count,5,TRUE
The soup.select() calls above capture the stats for the video using selectors for the specific id names used in the YouTube page,.watch-view-count,6,FALSE
"Some stories include an introduction that is included in a p tag, with a class of “introduction”. We can can look for this tag by using the CSS selector p.introduction::text",p.introduction::text,1,FALSE
"Some stories include an introduction that is included in a p tag, with a class of “introduction”. We can can look for this tag by using the CSS selector p.introduction::text",p.introduction::text,2,TRUE
"Some stories include an introduction that is included in a p tag, with a class of “introduction”. We can can look for this tag by using the CSS selector p.introduction::text",p.introduction::text,3,TRUE
"Some stories include an introduction that is included in a p tag, with a class of “introduction”. We can can look for this tag by using the CSS selector p.introduction::text",p.introduction::text,4,TRUE
"Some stories include an introduction that is included in a p tag, with a class of “introduction”. We can can look for this tag by using the CSS selector p.introduction::text",p.introduction::text,5,TRUE
"Some stories include an introduction that is included in a p tag, with a class of “introduction”. We can can look for this tag by using the CSS selector p.introduction::text",p.introduction::text,6,TRUE