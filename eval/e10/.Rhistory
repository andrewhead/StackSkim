leveneTest
install.packages("Rcmdr")
leveneTest
levene.test
library(Rcmdr)
levenTest
install.packages("tcltk2")
library(Rcmdr)
library(car)
leveneTest
?leveneTest
source('/Users/andrew/Adventures/statistics/nonparamB.R')
source('/Users/andrew/Adventures/statistics/nonparamB.R')
split(d, d$Factor1)
d$Factor1
d
source('/Users/andrew/Adventures/statistics/nonparamB.R')
source('/Users/andrew/Adventures/statistics/nonparamB.R')
install.packages("epibase")
install.packages("~/Downloads/epibase_0.1-3.tar.gz", repos = NULL, type = "source")
install.packages(c("ggplot2", "network", "ape", "reshape2", "sna", "plyr", "ggmap", "networkDynamic", "scales", "rjson"))
## load the dataset
data(FluH1N1pdm2009)
attach(FluH1N1pdm2009)
head(individuals)
head(samples)
## create obkData object
x <- new("obkData", individuals = individuals, dna = FluH1N1pdm2009$dna,
dna.individualID = samples$individualID, dna.date = samples$date,
trees = FluH1N1pdm2009$trees)
## have a look at the summary
summary(x)
## plot the phylogeny
plotggphy(x, tip.color="location")
p <- plotggphy(x, ladderize = TRUE, branch.unit = "year")
p
detach(FluH1N1pdm2009)
install.packages("~/Downloads/epibase_0.1-3.tar.gz", repos = NULL, type = "source")
## load the dataset
data(FluH1N1pdm2009)
attach(FluH1N1pdm2009)
head(individuals)
head(samples)
## create obkData object
x <- new("obkData", individuals = individuals, dna = FluH1N1pdm2009$dna,
dna.individualID = samples$individualID, dna.date = samples$date,
trees = FluH1N1pdm2009$trees)
## have a look at the summary
summary(x)
## plot the phylogeny
plotggphy(x, tip.color="location")
p <- plotggphy(x, ladderize = TRUE, branch.unit = "year")
p
detach(FluH1N1pdm2009)
load(epibase)
library{epibase}
library(epibase)
## load the dataset
data(FluH1N1pdm2009)
attach(FluH1N1pdm2009)
head(individuals)
head(samples)
## create obkData object
x <- new("obkData", individuals = individuals, dna = FluH1N1pdm2009$dna,
dna.individualID = samples$individualID, dna.date = samples$date,
trees = FluH1N1pdm2009$trees)
## have a look at the summary
summary(x)
## plot the phylogeny
plotggphy(x, tip.color="location")
p <- plotggphy(x, ladderize = TRUE, branch.unit = "year")
p
detach(FluH1N1pdm2009)
FluH1N1pdm2009
names(FluH1N1pdm2009)
hist(FluH1N1pdm2009.$individuals)
hist(FluH1N1pdm2009.samples)
hist(FluH1N1pdm2009.$)
hist(FluH1N1pdm2009['individuals'])
type
class
class(FluH1N1pdm2009)
FluH1N1pdm2009[0]
FluH1N1pdm2009[1]
FluH1N1pdm2009[2]
FluH1N1pdm2009[3]
class(FluH1N1pdm2009[2])
class(FluH1N1pdm2009[2][0])
FluH1N1pdm2009[2][0]
FluH1N1pdm2009[2][1]
FluH1N1pdm2009[2][2]
FluH1N1pdm2009[2][3]
FluH1N1pdm2009[2][1]
FluH1N1pdm2009[2][1][0]
FluH1N1pdm2009[2][1][1]
class(FluH1N1pdm2009[2][1])
FluH1N1pdm2009[2].$individuals
FluH1N1pdm2009[2].individuals
d = read.csv(FILENAME, colClasses=c("integer", "numeric", "numeric"))
d
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
d
?reshape
View(d)
d.Direction
d.$Direction
d$Direction
d$Amplitude..dB.....
reshape(d, v.names='Amplitude..dB.....', format='wide', idvar=c('Tine.Set', 'Position')
)
reshape(d, v.names='Amplitude..dB.....', direction='wide', idvar=c('Tine.Set', 'Position'))
reshape(d, v.names='Amplitude..dB.....', direction='wide', idvar=c('Tine.Set', 'Position'), timevar='Iteration')
d
reshape(d, v.names='Amplitude..dB.....', direction='wide', idvar=c('Tine.Set', 'Position'), timevar='Placement')
reshape(d, v.names='Amplitude..dB.....', direction='wide', idvar=c('Tine.Set', 'Position', 'Direction', 'Iteration'), timevar='Placement')
reshape(d, v.names='Amplitude..dB.....', direction='wide', idvar=c('Tine.Set', 'Position', 'Direction', 'Iteration'), varying='ID', timevar='Placement')
reshape(d, v.names='Amplitude..dB.....', direction='wide', idvar=c('Tine.Set', 'Position', 'Direction', 'Iteration'), drop='ID', timevar='Placement')
filterr
?filter
na.omit(d)
?complete.cases
complete.cases(d)
d[,5:6]
d[,5:7]
d[,5:8]
d[8]
complete.cases(d[8])
complete.cases(d[7])
complete.cases(d[8])
complete.cases(d$Amplitude.dB....)
complete.cases(d$Amplitude.dB)
complete.cases(d[8])
d[complete.cases(d[8])]
d[complete.cases(d[8]),]
d[complete.cases(d[8]),]
head(d)
head(wide)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
head(wide)
?reshape
within(wide, diff <- Amplitude..dB.Above - Amplitude..dB.On Desk)
within(wide, diff <- Amplitude..dB.Above - Amplitude..dB.On Desk)
within(wide, diff <- Amplitude..dB.Above - Amplitude..dB.On.Desk)
source('~/.active-rstudio-document')
within(wide, diff <- Amplitude..dB.Above - Amplitude..dB.On.Desk)
head(wide)
within(wide, diff <- Amplitude..dB..Above - Amplitude..dB..On.Desk)
within(wide, diff <- Amplitude..dB..Above - Amplitude..dB..On Desk)
within(wide, diff <- Amplitude..dB..Above - 'Amplitude..dB..On Desk')
within(wide, diff <- Amplitude..dB..Above - Amplitude..dB..On)
source('~/.active-rstudio-document')
within(wide, diff <- Amplitude..dB..Above - Amplitude..dB..Desk)
source('~/.active-rstudio-document')
within(wide, diff <- Amplitude..dB..Above - Amplitude..dB..Desk)
within(wide, diff <- Amplitude..dB..Above > Amplitude..dB..Desk)
within(wide, diff <- Amplitude..dB..Above - Amplitude..dB..Desk)
?pt
?t.test
t.test(d$pos.diff)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
t.test(d$pos.diff)
d$pos.diff
wide$pos.diff
wide$Amplitude..dB..Above
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
wide
wide$pos.diff
t.test(wide$pos.diff)
t.test(wide$pos.diff, alternative="less")
t.test(wide$pos.diff, alternative="greater")
sd
sd(wide$pos.diff)
mean(wide$pos.diff)
subset(wide, TineSet.ID )
'b' %in% c('a', 'c', 'd')
'b' %in% c('a', 'b', c', 'd')
'b' %in% c('a', 'b', c', 'd')
'b' %in% c('a', 'b',  'c', 'd')
'b' %notin% c('a', 'b',  'c', 'd')
?%in%
?in
?is.element
subset(wide, is.element(TineSet.ID, c('1')))
wide$Tine.Set
subset(wide, is.element(Tine.Set, c('1')))
subset(wide, is.element(Tine.Set, c('1', '2')))
subset(wide, is.element(Tine.Set, c('1', '3', '5', '6', '7', '8')))
subset(d, is.element(Tine.Set, c('1', '3', '5', '6', '7', '8')))
subset(d, !is.element(Tine.Set, c('1', '3', '5', '6', '7', '8')))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?print
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?line
# Perform Kruskal-Wallis test
source('~/Adventures/acoustics/source/e7/amplitude_vs_distance.R')
source('~/Adventures/acoustics/source/e7/amplitude_vs_distance.R')
d
source('~/Adventures/acoustics/source/e7/amplitude_vs_distance.R')
d
source('~/.active-rstudio-document')
d
source('~/.active-rstudio-document')
model
model.effects
model['effects']
model['qr']
summary.lm(model)
source('~/.active-rstudio-document')
source('~/Adventures/acoustics/source/e7/amplitude_vs_distance.R')
?summary.lm
d.mic0$Peak_Freq_Level = - d.mic0$Peak_Freq_Level
d
d.mic0$Peak_Freq_Level = -1 * d.mic0$Peak_Freq_Level
d$Peak_Freq_Level = -1 * d$Peak_Freq_Level
d
d$Peak_Freq_Level = -1 * d$Peak_Freq_Level
dd
d
source('~/.active-rstudio-document')
?shape
?reshape
source('~/.active-rstudio-document')
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
d
reshape(d, v.names="Level", timevar="Microphone" direction = "wide")
reshape(d, v.names="Level", timevar="Microphone", direction = "wide")
reshape(d, idvar=c("Tine", "Iteration"), v.names="Level", timevar="Microphone", direction = "wide")
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
reshape(d, idvar=c("Tine", "Iteration"), v.names="Level", timevar="Microphone", direction = "wide")
reshape(d, idvar=c("Tine", "Iteration"), v.names=c("Distance", "Level"), timevar="Microphone", direction = "wide")
reshape(d, idvar=c("Tine", "Iteration"), v.names=c("Distance", "Level"), timevar="Microphone", direction="wide", drop="Event")
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
d
reshape(d, idvar=c("Tine", "Iteration"), v.names=c("Distance", "Level"), timevar="Microphone", direction="wide", drop="Event")
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
d
source('~/.active-rstudio-document')
plot
plot(d$level.diff)
plot(d$distance.diff)
plot(d$level.diff)
plot(d$distance.diff, d$level.diff)
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
source('~/.active-rstudio-document')
?abline
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(d$level.diff)
plot(d$distance.diff, d$level.diff)
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
?plot
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
source('~/.active-rstudio-document')
source('~/Adventures/acoustics/source/e7/amplitude_vs_distance.R')
clear
cls
source('~/Adventures/acoustics/source/e7/amplitude_vs_distance.R')
View(d)
View(d)
source('~/Adventures/acoustics/source/e7/amplitude_vs_distance.R')
View(d.mic1)
View(d)
source('~/Adventures/acoustics/source/e7/amplitude_vs_distance.R')
View(d)
source('~/Adventures/acoustics/source/e7/amplitude_vs_distance.R')
source('~/.active-rstudio-document')
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
d
"a" + "b"
paste(c("Hello", "World"), "-")
paste("Hello" "World", "-")
paste("Hello","World", "-")
paste("Hello", "World", "-")
paste("Hello", "World", sep"-")
paste("Hello", "World", sep="-")
source('~/.active-rstudio-document')
paste(d$Exp_0, d$Exp_1, "-")
d$Label = paste(d$Exp_0, d$Exp_1, "-")
d$Label
transform(d, label=interaction(Exp_0, Exp_1, sep="-"))
transform(d, label=interaction(0_Exp, 1_Exp, sep="-"))
transform(d, label=interaction(0_Exp, 1_Exp, sep="-"))
d$0_Exp
source('~/.active-rstudio-document')
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
d$0_Exp
d$0.Exp
d
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
transform(d, label=interaction(0.Exp, 1.Exp, sep="-"))
d$0.Exp
d$X0.Exp
transform(d, label=interaction(X0.Exp, X1.Exp, sep="-"))
transform(d, label=interaction(X0.Exp, X1.Exp, sep="-"))
?subset
subset(d, Bad = 1)
subset(d, Bad = 2)
subset(d, subset="Bad = 2")
subset(d, Bad == 2)
subset(d, Bad == 1)
subset(d, Bad == 0)
?bar
?barplot
?histogram
?hist
hist(bad$label)
bad
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
bad$label
bad
d$label
View(d)
View(d)
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
d
d$label
bad
hist(d$label)
as.data.frame(table(d$labels))
table(d$labels)
print(table(d$labels))
table(d$label)
as.data.frame(table(d$label))
source('~/.active-rstudio-document')
counts
barplot
?barplot
barplot(table(bad$label))
table(counts)
counts
source('~/.active-rstudio-document')
bad$label
subset(counts, Freq > 0)
source('~/.active-rstudio-document')
counts
table(counts)
bar(table(counts))
barplot(table(counts))
table(counts)
counts$label
counts
counts$Var1
barplot(table(counts))
barplot(counts)
table(counts)
subset(table(counts), Freq > 0)
barplot(counts$Freq, names.arg=counts$Var1)
barplot(counts$Freq, names.arg=counts$Var1, horiz=True)
barplot(counts$Freq, names.arg=counts$Var1, horiz=true)
barplot(counts$Freq, names.arg=counts$Var1, horiz=TRUE)
barplot(counts$Freq, names.arg=counts$Var1)
barplot(counts$Freq, names.arg=counts$Var1, cex.names=10)
barplot(counts$Freq, names.arg=counts$Var1, cex.names=1)
barplot(counts$Freq, names.arg=counts$Var1, cex.names=.5)
barplot(counts$Freq, names.arg=counts$Var1, cex.names=.5, cey.names=.5)
barplot(counts$Freq, names.arg=counts$Var1, cex.names=.5)
barplot(counts$Freq, names.arg=counts$Var1, cex.names=.5)
?barplot
barplot(counts$Freq, names.arg=counts$Var1, cex.names=.5)
?barplot
barplot(counts$Freq, names.arg=counts$Var1, cex.names=.5)
grid()
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
source('~/.active-rstudio-document')
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
source('~/Adventures/acoustics/source/e20/hmm_misclassifications.R')
source('~/Adventures/acoustics/source/e7/rms_vs_distance.R')
times
source('~/.active-rstudio-document')
subset(times)
subset(times, na.omit)
subset(times, na.omit(Time.Output))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
subset(times, !is.na(Time.Output))
source('~/Adventures/acoustics/source/e22/pysoundcard_latency.R')
times
summary(times$Latency)
std()
sd
sd(times$Latency)
source('~/.active-rstudio-document')
source('~/Adventures/knowledge/stackskim/evaluations/e10/resource_barriers.R')
ls
ls()
source('~/Adventures/knowledge/stackskim/evaluations/e10/resource_barriers.R')
source('~/.active-rstudio-document')
pwd
pwd()
ls
?ls
source('~/.active-rstudio-document')
setwd("~/Adventures/knowledge/stackskim/evaluations/e10")
source('~/.active-rstudio-document')
d
?reshape
names(d)
names(d)[2:7]
subset(d, 'Verdict' in 'Resource')
subset(d, 'Verdict' in 'Resource')
grepl("l", "learn")
grepl("l", "pearn")
grepl("pea", "pearn")
subset(d, grep('Verdict', 'Resource')
)
subset(d, grep('Verdict', 'Resource'))
subset(d, grep('Verdict', 'Resource'))
?subset
subset(d, Resource == '*Verdict*')
subset(d, grepl("Verdict", Resource))
results_long <- reshape(results,
v.names=c("Valid"),
timevar="Resource",
direction="wide")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
rval
reshape(results, idvar=c("Resource"))
reshape(results, idvar=c("Resource"), direction="wide")
reshape(results, idvar=c("Resource"), direction="wide", timevar="Resource")
reshape(results, idvar="Resource", direction="wide", timevar="Resource")
reshape(results, idvar="Resource", direction="wide", timevar="Resource")
results
reshape(results, idvar="Resource", direction="wide", timevar="Resource")
reshape(results, idvar="Resource", direction="wide", timevar="Resource")
?reshape
reshape(results, idvar="n", direction="wide", timevar="Resource")
reshape(results, idvar="ducks", direction="wide", timevar="Resource")
reshape(results, idvar="Resource", direction="wide", timevar="Resource")
reshape(results, idvar="Resource", direction="long", timevar="Resource")
reshape(results, idvar="Resource", direction="wide", timevar="Resource")
reshape(results, idvar="Resource", direction="long", timevar="Resource")
reshape(results, idvar="Resource", direction="long", timevar="Resource", varying=names(results[2:7]))
reshape(results, idvar="Resource", direction="long", timevar="Resource", varying=names(results[2:7]))
names(results[2:7])
reshape(results, idvar="Resource", direction="long", timevar="Resource", varying=names(results[2:7]), v.names=c("Valid"))
reshape(results, idvar="Resource", direction="long", timevar="Resource", varying=names(results[2:7]), v.names=names(results[2:7])
)
reshape(results, idvar="Resource", direction="long", timevar="Resource", varying=names(results[2:7]), v.names="Duck")
reshape(results, idvar="n", direction="long", timevar="Resource", varying=names(results[2:7]), v.names="Duck")
reshape(results, idvar="n", direction="long", timevar="Resource", varying=names(results[2:7]), v.names="Valid")
reshape(results, idvar="Resource", direction="long", varying=names(results[2:7]), v.names="Valid")
source('~/.active-rstudio-document')
View(results_long)
View(results_long)
reshape(results, idvar="Resource", direction="long", varying=names(results[2:7]), v.names="Valid", timevar=names(results[2:7]))
reshape(results, idvar="Resource", direction="long", varying=names(results[2:7]), v.names="Valid"
)
reshape(results, idvar=c("Resource", "Task"), direction="long", varying=names(results[2:7]), v.names="Valid"
)
source('~/.active-rstudio-document')
reshape(results, idvar="Resource", direction="long", varying=names(results[2:7]), v.names="Valid"
)
source('~/.active-rstudio-document')
View(results_long)
source('~/.active-rstudio-document')
View(results_long)
source('~/Adventures/knowledge/stackskim/evaluations/e10/resource_barriers.R')
View(results_long)
View(results_long)
source('~/.active-rstudio-document')
View(results_small)
View(results_small)
source('~/Adventures/knowledge/stackskim/evaluations/e10/resource_barriers.R')
View(results_small)
d$Resource
results_small$resource
results_small$Resource
results_small$Resource
substitute("xanadu", "xan")
gsub("Verdict", "", "Hi Verdict Ho")
gsub(" Verdict", "", "Hi Verdict Ho")
gsub(" Verdict", "", results_small$Resources)
gsub(" Verdict", "", results_small$Resource)
result_small$Resource = gsub(" Verdict", "", results_small$Resource)
results_small$Resource = gsub(" Verdict", "", results_small$Resource)
source('~/.active-rstudio-document')
View(results_small)
?write.csv
source('~/.active-rstudio-document')
source('~/Adventures/knowledge/stackskim/evaluations/e10/resource_barriers.R')
